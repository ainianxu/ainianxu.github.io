<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-04-25T15:06:22.331Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>基于百度地图做热力图</title>
    <link href="http://example.com/2022/04/25/%E5%9F%BA%E4%BA%8E%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E5%81%9A%E7%83%AD%E5%8A%9B%E5%9B%BE/"/>
    <id>http://example.com/2022/04/25/%E5%9F%BA%E4%BA%8E%E7%99%BE%E5%BA%A6%E5%9C%B0%E5%9B%BE%E5%81%9A%E7%83%AD%E5%8A%9B%E5%9B%BE/</id>
    <published>2022-04-25T14:51:01.000Z</published>
    <updated>2022-04-25T15:06:22.331Z</updated>
    
    <content type="html"><![CDATA[<p>第一步：我们先把先把准备好的数据转化成固定格式<img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/25/ZDyXjiWJLUxaT2O.png"                      alt="image-20220425225404976"                ></p><ul><li><p>通过以下代码进行转化（使用的是pycharm）</p></li><li><p>&#96;&#96;&#96;python<br>import csv<br>import requests<br>import json<br>def gain_location(adress):<br>api_url &#x3D;”<a class="link"   href="http://api.map.baidu.com/geocoding/v3/?address=%7Badress%7D&amp;output=json&amp;ak=%E4%BD%A0%E8%87%AA%E5%B7%B1%E7%9A%84%E5%AF%86%E9%92%A5&amp;callback=showLocation&quot;.format(adress=adress)" >http://api.map.baidu.com/geocoding/v3/?address={adress}&amp;output=json&amp;ak=你自己的密钥&amp;callback=showLocation&quot;.format(adress=adress)<i class="fas fa-external-link-alt"></i></a><br>r &#x3D; requests.get(api_url)<br>r &#x3D; r.text<br>r &#x3D; r.strip(‘showLocation&amp;&amp;showLocation(‘)<br>r &#x3D; r.strip(‘)’)<br>jsonData &#x3D; json.loads(r)  # 将json字符串转换为字典类型转为字典格式类型<br>return jsonData<br>with open(r’附件2 北京地铁各站点进站客流分时汇总表.csv’,encoding &#x3D; ‘gb18030’) as csvfile: #打开csv<br>reader &#x3D; csv.reader(csvfile)<br>for line in reader: #读取csv里的数据<br>    if reader.line_num &#x3D;&#x3D; 1:<br>        continue<br>    if gain_location(line[0]).get(‘result’, False):<br>        try:<br>            lng &#x3D; gain_location(line[0])[‘result’][‘location’][‘lng’]  # 经度<br>            lat &#x3D; gain_location(line[0])[‘result’][‘location’][‘lat’]  # 纬度<br>            count &#x3D; line[1]  # 地名计数<br>            str_temp &#x3D; ‘{“lat”:’ + str(lat) + ‘,”lng”:’ + str(lng) + ‘,”count”:’ + str(count) + ‘},’  # 将经度，纬度，计数变成格式<br>            print(str_temp)<br>        except:<br>            print(line[0])  # 打印出出问题的地名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 使用上面代码转化csv图片得到的数据是![image-20220425225738432](https://s2.loli.net/2022/04/25/JLZYzxGrkt2bwdQ.png)</span><br><span class="line"></span><br><span class="line">- 然后我们将百度地图的热力图示例复制过来稍作修该</span><br><span class="line"></span><br><span class="line">- ```html</span><br><span class="line">  &lt;!DOCTYPE html&gt;</span><br><span class="line">  &lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">      &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;</span><br><span class="line">      &lt;meta name=&quot;viewport&quot; content=&quot;initial-scale=1.0, user-scalable=no&quot; /&gt;</span><br><span class="line">      &lt;script type=&quot;text/javascript&quot; src=&quot;//api.map.baidu.com/api?v=2.0&amp;ak=你自己的密钥&quot;&gt;&lt;/script&gt;</span><br><span class="line">      &lt;script type=&quot;text/javascript&quot; src=&quot;//api.map.baidu.com/library/Heatmap/2.0/src/Heatmap_min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">      &lt;title&gt;热力图功能示例&lt;/title&gt;</span><br><span class="line">      &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">        ul,li&#123;list-style: none;margin:0;padding:0;float:left;&#125;</span><br><span class="line">        html&#123;height:100%&#125;</span><br><span class="line">        body&#123;height:100%;margin:0px;padding:0px;font-family:&quot;微软雅黑&quot;;&#125;</span><br><span class="line">        #container&#123;height:500px;width:100%;&#125;</span><br><span class="line">        #r-result&#123;width:100%;&#125;</span><br><span class="line">      &lt;/style&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">     &lt;div id=&quot;container&quot;&gt;&lt;/div&gt;</span><br><span class="line">     &lt;div id=&quot;r-result&quot;&gt;</span><br><span class="line">        &lt;input type=&quot;button&quot;  onclick=&quot;openHeatmap();&quot; value=&quot;显示热力图&quot;/&gt;&lt;input type=&quot;button&quot;  onclick=&quot;closeHeatmap();&quot; value=&quot;关闭热力图&quot;/&gt;</span><br><span class="line">     &lt;/div&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">  &lt;/html&gt;</span><br><span class="line">  &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">      var map = new BMap.Map(&quot;container&quot;);          // 创建地图实例</span><br><span class="line">  </span><br><span class="line">      var point = new BMap.Point(116.438927, 39.923508);//中心点坐标</span><br><span class="line">      map.centerAndZoom(point, 15);             // 初始化地图，设置中心点坐标和地图级别</span><br><span class="line">      map.enableScrollWheelZoom(); // 允许滚轮缩放</span><br><span class="line">  //这个就是上面我们输出出来的数据</span><br><span class="line">      var points =[</span><br><span class="line">      &#123;&quot;lat&quot;:39.914537522974534,&quot;lng&quot;:116.50836872513715,&quot;count&quot;:37794&#125;,</span><br><span class="line">     &#123;&quot;lat&quot;:39.914537522974534,&quot;lng&quot;:116.50836872513715,&quot;count&quot;:35550&#125;,</span><br><span class="line">     &#123;&quot;lat&quot;:39.91645575947582,&quot;lng&quot;:116.46703499370652,&quot;count&quot;:46435&#125;,</span><br><span class="line">     &#123;&quot;lat&quot;:22.828572041904824,&quot;lng&quot;:120.23700834379214,&quot;count&quot;:33390&#125;,</span><br><span class="line">     &#123;&quot;lat&quot;:39.920195646104496,&quot;lng&quot;:116.4342834036266,&quot;count&quot;:31753&#125;,</span><br><span class="line">     &#123;&quot;lat&quot;:39.92315809391276,&quot;lng&quot;:116.42394965636201,&quot;count&quot;:14195&#125;,</span><br><span class="line">     &#123;&quot;lat&quot;:39.92223158631893,&quot;lng&quot;:116.4186675301328,&quot;count&quot;:33208&#125;,</span><br><span class="line">     &#123;&quot;lat&quot;:31.34224126103566,&quot;lng&quot;:121.2789357477942,&quot;count&quot;:33006&#125;,</span><br><span class="line">     &#123;&quot;lat&quot;:39.08308716818319,&quot;lng&quot;:117.2690831157461,&quot;count&quot;:35867&#125;,</span><br><span class="line">  ];</span><br><span class="line">  </span><br><span class="line">      if(!isSupportCanvas())&#123;</span><br><span class="line">         alert(&#x27;热力图目前只支持有canvas支持的浏览器,您所使用的浏览器不能使用热力图功能~&#x27;)</span><br><span class="line">      &#125;</span><br><span class="line">     //详细的参数,可以查看heatmap.js的文档 https://github.com/pa7/heatmap.js/blob/master/README.md</span><br><span class="line">     //参数说明如下:</span><br><span class="line">     /* visible 热力图是否显示,默认为true</span><br><span class="line">       * opacity 热力的透明度,1-100</span><br><span class="line">       * radius 势力图的每个点的半径大小</span><br><span class="line">       * gradient  &#123;JSON&#125; 热力图的渐变区间 . gradient如下所示</span><br><span class="line">       * &#123;</span><br><span class="line">           .2:&#x27;rgb(0, 255, 255)&#x27;,</span><br><span class="line">           .5:&#x27;rgb(0, 110, 255)&#x27;,</span><br><span class="line">           .8:&#x27;rgb(100, 0, 255)&#x27;</span><br><span class="line">        &#125;</span><br><span class="line">        其中 key 表示插值的位置, 0~1.</span><br><span class="line">            value 为颜色值.</span><br><span class="line">       */</span><br><span class="line">     heatmapOverlay = new BMapLib.HeatmapOverlay(&#123;&quot;radius&quot;:40&#125;);//热力图半径</span><br><span class="line">     map.addOverlay(heatmapOverlay);</span><br><span class="line">     heatmapOverlay.setDataSet(&#123;data:points,max:40000&#125;);</span><br><span class="line">     //是否显示热力图</span><br><span class="line">      function openHeatmap()&#123;</span><br><span class="line">          heatmapOverlay.show();</span><br><span class="line">      &#125;</span><br><span class="line">     function closeHeatmap()&#123;</span><br><span class="line">          heatmapOverlay.hide();</span><br><span class="line">      &#125;</span><br><span class="line">     closeHeatmap();</span><br><span class="line">      function setGradient()&#123;</span><br><span class="line">         /*格式如下所示:</span><br><span class="line">        &#123;</span><br><span class="line">           0:&#x27;rgb(102, 255, 0)&#x27;,</span><br><span class="line">           .5:&#x27;rgb(255, 170, 0)&#x27;,</span><br><span class="line">           1:&#x27;rgb(255, 0, 0)&#x27;</span><br><span class="line">        &#125;*/</span><br><span class="line">         var gradient = &#123;&#125;;</span><br><span class="line">         var colors = document.querySelectorAll(&quot;input[type=&#x27;color&#x27;]&quot;);</span><br><span class="line">         colors = [].slice.call(colors,0);</span><br><span class="line">         colors.forEach(function(ele)&#123;</span><br><span class="line">           gradient[ele.getAttribute(&quot;data-key&quot;)] = ele.value;</span><br><span class="line">         &#125;);</span><br><span class="line">          heatmapOverlay.setOptions(&#123;&quot;gradient&quot;:gradient&#125;);</span><br><span class="line">      &#125;</span><br><span class="line">     //判断浏览区是否支持canvas</span><br><span class="line">      function isSupportCanvas()&#123;</span><br><span class="line">          var elem = document.createElement(&#x27;canvas&#x27;);</span><br><span class="line">          return !!(elem.getContext &amp;&amp; elem.getContext(&#x27;2d&#x27;));</span><br><span class="line">      &#125;</span><br><span class="line">  &lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;第一步：我们先把先把准备好的数据转化成固定格式&lt;img  
                     lazyload
                     src=&quot;/images/loading.svg&quot;
                     data-src=</summary>
      
    
    
    
    
    <category term="Anylogic" scheme="http://example.com/tags/Anylogic/"/>
    
  </entry>
  
  <entry>
    <title>监听器</title>
    <link href="http://example.com/2022/04/25/%E7%9B%91%E5%90%AC%E5%99%A8/"/>
    <id>http://example.com/2022/04/25/%E7%9B%91%E5%90%AC%E5%99%A8/</id>
    <published>2022-04-25T03:29:27.000Z</published>
    <updated>2022-04-25T03:54:28.299Z</updated>
    
    <content type="html"><![CDATA[<p>实现一个监听器的接口，以统计网站在线人数为例</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSessionEvent;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSessionListener;</span><br><span class="line"><span class="comment">//统计网站在线人数 ： 统计session</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OnlineCountListener</span> <span class="keyword">implements</span> <span class="title class_">HttpSessionListener</span> &#123;</span><br><span class="line">    <span class="comment">//创建session监听： 看你的一举一动</span></span><br><span class="line">    <span class="comment">//一旦创建Session就会触发一次这个事件！</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sessionCreated</span><span class="params">(HttpSessionEvent httpSessionEvent)</span> &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">ctx</span> <span class="operator">=</span> httpSessionEvent.getSession().getServletContext();</span><br><span class="line">        System.out.println(httpSessionEvent.getSession().getId());</span><br><span class="line"></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">onlineCount</span> <span class="operator">=</span> (Integer) ctx.getAttribute(<span class="string">&quot;OnlineCount&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(onlineCount == <span class="literal">null</span>)&#123;</span><br><span class="line">            onlineCount = <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> onlineCount.intValue();</span><br><span class="line">            onlineCount = <span class="keyword">new</span> <span class="title class_">Integer</span>(count+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ctx.setAttribute(<span class="string">&quot;OnlineCount&quot;</span>,onlineCount);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//销毁session监听</span></span><br><span class="line">    <span class="comment">//一旦销毁Session就会触发一次这个事件！</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sessionDestroyed</span><span class="params">(HttpSessionEvent httpSessionEvent)</span> &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">ctx</span> <span class="operator">=</span> httpSessionEvent.getSession().getServletContext();</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">onlineCount</span> <span class="operator">=</span> (Integer) ctx.getAttribute(<span class="string">&quot;OnlineCount&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(onlineCount == <span class="literal">null</span>)&#123;</span><br><span class="line">            onlineCount = <span class="keyword">new</span> <span class="title class_">Integer</span>(<span class="number">0</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> onlineCount.intValue();</span><br><span class="line">            onlineCount = <span class="keyword">new</span> <span class="title class_">Integer</span>(count-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ctx.setAttribute(<span class="string">&quot;OnlineCount&quot;</span>,onlineCount);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">Session销毁：</span></span><br><span class="line"><span class="comment">1. 手动销毁 getSession().invalidate();</span></span><br><span class="line"><span class="comment">2. 自动销毁</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在web.xml中设置监听</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>OnlineCountListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>在index.jsp中进行测试</p></li><li><pre><code class="jsp">&lt;body&gt;&lt;h4&gt;当前一共&lt;span&gt;&lt;%=this.getServletConfig().getServletContext().getAttribute(&quot;OnlineCount&quot;)%&gt;个人&lt;/span&gt;&lt;/h4&gt;&lt;/body&gt;</code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;实现一个监听器的接口，以统计网站在线人数为例&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>Filter：过滤器</title>
    <link href="http://example.com/2022/04/24/Filter%EF%BC%9A%E8%BF%87%E6%BB%A4%E5%99%A8/"/>
    <id>http://example.com/2022/04/24/Filter%EF%BC%9A%E8%BF%87%E6%BB%A4%E5%99%A8/</id>
    <published>2022-04-24T14:22:52.000Z</published>
    <updated>2022-04-24T15:03:58.587Z</updated>
    
    <content type="html"><![CDATA[<p>Filter：过滤器 ，用来过滤网站的数据；</p><ul><li>处理中文乱码</li><li>登录验证….<img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/24/lzjxE1H4QXLiSCT.png"                      alt="image-20220424222417947"                ></li></ul><p>Filter开发步骤：</p><ol><li><p>导包 （import javax.servlet.Filter;）</p></li><li><p>编写过滤器</p></li><li><ul><li><p>实现Filter接口，重写对应的方法即可</p></li><li><p>&#96;&#96;&#96;java<br>import javax.servlet.*;<br>import java.io.IOException;</p><p>public class CharacterEncodingFilter implements Filter {<br>@Override<br>public void init(FilterConfig filterConfig) throws ServletException {<br>    System.out.println(“CharacterEncodingFilter初始化”);<br>}<br>&#x2F;&#x2F;Chain : 链<br>&#x2F;*<br>1. 过滤中的所有代码，在过滤特定请求的时候都会执行<br>2. 必须要让过滤器继续同行<br>chain.doFilter(request,response);<br>*&#x2F;<br>@Override<br>public void doFilter(ServletRequest servletRequest, ServletResponse servletResponse, FilterChain filterChain) throws IOException, ServletException {<br>    servletRequest.setCharacterEncoding(“utf-8”);<br>    servletResponse.setCharacterEncoding(“utf-8”);<br>    servletResponse.setContentType(“text&#x2F;html;charset&#x3D;UTF-8”);<br>    System.out.println(“CharacterEncodingFilter执行前….”);<br>    filterChain.doFilter(servletRequest,servletResponse);; &#x2F;&#x2F;让我们的请求继续走，如果不写，程序到这里就被拦截停止！<br>    System.out.println(“CharacterEncodingFilter执行后….”);<br><br>}<br><br>@Override<br>public void destroy() {<br>    System.out.println(“CharacterEncodingFilter销毁”);<br>}<br>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">在web.xml中配置 Filter：</span><br><span class="line"></span><br><span class="line">```xml</span><br><span class="line">&lt;filter&gt;</span><br><span class="line">&lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;</span><br><span class="line">&lt;filter-class&gt;com.kuang.filter.CharacterEncodingFilter&lt;/filterclass&gt;</span><br><span class="line">&lt;/filter&gt;</span><br><span class="line">&lt;filter-mapping&gt;</span><br><span class="line">&lt;filter-name&gt;CharacterEncodingFilter&lt;/filter-name&gt;</span><br><span class="line">&lt;!--只要是 /servlet的任何请求，会经过这个过滤器--&gt;</span><br><span class="line">&lt;url-pattern&gt;/servlet/*&lt;/url-pattern&gt;</span><br><span class="line">&lt;!--&lt;url-pattern&gt;/*&lt;/url-pattern&gt;--&gt;</span><br><span class="line">&lt;/filter-mapping&gt;</span><br></pre></td></tr></table></figure></li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Filter：过滤器 ，用来过滤网站的数据；&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;处理中文乱码&lt;/li&gt;
&lt;li&gt;登录验证….&lt;img  
                     lazyload
                     src=&quot;/images/loading.</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>MVC三层架构</title>
    <link href="http://example.com/2022/04/24/MVC%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84/"/>
    <id>http://example.com/2022/04/24/MVC%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84/</id>
    <published>2022-04-24T10:02:24.000Z</published>
    <updated>2022-04-24T10:06:55.708Z</updated>
    
    <content type="html"><![CDATA[<p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/24/I7shF1iYqGVgpcm.png"                      alt="image-20220424180330444"                ></p><p><strong>Model</strong> </p><ul><li>业务处理 ：业务逻辑（Service）</li><li>数据持久层：CRUD （Dao）</li></ul><p><strong>View</strong></p><ul><li>展示数据 </li><li>提供链接发起Servlet请求 （a，form，img…）</li></ul><p><strong>Controller （Servlet）</strong></p><ul><li>接收用户的请求 ：（req：请求参数、Session信息….） </li><li>交给业务层处理对应的代码 </li><li>控制视图的跳转</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">登录---&gt;接收用户的登录请求---&gt;处理用户的请求（获取用户登录的参数，username，password）----&gt;交给业务层处理登录业务（判断用户名密码是否正确：事务）---&gt;Dao层查询用户名和密码是否正确--&gt;数据库</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img  
                     lazyload
                     src=&quot;/images/loading.svg&quot;
                     data-src=&quot;https://s2.loli.net/20</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>JavaBean</title>
    <link href="http://example.com/2022/04/24/JavaBean/"/>
    <id>http://example.com/2022/04/24/JavaBean/</id>
    <published>2022-04-24T07:13:12.000Z</published>
    <updated>2022-04-24T07:43:35.596Z</updated>
    
    <content type="html"><![CDATA[<p>实体类<br>JavaBean有特定的写法：</p><ul><li>必须要有一个无参构造 </li><li>属性必须私有化</li><li>必须有对应的get&#x2F;set方法；<br> 一般用来和数据库的字段做映射 ORM；</li></ul><p>ORM ：对象关系映射 ：</p><ul><li>表—&gt;类 </li><li>字段–&gt;属性 </li><li>行记录—-&gt;对象</li></ul><table><thead><tr><th>id</th><th>name</th><th>age</th><th>address</th></tr></thead><tbody><tr><td>1</td><td>x</td><td>12</td><td>承德</td></tr><tr><td>2</td><td>y</td><td>21</td><td>天津</td></tr><tr><td>3</td><td>z</td><td>32</td><td>邢台</td></tr></tbody></table><ul><li><p>对应的实体类</p></li><li><pre><code class="java">public class Person &#123;    private int id;    private String name ;    private int age;    private String address;    public Person(int id, String name, int age, String address) &#123;        this.id = id;        this.name = name;        this.age = age;        this.address = address;    &#125;    public Person() &#123;    &#125;    public int getId() &#123;        return id;    &#125;    public void setId(int id) &#123;        this.id = id;    &#125;    public String getName() &#123;        return name;    &#125;    public void setName(String name) &#123;        this.name = name;    &#125;    public int getAge() &#123;        return age;    &#125;    public void setAge(int age) &#123;        this.age = age;    &#125;    public String getAddress() &#123;        return address;    &#125;    @Override    public String toString() &#123;        final StringBuffer sb = new StringBuffer(&quot;Person&#123;&quot;);        sb.append(&quot;id=&quot;).append(id);        sb.append(&quot;, name=&#39;&quot;).append(name).append(&#39;\&#39;&#39;);        sb.append(&quot;, age=&quot;).append(age);        sb.append(&quot;, address=&#39;&quot;).append(address).append(&#39;\&#39;&#39;);        sb.append(&#39;&#125;&#39;);        return sb.toString();    &#125;    public void setAddress(String address) &#123;        this.address = address;    &#125;&#125;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 使用的时候就</span><br><span class="line"></span><br><span class="line">- ```java</span><br><span class="line">  class A&#123;</span><br><span class="line">      new Person(1,&quot;xiao&quot;,5,&quot;天津&quot;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>使用jsp设置参数得到参数</p></li><li><pre><code class="jsp">&lt;%//    Person person = new Person();//    person.setAge();//    person.setName();//    person.setId();//    person.setAddress();%&gt;&lt;jsp:useBean id=&quot;person&quot; class=&quot;Person&quot; scope=&quot;page&quot;/&gt;&lt;jsp:setProperty name=&quot;person&quot; property=&quot;id&quot; value=&quot;1&quot;/&gt;&lt;jsp:setProperty name=&quot;person&quot; property=&quot;name&quot; value=&quot;小&quot;/&gt;&lt;jsp:setProperty name=&quot;person&quot; property=&quot;age&quot; value=&quot;5&quot;/&gt;&lt;jsp:setProperty name=&quot;person&quot; property=&quot;address&quot; value=&quot;天津&quot;/&gt;&lt;%--&lt;%=person.getAddress()%&gt;--%&gt;id：&lt;jsp:getProperty name=&quot;person&quot; property=&quot;id&quot;/&gt;姓名：&lt;jsp:getProperty name=&quot;person&quot; property=&quot;name&quot;/&gt;年龄：&lt;jsp:getProperty name=&quot;person&quot; property=&quot;age&quot;/&gt;地址：&lt;jsp:getProperty name=&quot;person&quot; property=&quot;address&quot;/&gt;</code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;实体类&lt;br&gt;JavaBean有特定的写法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;必须要有一个无参构造 &lt;/li&gt;
&lt;li&gt;属性必须私有化&lt;/li&gt;
&lt;li&gt;必须有对应的get&amp;#x2F;set方法；&lt;br&gt; 一般用来和数据库的字段做映射 ORM；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ORM</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>JSP标签、JSTL标签、EL表达式</title>
    <link href="http://example.com/2022/04/24/JSP%E6%A0%87%E7%AD%BE%E3%80%81JSTL%E6%A0%87%E7%AD%BE%E3%80%81EL%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://example.com/2022/04/24/JSP%E6%A0%87%E7%AD%BE%E3%80%81JSTL%E6%A0%87%E7%AD%BE%E3%80%81EL%E8%A1%A8%E8%BE%BE%E5%BC%8F/</id>
    <published>2022-04-24T02:32:45.000Z</published>
    <updated>2022-04-24T03:51:47.472Z</updated>
    
    <content type="html"><![CDATA[<h2 id="EL表达式"><a href="#EL表达式" class="headerlink" title="EL表达式"></a>EL表达式</h2><ul><li>获取数据</li><li>执行运算 </li><li>获取web开发的常用对象</li></ul><h2 id="JSP标签"><a href="#JSP标签" class="headerlink" title="JSP标签"></a>JSP标签</h2><ul><li><p>建立一个设置参数的jsp</p></li><li><p>&#96;&#96;&#96;jsp<br>&lt;jsp:forward page&#x3D;”jsptag1.jsp”&gt;<br>&lt;jsp:param name&#x3D;”name” value&#x3D;”xiao”&#x2F;&gt;<br>&lt;jsp:param name&#x3D;”age” value&#x3D;”12”&#x2F;&gt;<br></jsp:forward></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 建立一个取参数的jsp</span><br><span class="line"></span><br><span class="line">- ```jsp</span><br><span class="line">  名字：&lt;%=request.getParameter(&quot;name&quot;)%&gt;</span><br><span class="line">  年龄：&lt;%=request.getParameter(&quot;age&quot;)%&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="JSTL表达式"><a href="#JSTL表达式" class="headerlink" title="JSTL表达式"></a>JSTL表达式</h2><ul><li>JSTL标签库的使用就是为了弥补HTML标签的不足；它自定义许多标签，可以供我们使用，标签的功能和 Java代码一样！</li><li>在使用JSTL之前我们要引入jar包</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- JSTL表达式的依赖 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet.jsp.jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- standard标签库 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>我们主要掌握的就是<strong>核心标签</strong><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/24/2vhortDAZjGEXIP.png"                      alt="image-20220424112756085"                ></li></ul><p><strong>JSTL标签库使用步骤：</strong></p><ul><li><p>引入对应的 taglib （&lt;%@ taglib prefix&#x3D;”c” uri&#x3D;”<a class="link"   href="http://java.sun.com/jsp/jstl/core&quot;" >http://java.sun.com/jsp/jstl/core&quot;<i class="fas fa-external-link-alt"></i></a> %&gt;）</p></li><li><p>使用其中的方法 </p></li><li><p>在Tomcat 也需要引入 jstl的包，否则会报错：JSTL解析错误</p></li><li><p>c:if的使用</p></li><li><pre><code class="jsp">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; isELIgnored=&quot;false&quot; %&gt;&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;&lt;html&gt;&lt;head&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h4&gt;if测试&lt;/h4&gt;&lt;hr&gt;&lt;form action=&quot;jsptag1.jsp&quot; method=&quot;get&quot;&gt;    &lt;%--    EL表达式获取表单中的数据    $&#123;param.参数名&#125;    --%&gt;    &lt;input type=&quot;text&quot; name=&quot;username&quot; value=&quot;$&#123;param.username&#125;&quot;&gt;    &lt;input type=&quot;submit&quot; value=&quot;登录&quot;&gt;&lt;/form&gt;&lt;%--判断如果提交的用户名是管理员，则登录成功--%&gt;&lt;c:if test=&quot;$&#123;param.username==&#39;admin&#39;&#125;&quot; var=&quot;isAdmin&quot;&gt;    &lt;c:out value=&quot;欢迎&quot;/&gt;&lt;/c:if&gt;&lt;c:out value=&quot;$&#123;isAdmin&#125;&quot;/&gt;&lt;/body&gt;&lt;/html&gt;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- c:choose c:when的使用</span><br><span class="line"></span><br><span class="line">- ```jsp</span><br><span class="line">  &lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; isELIgnored=&quot;false&quot; %&gt;</span><br><span class="line">  &lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;</span><br><span class="line">  &lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">      &lt;title&gt;Title&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;c:set var=&quot;score&quot; value=&quot;55&quot;/&gt;</span><br><span class="line">  &lt;c:choose&gt;</span><br><span class="line">      &lt;c:when test=&quot;$&#123;score&gt;=90&#125;&quot;&gt;</span><br><span class="line">          你的成绩为优秀</span><br><span class="line">      &lt;/c:when&gt;</span><br><span class="line">      &lt;c:when test=&quot;$&#123;score&gt;=80&#125;&quot;&gt;</span><br><span class="line">          你的成绩为一般</span><br><span class="line">      &lt;/c:when&gt;</span><br><span class="line">      &lt;c:when test=&quot;$&#123;score&gt;=70&#125;&quot;&gt;</span><br><span class="line">          你的成绩为良好</span><br><span class="line">      &lt;/c:when&gt;</span><br><span class="line">      &lt;c:when test=&quot;$&#123;score&lt;=60&#125;&quot;&gt;</span><br><span class="line">          你的成绩为不及格</span><br><span class="line">      &lt;/c:when&gt;</span><br><span class="line">  &lt;/c:choose&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">  &lt;/html&gt;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>c:forEach使用</p></li><li><pre><code class="jsp">&lt;%@ page import=&quot;java.util.ArrayList&quot; %&gt;&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; isELIgnored=&quot;false&quot; %&gt;&lt;%@ taglib prefix=&quot;c&quot; uri=&quot;http://java.sun.com/jsp/jstl/core&quot; %&gt;&lt;html&gt;&lt;head&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;%    ArrayList&lt;String&gt; people = new ArrayList&lt;&gt;();    people.add(0,&quot;0&quot;);    people.add(1,&quot;1&quot;);    people.add(2,&quot;2&quot;);    people.add(3,&quot;3&quot;);    people.add(4,&quot;4&quot;);    request.setAttribute(&quot;list&quot;,people);%&gt;&lt;c:forEach var=&quot;people&quot; items=&quot;$&#123;list&#125;&quot;&gt;    &lt;c:out value=&quot;$&#123;people&#125;&quot;/&gt;&lt;br&gt;&lt;/c:forEach&gt;&lt;hr&gt;&lt;c:forEach var=&quot;people&quot; items=&quot;$&#123;list&#125;&quot; begin=&quot;1&quot; end=&quot;3&quot; step=&quot;2&quot;&gt;    &lt;c:out value=&quot;$&#123;people&#125;&quot;/&gt;&lt;br&gt;&lt;/c:forEach&gt;&lt;/body&gt;&lt;/html&gt;</code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;EL表达式&quot;&gt;&lt;a href=&quot;#EL表达式&quot; class=&quot;headerlink&quot; title=&quot;EL表达式&quot;&gt;&lt;/a&gt;EL表达式&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;获取数据&lt;/li&gt;
&lt;li&gt;执行运算 &lt;/li&gt;
&lt;li&gt;获取web开发的常用对象&lt;/li&gt;
&lt;/ul&gt;</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>JSP内置对象和作用域</title>
    <link href="http://example.com/2022/04/24/JSP%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1%E5%92%8C%E4%BD%9C%E7%94%A8%E5%9F%9F/"/>
    <id>http://example.com/2022/04/24/JSP%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1%E5%92%8C%E4%BD%9C%E7%94%A8%E5%9F%9F/</id>
    <published>2022-04-24T01:15:10.000Z</published>
    <updated>2022-04-24T01:40:09.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JSP内置对象和作用域"><a href="#JSP内置对象和作用域" class="headerlink" title="JSP内置对象和作用域"></a>JSP内置对象和作用域</h1><ul><li>PageContext 存东西 </li><li>Request 存东西</li><li>Response</li><li>Session 存东西 </li><li>Application 【SerlvetContext】 存东西</li><li>config 【SerlvetConfig】 </li><li>out </li><li>page ，不用了解</li><li>exception</li></ul><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pageContext.setAttribute(<span class="string">&quot;name1&quot;</span>,<span class="string">&quot;1&quot;</span>); <span class="comment">//保存的数据只在一个页面中有效</span></span><br><span class="line">request.setAttribute(<span class="string">&quot;name2&quot;</span>,<span class="string">&quot;2&quot;</span>); <span class="comment">//保存的数据只在一次请求中有效，请求转发会携带这个数据</span></span><br><span class="line">session.setAttribute(<span class="string">&quot;name3&quot;</span>,<span class="string">&quot;3&quot;</span>); <span class="comment">//保存的数据只在一次会话中有效，从打开浏览器到关闭浏览器</span></span><br><span class="line">application.setAttribute(<span class="string">&quot;name4&quot;</span>,<span class="string">&quot;4&quot;</span>); <span class="comment">//保存的数据只在服务器中有效，从打开服务器到关闭服务器</span></span><br></pre></td></tr></table></figure><ul><li><p>request：客户端向服务器发送请求，产生的数据，用户看完就没用了，比如：新闻，用户看完没用的！</p></li><li><p>session：客户端向服务器发送请求，产生的数据，用户用完一会还有用，比如：购物车；</p></li><li><p>application：客户端向服务器发送请求，产生的数据，一个用户用完了，其他用户还可能使用，比如： 聊天数据；</p></li></ul><p>接下来我们将其取出并输出，输出结果是1234</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;%</span><br><span class="line">    <span class="comment">//从pageContext取出，通过寻找的方式来</span></span><br><span class="line">    <span class="comment">//从底层到高层（作用域）page-&gt;request-&gt;session-&gt;application</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">name1</span> <span class="operator">=</span> (String) pageContext.findAttribute(<span class="string">&quot;name1&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">name2</span> <span class="operator">=</span> (String) pageContext.findAttribute(<span class="string">&quot;name2&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">name3</span> <span class="operator">=</span> (String) pageContext.findAttribute(<span class="string">&quot;name3&quot;</span>);</span><br><span class="line">    <span class="type">String</span> <span class="variable">name4</span> <span class="operator">=</span> (String) pageContext.findAttribute(<span class="string">&quot;name4&quot;</span>);</span><br><span class="line">%&gt;</span><br><span class="line">&lt;%--使用EL表达式输出 $&#123;&#125;--%&gt;</span><br><span class="line">&lt;h1&gt; $&#123;name1&#125;&lt;/h1&gt;</span><br><span class="line">&lt;h1&gt; $&#123;name2&#125;&lt;/h1&gt;</span><br><span class="line">&lt;h1&gt; $&#123;name3&#125;&lt;/h1&gt;</span><br><span class="line">&lt;h1&gt; $&#123;name4&#125;&lt;/h1&gt;</span><br></pre></td></tr></table></figure><ul><li><p>我们再新建一个jsp文件将存进去的值取出，就输出3和4</p></li><li><p>我们再加一个转发，输出就是1234，请求转发保存数据有效</p></li><li><pre><code class="jsp">&lt;%    pageContext.forward(&quot;/demo1.jsp&quot;);//    request.getRequestDispatcher(&quot;/demo1.jsp&quot;).forward(request,response);%&gt;</code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JSP内置对象和作用域&quot;&gt;&lt;a href=&quot;#JSP内置对象和作用域&quot; class=&quot;headerlink&quot; title=&quot;JSP内置对象和作用域&quot;&gt;&lt;/a&gt;JSP内置对象和作用域&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;PageContext 存东西 &lt;/li&gt;
&lt;li&gt;Re</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>JSP基础语法</title>
    <link href="http://example.com/2022/04/23/JSP%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <id>http://example.com/2022/04/23/JSP%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</id>
    <published>2022-04-23T04:01:50.000Z</published>
    <updated>2022-04-23T07:13:13.779Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JSP基础语法"><a href="#JSP基础语法" class="headerlink" title="JSP基础语法"></a>JSP基础语法</h1><p>任何语言都有自己的语法，JAVA中有,。 JSP 作为java技术的一种应用，它拥有一些自己扩充的语法（了 解，知道即可！），Java所有语法都支持！</p><hr><h2 id="JSP表达式"><a href="#JSP表达式" class="headerlink" title="JSP表达式"></a>JSP表达式</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--JSP表达式</span><br><span class="line">作用：用来将程序的输出，输出到客户端</span><br><span class="line">&lt;%= 变量或者表达式%&gt;</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%= new java.util.Date()%&gt;</span><br></pre></td></tr></table></figure><h2 id="jsp脚本片段"><a href="#jsp脚本片段" class="headerlink" title="jsp脚本片段"></a>jsp脚本片段</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--jsp脚本片段--%&gt;</span><br><span class="line">&lt;%</span><br><span class="line">int sum = 0;</span><br><span class="line">for (int i = 1; i &lt;=100 ; i++) &#123;</span><br><span class="line">sum+=i;</span><br><span class="line">&#125;</span><br><span class="line">out.println(&quot;&lt;h1&gt;Sum=&quot;+sum+&quot;&lt;/h1&gt;&quot;);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><h2 id="JSP声明"><a href="#JSP声明" class="headerlink" title="JSP声明"></a>JSP声明</h2><p>JSP声明：会被编译到JSP生成Java的类中！其他的，就会被生成到_jspService方法中！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;%!</span><br><span class="line">static &#123;</span><br><span class="line">System.out.println(&quot;Loading Servlet!&quot;);</span><br><span class="line">&#125;</span><br><span class="line">private int globalVar = 0;</span><br><span class="line">public void kuang()&#123;</span><br><span class="line">System.out.println(&quot;进入了方法Kuang！&quot;);</span><br><span class="line">&#125;</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure><p>**注意:**JSP的注释，不会在客户端显示，HTML就会！</p><h2 id="JSP指令"><a href="#JSP指令" class="headerlink" title="JSP指令"></a>JSP指令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@page args.... %&gt;</span><br><span class="line">&lt;%@include file=&quot;&quot;%&gt;</span><br><span class="line">&lt;%--@include会将两个页面合二为一--%&gt;</span><br><span class="line">&lt;%@include file=&quot;common/header.jsp&quot;%&gt;</span><br><span class="line">&lt;h1&gt;网页主体&lt;/h1&gt;</span><br><span class="line">&lt;%@include file=&quot;common/footer.jsp&quot;%&gt;</span><br><span class="line">&lt;hr&gt;</span><br><span class="line"></span><br><span class="line">&lt;%--jSP标签</span><br><span class="line">jsp:include：拼接页面，本质还是三个</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;jsp:include page=&quot;/common/header.jsp&quot;/&gt;</span><br><span class="line">&lt;h1&gt;网页主体&lt;/h1&gt;</span><br><span class="line">&lt;jsp:include page=&quot;/common/footer.jsp&quot;/&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JSP基础语法&quot;&gt;&lt;a href=&quot;#JSP基础语法&quot; class=&quot;headerlink&quot; title=&quot;JSP基础语法&quot;&gt;&lt;/a&gt;JSP基础语法&lt;/h1&gt;&lt;p&gt;任何语言都有自己的语法，JAVA中有,。 JSP 作为java技术的一种应用，它拥有一些自己扩充的语</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>JSP原理剖析</title>
    <link href="http://example.com/2022/04/22/JSP%E5%8E%9F%E7%90%86%E5%89%96%E6%9E%90/"/>
    <id>http://example.com/2022/04/22/JSP%E5%8E%9F%E7%90%86%E5%89%96%E6%9E%90/</id>
    <published>2022-04-22T14:53:50.000Z</published>
    <updated>2022-04-23T01:33:38.087Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是JSP"><a href="#什么是JSP" class="headerlink" title="什么是JSP"></a>什么是JSP</h1><p>Java Server Pages ： Java服务器端页面，也和Servlet一样，用于动态Web技术！</p><hr><p><strong>最大的特点：</strong></p><ul><li>写JSP就像在写HTML </li><li>区别： HTML只给用户提供静态的数据 JSP页面中可以嵌入JAVA代码，为用户提供动态数据；</li></ul><h1 id="JSP原理"><a href="#JSP原理" class="headerlink" title="JSP原理"></a>JSP原理</h1><p>服务器内部工作 tomcat中有一个work目录；IDEA中使用Tomcat的会在tomcat中生产一个work目录，发现页面转变成了Java程序。<img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/23/UHrWoSEze1t79AR.png"                      alt="image-20220423091749417"                ></p><p>在我电脑里面的地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\Apache Software Foundation\Tomcat 8.5\work\Catalina\localhost\ROOT\org\apache\jsp</span><br></pre></td></tr></table></figure><p>浏览器向服务器发送请求，不管访问什么资源，其实都是在访问Servlet！ JSP最终也会被转换成为一个Java类！ JSP 本质上就是一个Servlet。接下来我们看下jsp.java的代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">_jspInit</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//销毁</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">_jspDestroy</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//JSPService</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">_jspService</span><span class="params">(.HttpServletRequest request,HttpServletResponse</span></span><br><span class="line"><span class="params">response)</span></span><br></pre></td></tr></table></figure><ol><li>判断请求</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> java.lang.<span class="type">String</span> <span class="variable">_jspx_method</span> <span class="operator">=</span> request.getMethod();</span><br><span class="line">   <span class="keyword">if</span> (!<span class="string">&quot;GET&quot;</span>.equals(_jspx_method) &amp;&amp; !<span class="string">&quot;POST&quot;</span>.equals(_jspx_method) &amp;&amp; !<span class="string">&quot;HEAD&quot;</span>.equals(_jspx_method) &amp;&amp; !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) &#123;</span><br><span class="line">     response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, <span class="string">&quot;JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS&quot;</span>);</span><br><span class="line">     <span class="keyword">return</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>内置一些对象</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> javax.servlet.jsp.PageContext pageContext; <span class="comment">//页面上下文</span></span><br><span class="line">javax.servlet.http.<span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> <span class="literal">null</span>; <span class="comment">//session</span></span><br><span class="line"><span class="keyword">final</span> javax.servlet.ServletContext application; <span class="comment">//applicationContext</span></span><br><span class="line"><span class="keyword">final</span> javax.servlet.ServletConfig config; <span class="comment">//config</span></span><br><span class="line">javax.servlet.jsp.<span class="type">JspWriter</span> <span class="variable">out</span> <span class="operator">=</span> <span class="literal">null</span>; <span class="comment">//out</span></span><br><span class="line"><span class="keyword">final</span> java.lang.<span class="type">Object</span> <span class="variable">page</span> <span class="operator">=</span> <span class="built_in">this</span>; <span class="comment">//page：当前</span></span><br><span class="line">HttpServletRequest request <span class="comment">//请求</span></span><br><span class="line">HttpServletResponse response <span class="comment">//响应</span></span><br></pre></td></tr></table></figure><ol start="3"><li>输出页面前增加的代码</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">response.setContentType(<span class="string">&quot;text/html; charset=UTF-8&quot;</span>);</span><br><span class="line">pageContext = _jspxFactory.getPageContext(<span class="built_in">this</span>, request, response,<span class="literal">null</span>, <span class="literal">false</span>, <span class="number">8192</span>, <span class="literal">true</span>);</span><br><span class="line">_jspx_page_context = pageContext;</span><br><span class="line">application = pageContext.getServletContext();</span><br><span class="line">config = pageContext.getServletConfig();</span><br><span class="line">out = pageContext.getOut();</span><br><span class="line">_jspx_out = out;</span><br></pre></td></tr></table></figure><ol start="4"><li>以上的这些个对象我们可以在JSP页面中直接使用！<img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/23/Di9BkxtVWU2Gn8L.png"                      alt="image-20220423092722099"                ></li></ol><p><strong>在JSP页面中:</strong></p><ul><li><p>只要是 JAVA代码就会原封不动的输出；</p></li><li><p>如果是HTML代码，就会被转换为以下的格式，输出到前端！</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">out.write(&quot;<span class="tag">&lt;<span class="name">html</span>&gt;</span>\r\n&quot;);</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;什么是JSP&quot;&gt;&lt;a href=&quot;#什么是JSP&quot; class=&quot;headerlink&quot; title=&quot;什么是JSP&quot;&gt;&lt;/a&gt;什么是JSP&lt;/h1&gt;&lt;p&gt;Java Server Pages ： Java服务器端页面，也和Servlet一样，用于动态Web技术！&lt;</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>Cookie、Session</title>
    <link href="http://example.com/2022/04/20/Cookie%E3%80%81Session/"/>
    <id>http://example.com/2022/04/20/Cookie%E3%80%81Session/</id>
    <published>2022-04-20T12:05:59.000Z</published>
    <updated>2022-04-21T09:18:40.277Z</updated>
    
    <content type="html"><![CDATA[<h1 id="会话"><a href="#会话" class="headerlink" title="会话"></a>会话</h1><p><strong>会话</strong>：用户打开一个浏览器，点击了很多超链接，访问多个web资源，关闭浏览器，这个过程可以称之为会话；</p><p><strong>有状态会话</strong>：一个同学来过教室，下次再来教室，我们会知道这个同学，曾经来过，称之为有状态会话；</p><p><strong>一个网站，怎么证明你来过？</strong></p><ol><li>服务端给客户端一个 信件，客户端下次访问服务端带上信件就可以了； cookie </li><li>服务器登记你来过了，下次你来的时候我来匹配你； seesion</li></ol><h1 id="保存会话的两种技术"><a href="#保存会话的两种技术" class="headerlink" title="保存会话的两种技术"></a>保存会话的两种技术</h1><p><strong>cookie</strong></p><ul><li>客户端技术 （响应，请求）</li></ul><p><strong>session</strong></p><ul><li>服务器技术，利用这个技术，可以保存用户的会话信息。 我们可以把信息或者数据放在Session 中！</li></ul><p><strong>常见现象：网站登录之后，你下次不用再登录了，第二次访问直接就上去了！</strong></p><h1 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h1><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/21/IA7tsgXOWq9Y8QG.png"                      alt="image-20220421162701983"                ></p><ol><li><p>从请求中拿到cookie信息 </p></li><li><p>服务器响应给客户端cookie</p></li><li><p>&#96;&#96;&#96;java<br>@Override<br>protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {<br>req.setCharacterEncoding(“utf-8”);<br>resp.setCharacterEncoding(“utf-8”);<br>Cookie[] cookies &#x3D; req.getCookies();&#x2F;&#x2F;获得Cookie<br>PrintWriter out &#x3D; resp.getWriter();<br>if (cookies !&#x3D; null){<br>    out.print(“你上次访问的时间是：”);<br>    for (int i &#x3D; 0; i &lt; cookies.length; i++) {<br>      Cookie  cookie &#x3D; cookies[i];<br>      if (cookie.getName().equals(“lastLoginTime”)){<br>          long lastLoginTime &#x3D; Long.parseLong(cookie.getValue()); &#x2F;&#x2F;获得cookie中的vlaue<br>          Date date &#x3D; new Date(lastLoginTime);<br>          out.print(date.toLocaleString());<br>      }<br>    }<br>}else{<br>    out.print(“你第一次访问”);<br>}<br><br>Cookie cookie &#x3D; new Cookie(“lastLoginTime”, System.currentTimeMillis() + “”);&#x2F;&#x2F;新建一个cookie<br>cookie.setMaxAge(24<em>60</em>60);&#x2F;&#x2F;设置cookie的有效期<br>resp.addCookie(cookie);&#x2F;&#x2F;响应给客户端一个cookie<br>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">**cookie：一般会保存在本地的 用户目录下 appdata；**</span><br><span class="line"></span><br><span class="line">**一个网站cookie是否存在上限？**</span><br><span class="line"></span><br><span class="line">- 一个Cookie只能保存一个信息；</span><br><span class="line">-  一个web站点可以给浏览器发送多个cookie，最多存放20个cookie；</span><br><span class="line">- Cookie大小有限制4kb； </span><br><span class="line">- 300个cookie浏览器上限</span><br><span class="line"></span><br><span class="line">**删除Cookie：**</span><br><span class="line"></span><br><span class="line">- 不设置有效期，关闭浏览器，自动失效；</span><br><span class="line">-  设置有效期时间为 0 ；</span><br><span class="line"></span><br><span class="line">**编码解码：**</span><br><span class="line"></span><br><span class="line">```java</span><br><span class="line">URLEncoder.encode(&quot;秦疆&quot;,&quot;utf-8&quot;)</span><br><span class="line">URLDecoder.decode(cookie.getValue(),&quot;UTF-8&quot;)</span><br></pre></td></tr></table></figure></li></ol><h1 id="Session"><a href="#Session" class="headerlink" title="Session"></a>Session</h1><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/21/iyVWCTgJXs2avzw.png"                      alt="image-20220421162745344"                ></p><p><strong>什么是Session：</strong></p><ul><li>服务器会给每一个用户（浏览器）创建一个Seesion对象；</li><li>一个Seesion独占一个浏览器，只要浏览器没有关闭，这个Session就存在；</li><li>用户登录之后，整个网站它都可以访问！–&gt; 保存用户的信息；保存购物车的信息…..</li></ul><p><strong>使用场景：</strong> </p><ul><li>保存一个登录用户的信息； 购物车信息； </li><li>在整个网站中经常会使用的数据，我们将它保存在Session中；</li></ul><p>新建session</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">session</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="comment">//解决乱码问题</span></span><br><span class="line">        req.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">        resp.setContentType(<span class="string">&quot;text/html;charset=utf-8&quot;</span>);</span><br><span class="line">        <span class="comment">//得到session</span></span><br><span class="line">        <span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">        <span class="comment">//给session中存东西</span></span><br><span class="line">        session.setAttribute(<span class="string">&quot;name&quot;</span>,<span class="keyword">new</span> <span class="title class_">Person</span>(<span class="string">&quot;秦疆&quot;</span>,<span class="number">1</span>));</span><br><span class="line">        <span class="comment">//获取session的ID</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sessionId</span> <span class="operator">=</span> session.getId();</span><br><span class="line">        <span class="comment">//判断session是否是新建的</span></span><br><span class="line">        <span class="keyword">if</span>(session.isNew())&#123;</span><br><span class="line">            resp.getWriter().write(<span class="string">&quot;session创建成功,ID:&quot;</span>+sessionId);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            resp.getWriter().write(<span class="string">&quot;session以及在服务器中存在了,ID:&quot;</span>+sessionId);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到Session内容：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line"><span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> (Person) session.getAttribute(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">System.out.println(person.toString());</span><br><span class="line"><span class="type">HttpSession</span> <span class="variable">session</span> <span class="operator">=</span> req.getSession();</span><br><span class="line">session.removeAttribute(<span class="string">&quot;name&quot;</span>);</span><br></pre></td></tr></table></figure><p>手动注销Session:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.invalidate();</span><br></pre></td></tr></table></figure><p><strong>会话自动过期：web.xml配置</strong></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--设置Session默认的失效时间--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">session-config</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--15分钟后Session自动失效，以分钟为单位--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">session-timeout</span>&gt;</span>15<span class="tag">&lt;/<span class="name">session-timeout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">session-config</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="Session和cookie的区别"><a href="#Session和cookie的区别" class="headerlink" title="Session和cookie的区别"></a>Session和cookie的区别</h1><ul><li>Cookie是把用户的数据写给用户的浏览器，浏览器保存 （可以保存多个）</li><li>Session把用户的数据写到用户独占Session中，服务器端保存 （保存重要的信息，减少服务器资源的浪费） </li><li>Session对象由服务创建；</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;会话&quot;&gt;&lt;a href=&quot;#会话&quot; class=&quot;headerlink&quot; title=&quot;会话&quot;&gt;&lt;/a&gt;会话&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;会话&lt;/strong&gt;：用户打开一个浏览器，点击了很多超链接，访问多个web资源，关闭浏览器，这个过程可以称之为会话；&lt;/p</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>请求的资源不可用解决方法</title>
    <link href="http://example.com/2022/04/20/%E8%AF%B7%E6%B1%82%E7%9A%84%E8%B5%84%E6%BA%90-r-7BpageContext-request-contextPath-7D-login-%E4%B8%8D%E5%8F%AF%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://example.com/2022/04/20/%E8%AF%B7%E6%B1%82%E7%9A%84%E8%B5%84%E6%BA%90-r-7BpageContext-request-contextPath-7D-login-%E4%B8%8D%E5%8F%AF%E7%94%A8%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</id>
    <published>2022-04-20T07:17:12.000Z</published>
    <updated>2022-04-27T09:11:05.363Z</updated>
    
    <content type="html"><![CDATA[<h1 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h1><p>类型 状态报告<br>消息 请求的资源[&#x2F;r&#x2F;$%7BpageContext.request.contextPath%7D&#x2F;login]不可用解决方法<br>描述 源服务器未能找到目标资源的表示或者是不愿公开一个已经存在的资源表示。</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;%--这里提交的路径，需要寻找到项目的路径--%&gt;</span><br><span class="line">&lt;%--$&#123;pageContext.request.contextPath&#125;代表当前的项目--%&gt;</span><br><span class="line">&lt;form action=<span class="string">&quot;$&#123;pageContext.request.contextPath&#125;/login&quot;</span> method=<span class="string">&quot;get&quot;</span>&gt;</span><br><span class="line">    用户名：&lt;input type=<span class="string">&quot;text&quot;</span> name=<span class="string">&quot;username&quot;</span>&gt; &lt;br&gt;</span><br><span class="line">    密码：&lt;input type=<span class="string">&quot;password&quot;</span> name=<span class="string">&quot;password&quot;</span>&gt; &lt;br&gt;</span><br><span class="line">    &lt;input type=<span class="string">&quot;submit&quot;</span>&gt;</span><br></pre></td></tr></table></figure><h1 id="原因分析："><a href="#原因分析：" class="headerlink" title="原因分析："></a>原因分析：</h1><p>原因就是${}没有解析当成了字符串，这时我们只需要将这行加入就可以了（最主要就是isELIgnored）</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">&quot;text/html;charset=UTF-8&quot;</span> language=<span class="string">&quot;java&quot;</span> isELIgnored=<span class="string">&quot;false&quot;</span> %&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h1&gt;&lt;p&gt;类型 状态报告&lt;br&gt;消息 请求的资源[&amp;#x2F;r&amp;#x2F;$%7BpageContext.request.conte</summary>
      
    
    
    
    
    <category term="遇到的问题" scheme="http://example.com/tags/%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Response重定向</title>
    <link href="http://example.com/2022/04/19/Response%E9%87%8D%E5%AE%9A%E5%90%91/"/>
    <id>http://example.com/2022/04/19/Response%E9%87%8D%E5%AE%9A%E5%90%91/</id>
    <published>2022-04-19T11:30:05.000Z</published>
    <updated>2022-04-19T15:06:09.641Z</updated>
    
    <content type="html"><![CDATA[<h1 id="实现重定向"><a href="#实现重定向" class="headerlink" title="实现重定向"></a>实现重定向</h1><p>B一个web资源收到客户端A请求后，B他会通知A客户端去访问另外一个web资源C，这个过程叫重定向。常见场景是登录页面</p><ul><li><p>只需要使用一个函数就行sendRedirect</p></li><li><pre><code class="java">protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;    /*    resp.setHeader(&quot;Location&quot;,&quot;/r/img&quot;);    resp.setStatus(302);    */    resp.sendRedirect(&quot;/r/img&quot;);&#125;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 简单实现登录重定向</span><br><span class="line"></span><br><span class="line">- 我们先在index.jsp中设置一个表单</span><br><span class="line"></span><br><span class="line">- ```jsp</span><br><span class="line">  &lt;%--这里提交的路径，需要寻找到项目的路径--%&gt;</span><br><span class="line">  &lt;%--$&#123;pageContext.request.contextPath&#125;代表当前的项目--%&gt;</span><br><span class="line">  &lt;form action=&quot;$&#123;pageContext.request.contextPath&#125;/login&quot; method=&quot;get&quot;&gt;</span><br><span class="line">      用户名：&lt;input type=&quot;text&quot; name=&quot;username&quot;&gt; &lt;br&gt;</span><br><span class="line">      密码：&lt;input type=&quot;password&quot; name=&quot;password&quot;&gt; &lt;br&gt;</span><br><span class="line">      &lt;input type=&quot;submit&quot;&gt;</span><br><span class="line">  &lt;/form&gt;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>然后写请求</p></li><li><pre><code class="java">import javax.servlet.ServletException;import javax.servlet.http.HttpServlet;import javax.servlet.http.HttpServletRequest;import javax.servlet.http.HttpServletResponse;import java.io.IOException;public class RequestServlet extends HttpServlet &#123;    @Override    protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;        String username = req.getParameter(&quot;username&quot;);        String password = req.getParameter(&quot;password&quot;);        System.out.println(username+&quot;:&quot;+password);        resp.sendRedirect(&quot;/success.jsp&quot;);    &#125;    @Override    protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;        doGet(req, resp);    &#125;&#125;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 设置映射</span><br><span class="line"></span><br><span class="line">- ```xml</span><br><span class="line">  &lt;servlet&gt;</span><br><span class="line">    &lt;servlet-name&gt;requset&lt;/servlet-name&gt;</span><br><span class="line">    &lt;servlet-class&gt;RequestServlet&lt;/servlet-class&gt;</span><br><span class="line">  &lt;/servlet&gt;</span><br><span class="line">  &lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;requset&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/login&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/servlet-mapping&gt;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>新建一个success.jsp用于重定向</p></li><li><pre><code class="jsp">&lt;%@ page contentType=&quot;text/html;charset=UTF-8&quot; language=&quot;java&quot; %&gt;&lt;html&gt;  &lt;head&gt;    &lt;title&gt;Title&lt;/title&gt;  &lt;/head&gt;  &lt;body&gt;  &lt;h1&gt;hello&lt;/h1&gt;  &lt;/body&gt;&lt;/html&gt;</code></pre></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;实现重定向&quot;&gt;&lt;a href=&quot;#实现重定向&quot; class=&quot;headerlink&quot; title=&quot;实现重定向&quot;&gt;&lt;/a&gt;实现重定向&lt;/h1&gt;&lt;p&gt;B一个web资源收到客户端A请求后，B他会通知A客户端去访问另外一个web资源C，这个过程叫重定向。常见场景是登录页</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>请你聊聊重定向和转发的区别？</title>
    <link href="http://example.com/2022/04/19/%E8%AF%B7%E4%BD%A0%E8%81%8A%E8%81%8A%E9%87%8D%E5%AE%9A%E5%90%91%E5%92%8C%E8%BD%AC%E5%8F%91%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F/"/>
    <id>http://example.com/2022/04/19/%E8%AF%B7%E4%BD%A0%E8%81%8A%E8%81%8A%E9%87%8D%E5%AE%9A%E5%90%91%E5%92%8C%E8%BD%AC%E5%8F%91%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F/</id>
    <published>2022-04-19T11:25:40.000Z</published>
    <updated>2022-04-20T08:59:26.256Z</updated>
    
    <content type="html"><![CDATA[<p>相同点 ：</p><ul><li>页面都会实现跳转</li></ul><p>不同点 ：</p><ul><li>请求转发的时候，url不会产生变化 ；307</li><li>重定向时候，url地址栏会发生变化；302</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;相同点 ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;页面都会实现跳转&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不同点 ：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;请求转发的时候，url不会产生变化 ；307&lt;/li&gt;
&lt;li&gt;重定向时候，url地址栏会发生变化；302&lt;/li&gt;
&lt;/ul&gt;
</summary>
      
    
    
    
    
    <category term="面试题" scheme="http://example.com/tags/%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Response验证码实现</title>
    <link href="http://example.com/2022/04/19/Response%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0/"/>
    <id>http://example.com/2022/04/19/Response%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0/</id>
    <published>2022-04-19T09:09:44.000Z</published>
    <updated>2022-04-19T09:10:24.329Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">    <span class="comment">//如何让浏览器3秒自动刷新一次;</span></span><br><span class="line">    resp.setHeader(<span class="string">&quot;refresh&quot;</span>,<span class="string">&quot;3&quot;</span>);</span><br><span class="line">    <span class="comment">//在内存中创建一个图片</span></span><br><span class="line">    <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedImage</span>(<span class="number">80</span>,<span class="number">20</span>,BufferedImage.TYPE_INT_RGB);</span><br><span class="line">    <span class="comment">//得到图片</span></span><br><span class="line">    <span class="type">Graphics</span> <span class="variable">g</span> <span class="operator">=</span> image.getGraphics();</span><br><span class="line">    <span class="comment">//设置图片的背景颜色</span></span><br><span class="line">    g.setColor(Color.white);</span><br><span class="line">    g.fillRect(<span class="number">0</span>,<span class="number">0</span>,<span class="number">80</span>,<span class="number">20</span>);</span><br><span class="line">    <span class="comment">//给图片写数据</span></span><br><span class="line">    g.setColor(Color.blue);</span><br><span class="line">    g.setFont(<span class="keyword">new</span> <span class="title class_">Font</span>(<span class="literal">null</span>,Font.BOLD,<span class="number">20</span>));</span><br><span class="line">    g.drawString(makeNum(),<span class="number">0</span>,<span class="number">20</span>);</span><br><span class="line">    <span class="comment">//告诉浏览器，这个请求用图片的方式打开</span></span><br><span class="line">    resp.setContentType(<span class="string">&quot;image/jpeg&quot;</span>);</span><br><span class="line">    <span class="comment">//不让浏览器缓存</span></span><br><span class="line">    resp.setDateHeader(<span class="string">&quot;expires&quot;</span>,-<span class="number">1</span>);</span><br><span class="line">    resp.setHeader(<span class="string">&quot;Cache-Control&quot;</span>,<span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">    resp.setHeader(<span class="string">&quot;Pragma&quot;</span>,<span class="string">&quot;no-cache&quot;</span>);</span><br><span class="line">    <span class="comment">//把图片写给浏览器</span></span><br><span class="line">    ImageIO.write(image,<span class="string">&quot;jpg&quot;</span>,resp.getOutputStream());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">private</span> String <span class="title function_">makeNum</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">Random</span> <span class="variable">random</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Random</span>();</span><br><span class="line">    <span class="type">String</span> <span class="variable">num</span> <span class="operator">=</span> random.nextInt(<span class="number">9999999</span>) + <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="type">StringBuffer</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">7</span>-num.length(); i++) &#123;</span><br><span class="line">        sb.append(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    num = sb.toString()+num;</span><br><span class="line">    <span class="keyword">return</span> num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>Response下载文件</title>
    <link href="http://example.com/2022/04/18/Response%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6/"/>
    <id>http://example.com/2022/04/18/Response%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6/</id>
    <published>2022-04-18T11:24:54.000Z</published>
    <updated>2022-04-18T13:53:30.197Z</updated>
    
    <content type="html"><![CDATA[<h1 id="HttpServletResponse"><a href="#HttpServletResponse" class="headerlink" title="HttpServletResponse"></a>HttpServletResponse</h1><p>web服务器接收到客户端的http请求，针对这个请求，分别创建一个代表请求的HttpServletRequest对 象，代表响应的一个HttpServletResponse：</p><ul><li>如果要获取客户端请求过来的参数：找HttpServletRequest </li><li>如果要给客户端响应一些信息：找HttpServletResponse</li></ul><h2 id="简单分类"><a href="#简单分类" class="headerlink" title="简单分类"></a>简单分类</h2><p>负责向浏览器发送数据的方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ServletOutputStream <span class="title function_">getOutputStream</span><span class="params">()</span> <span class="keyword">throws</span> IOException;</span><br><span class="line">PrintWriter <span class="title function_">getWriter</span><span class="params">()</span> <span class="keyword">throws</span> IOException;</span><br></pre></td></tr></table></figure><p>负责向浏览器发送响应头的方法:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">setCharacterEncoding</span><span class="params">(String var1)</span>;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setContentLength</span><span class="params">(<span class="type">int</span> var1)</span>;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setContentLengthLong</span><span class="params">(<span class="type">long</span> var1)</span>;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setContentType</span><span class="params">(String var1)</span>;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setDateHeader</span><span class="params">(String var1, <span class="type">long</span> var2)</span>;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">addDateHeader</span><span class="params">(String var1, <span class="type">long</span> var2)</span>;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setHeader</span><span class="params">(String var1, String var2)</span>;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">addHeader</span><span class="params">(String var1, String var2)</span>;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">setIntHeader</span><span class="params">(String var1, <span class="type">int</span> var2)</span>;</span><br><span class="line"><span class="keyword">void</span> <span class="title function_">addIntHeader</span><span class="params">(String var1, <span class="type">int</span> var2)</span>;</span><br></pre></td></tr></table></figure><p>响应的状态码:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">int SC_CONTINUE = 100;</span><br><span class="line">int SC_SWITCHING_PROTOCOLS = 101;</span><br><span class="line">int SC_OK = 200;</span><br><span class="line">int SC_CREATED = 201;</span><br><span class="line">int SC_ACCEPTED = 202;</span><br><span class="line">int SC_NON_AUTHORITATIVE_INFORMATION = 203;</span><br><span class="line">int SC_NO_CONTENT = 204;</span><br><span class="line">int SC_RESET_CONTENT = 205;</span><br><span class="line">int SC_PARTIAL_CONTENT = 206;</span><br><span class="line">int SC_MULTIPLE_CHOICES = 300;</span><br><span class="line">int SC_MOVED_PERMANENTLY = 301;</span><br><span class="line">int SC_MOVED_TEMPORARILY = 302;</span><br><span class="line">int SC_FOUND = 302;</span><br><span class="line">int SC_SEE_OTHER = 303;</span><br><span class="line">int SC_NOT_MODIFIED = 304;</span><br><span class="line">int SC_USE_PROXY = 305;</span><br><span class="line">int SC_TEMPORARY_REDIRECT = 307;</span><br><span class="line">int SC_BAD_REQUEST = 400;</span><br><span class="line">int SC_UNAUTHORIZED = 401;</span><br><span class="line">int SC_PAYMENT_REQUIRED = 402;</span><br><span class="line">int SC_FORBIDDEN = 403;</span><br><span class="line">int SC_NOT_FOUND = 404;</span><br><span class="line">int SC_METHOD_NOT_ALLOWED = 405;</span><br><span class="line">int SC_NOT_ACCEPTABLE = 406;</span><br><span class="line">int SC_PROXY_AUTHENTICATION_REQUIRED = 407;</span><br><span class="line">int SC_REQUEST_TIMEOUT = 408;</span><br><span class="line">int SC_CONFLICT = 409;</span><br><span class="line">int SC_GONE = 410;</span><br><span class="line">int SC_LENGTH_REQUIRED = 411;</span><br><span class="line">int SC_PRECONDITION_FAILED = 412;</span><br><span class="line">int SC_REQUEST_ENTITY_TOO_LARGE = 413;</span><br><span class="line">int SC_REQUEST_URI_TOO_LONG = 414;</span><br><span class="line">int SC_UNSUPPORTED_MEDIA_TYPE = 415;</span><br><span class="line">int SC_REQUESTED_RANGE_NOT_SATISFIABLE = 416;</span><br><span class="line">int SC_EXPECTATION_FAILED = 417;</span><br><span class="line">int SC_INTERNAL_SERVER_ERROR = 500;</span><br><span class="line">int SC_NOT_IMPLEMENTED = 501;</span><br><span class="line">int SC_BAD_GATEWAY = 502;</span><br><span class="line">int SC_SERVICE_UNAVAILABLE = 503;</span><br><span class="line">int SC_GATEWAY_TIMEOUT = 504;</span><br><span class="line">int SC_HTTP_VERSION_NOT_SUPPORTED = 505;</span><br></pre></td></tr></table></figure><h2 id="下载文件"><a href="#下载文件" class="headerlink" title="下载文件"></a>下载文件</h2><ol><li>要获取下载文件的路径</li><li>下载的文件名是啥？</li><li>设置想办法让浏览器能够支持下载我们需要的东西 </li><li>获取下载文件的输入流 </li><li>创建缓冲区 </li><li>获取OutputStream对象</li><li>将FileOutputStream流写入到buffer缓冲区 </li><li>使用OutputStream将缓冲区中的数据输出到客户端！</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"><span class="comment">//1. 要获取下载文件的路径</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">realPath</span> <span class="operator">=</span> <span class="string">&quot;C:\\Users\\1\\Desktop\\fang\\java\\response\\target\\response-1.0-SNAPSHOT\\WEB-INF\\classes\\1.jpg&quot;</span>;</span><br><span class="line">    System.out.println(<span class="string">&quot;下载文件的路径：&quot;</span>+realPath);</span><br><span class="line"><span class="comment">//2. 下载的文件名是啥？</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">fileName</span> <span class="operator">=</span> realPath.substring(realPath.lastIndexOf(<span class="string">&quot;\\&quot;</span>)+<span class="number">1</span>);</span><br><span class="line"><span class="comment">//3. 设置想办法让浏览器能够支持下载我们需要的东西</span></span><br><span class="line">    resp.setHeader(<span class="string">&quot;Content-Disposition&quot;</span>,<span class="string">&quot;attachment;filename=&quot;</span>+ URLEncoder.encode(fileName,<span class="string">&quot;UTF-8&quot;</span>));</span><br><span class="line"><span class="comment">//4. 获取下载文件的输入流</span></span><br><span class="line">    <span class="type">FileInputStream</span> <span class="variable">in</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FileInputStream</span>(realPath);</span><br><span class="line"><span class="comment">//5. 创建缓冲区</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">len</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">byte</span>[] buffer = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">1024</span>];</span><br><span class="line"><span class="comment">//6. 获取OutputStream对象</span></span><br><span class="line">    <span class="type">ServletOutputStream</span> <span class="variable">out</span> <span class="operator">=</span> resp.getOutputStream();</span><br><span class="line"><span class="comment">//7. 将FileOutputStream流写入到buffer缓冲区,使用OutputStream将缓冲区中的数据输出到客户端！</span></span><br><span class="line">    <span class="keyword">while</span>((len = in.read(buffer))&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        out.write(buffer,<span class="number">0</span>,len);</span><br><span class="line">    &#125;</span><br><span class="line">    in.close();</span><br><span class="line">    out.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>自己配置映射</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;HttpServletResponse&quot;&gt;&lt;a href=&quot;#HttpServletResponse&quot; class=&quot;headerlink&quot; title=&quot;HttpServletResponse&quot;&gt;&lt;/a&gt;HttpServletResponse&lt;/h1&gt;&lt;p&gt;we</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>ServletContext应用</title>
    <link href="http://example.com/2022/04/18/ServletContext%E5%BA%94%E7%94%A8/"/>
    <id>http://example.com/2022/04/18/ServletContext%E5%BA%94%E7%94%A8/</id>
    <published>2022-04-18T07:18:08.000Z</published>
    <updated>2022-04-18T11:26:03.118Z</updated>
    
    <content type="html"><![CDATA[<h1 id="获取初始化参数"><a href="#获取初始化参数" class="headerlink" title="获取初始化参数"></a>获取初始化参数</h1><ul><li><p>在web.xml中设置参数</p></li><li><pre><code class="xml">&lt;context-param&gt;  &lt;param-name&gt;url&lt;/param-name&gt;  &lt;param-value&gt;jdbc:mysql://locallhost:3306/mybatis&lt;/param-value&gt;&lt;/context-param&gt;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 构建java类，用getInitParameter方法</span><br><span class="line"></span><br><span class="line">- ```java</span><br><span class="line">      protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;</span><br><span class="line">          ServletContext context = this.getServletContext();</span><br><span class="line">          String url = context.getInitParameter(&quot;url&quot;);</span><br><span class="line">          resp.getWriter().print(url);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>web.xml中设置映射</p></li><li><pre><code class="xml">&lt;servlet&gt;  &lt;servlet-name&gt;dm3&lt;/servlet-name&gt;  &lt;servlet-class&gt;com.fang.ServletDemon3&lt;/servlet-class&gt;&lt;/servlet&gt;&lt;servlet-mapping&gt;  &lt;servlet-name&gt;dm3&lt;/servlet-name&gt;  &lt;url-pattern&gt;/dm3&lt;/url-pattern&gt;&lt;/servlet-mapping&gt;<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 请求转发</span><br><span class="line"></span><br><span class="line">- 构建java类，用getRequestDispatcher方法，然后也设置映射</span><br><span class="line"></span><br><span class="line">- ```java</span><br><span class="line">  protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;</span><br><span class="line">      ServletContext context = this.getServletContext();</span><br><span class="line">      context.getRequestDispatcher(&quot;/dm3&quot;).forward(req,resp);</span><br><span class="line">  </span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></code></pre></li><li><p>下面图，上面是请求转发，下面是重定向<img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/18/5jYznyJFtqgwKLh.png"                      alt="image-20220418163455744"                ></p></li></ul><h1 id="读取资源文件"><a href="#读取资源文件" class="headerlink" title="读取资源文件"></a>读取资源文件</h1><ul><li><p>在java目录下新建properties</p></li><li><p>在resources目录下新建properties </p></li><li><p>发现：都被打包到了同一个路径下：classes，我们俗称这个路径为classpath: </p></li><li><p>思路：需要一个文件流；</p></li><li><p>我们新建文件db.properties</p></li><li><p>&#96;&#96;&#96;properties<br>username&#x3D;root12312<br>password&#x3D;zxczxczxc</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- 新建java类，自己设置映射吧</span><br><span class="line"></span><br><span class="line">- ```java</span><br><span class="line">  protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException &#123;</span><br><span class="line">      InputStream is = this.getServletContext().getResourceAsStream(&quot;WEB-INF/classes/db.properties&quot;);</span><br><span class="line">      Properties prop = new Properties();</span><br><span class="line">      prop.load(is);</span><br><span class="line">      String username = prop.getProperty(&quot;username&quot;);</span><br><span class="line">      String password = prop.getProperty(&quot;password&quot;);</span><br><span class="line">      resp.getWriter().print(username+&quot;:&quot;+password);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;获取初始化参数&quot;&gt;&lt;a href=&quot;#获取初始化参数&quot; class=&quot;headerlink&quot; title=&quot;获取初始化参数&quot;&gt;&lt;/a&gt;获取初始化参数&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在web.xml中设置参数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;pre&gt;&lt;code cl</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>两个简单Servlet互通</title>
    <link href="http://example.com/2022/04/18/%E4%B8%A4%E4%B8%AA%E7%AE%80%E5%8D%95Servlet%E4%BA%92%E9%80%9A/"/>
    <id>http://example.com/2022/04/18/%E4%B8%A4%E4%B8%AA%E7%AE%80%E5%8D%95Servlet%E4%BA%92%E9%80%9A/</id>
    <published>2022-04-18T02:36:56.000Z</published>
    <updated>2022-04-18T11:25:34.155Z</updated>
    
    <content type="html"><![CDATA[<p>web容器在启动的时候，它会为每个web程序都创建一个对应的ServletContext对象，它代表了当前的 web应用；&lt; &gt;   </p><blockquote><p>ServletContext共享数据：</p></blockquote><ul><li>在这个servlet中写数据</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.fang;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletContext;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">helloServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        <span class="type">ServletContext</span> <span class="variable">content</span> <span class="operator">=</span> <span class="built_in">this</span>.getServletContext();</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> <span class="string">&quot;胡歌&quot;</span>;</span><br><span class="line">        content.setAttribute(<span class="string">&quot;username&quot;</span>,username);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">        doGet(req, resp);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>在这个servlet中拿数据：</p></li><li><p>&#96;&#96;&#96;java<br>package com.fang;</p><p>import javax.servlet.ServletContext;<br>import javax.servlet.ServletException;<br>import javax.servlet.http.HttpServlet;<br>import javax.servlet.http.HttpServletRequest;<br>import javax.servlet.http.HttpServletResponse;<br>import java.io.IOException;</p><p>public class getServlet extends HttpServlet {<br>@Override<br>protected void doGet(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {<br>    ServletContext context &#x3D; this.getServletContext();<br>    String username &#x3D; (String) context.getAttribute(“username”);<br><br>    resp.setContentType(“text&#x2F;html”);<br>    resp.setCharacterEncoding(“utf-8”);<br>    resp.getWriter().print(“名字”+username);<br><br>}<br><br>@Override<br>protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {<br>    doGet(req, resp);<br>}<br>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">- web.xml设置映射</span><br><span class="line"></span><br><span class="line">- ```xml</span><br><span class="line">  &lt;!DOCTYPE web-app PUBLIC</span><br><span class="line">   &quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;</span><br><span class="line">   &quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot; &gt;</span><br><span class="line">  </span><br><span class="line">  &lt;web-app&gt;</span><br><span class="line">    &lt;servlet&gt;</span><br><span class="line">      &lt;servlet-name&gt;hello&lt;/servlet-name&gt;</span><br><span class="line">      &lt;servlet-class&gt;com.fang.helloServlet&lt;/servlet-class&gt;</span><br><span class="line">    &lt;/servlet&gt;</span><br><span class="line">    &lt;servlet-mapping&gt;</span><br><span class="line">      &lt;servlet-name&gt;hello&lt;/servlet-name&gt;</span><br><span class="line">      &lt;url-pattern&gt;/hello&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/servlet-mapping&gt;</span><br><span class="line">  </span><br><span class="line">    &lt;servlet&gt;</span><br><span class="line">      &lt;servlet-name&gt;getc&lt;/servlet-name&gt;</span><br><span class="line">      &lt;servlet-class&gt;com.fang.getServlet&lt;/servlet-class&gt;</span><br><span class="line">    &lt;/servlet&gt;</span><br><span class="line">    &lt;servlet-mapping&gt;</span><br><span class="line">      &lt;servlet-name&gt;getc&lt;/servlet-name&gt;</span><br><span class="line">      &lt;url-pattern&gt;/getc&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/servlet-mapping&gt;</span><br><span class="line">  &lt;/web-app&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;web容器在启动的时候，它会为每个web程序都创建一个对应的ServletContext对象，它代表了当前的 web应用；&amp;lt; &amp;gt;   &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ServletContext共享数据：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>Servlet原理</title>
    <link href="http://example.com/2022/04/15/Servlet%E5%8E%9F%E7%90%86/"/>
    <id>http://example.com/2022/04/15/Servlet%E5%8E%9F%E7%90%86/</id>
    <published>2022-04-15T08:37:23.000Z</published>
    <updated>2022-04-18T11:26:13.593Z</updated>
    
    <content type="html"><![CDATA[<p>Servlet是由Web服务器调用，web服务器在收到浏览器请求之后，会：<img                       lazyload                     src="/images/loading.svg"                     data-src="https://s2.loli.net/2022/04/15/TgwcIn4Vilamfz3.png"                      alt="image-20220415163826213"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Servlet是由Web服务器调用，web服务器在收到浏览器请求之后，会：&lt;img  
                     lazyload
                     src=&quot;/images/loading.svg&quot;
                </summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>新建的第一个helloServlet程序</title>
    <link href="http://example.com/2022/04/15/%E6%96%B0%E5%BB%BA%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAhelloServlet%E7%A8%8B%E5%BA%8F/"/>
    <id>http://example.com/2022/04/15/%E6%96%B0%E5%BB%BA%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AAhelloServlet%E7%A8%8B%E5%BA%8F/</id>
    <published>2022-04-15T04:08:53.000Z</published>
    <updated>2022-04-18T11:25:52.586Z</updated>
    
    <content type="html"><![CDATA[<p>先写一个HelloServlet.java</p><ul><li><p>可以再tomcat端口中的example找实例代码</p></li><li><p>&#96;&#96;&#96;java<br>import javax.servlet.ServletException;<br>import javax.servlet.http.HttpServlet;<br>import javax.servlet.http.HttpServletRequest;<br>import javax.servlet.http.HttpServletResponse;<br>import java.io.IOException;<br>import java.io.PrintWriter;</p><p>public class HelloServlet extends HttpServlet {<br>@Override<br>protected void doGet(HttpServletRequest req, HttpServletResponse response) throws ServletException, IOException {<br>    &#x2F;&#x2F;响应类型<br>    response.setContentType(“text&#x2F;html”);<br>    response.setCharacterEncoding(“utf-8”);<br>    &#x2F;&#x2F;获取响应的输出流<br>    PrintWriter out &#x3D; response.getWriter();<br>    out.println(“<html>“);<br>    out.println(“<head>“);<br>    out.println(“<title>Hello World!</title>“);<br>    out.println(“</head>“);<br>    out.println(“<body>“);<br>    out.println(“<h1>你好</h1>“);<br>    out.println(“</body>“);<br>    out.println(“</head>“);<br><br>}<br><br>@Override<br>protected void doPost(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {<br>    doGet(req, resp);<br>}<br>}</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">然后我们还要配置web.xml，编写Servlet的映射。为什么需要映射：我们写的是JAVA程序，但是要通过浏览器访问，而浏览器需要连接web服务器， 所以我们需要再web服务中注册我们写的Servlet，还需给他一个浏览器能够访问的路径；</span><br><span class="line"></span><br><span class="line">- ```xml</span><br><span class="line">  &lt;web-app&gt;</span><br><span class="line">    &lt;!--  web.xml是配置我们web的核心应用--&gt;</span><br><span class="line">    &lt;!--  注册servlet--&gt;</span><br><span class="line">    &lt;servlet&gt;</span><br><span class="line">      &lt;servlet-name&gt;helloServlet&lt;/servlet-name&gt;</span><br><span class="line">      &lt;servlet-class&gt;HelloServlet&lt;/servlet-class&gt;</span><br><span class="line">    &lt;/servlet&gt;</span><br><span class="line">  &lt;!--  一个servlet对应一个Mapping：映射--&gt;</span><br><span class="line">  &lt;servlet-mapping&gt;</span><br><span class="line">    &lt;servlet-name&gt;helloServlet&lt;/servlet-name&gt;</span><br><span class="line">    &lt;url-pattern&gt;/fang&lt;/url-pattern&gt;</span><br><span class="line">  &lt;/servlet-mapping&gt;</span><br><span class="line">  &lt;/web-app&gt;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;先写一个HelloServlet.java&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;可以再tomcat端口中的example找实例代码&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&amp;#96;&amp;#96;&amp;#96;java&lt;br&gt;import javax.servlet.ServletExcep</summary>
      
    
    
    
    
    <category term="JavaWeb" scheme="http://example.com/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>maven由于他的约定大于配置，可能会导致配置文件，无法被导出或者生效的问题</title>
    <link href="http://example.com/2022/04/15/maven%E7%94%B1%E4%BA%8E%E4%BB%96%E7%9A%84%E7%BA%A6%E5%AE%9A%E5%A4%A7%E4%BA%8E%E9%85%8D%E7%BD%AE%EF%BC%8C%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%AF%BC%E8%87%B4%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%8C%E6%97%A0%E6%B3%95%E8%A2%AB%E5%AF%BC%E5%87%BA%E6%88%96%E8%80%85%E7%94%9F%E6%95%88%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://example.com/2022/04/15/maven%E7%94%B1%E4%BA%8E%E4%BB%96%E7%9A%84%E7%BA%A6%E5%AE%9A%E5%A4%A7%E4%BA%8E%E9%85%8D%E7%BD%AE%EF%BC%8C%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%AF%BC%E8%87%B4%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%8C%E6%97%A0%E6%B3%95%E8%A2%AB%E5%AF%BC%E5%87%BA%E6%88%96%E8%80%85%E7%94%9F%E6%95%88%E7%9A%84%E9%97%AE%E9%A2%98/</id>
    <published>2022-04-15T01:29:54.000Z</published>
    <updated>2022-04-15T02:20:01.078Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--在build中配置resources，来防止我们资源导出失败的问题--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/resources<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.properties<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;</summary>
      
    
    
    
    
    <category term="遇到的问题" scheme="http://example.com/tags/%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    
  </entry>
  
</feed>
