<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2023-06-16T09:59:41.753Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java实习之RuoYi-Vue</title>
    <link href="http://example.com/2023/06/13/Java%E5%AE%9E%E4%B9%A0%E4%B9%8BRuoYi-Vue/"/>
    <id>http://example.com/2023/06/13/Java%E5%AE%9E%E4%B9%A0%E4%B9%8BRuoYi-Vue/</id>
    <published>2023-06-13T01:54:33.000Z</published>
    <updated>2023-06-16T09:59:41.753Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、后端在本地运行"><a href="#一、后端在本地运行" class="headerlink" title="一、后端在本地运行"></a>一、后端在本地运行</h1><h2 id="1-系统需求"><a href="#1-系统需求" class="headerlink" title="1.系统需求"></a>1.系统需求</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">JDK &gt;= 1.8 (推荐1.8版本)</span><br><span class="line">Mysql &gt;= 5.7.0 (推荐5.7版本)</span><br><span class="line">Redis &gt;= 3.0</span><br><span class="line">Maven &gt;= 3.0</span><br><span class="line">Node &gt;= 12</span><br></pre></td></tr></table></figure><h2 id="2-将项目导入IDEA"><a href="#2-将项目导入IDEA" class="headerlink" title="2.将项目导入IDEA"></a>2.将项目导入IDEA</h2><ol><li>新建数据库、新建查询，将RuoYi项目的sql中的quartz.sql和ry_20230223.sql导入新建的数据库中</li><li>修改ruoyi-admin\src\main\resources\application-druid.yml的数据库</li><li>再启动一个redis就能启动成功了（记得把Vue部分给分离出来哈）</li></ol><h2 id="3-项目结构"><a href="#3-项目结构" class="headerlink" title="3.项目结构"></a>3.项目结构</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">com.ruoyi     </span><br><span class="line">├── common            // 工具类</span><br><span class="line">│       └── annotation                    // 自定义注解</span><br><span class="line">│       └── config                        // 全局配置</span><br><span class="line">│       └── constant                      // 通用常量</span><br><span class="line">│       └── core                          // 核心控制</span><br><span class="line">│       └── enums                         // 通用枚举</span><br><span class="line">│       └── exception                     // 通用异常</span><br><span class="line">│       └── filter                        // 过滤器处理</span><br><span class="line">│       └── utils                         // 通用类处理</span><br><span class="line">├── framework         // 框架核心</span><br><span class="line">│       └── aspectj                       // 注解实现</span><br><span class="line">│       └── config                        // 系统配置</span><br><span class="line">│       └── datasource                    // 数据权限</span><br><span class="line">│       └── interceptor                   // 拦截器</span><br><span class="line">│       └── manager                       // 异步处理</span><br><span class="line">│       └── security                      // 权限控制</span><br><span class="line">│       └── web                           // 前端控制</span><br><span class="line">├── ruoyi-generator   // 代码生成（可移除）</span><br><span class="line">├── ruoyi-quartz      // 定时任务（可移除）</span><br><span class="line">├── ruoyi-system      // 系统代码</span><br><span class="line">├── ruoyi-admin       // 后台服务</span><br><span class="line">├── ruoyi-xxxxxx      // 其他模块</span><br></pre></td></tr></table></figure><h1 id="二、部署前端"><a href="#二、部署前端" class="headerlink" title="二、部署前端"></a>二、部署前端</h1><h2 id="1-将项目导入IDEA"><a href="#1-将项目导入IDEA" class="headerlink" title="1.将项目导入IDEA"></a>1.将项目导入IDEA</h2><ol><li>先在IDEA安装一个插件Vue.js</li><li>在安装一个依赖</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --registry=https://registry.npmmirror.com</span><br></pre></td></tr></table></figure><ol start="3"><li>接下来就可以启动package.json里面的dev了</li></ol><h2 id="2-项目结构"><a href="#2-项目结构" class="headerlink" title="2.项目结构"></a>2.项目结构</h2><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">├── build                      // 构建相关  </span><br><span class="line">├── bin                        // 执行脚本</span><br><span class="line">├── public                     // 公共文件</span><br><span class="line">│   ├── favicon.ico            // favicon图标</span><br><span class="line">│   └── index.html             // html模板</span><br><span class="line">│   └── robots.txt             // 反爬虫</span><br><span class="line">├── src                        // 源代码</span><br><span class="line">│   ├── api                    // 所有请求</span><br><span class="line">│   ├── assets                 // 主题 字体等静态资源</span><br><span class="line">│   ├── components             // 全局公用组件</span><br><span class="line">│   ├── directive              // 全局指令</span><br><span class="line">│   ├── layout                 // 布局</span><br><span class="line">│   ├── plugins                // 通用方法</span><br><span class="line">│   ├── router                 // 路由</span><br><span class="line">│   ├── store                  // 全局 store管理</span><br><span class="line">│   ├── utils                  // 全局公用方法</span><br><span class="line">│   ├── views                  // view</span><br><span class="line">│   ├── App.vue                // 入口页面</span><br><span class="line">│   ├── main.js                // 入口 加载组件 初始化等</span><br><span class="line">│   ├── permission.js          // 权限管理</span><br><span class="line">│   └── settings.js            // 系统配置</span><br><span class="line">├── .editorconfig              // 编码格式</span><br><span class="line">├── .env.development           // 开发环境配置</span><br><span class="line">├── .env.production            // 生产环境配置</span><br><span class="line">├── .env.staging               // 测试环境配置</span><br><span class="line">├── .eslintignore              // 忽略语法检查</span><br><span class="line">├── .eslintrc.js               // eslint 配置项</span><br><span class="line">├── .gitignore                 // git 忽略项</span><br><span class="line">├── babel.config.js            // babel.config.js</span><br><span class="line">├── package.json               // package.json</span><br><span class="line">└── vue.config.js              // vue.config.js</span><br></pre></td></tr></table></figure><h1 id="三、前端request-js对axios的封装理解和基本使用"><a href="#三、前端request-js对axios的封装理解和基本使用" class="headerlink" title="三、前端request.js对axios的封装理解和基本使用"></a>三、前端request.js对axios的封装理解和基本使用</h1><p>ruoyi的前端对axios进行了封装，让我们发get请求或者是post请求更加方便了。</p><p>ruoyi对axios的封装在下面文件中：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306131337178.png"                      alt="image-20230613133722299"                ></p><p>打开文件，可以看到它有三个显眼的方法，分别是request拦截器、response拦截器和通用下载方法。</p><h2 id="1-Get"><a href="#1-Get" class="headerlink" title="1.Get"></a>1.Get</h2><ul><li>request拦截器对我们发送的请求进行了封装，当我们发送Get请求，那么我们携带参数的时候应该用param。，对应下面的源码。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// get请求映射params参数</span></span><br><span class="line"><span class="keyword">if</span> (config.<span class="property">method</span> === <span class="string">&#x27;get&#x27;</span> &amp;&amp; config.<span class="property">params</span>) &#123;</span><br><span class="line">  <span class="keyword">let</span> url = config.<span class="property">url</span> + <span class="string">&#x27;?&#x27;</span> + <span class="title function_">tansParams</span>(config.<span class="property">params</span>);</span><br><span class="line">  url = url.<span class="title function_">slice</span>(<span class="number">0</span>, -<span class="number">1</span>);</span><br><span class="line">  config.<span class="property">params</span> = &#123;&#125;;</span><br><span class="line">  config.<span class="property">url</span> = url;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>通过此这简单的代码，可以让get请求自动变为我们熟悉的形式[<a href="http://xxxxx:port/aaa?key1=value1&amp;key2=value2]。">http://xxxxx:port/aaa?key1=value1&amp;key2=value2]。</a></p></li><li><p>看一个get请求的案例：</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取验证码 不带参数</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getCodeImg</span>(<span class="params"></span>) &#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">   <span class="attr">url</span>: <span class="string">&#x27;/captchaImage&#x27;</span>,</span><br><span class="line">   <span class="attr">headers</span>: &#123;</span><br><span class="line">     <span class="attr">isToken</span>: <span class="literal">false</span></span><br><span class="line">   &#125;,</span><br><span class="line">   <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">   <span class="attr">timeout</span>: <span class="number">20000</span></span><br><span class="line"> &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询在线用户列表 带参数</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">list</span>(<span class="params">query</span>) &#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">   <span class="attr">url</span>: <span class="string">&#x27;/monitor/online/list&#x27;</span>,</span><br><span class="line">   <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">   <span class="attr">params</span>: query</span><br><span class="line"> &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-Post"><a href="#2-Post" class="headerlink" title="2.Post"></a>2.Post</h2><ol><li>Post请求带参数使用data。并且以下代码规避了重复提交</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (!isRepeatSubmit &amp;&amp; (config.<span class="property">method</span> === <span class="string">&#x27;post&#x27;</span> || config.<span class="property">method</span> === <span class="string">&#x27;put&#x27;</span>)) &#123;</span><br><span class="line">  <span class="keyword">const</span> requestObj = &#123;</span><br><span class="line">    <span class="attr">url</span>: config.<span class="property">url</span>,</span><br><span class="line">    <span class="attr">data</span>: <span class="keyword">typeof</span> config.<span class="property">data</span> === <span class="string">&#x27;object&#x27;</span> ? <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(config.<span class="property">data</span>) : config.<span class="property">data</span>,</span><br><span class="line">    <span class="attr">time</span>: <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">getTime</span>()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">const</span> sessionObj = cache.<span class="property">session</span>.<span class="title function_">getJSON</span>(<span class="string">&#x27;sessionObj&#x27;</span>)</span><br><span class="line">  <span class="keyword">if</span> (sessionObj === <span class="literal">undefined</span> || sessionObj === <span class="literal">null</span> || sessionObj === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">    cache.<span class="property">session</span>.<span class="title function_">setJSON</span>(<span class="string">&#x27;sessionObj&#x27;</span>, requestObj)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> s_url = sessionObj.<span class="property">url</span>;                  <span class="comment">// 请求地址</span></span><br><span class="line">    <span class="keyword">const</span> s_data = sessionObj.<span class="property">data</span>;                <span class="comment">// 请求数据</span></span><br><span class="line">    <span class="keyword">const</span> s_time = sessionObj.<span class="property">time</span>;                <span class="comment">// 请求时间</span></span><br><span class="line">    <span class="keyword">const</span> interval = <span class="number">1000</span>;                         <span class="comment">// 间隔时间(ms)，小于此时间视为重复提交</span></span><br><span class="line">    <span class="keyword">if</span> (s_data === requestObj.<span class="property">data</span> &amp;&amp; requestObj.<span class="property">time</span> - s_time &lt; interval &amp;&amp; s_url === requestObj.<span class="property">url</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> message = <span class="string">&#x27;数据正在处理，请勿重复提交&#x27;</span>;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">`[<span class="subst">$&#123;s_url&#125;</span>]: `</span> + message)</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(message))</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      cache.<span class="property">session</span>.<span class="title function_">setJSON</span>(<span class="string">&#x27;sessionObj&#x27;</span>, requestObj)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-预防重复提交开关"><a href="#3-预防重复提交开关" class="headerlink" title="3.预防重复提交开关"></a>3.预防重复提交开关</h2><ul><li>就是在请求头处设置repeatSubmit为false还是不加repeatSubmit</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 是否需要防止数据重复提交</span></span><br><span class="line"><span class="keyword">const</span> isRepeatSubmit = (config.<span class="property">headers</span> || &#123;&#125;).<span class="property">repeatSubmit</span> === <span class="literal">false</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_">getToken</span>() &amp;&amp; !isToken) &#123;</span><br><span class="line">  config.<span class="property">headers</span>[<span class="string">&#x27;Authorization&#x27;</span>] = <span class="string">&#x27;Bearer &#x27;</span> + <span class="title function_">getToken</span>() <span class="comment">// 让每个请求携带自定义token 请根据实际情况自行修改</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-响应拦截器"><a href="#4-响应拦截器" class="headerlink" title="4.响应拦截器"></a>4.响应拦截器</h2><ul><li>用于每一个响应的拦截过滤处理。对不同状态码进行判断给出处理逻辑，并不是特别重要。</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 响应拦截器</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="comment">// 未设置状态码则默认成功状态</span></span><br><span class="line">    <span class="keyword">const</span> code = res.<span class="property">data</span>.<span class="property">code</span> || <span class="number">200</span>;</span><br><span class="line">    <span class="comment">// 获取错误信息</span></span><br><span class="line">    <span class="keyword">const</span> msg = errorCode[code] || res.<span class="property">data</span>.<span class="property">msg</span> || errorCode[<span class="string">&#x27;default&#x27;</span>]</span><br><span class="line">    <span class="comment">// 二进制数据则直接返回</span></span><br><span class="line">    <span class="keyword">if</span> (res.<span class="property">request</span>.<span class="property">responseType</span> ===  <span class="string">&#x27;blob&#x27;</span> || res.<span class="property">request</span>.<span class="property">responseType</span> ===  <span class="string">&#x27;arraybuffer&#x27;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="property">data</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (code === <span class="number">401</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!isRelogin.<span class="property">show</span>) &#123;</span><br><span class="line">        isRelogin.<span class="property">show</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="title class_">MessageBox</span>.<span class="title function_">confirm</span>(<span class="string">&#x27;登录状态已过期，您可以继续留在该页面，或者重新登录&#x27;</span>, <span class="string">&#x27;系统提示&#x27;</span>, &#123; <span class="attr">confirmButtonText</span>: <span class="string">&#x27;重新登录&#x27;</span>, <span class="attr">cancelButtonText</span>: <span class="string">&#x27;取消&#x27;</span>, <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span> &#125;).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">          isRelogin.<span class="property">show</span> = <span class="literal">false</span>;</span><br><span class="line">          store.<span class="title function_">dispatch</span>(<span class="string">&#x27;LogOut&#x27;</span>).<span class="title function_">then</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            location.<span class="property">href</span> = <span class="string">&#x27;/index&#x27;</span>;</span><br><span class="line">          &#125;)</span><br><span class="line">      &#125;).<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        isRelogin.<span class="property">show</span> = <span class="literal">false</span>;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="string">&#x27;无效的会话，或者会话已过期，请重新登录。&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (code === <span class="number">500</span>) &#123;</span><br><span class="line">      <span class="title class_">Message</span>(&#123; <span class="attr">message</span>: msg, <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span> &#125;)</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(msg))</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (code === <span class="number">601</span>) &#123;</span><br><span class="line">      <span class="title class_">Message</span>(&#123; <span class="attr">message</span>: msg, <span class="attr">type</span>: <span class="string">&#x27;warning&#x27;</span> &#125;)</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="string">&#x27;error&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (code !== <span class="number">200</span>) &#123;</span><br><span class="line">      <span class="title class_">Notification</span>.<span class="title function_">error</span>(&#123; <span class="attr">title</span>: msg &#125;)</span><br><span class="line">      <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="string">&#x27;error&#x27;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> res.<span class="property">data</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;err&#x27;</span> + error)</span><br><span class="line">    <span class="keyword">let</span> &#123; message &#125; = error;</span><br><span class="line">    <span class="keyword">if</span> (message == <span class="string">&quot;Network Error&quot;</span>) &#123;</span><br><span class="line">      message = <span class="string">&quot;后端接口连接异常&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (message.<span class="title function_">includes</span>(<span class="string">&quot;timeout&quot;</span>)) &#123;</span><br><span class="line">      message = <span class="string">&quot;系统接口请求超时&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (message.<span class="title function_">includes</span>(<span class="string">&quot;Request failed with status code&quot;</span>)) &#123;</span><br><span class="line">      message = <span class="string">&quot;系统接口&quot;</span> + message.<span class="title function_">substr</span>(message.<span class="property">length</span> - <span class="number">3</span>) + <span class="string">&quot;异常&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title class_">Message</span>(&#123; <span class="attr">message</span>: message, <span class="attr">type</span>: <span class="string">&#x27;error&#x27;</span>, <span class="attr">duration</span>: <span class="number">5</span> * <span class="number">1000</span> &#125;)</span><br><span class="line">    <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(error)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="5-通用下载方法前段代码"><a href="#5-通用下载方法前段代码" class="headerlink" title="5.通用下载方法前段代码"></a>5.通用下载方法前段代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通用下载方法</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">download</span>(<span class="params">url, params, filename, config</span>) &#123;</span><br><span class="line">  downloadLoadingInstance = <span class="title class_">Loading</span>.<span class="title function_">service</span>(&#123; <span class="attr">text</span>: <span class="string">&quot;正在下载数据，请稍候&quot;</span>, <span class="attr">spinner</span>: <span class="string">&quot;el-icon-loading&quot;</span>, <span class="attr">background</span>: <span class="string">&quot;rgba(0, 0, 0, 0.7)&quot;</span>, &#125;)</span><br><span class="line">  <span class="keyword">return</span> service.<span class="title function_">post</span>(url, params, &#123;</span><br><span class="line">    <span class="attr">transformRequest</span>: [<span class="function">(<span class="params">params</span>) =&gt;</span> &#123; <span class="keyword">return</span> <span class="title function_">tansParams</span>(params) &#125;],</span><br><span class="line">    <span class="attr">headers</span>: &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/x-www-form-urlencoded&#x27;</span> &#125;,</span><br><span class="line">    <span class="attr">responseType</span>: <span class="string">&#x27;blob&#x27;</span>,</span><br><span class="line">    ...config</span><br><span class="line">  &#125;).<span class="title function_">then</span>(<span class="keyword">async</span> (data) =&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> isBlob = <span class="title function_">blobValidate</span>(data);</span><br><span class="line">    <span class="keyword">if</span> (isBlob) &#123;</span><br><span class="line">      <span class="keyword">const</span> blob = <span class="keyword">new</span> <span class="title class_">Blob</span>([data])</span><br><span class="line">      <span class="title function_">saveAs</span>(blob, filename)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> resText = <span class="keyword">await</span> data.<span class="title function_">text</span>();</span><br><span class="line">      <span class="keyword">const</span> rspObj = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(resText);</span><br><span class="line">      <span class="keyword">const</span> errMsg = errorCode[rspObj.<span class="property">code</span>] || rspObj.<span class="property">msg</span> || errorCode[<span class="string">&#x27;default&#x27;</span>]</span><br><span class="line">      <span class="title class_">Message</span>.<span class="title function_">error</span>(errMsg);</span><br><span class="line">    &#125;</span><br><span class="line">    downloadLoadingInstance.<span class="title function_">close</span>();</span><br><span class="line">  &#125;).<span class="title function_">catch</span>(<span class="function">(<span class="params">r</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(r)</span><br><span class="line">    <span class="title class_">Message</span>.<span class="title function_">error</span>(<span class="string">&#x27;下载文件出现错误，请联系管理员！&#x27;</span>)</span><br><span class="line">    downloadLoadingInstance.<span class="title function_">close</span>();</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>将该方法在main.js全局方法中挂载</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">download</span> = download</span><br></pre></td></tr></table></figure><ul><li>就可以使用了，比如说字典查询处</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** 导出按钮操作 */</span></span><br><span class="line"><span class="title function_">handleExport</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="variable language_">this</span>.<span class="title function_">download</span>(<span class="string">&#x27;system/dict/type/export&#x27;</span>, &#123;</span><br><span class="line">    ...<span class="variable language_">this</span>.<span class="property">queryParams</span></span><br><span class="line">  &#125;, <span class="string">`type_<span class="subst">$&#123;<span class="keyword">new</span> <span class="built_in">Date</span>().getTime()&#125;</span>.xlsx`</span>)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h1 id="四-在线用户展示-仅仅从Redis取一下数据做展示"><a href="#四-在线用户展示-仅仅从Redis取一下数据做展示" class="headerlink" title="四.在线用户展示-仅仅从Redis取一下数据做展示"></a>四.在线用户展示-仅仅从Redis取一下数据做展示</h1><ul><li>这个在线用户的功能怎么实现的呢？<ul><li>ruoyi的在线用户存在redis中的，每次一个人登录，就会把他的登录信息存在redis中，当我们去查询在线用户，无非就是去redis中取一下有哪一些用户罢了！</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PreAuthorize(&quot;@ss.hasPermi(&#x27;monitor:online:list&#x27;)&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/list&quot;)</span></span><br><span class="line"><span class="keyword">public</span> TableDataInfo <span class="title function_">list</span><span class="params">(String ipaddr, String userName)</span></span><br><span class="line">&#123;</span><br><span class="line">    Collection&lt;String&gt; keys = redisCache.keys(CacheConstants.LOGIN_TOKEN_KEY + <span class="string">&quot;*&quot;</span>);</span><br><span class="line">    List&lt;SysUserOnline&gt; userOnlineList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;SysUserOnline&gt;();</span><br><span class="line">    <span class="keyword">for</span> (String key : keys)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">LoginUser</span> <span class="variable">user</span> <span class="operator">=</span> redisCache.getCacheObject(key);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(ipaddr) &amp;&amp; StringUtils.isNotEmpty(userName))</span><br><span class="line">        &#123;</span><br><span class="line">            userOnlineList.add(userOnlineService.selectOnlineByInfo(ipaddr, userName, user));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (StringUtils.isNotEmpty(ipaddr))</span><br><span class="line">        &#123;</span><br><span class="line">            userOnlineList.add(userOnlineService.selectOnlineByIpaddr(ipaddr, user));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (StringUtils.isNotEmpty(userName) &amp;&amp; StringUtils.isNotNull(user.getUser()))</span><br><span class="line">        &#123;</span><br><span class="line">            userOnlineList.add(userOnlineService.selectOnlineByUserName(userName, user));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            userOnlineList.add(userOnlineService.loginUserToUserOnline(user));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Collections.reverse(userOnlineList);</span><br><span class="line">    userOnlineList.removeAll(Collections.singleton(<span class="literal">null</span>));</span><br><span class="line">    <span class="keyword">return</span> getDataTable(userOnlineList);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="五、登录的时候用户信息存入redis代码在哪"><a href="#五、登录的时候用户信息存入redis代码在哪" class="headerlink" title="五、登录的时候用户信息存入redis代码在哪"></a>五、登录的时候用户信息存入redis代码在哪</h1><ul><li>那么他又是怎么将登陆信息存到redis里面呢，首先在SysLoginService里面的login，返回处调用TokenService生成token方法，createToken里面包含一个refreshToken方法，该方法里面调用RedisCache生成缓存对象方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 生成token</span></span><br><span class="line"><span class="keyword">return</span> tokenService.createToken(loginUser);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">refreshToken(loginUser);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 刷新令牌有效期</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> loginUser 登录信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">refreshToken</span><span class="params">(LoginUser loginUser)</span></span><br><span class="line">&#123;</span><br><span class="line">    loginUser.setLoginTime(System.currentTimeMillis());</span><br><span class="line">    loginUser.setExpireTime(loginUser.getLoginTime() + expireTime * MILLIS_MINUTE);</span><br><span class="line">    <span class="comment">// 根据uuid将loginUser缓存</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">userKey</span> <span class="operator">=</span> getTokenKey(loginUser.getToken());</span><br><span class="line">    redisCache.setCacheObject(userKey, loginUser, expireTime, TimeUnit.MINUTES);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 缓存基本的对象，Integer、String、实体类等</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key 缓存的键值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value 缓存的值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> timeout 时间</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> timeUnit 时间颗粒度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> &lt;T&gt; <span class="keyword">void</span> <span class="title function_">setCacheObject</span><span class="params">(<span class="keyword">final</span> String key, <span class="keyword">final</span> T value, <span class="keyword">final</span> Integer timeout, <span class="keyword">final</span> TimeUnit timeUnit)</span></span><br><span class="line">&#123;</span><br><span class="line">    redisTemplate.opsForValue().set(key, value, timeout, timeUnit);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="六、强退用户"><a href="#六、强退用户" class="headerlink" title="六、强退用户"></a>六、强退用户</h1><ol><li>就是用了SysUserOnlineController中的forceLogout方法，调用了reids中的删除用户方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 强退用户</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PreAuthorize(&quot;@ss.hasPermi(&#x27;monitor:online:forceLogout&#x27;)&quot;)</span></span><br><span class="line"><span class="meta">@Log(title = &quot;在线用户&quot;, businessType = BusinessType.FORCE)</span></span><br><span class="line"><span class="meta">@DeleteMapping(&quot;/&#123;tokenId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> AjaxResult <span class="title function_">forceLogout</span><span class="params">(<span class="meta">@PathVariable</span> String tokenId)</span></span><br><span class="line">&#123;</span><br><span class="line">    redisCache.deleteObject(CacheConstants.LOGIN_TOKEN_KEY + tokenId);</span><br><span class="line">    <span class="keyword">return</span> success();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除单个对象</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> key</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">deleteObject</span><span class="params">(<span class="keyword">final</span> String key)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> redisTemplate.delete(key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="七、下载字典类型后端三句话在做啥"><a href="#七、下载字典类型后端三句话在做啥" class="headerlink" title="七、下载字典类型后端三句话在做啥"></a>七、下载字典类型后端三句话在做啥</h1><ol><li>在SysDictTypeController中</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Log(title = &quot;字典类型&quot;, businessType = BusinessType.EXPORT)</span></span><br><span class="line"><span class="meta">@PreAuthorize(&quot;@ss.hasPermi(&#x27;system:dict:export&#x27;)&quot;)</span></span><br><span class="line"><span class="meta">@PostMapping(&quot;/export&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">export</span><span class="params">(HttpServletResponse response, SysDictType dictType)</span></span><br><span class="line">&#123;</span><br><span class="line">    List&lt;SysDictType&gt; list = dictTypeService.selectDictTypeList(dictType);</span><br><span class="line">    ExcelUtil&lt;SysDictType&gt; util = <span class="keyword">new</span> <span class="title class_">ExcelUtil</span>&lt;SysDictType&gt;(SysDictType.class);</span><br><span class="line">    util.exportExcel(response, list, <span class="string">&quot;字典类型&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>response：是用來返回給前端的，可以让前端接收数据</li><li>list：用来存搜索出来的对象</li><li>util的exportExcel方法就可以导出excel</li></ul><h1 id="八、前端向后端传参的方式"><a href="#八、前端向后端传参的方式" class="headerlink" title="八、前端向后端传参的方式"></a>八、前端向后端传参的方式</h1><p>本节课主要讲述ruoyi中存在的restful风格在路径中传参和直接通过get或post携带的param、data传参。</p><h2 id="1-RESTful"><a href="#1-RESTful" class="headerlink" title="1.RESTful"></a>1.RESTful</h2><ul><li>以参数管理为例子，用过configId查询它用到了restful风格的传参方式：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询字典数据详细</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PreAuthorize(&quot;@ss.hasPermi(&#x27;system:dict:query&#x27;)&quot;)</span></span><br><span class="line"><span class="meta">@GetMapping(value = &quot;/&#123;dictCode&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> AjaxResult <span class="title function_">getInfo</span><span class="params">(<span class="meta">@PathVariable</span> Long dictCode)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> success(dictDataService.selectDictDataById(dictCode));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>以上的&#x2F;{configId}就是一种在路径中传参数的例子。</li></ul><h2 id="2-普通方式"><a href="#2-普通方式" class="headerlink" title="2.普通方式"></a>2.普通方式</h2><blockquote><p>第二种直接在get的param中写，或者在post的data中写即可。</p></blockquote><h1 id="九、开关原理（验证码开关、IP开关）"><a href="#九、开关原理（验证码开关、IP开关）" class="headerlink" title="九、开关原理（验证码开关、IP开关）"></a>九、开关原理（验证码开关、IP开关）</h1><h2 id="1-开关原理（验证码开关）"><a href="#1-开关原理（验证码开关）" class="headerlink" title="1.开关原理（验证码开关）"></a>1.开关原理（验证码开关）</h2><p>我们打开页面“参数管理”，所谓参数管理，就是在系统运行起来的时候，可以动态修改一些值，这些值会被系统实时修改，下次如果需要读值，则会是最新的值。</p><p>对于验证码而言，可以将下面的参数值修改为false即可：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306141011541.png"                      alt="image-20230614101121134"                ></p><ul><li>前端login.vue关键代码：主要就是这个v-if</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-form-item prop=&quot;code&quot; v-if=&quot;captchaEnabled&quot;&gt;</span><br><span class="line">  &lt;el-input</span><br><span class="line">    v-model=&quot;loginForm.code&quot;</span><br><span class="line">    auto-complete=&quot;off&quot;</span><br><span class="line">    placeholder=&quot;验证码&quot;</span><br><span class="line">    style=&quot;width: 63%&quot;</span><br><span class="line">    @keyup.enter.native=&quot;handleLogin&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;svg-icon slot=&quot;prefix&quot; icon-class=&quot;validCode&quot; class=&quot;el-input__icon input-icon&quot; /&gt;</span><br><span class="line">  &lt;/el-input&gt;</span><br><span class="line">  &lt;div class=&quot;login-code&quot;&gt;</span><br><span class="line">    &lt;img :src=&quot;codeUrl&quot; @click=&quot;getCode&quot; class=&quot;login-code-img&quot;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/el-form-item&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">getCode</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="title function_">getCodeImg</span>().<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">captchaEnabled</span> = res.<span class="property">captchaEnabled</span> === <span class="literal">undefined</span> ? <span class="literal">true</span> : res.<span class="property">captchaEnabled</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable language_">this</span>.<span class="property">captchaEnabled</span>) &#123;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">codeUrl</span> = <span class="string">&quot;data:image/gif;base64,&quot;</span> + res.<span class="property">img</span>;</span><br><span class="line">      <span class="variable language_">this</span>.<span class="property">loginForm</span>.<span class="property">uuid</span> = res.<span class="property">uuid</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>CaptchaController后端关键代码：获取数据先从Redis（程序开始就存到了Redis中）中获取，如果Reids获取不到就在数据库中获取</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成验证码</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;/captchaImage&quot;)</span></span><br><span class="line"><span class="keyword">public</span> AjaxResult <span class="title function_">getCode</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> IOException</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">AjaxResult</span> <span class="variable">ajax</span> <span class="operator">=</span> AjaxResult.success();</span><br><span class="line">    <span class="comment">//主要就靠这句话获取是false还是true</span></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">captchaEnabled</span> <span class="operator">=</span> configService.selectCaptchaEnabled();</span><br><span class="line">    ajax.put(<span class="string">&quot;captchaEnabled&quot;</span>, captchaEnabled);</span><br><span class="line">    <span class="keyword">if</span> (!captchaEnabled)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> ajax;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 保存验证码信息</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">uuid</span> <span class="operator">=</span> IdUtils.simpleUUID();</span><br><span class="line">    <span class="type">String</span> <span class="variable">verifyKey</span> <span class="operator">=</span> CacheConstants.CAPTCHA_CODE_KEY + uuid;</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">capStr</span> <span class="operator">=</span> <span class="literal">null</span>, code = <span class="literal">null</span>;</span><br><span class="line">    <span class="type">BufferedImage</span> <span class="variable">image</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 生成验证码</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">captchaType</span> <span class="operator">=</span> RuoYiConfig.getCaptchaType();</span><br><span class="line">    <span class="keyword">if</span> (<span class="string">&quot;math&quot;</span>.equals(captchaType))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">capText</span> <span class="operator">=</span> captchaProducerMath.createText();</span><br><span class="line">        capStr = capText.substring(<span class="number">0</span>, capText.lastIndexOf(<span class="string">&quot;@&quot;</span>));</span><br><span class="line">        code = capText.substring(capText.lastIndexOf(<span class="string">&quot;@&quot;</span>) + <span class="number">1</span>);</span><br><span class="line">        image = captchaProducerMath.createImage(capStr);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;char&quot;</span>.equals(captchaType))</span><br><span class="line">    &#123;</span><br><span class="line">        capStr = code = captchaProducer.createText();</span><br><span class="line">        image = captchaProducer.createImage(capStr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    redisCache.setCacheObject(verifyKey, code, Constants.CAPTCHA_EXPIRATION, TimeUnit.MINUTES);</span><br><span class="line">    <span class="comment">// 转换流信息写出</span></span><br><span class="line">    <span class="type">FastByteArrayOutputStream</span> <span class="variable">os</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">FastByteArrayOutputStream</span>();</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        ImageIO.write(image, <span class="string">&quot;jpg&quot;</span>, os);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (IOException e)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> AjaxResult.error(e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ajax.put(<span class="string">&quot;uuid&quot;</span>, uuid);</span><br><span class="line">    ajax.put(<span class="string">&quot;img&quot;</span>, Base64.encode(os.toByteArray()));</span><br><span class="line">    <span class="keyword">return</span> ajax;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>怎么程序一启动就自动存到了Redis中呢？是通过一个注解</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 项目启动时，初始化参数到缓存</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@PostConstruct</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">init</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    loadingConfigCache();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>参数配置还能改用户初始密码和是否允许注册</li></ul><h2 id="2-开关原理（IP开关）"><a href="#2-开关原理（IP开关）" class="headerlink" title="2.开关原理（IP开关）"></a>2.开关原理（IP开关）</h2><ul><li>上一种验证码开关是在参数设置里面设置的，随着程序运行之后，也能随时改。主要通过redis实现。</li><li>那么，IP开关呢？IP开关在YML，主要是用来看日志的时候能不能看到公网IP。</li><li><strong>IP开关通过YML文件中写死实现，也就是说，一旦程序启动，就改不了了。</strong></li></ul><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 项目相关配置</span></span><br><span class="line"><span class="attr">ruoyi:</span></span><br><span class="line">  <span class="comment"># 获取ip地址开关</span></span><br><span class="line">  <span class="attr">addressEnabled:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><ul><li>通过AddressUtils这个来根据IP地址查询所在地</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ruoyi.common.utils.ip;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson2.JSON;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson2.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.config.RuoYiConfig;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.constant.Constants;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.http.HttpUtils;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取地址类</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AddressUtils</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">log</span> <span class="operator">=</span> LoggerFactory.getLogger(AddressUtils.class);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// IP地址查询</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">IP_URL</span> <span class="operator">=</span> <span class="string">&quot;http://whois.pconline.com.cn/ipJson.jsp&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 未知地址</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">UNKNOWN</span> <span class="operator">=</span> <span class="string">&quot;XX XX&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getRealAddressByIP</span><span class="params">(String ip)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 内网不查询</span></span><br><span class="line">        <span class="keyword">if</span> (IpUtils.internalIp(ip))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;内网IP&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (RuoYiConfig.isAddressEnabled())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">String</span> <span class="variable">rspStr</span> <span class="operator">=</span> HttpUtils.sendGet(IP_URL, <span class="string">&quot;ip=&quot;</span> + ip + <span class="string">&quot;&amp;json=true&quot;</span>, Constants.GBK);</span><br><span class="line">                <span class="keyword">if</span> (StringUtils.isEmpty(rspStr))</span><br><span class="line">                &#123;</span><br><span class="line">                    log.error(<span class="string">&quot;获取地理位置异常 &#123;&#125;&quot;</span>, ip);</span><br><span class="line">                    <span class="keyword">return</span> UNKNOWN;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="type">JSONObject</span> <span class="variable">obj</span> <span class="operator">=</span> JSON.parseObject(rspStr);</span><br><span class="line">                <span class="type">String</span> <span class="variable">region</span> <span class="operator">=</span> obj.getString(<span class="string">&quot;pro&quot;</span>);</span><br><span class="line">                <span class="type">String</span> <span class="variable">city</span> <span class="operator">=</span> obj.getString(<span class="string">&quot;city&quot;</span>);</span><br><span class="line">                <span class="keyword">return</span> String.format(<span class="string">&quot;%s %s&quot;</span>, region, city);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception e)</span><br><span class="line">            &#123;</span><br><span class="line">                log.error(<span class="string">&quot;获取地理位置异常 &#123;&#125;&quot;</span>, ip);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> UNKNOWN;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在线用户的地址IP转location也是登录的时候创建令牌中setUserAgent方法干的，并且30分钟掉线是在yml中设置的</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 创建令牌</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> loginUser 用户信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 令牌</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">createToken</span><span class="params">(LoginUser loginUser)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> IdUtils.fastUUID();</span><br><span class="line">    loginUser.setToken(token);</span><br><span class="line">    setUserAgent(loginUser);</span><br><span class="line">    refreshToken(loginUser);</span><br><span class="line"></span><br><span class="line">    Map&lt;String, Object&gt; claims = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    claims.put(Constants.LOGIN_USER_KEY, token);</span><br><span class="line">    <span class="keyword">return</span> createToken(claims);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># token配置</span></span><br><span class="line"><span class="attr">token:</span></span><br><span class="line">    <span class="comment"># 令牌自定义标识</span></span><br><span class="line">    <span class="attr">header:</span> <span class="string">Authorization</span></span><br><span class="line">    <span class="comment"># 令牌密钥</span></span><br><span class="line">    <span class="attr">secret:</span> <span class="string">abcdefghijklmnopqrstuvwxyz</span></span><br><span class="line">    <span class="comment"># 令牌有效期（默认30分钟）</span></span><br><span class="line">    <span class="attr">expireTime:</span> <span class="number">30</span></span><br></pre></td></tr></table></figure><h1 id="十、前端页面的布局详解"><a href="#十、前端页面的布局详解" class="headerlink" title="十、前端页面的布局详解"></a>十、前端页面的布局详解</h1><h2 id="1-Vue-Devtools工具安装"><a href="#1-Vue-Devtools工具安装" class="headerlink" title="1.Vue-Devtools工具安装"></a>1.Vue-Devtools工具安装</h2><ul><li>在谷歌商店中添加插件</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306141440219.png"                      alt="image-20230614144016984"                ></p><h2 id="2-前端页面的布局"><a href="#2-前端页面的布局" class="headerlink" title="2.前端页面的布局"></a>2.前端页面的布局</h2><h3 id="情况一：不依赖Layout的情况"><a href="#情况一：不依赖Layout的情况" class="headerlink" title="情况一：不依赖Layout的情况"></a>情况一：不依赖Layout的情况</h3><ul><li>ruoyi的前端页面目前存在两种情况，一种是依赖layout组件，一种是不依赖layout组件。</li><li>比如说登录页面，注册页面，404页面就不依赖于layout组件，layout组件实际上就是一个vue的组件。</li><li>这种组件比较简单，就是跟写HTML基本也没啥两样。</li><li>关于login.vue页面的对应组件树如下：用的就是<a class="link"   href="https://element.eleme.cn/#/zh-CN/component/installation%E8%BF%99%E9%87%8C%E9%9D%A2%E7%9A%84%E7%BB%84%E4%BB%B6" >https://element.eleme.cn/#/zh-CN/component/installation这里面的组件<i class="fas fa-external-link-alt"></i></a></li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306141507353.png"                      alt="图片"                ></p><h3 id="情况二：依赖Layout组件"><a href="#情况二：依赖Layout组件" class="headerlink" title="情况二：依赖Layout组件"></a>情况二：依赖Layout组件</h3><ul><li>当我们成功登录，接下来基本上每一个页面都是出于Layout组件之下，也就是说，它是layout组件的子组件！</li><li>当我们登录之后，会自动到首页</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306141529090.png"                      alt="图片"                ></p><ul><li>Sidebar：对应左边菜单区。</li><li>Navbar：导航区。</li><li>TagsView：页签区。</li><li>RightPanel：右面板区，平常不可见。</li><li>AppMain：内容页面区，我们一般业务页面会出现在此区域。</li></ul><h1 id="十一、天气小案例"><a href="#十一、天气小案例" class="headerlink" title="十一、天气小案例"></a>十一、天气小案例</h1><h2 id="1-新增带Layout组件的页面"><a href="#1-新增带Layout组件的页面" class="headerlink" title="1.新增带Layout组件的页面"></a>1.新增带Layout组件的页面</h2><ul><li><p>直接在views文件夹下面新增weather.vue。然后随便写一个123，现在先让我们页面能跳过去先。</p></li><li><p>让页面能跳过去，有好几种方法：</p><ul><li>在菜单管理自己添加一个菜单，然后把菜单分配给某个角色，再把该角色分给某个人。【然而超级管理员什么时候都能看到此菜单，因为超级管理员能无视一切权限问题】</li><li>在路由文件（router&#x2F;index.js直接写相关路由），然后可以手动切换浏览器网址进入该路由。</li></ul></li><li><p>本次例子利用使用自己添加菜单的方法，这样比较简单。简单如下图：</p></li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306141711219.png"                      alt="image-20230614171107830"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306141715722.png"                      alt="image-20230614171559529"                ></p><ul><li>组件路径一定要写对，写不对直接进不去相应的组件。路由地址可以乱写，但是起码也要有点“path”的样子</li></ul><h2 id="2-专注weather业务"><a href="#2-专注weather业务" class="headerlink" title="2.专注weather业务"></a>2.专注weather业务</h2><ol><li>首先weather.vue文件的代码如下：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-loading=&quot;loading&quot;&gt;</span><br><span class="line">    &lt;el-row style=&quot;margin-top: 30px;&quot; :gutter=&quot;20&quot;&gt;</span><br><span class="line">      &lt;el-col :offset=&quot;10&quot; :span=&quot;4&quot;&gt;</span><br><span class="line">        &lt;el-button type=&quot;success&quot; @click=&quot;handleWeather&quot;&gt;当前城市天气&lt;/el-button&gt;</span><br><span class="line">      &lt;/el-col&gt;</span><br><span class="line">    &lt;/el-row&gt;</span><br><span class="line">    &lt;el-row :gutter=&quot;20&quot; v-if=&quot;city.length&gt;0&quot;&gt;</span><br><span class="line">      &lt;el-col :offset=&quot;2&quot; :span=&quot;20&quot;&gt;</span><br><span class="line">        &lt;el-descriptions title=&quot;当前实时天气&quot;&gt;</span><br><span class="line">          &lt;el-descriptions-item label=&quot;当前城市&quot;&gt;&#123;&#123; city &#125;&#125;&lt;/el-descriptions-item&gt;</span><br><span class="line">          &lt;el-descriptions-item label=&quot;温度&quot;&gt;&#123;&#123; weather.realtime.temperature &#125;&#125;℃&lt;/el-descriptions-item&gt;</span><br><span class="line">          &lt;el-descriptions-item label=&quot;风向&quot;&gt;&#123;&#123; weather.realtime.direct &#125;&#125;&lt;/el-descriptions-item&gt;</span><br><span class="line">          &lt;el-descriptions-item label=&quot;风力&quot;&gt;&#123;&#123; weather.realtime.power &#125;&#125;&lt;/el-descriptions-item&gt;</span><br><span class="line">          &lt;el-descriptions-item label=&quot;湿度&quot;&gt;&#123;&#123; weather.realtime.humidity &#125;&#125;%&lt;/el-descriptions-item&gt;</span><br><span class="line">          &lt;el-descriptions-item label=&quot;天气状况&quot;&gt;&#123;&#123; weather.realtime.info &#125;&#125;&lt;/el-descriptions-item&gt;</span><br><span class="line">        &lt;/el-descriptions&gt;</span><br><span class="line">      &lt;/el-col&gt;</span><br><span class="line">    &lt;/el-row&gt;</span><br><span class="line">    &lt;el-row v-for=&quot;item in weather.future&quot; :key=&quot;item.date&quot; style=&quot;margin-top: 30px;&quot; :gutter=&quot;20&quot;&gt;</span><br><span class="line">      &lt;el-col :offset=&quot;2&quot; :span=&quot;20&quot;&gt;</span><br><span class="line">        &lt;el-descriptions :title=&quot;item.date&quot; :column=&quot;4&quot;&gt;</span><br><span class="line">          &lt;el-descriptions-item label=&quot;风向&quot;&gt;&#123;&#123; item.direct &#125;&#125;&lt;/el-descriptions-item&gt;</span><br><span class="line">          &lt;el-descriptions-item label=&quot;温度&quot;&gt;&#123;&#123; item.temperature &#125;&#125;&lt;/el-descriptions-item&gt;</span><br><span class="line">          &lt;el-descriptions-item label=&quot;天气情况&quot;&gt;&#123;&#123; item.weather &#125;&#125;&lt;/el-descriptions-item&gt;</span><br><span class="line">        &lt;/el-descriptions&gt;</span><br><span class="line">      &lt;/el-col&gt;</span><br><span class="line">    &lt;/el-row&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">import &#123;getWeather&#125; from &#x27;@/api/gzh/weather&#x27;;</span><br><span class="line"></span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;weather&quot;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      loading : false,</span><br><span class="line">      city: &quot;&quot;,</span><br><span class="line">      weather: &#123;</span><br><span class="line">        realtime: &#123;&#125;,</span><br><span class="line">        future: []</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    handleWeather() &#123;</span><br><span class="line">      this.loading = true</span><br><span class="line">      getWeather().then(res =&gt; &#123;</span><br><span class="line">        const weatherInfo = JSON.parse(res.msg);</span><br><span class="line">        this.city = weatherInfo.result.city</span><br><span class="line">        this.weather.realtime = weatherInfo.result.realtime</span><br><span class="line">        this.weather.future = weatherInfo.result.future</span><br><span class="line">        this.loading = false</span><br><span class="line">        console.log(weatherInfo)</span><br><span class="line">      &#125;).catch(err =&gt; &#123;</span><br><span class="line">        console.error(err)</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>然后是前端api调用代码&#x2F;api&#x2F;gzh&#x2F;weather.js：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&quot;@/utils/request&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询参数列表</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">getWeather</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/getWeatherByLocalIP&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>接下来是后端的工具类代码：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ruoyi.web.controller.weather;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.core.domain.AjaxResult;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.http.HttpUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.net.URLEncoder;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WeatherController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/getWeatherByLocalIP&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> AjaxResult <span class="title function_">getWeather</span><span class="params">()</span> <span class="keyword">throws</span> UnsupportedEncodingException &#123;</span><br><span class="line">        <span class="type">AjaxResult</span> <span class="variable">result</span> <span class="operator">=</span> AjaxResult.success();</span><br><span class="line">        <span class="type">String</span> <span class="variable">localCityName</span> <span class="operator">=</span> GetLocationAndIP.getLocalCityName();</span><br><span class="line">        <span class="comment">//调用天气API</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">encodeCity</span> <span class="operator">=</span> URLEncoder.encode(localCityName, <span class="string">&quot;UTF-8&quot;</span>);</span><br><span class="line">        System.out.println(encodeCity);</span><br><span class="line">        <span class="type">String</span> <span class="variable">url</span> <span class="operator">=</span> <span class="string">&quot;http://apis.juhe.cn/simpleWeather/query?city=&quot;</span> + encodeCity + <span class="string">&quot;&amp;key=81fe33a6077267b2e4ae2967af47eeb7&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">weatherInfo</span> <span class="operator">=</span> HttpUtils.sendGet(url);</span><br><span class="line">        result.put(<span class="string">&quot;msg&quot;</span>, weatherInfo);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>然后是后端接口的代码：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ruoyi.web.controller.weather;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.json.JSONException;</span><br><span class="line"><span class="keyword">import</span> org.json.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Matcher;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">GetLocationAndIP</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">readAll</span><span class="params">(BufferedReader rd)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">int</span> cp;</span><br><span class="line">        <span class="keyword">while</span> ((cp = rd.read()) != -<span class="number">1</span>) &#123;</span><br><span class="line">            sb.append((<span class="type">char</span>) cp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> JSONObject <span class="title function_">readJsonFromUrl</span><span class="params">(String url)</span> <span class="keyword">throws</span> IOException, JSONException &#123;</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">InputStream</span> <span class="variable">is</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">URL</span>(url).openStream()) &#123;</span><br><span class="line">            <span class="type">BufferedReader</span> <span class="variable">rd</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(is, StandardCharsets.UTF_8));</span><br><span class="line">            <span class="type">String</span> <span class="variable">jsonText</span> <span class="operator">=</span> readAll(rd);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JSONObject</span>(jsonText);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Map&lt;String, Object&gt; <span class="title function_">getAddress</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ip</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="comment">// 这个网址似乎不能了用了</span></span><br><span class="line">        <span class="comment">// String chinaz = &quot;http://ip.chinaz.com&quot;;</span></span><br><span class="line">        <span class="comment">// 改用了太平洋的一个网址</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">chinaz</span> <span class="operator">=</span> <span class="string">&quot;http://whois.pconline.com.cn/&quot;</span>;</span><br><span class="line"></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">inputLine</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>();</span><br><span class="line">        <span class="type">String</span> <span class="variable">read</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">URL</span> <span class="variable">url</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">HttpURLConnection</span> <span class="variable">urlConnection</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">in</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            url = <span class="keyword">new</span> <span class="title class_">URL</span>(chinaz);</span><br><span class="line">            urlConnection = (HttpURLConnection) url.openConnection();</span><br><span class="line">            <span class="comment">// 如有乱码的，请修改相应的编码集，这里是 gbk</span></span><br><span class="line">            in = <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(urlConnection.getInputStream(), <span class="string">&quot;gbk&quot;</span>));</span><br><span class="line">            <span class="keyword">while</span> ((read = in.readLine()) != <span class="literal">null</span>) &#123;</span><br><span class="line">                inputLine.append(read).append(<span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (in != <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    in.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 这个是之前的正则表达式,</span></span><br><span class="line">        <span class="comment">// Pattern p = Pattern.compile(&quot;\\&lt;dd class\\=\&quot;fz24\&quot;&gt;(.*?)\\&lt;\\/dd&gt;&quot;);</span></span><br><span class="line">        <span class="comment">// 通过正则表达式匹配我们想要的内容，根据拉取的网页内容不同，正则表达式作相应的改变</span></span><br><span class="line">        <span class="type">Pattern</span> <span class="variable">p</span> <span class="operator">=</span> Pattern.compile(<span class="string">&quot;显示IP地址为(.*?)的位置信息&quot;</span>);</span><br><span class="line">        <span class="type">Matcher</span> <span class="variable">m</span> <span class="operator">=</span> p.matcher(inputLine.toString());</span><br><span class="line">        <span class="keyword">if</span> (m.find()) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">ipstr</span> <span class="operator">=</span> m.group(<span class="number">0</span>);</span><br><span class="line">            <span class="comment">// 这里根据具体情况，来截取想要的内容</span></span><br><span class="line">            ip = ipstr.substring(ipstr.indexOf(<span class="string">&quot;为&quot;</span>) + <span class="number">2</span>, ipstr.indexOf(<span class="string">&quot;的&quot;</span>) - <span class="number">1</span>);</span><br><span class="line">            map.put(<span class="string">&quot;ip&quot;</span>, ip);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">JSONObject</span> <span class="variable">json</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 这里调用百度的ip定位api服务 详见 http://api.map.baidu.com/lbsapi/cloud/ip-location-api.htm</span></span><br><span class="line">            json = readJsonFromUrl(<span class="string">&quot;http://api.map.baidu.com/location/ip?ak=laOQElaF53xGGBjscGtrd10nN4j1zGki&amp;ip=&quot;</span> + ip);</span><br><span class="line">            <span class="comment">//city = (((JSONObject) ((JSONObject) json.get(&quot;content&quot;)).get(&quot;address_detail&quot;)).get(&quot;city&quot;)).toString();</span></span><br><span class="line">            map.put(<span class="string">&quot;city&quot;</span>, ((JSONObject) ((JSONObject) json.get(<span class="string">&quot;content&quot;</span>)).get(<span class="string">&quot;address_detail&quot;</span>)).get(<span class="string">&quot;city&quot;</span>).toString());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> map;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getLocalCityName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">GetLocationAndIP</span> <span class="variable">getLocationANDIp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GetLocationAndIP</span>();</span><br><span class="line">        Map&lt;String, Object&gt; map = getLocationANDIp.getAddress();</span><br><span class="line">        <span class="type">String</span> <span class="variable">city</span> <span class="operator">=</span> map.get(<span class="string">&quot;city&quot;</span>).toString();</span><br><span class="line">        <span class="keyword">return</span> city.substring(<span class="number">0</span>, city.length() - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">GetLocationAndIP</span> <span class="variable">getLocationANDIp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GetLocationAndIP</span>();</span><br><span class="line">        Map&lt;String, Object&gt; map = getLocationANDIp.getAddress();</span><br><span class="line">        <span class="type">String</span> <span class="variable">city</span> <span class="operator">=</span> map.get(<span class="string">&quot;city&quot;</span>).toString();</span><br><span class="line">        <span class="type">String</span> <span class="variable">city_1</span> <span class="operator">=</span> city.substring(<span class="number">0</span>, city.length() - <span class="number">1</span>);</span><br><span class="line">        System.out.println(city_1);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>引入依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.json<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>json<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>20090211<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="6"><li>由此，天气小demo就跑起来了，效果图如下：</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306141758797.png"                      alt="image-20230614175845403"                ></p><h1 id="十二、JWT"><a href="#十二、JWT" class="headerlink" title="十二、JWT"></a>十二、JWT</h1><h2 id="1-跨域认证的问题"><a href="#1-跨域认证的问题" class="headerlink" title="1.跨域认证的问题"></a>1.跨域认证的问题</h2><ul><li>互联网服务离不开用户认证。一般流程是下面这样。</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1、用户向服务器发送用户名和密码。</span><br><span class="line"></span><br><span class="line">2、服务器验证通过后，在当前对话（session）里面保存相关数据，比如用户角色、登录时间等等。</span><br><span class="line"></span><br><span class="line">3、服务器向用户返回一个 session_id，写入用户的 Cookie。</span><br><span class="line"></span><br><span class="line">4、用户随后的每一次请求，都会通过 Cookie，将 session_id 传回服务器。</span><br><span class="line"></span><br><span class="line">5、服务器收到 session_id，找到前期保存的数据，由此得知用户的身份。</span><br></pre></td></tr></table></figure><ul><li>这种模式的问题在于，扩展性（scaling）不好。单机当然没有问题，如果是服务器集群，或者是<strong>跨域的服务导向架构，就要求 session 数据共享，每台服务器都能够读取 session。</strong></li><li>举例来说，A 网站和 B 网站是同一家公司的关联服务。现在要求，用户只要在其中一个网站登录，再访问另一个网站就会自动登录，请问怎么实现？</li><li>一种解决方案是 <strong>session 数据持久化</strong>，写入数据库或别的持久层。各种服务收到请求后，都向持久层请求数据。这种方案的优点是架构清晰，缺点是工程量比较大。另外，持久层万一挂了，就会单点失败。</li><li>另一种方案是服务器索性不保存 session 数据了，<strong>所有数据都保存在客户端</strong>，每次请求都发回服务器。JWT 就是这种方案的一个代表。</li></ul><h2 id="2-JWT-的原理"><a href="#2-JWT-的原理" class="headerlink" title="2.JWT 的原理"></a>2.JWT 的原理</h2><p>JWT 的原理是，服务器认证以后，生成一个 JSON 对象，发回给用户，就像下面这样。</p><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;姓名&quot;</span>: <span class="string">&quot;张三&quot;</span>,</span><br><span class="line">  <span class="string">&quot;角色&quot;</span>: <span class="string">&quot;管理员&quot;</span>,</span><br><span class="line">  <span class="string">&quot;到期时间&quot;</span>: <span class="string">&quot;2018年7月1日0点0分&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><ul><li>以后，用户与服务端通信的时候，都要发回这个 JSON 对象。服务器完全只靠这个对象认定用户身份。为了防止用户篡改数据，服务器在生成这个对象的时候，会加上签名（详见后文）。</li><li>服务器就不保存任何 session 数据了，也就是说，服务器变成无状态了，从而比较容易实现扩展。</li></ul><h2 id="3-JWT-的数据结构"><a href="#3-JWT-的数据结构" class="headerlink" title="3.JWT 的数据结构"></a>3.JWT 的数据结构</h2><p>实际的 JWT 大概就像下面这样。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://www.wangbase.com/blogimg/asset/201807/bg2018072304.jpg"                      alt="img"                ></p><p>它是一个很长的字符串，中间用点（<code>.</code>）分隔成三个部分。注意，JWT 内部是没有换行的，这里只是为了便于展示，将它写成了几行。</p><p>JWT 的三个部分依次如下。</p><blockquote><ul><li>Header（头部）</li><li>Payload（负载）</li><li>Signature（签名）</li></ul></blockquote><p>写成一行，就是下面的样子。</p><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Header</span>.<span class="property">Payload</span>.<span class="property">Signature</span></span><br></pre></td></tr></table></figure></blockquote><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://www.wangbase.com/blogimg/asset/201807/bg2018072303.jpg"                      alt="img"                ></p><p>下面依次介绍这三个部分。</p><h3 id="3-1-Header"><a href="#3-1-Header" class="headerlink" title="3.1 Header"></a>3.1 Header</h3><p>Header 部分是一个 JSON 对象，描述 JWT 的元数据，通常是下面的样子。</p><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;alg&quot;</span>: <span class="string">&quot;HS256&quot;</span>,</span><br><span class="line">  <span class="string">&quot;typ&quot;</span>: <span class="string">&quot;JWT&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>上面代码中，<code>alg</code>属性表示签名的算法（algorithm），默认是 HMAC SHA256（写成 HS256）；<code>typ</code>属性表示这个令牌（token）的类型（type），JWT 令牌统一写为<code>JWT</code>。</p><p>最后，将上面的 JSON 对象使用 Base64URL 算法（详见后文）转成字符串。</p><h3 id="3-2-Payload"><a href="#3-2-Payload" class="headerlink" title="3.2 Payload"></a>3.2 Payload</h3><p>Payload 部分也是一个 JSON 对象，用来存放实际需要传递的数据。JWT 规定了7个官方字段，供选用。</p><blockquote><ul><li>iss (issuer)：签发人</li><li>exp (expiration time)：过期时间</li><li>sub (subject)：主题</li><li>aud (audience)：受众</li><li>nbf (Not Before)：生效时间</li><li>iat (Issued At)：签发时间</li><li>jti (JWT ID)：编号</li></ul></blockquote><p>除了官方字段，你还可以在这个部分定义私有字段，下面就是一个例子。</p><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;sub&quot;</span>: <span class="string">&quot;1234567890&quot;</span>,</span><br><span class="line">  <span class="string">&quot;name&quot;</span>: <span class="string">&quot;John Doe&quot;</span>,</span><br><span class="line">  <span class="string">&quot;admin&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></blockquote><p>注意，JWT 默认是不加密的，任何人都可以读到，所以不要把秘密信息放在这个部分。</p><p>这个 JSON 对象也要使用 Base64URL 算法转成字符串。</p><h3 id="3-3-Signature"><a href="#3-3-Signature" class="headerlink" title="3.3 Signature"></a>3.3 Signature</h3><p>Signature 部分是对前两部分的签名，防止数据篡改。</p><p>首先，需要指定一个密钥（secret）。这个密钥只有服务器才知道，不能泄露给用户。然后，使用 Header 里面指定的签名算法（默认是 HMAC SHA256），按照下面的公式产生签名。</p><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">HMACSHA256</span>(</span><br><span class="line">  <span class="title function_">base64UrlEncode</span>(header) + <span class="string">&quot;.&quot;</span> +</span><br><span class="line">  <span class="title function_">base64UrlEncode</span>(payload),</span><br><span class="line">  secret)</span><br></pre></td></tr></table></figure></blockquote><p>算出签名以后，把 Header、Payload、Signature 三个部分拼成一个字符串，每个部分之间用”点”（<code>.</code>）分隔，就可以返回给用户。</p><h3 id="3-4-Base64URL"><a href="#3-4-Base64URL" class="headerlink" title="3.4 Base64URL"></a>3.4 Base64URL</h3><p>前面提到，Header 和 Payload 串型化的算法是 Base64URL。这个算法跟 Base64 算法基本类似，但有一些小的不同。</p><p>JWT 作为一个令牌（token），有些场合可能会放到 URL（比如 api.example.com&#x2F;?token&#x3D;xxx）。Base64 有三个字符<code>+</code>、<code>/</code>和<code>=</code>，在 URL 里面有特殊含义，所以要被替换掉：<code>=</code>被省略、<code>+</code>替换成<code>-</code>，<code>/</code>替换成<code>_</code> 。这就是 Base64URL 算法。</p><h2 id="4-JWT-的使用方式"><a href="#4-JWT-的使用方式" class="headerlink" title="4.JWT 的使用方式"></a>4.JWT 的使用方式</h2><p>客户端收到服务器返回的 JWT，可以储存在 Cookie 里面，也可以储存在 localStorage。</p><p>此后，客户端每次与服务器通信，都要带上这个 JWT。你可以把它放在 Cookie 里面自动发送，但是这样不能跨域，所以更好的做法是放在 HTTP 请求的头信息<code>Authorization</code>字段里面。</p><blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Authorization</span>: <span class="title class_">Bearer</span> &lt;token&gt;</span><br></pre></td></tr></table></figure></blockquote><p>另一种做法是，跨域的时候，JWT 就放在 POST 请求的数据体里面。</p><h2 id="5-JWT-的几个特点"><a href="#5-JWT-的几个特点" class="headerlink" title="5.JWT 的几个特点"></a>5.JWT 的几个特点</h2><p>（1）JWT 默认是不加密，但也是可以加密的。<strong>生成原始 Token 以后，可以用密钥再加密一次。</strong></p><p>（2）JWT 不加密的情况下，不能将秘密数据写入 JWT。</p><p>（3）<strong>JWT 不仅可以用于认证，也可以用于交换信息</strong>。有效使用 JWT，可以降低服务器查询数据库的次数。</p><p>（4）JWT 的最大缺点是，由于服务器不保存 session 状态，因此无法在使用过程中废止某个 token，或者更改 token 的权限。也就是说，<strong>一旦 JWT 签发了，在到期之前就会始终有效</strong>，除非服务器部署额外的逻辑。</p><p>（5）JWT 本身包含了认证信息，一旦泄露，任何人都可以获得该令牌的所有权限。为了减少盗用，JWT 的有效期应该设置得比较短。<strong>对于一些比较重要的权限，使用时应该再次对用户进行认证</strong>。</p><p>（6）<strong>为了减少盗用，JWT 不应该使用 HTTP 协议明码传输，要使用 HTTPS 协议传输。</strong></p><h2 id="6-ry是怎么践行JWT的呢？"><a href="#6-ry是怎么践行JWT的呢？" class="headerlink" title="6.ry是怎么践行JWT的呢？"></a>6.ry是怎么践行JWT的呢？</h2><ol><li>问题一：不登录的时候有token吗？<ul><li>答：没有，所以只能在login页面，凡是想跳转其他界面，都被重定向到登录，硬生生让你登录。前端阻拦的代码在permission.js如下：</li></ul></li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306151411324.png"                      alt="image-20230615141138093"                ></p><ol start="2"><li>问题二：token什么时候生成的？<ul><li>答：登录的时候生成的，具体代码讲述：</li></ul></li></ol><ul><li>在login控制器的SysLoginService层代码中，有login方法：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">login</span><span class="params">(String username, String password, String code, String uuid)</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">captchaOnOff</span> <span class="operator">=</span> configService.selectCaptchaOnOff();</span><br><span class="line">        <span class="comment">// 验证码开关</span></span><br><span class="line">        <span class="keyword">if</span> (captchaOnOff)</span><br><span class="line">        &#123;</span><br><span class="line">            validateCaptcha(username, code, uuid);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 用户验证</span></span><br><span class="line">        <span class="type">Authentication</span> <span class="variable">authentication</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 该方法会去调用UserDetailsServiceImpl.loadUserByUsername</span></span><br><span class="line">            authentication = authenticationManager</span><br><span class="line">                    .authenticate(<span class="keyword">new</span> <span class="title class_">UsernamePasswordAuthenticationToken</span>(username, password));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (e <span class="keyword">instanceof</span> BadCredentialsException)</span><br><span class="line">            &#123;</span><br><span class="line">                AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(<span class="string">&quot;user.password.not.match&quot;</span>)));</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UserPasswordNotMatchException</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, e.getMessage()));</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ServiceException</span>(e.getMessage());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_SUCCESS, MessageUtils.message(<span class="string">&quot;user.login.success&quot;</span>)));</span><br><span class="line">        <span class="type">LoginUser</span> <span class="variable">loginUser</span> <span class="operator">=</span> (LoginUser) authentication.getPrincipal();</span><br><span class="line">        recordLoginInfo(loginUser.getUserId());</span><br><span class="line">        <span class="comment">// 生成token</span></span><br><span class="line">        <span class="keyword">return</span> tokenService.createToken(loginUser);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>最后一句话，他说生成token，于是他执行TokenService：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">   <span class="keyword">public</span> String <span class="title function_">createToken</span><span class="params">(LoginUser loginUser)</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> IdUtils.fastUUID();</span><br><span class="line">        loginUser.setToken(token);</span><br><span class="line">        setUserAgent(loginUser);</span><br><span class="line">        refreshToken(loginUser);</span><br><span class="line"></span><br><span class="line">        Map&lt;String, Object&gt; claims = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        claims.put(Constants.LOGIN_USER_KEY, token);</span><br><span class="line">        <span class="keyword">return</span> createToken(claims);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>然后它又是最后一个话在生成token，TokenService点进去我们才看到真的生成方法：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String <span class="title function_">createToken</span><span class="params">(Map&lt;String, Object&gt; claims)</span></span><br><span class="line">&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">token</span> <span class="operator">=</span> Jwts.builder()</span><br><span class="line">                .setClaims(claims)</span><br><span class="line">                .signWith(SignatureAlgorithm.HS512, secret).compact();</span><br><span class="line">        <span class="keyword">return</span> token;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><ul><li>现在token生成好了，大家要注意，refreshToken方法已经把当前成功登录的人的信息存到了redis中，前缀是login_tokens: + 当前的tokenId，tokenId是一个uuid。</li><li>所以再看login方法，不仅仅生成了token，还把登录人的信息存到了Redis中。方便下次用户带着token来的时候，后端可以拿到tokenId来redis中找用户的tokenId是否存在。</li></ul><ol start="3"><li>问题三，用户登录后，发请求是怎么自动带上token的？</li></ol><ul><li>登录成功的时候，前端存了一份token在cookie中，登录代码user.js如下：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 登录</span></span><br><span class="line"><span class="title class_">Login</span>(&#123; commit &#125;, userInfo) &#123;</span><br><span class="line">  <span class="keyword">const</span> username = userInfo.<span class="property">username</span>.<span class="title function_">trim</span>()</span><br><span class="line">  <span class="keyword">const</span> password = userInfo.<span class="property">password</span></span><br><span class="line">  <span class="keyword">const</span> code = userInfo.<span class="property">code</span></span><br><span class="line">  <span class="keyword">const</span> uuid = userInfo.<span class="property">uuid</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve, reject</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="title function_">login</span>(username, password, code, uuid).<span class="title function_">then</span>(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">setToken</span>(res.<span class="property">token</span>)</span><br><span class="line">      <span class="title function_">commit</span>(<span class="string">&#x27;SET_TOKEN&#x27;</span>, res.<span class="property">token</span>)</span><br><span class="line">      <span class="title function_">resolve</span>()</span><br><span class="line">    &#125;).<span class="title function_">catch</span>(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="title function_">reject</span>(error)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ul><li>引入眼帘有一个setToken，里面就将token放cookie，代码auth.js如下：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">function</span> <span class="title function_">setToken</span>(<span class="params">token</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Cookies</span>.<span class="title function_">set</span>(<span class="title class_">TokenKey</span>, token)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>接下来如果要发请求，request.js会自动带上，如下代码：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306151437006.png"                      alt="image-20230615143747780"                ></p><ul><li>可以看到，它会去config.headers看看到底要不要，如果我们在请求头指定了不要，那么发请求就不会带上token，否则就会被带上token。</li></ul><ol start="4"><li>问题四：我再次请求的时候带上了token，后端在哪问我带没带token呢？</li></ol><ul><li>其实后端有一个拦截器，总是在悄悄检查。如下代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ruoyi.framework.security.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.WebAuthenticationDetailsSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.OncePerRequestFilter;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.core.domain.model.LoginUser;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.framework.web.service.TokenService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * token过滤器 验证token有效性</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JwtAuthenticationTokenFilter</span> <span class="keyword">extends</span> <span class="title class_">OncePerRequestFilter</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TokenService tokenService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doFilterInternal</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain chain)</span></span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">LoginUser</span> <span class="variable">loginUser</span> <span class="operator">=</span> tokenService.getLoginUser(request);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotNull(loginUser) &amp;&amp; StringUtils.isNull(SecurityUtils.getAuthentication()))</span><br><span class="line">        &#123;</span><br><span class="line">            tokenService.verifyToken(loginUser);</span><br><span class="line">            <span class="type">UsernamePasswordAuthenticationToken</span> <span class="variable">authenticationToken</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordAuthenticationToken</span>(loginUser, <span class="literal">null</span>, loginUser.getAuthorities());</span><br><span class="line">            authenticationToken.setDetails(<span class="keyword">new</span> <span class="title class_">WebAuthenticationDetailsSource</span>().buildDetails(request));</span><br><span class="line">            SecurityContextHolder.getContext().setAuthentication(authenticationToken);</span><br><span class="line">        &#125;</span><br><span class="line">        chain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>getLoginUser方法总是在试图拿到token。然后验证token是否正确，token有没有过期，然后把用户该有的权限重新设置在上下文中。</li><li>该拦截器是在SecurityConfig设置的</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * anyRequest          |   匹配所有请求路径</span></span><br><span class="line"><span class="comment"> * access              |   SpringEl表达式结果为true时可以访问</span></span><br><span class="line"><span class="comment"> * anonymous           |   匿名可以访问</span></span><br><span class="line"><span class="comment"> * denyAll             |   用户不能访问</span></span><br><span class="line"><span class="comment"> * fullyAuthenticated  |   用户完全认证可以访问（非remember-me下自动登录）</span></span><br><span class="line"><span class="comment"> * hasAnyAuthority     |   如果有参数，参数表示权限，则其中任何一个权限可以访问</span></span><br><span class="line"><span class="comment"> * hasAnyRole          |   如果有参数，参数表示角色，则其中任何一个角色可以访问</span></span><br><span class="line"><span class="comment"> * hasAuthority        |   如果有参数，参数表示权限，则其权限可以访问</span></span><br><span class="line"><span class="comment"> * hasIpAddress        |   如果有参数，参数表示IP地址，如果用户IP和参数匹配，则可以访问</span></span><br><span class="line"><span class="comment"> * hasRole             |   如果有参数，参数表示角色，则其角色可以访问</span></span><br><span class="line"><span class="comment"> * permitAll           |   用户可以任意访问</span></span><br><span class="line"><span class="comment"> * rememberMe          |   允许通过remember-me登录的用户访问</span></span><br><span class="line"><span class="comment"> * authenticated       |   用户登录后可访问</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(HttpSecurity httpSecurity)</span> <span class="keyword">throws</span> Exception</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 注解标记允许匿名访问的url</span></span><br><span class="line">    ExpressionUrlAuthorizationConfigurer&lt;HttpSecurity&gt;.<span class="type">ExpressionInterceptUrlRegistry</span> <span class="variable">registry</span> <span class="operator">=</span> httpSecurity.authorizeRequests();</span><br><span class="line">    permitAllUrl.getUrls().forEach(url -&gt; registry.antMatchers(url).permitAll());</span><br><span class="line"></span><br><span class="line">    httpSecurity</span><br><span class="line">            <span class="comment">// CSRF禁用，因为不使用session</span></span><br><span class="line">            .csrf().disable()</span><br><span class="line">            <span class="comment">// 禁用HTTP响应标头</span></span><br><span class="line">            .headers().cacheControl().disable().and()</span><br><span class="line">            <span class="comment">// 认证失败处理类</span></span><br><span class="line">            .exceptionHandling().authenticationEntryPoint(unauthorizedHandler).and()</span><br><span class="line">            <span class="comment">// 基于token，所以不需要session</span></span><br><span class="line">            .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and()</span><br><span class="line">            <span class="comment">// 过滤请求</span></span><br><span class="line">            .authorizeRequests()</span><br><span class="line">            <span class="comment">// 对于登录login 注册register 验证码captchaImage 允许匿名访问</span></span><br><span class="line">            .antMatchers(<span class="string">&quot;/login&quot;</span>, <span class="string">&quot;/register&quot;</span>, <span class="string">&quot;/captchaImage&quot;</span>).permitAll()</span><br><span class="line">            <span class="comment">// 静态资源，可匿名访问</span></span><br><span class="line">            .antMatchers(HttpMethod.GET, <span class="string">&quot;/&quot;</span>, <span class="string">&quot;/*.html&quot;</span>, <span class="string">&quot;/**/*.html&quot;</span>, <span class="string">&quot;/**/*.css&quot;</span>, <span class="string">&quot;/**/*.js&quot;</span>, <span class="string">&quot;/profile/**&quot;</span>).permitAll()</span><br><span class="line">            .antMatchers(<span class="string">&quot;/swagger-ui.html&quot;</span>, <span class="string">&quot;/swagger-resources/**&quot;</span>, <span class="string">&quot;/webjars/**&quot;</span>, <span class="string">&quot;/*/api-docs&quot;</span>, <span class="string">&quot;/druid/**&quot;</span>).permitAll()</span><br><span class="line">            <span class="comment">// 除上面外的所有请求全部需要鉴权认证</span></span><br><span class="line">            .anyRequest().authenticated()</span><br><span class="line">            .and()</span><br><span class="line">            .headers().frameOptions().disable();</span><br><span class="line">    <span class="comment">// 添加Logout filter</span></span><br><span class="line">    httpSecurity.logout().logoutUrl(<span class="string">&quot;/logout&quot;</span>).logoutSuccessHandler(logoutSuccessHandler);</span><br><span class="line">    <span class="comment">// 添加JWT filter</span></span><br><span class="line">    httpSecurity.addFilterBefore(authenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);</span><br><span class="line">    <span class="comment">// 添加CORS filter</span></span><br><span class="line">    httpSecurity.addFilterBefore(corsFilter, JwtAuthenticationTokenFilter.class);</span><br><span class="line">    httpSecurity.addFilterBefore(corsFilter, LogoutFilter.class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十三、ry如何践行SpringSecurity用于认证"><a href="#十三、ry如何践行SpringSecurity用于认证" class="headerlink" title="十三、ry如何践行SpringSecurity用于认证"></a>十三、ry如何践行SpringSecurity用于认证</h1><h2 id="1-SpringSecurity基础"><a href="#1-SpringSecurity基础" class="headerlink" title="1.SpringSecurity基础"></a>1.SpringSecurity基础</h2><ol><li>先看一个篇文章<a class="link"   href="https://zhuanlan.zhihu.com/p/342755411?utm_medium=social&amp;utm_oi=1343915562263547904" >https://zhuanlan.zhihu.com/p/342755411?utm_medium=social&amp;utm_oi=1343915562263547904<i class="fas fa-external-link-alt"></i></a></li><li>简而言之，如果要自定义认证逻辑，需要我们去写一个类，实现UserDetailsService接口。UserDetailsService中重写loadUserByUsername方法，该方法是通过username找到用户，往往是通过数据库查询。loadUserByUsername方法的返回值是一个实现UserDetails接口的类，该类是为了存储从数据库查询用户的详细信息的点点滴滴【见名知意，UserDetails意为用户细节】。</li></ol><h2 id="2-Ry是如何践行这套规则？"><a href="#2-Ry是如何践行这套规则？" class="headerlink" title="2.Ry是如何践行这套规则？"></a>2.Ry是如何践行这套规则？</h2><ol><li>在SysLoginService的login方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 用户验证</span></span><br><span class="line"><span class="type">Authentication</span> <span class="variable">authentication</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line"><span class="keyword">try</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">UsernamePasswordAuthenticationToken</span> <span class="variable">authenticationToken</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordAuthenticationToken</span>(username, password);</span><br><span class="line">    AuthenticationContextHolder.setContext(authenticationToken);</span><br><span class="line">    <span class="comment">// 该方法会去调用UserDetailsServiceImpl.loadUserByUsername</span></span><br><span class="line">    authentication = authenticationManager.authenticate(authenticationToken);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span> (Exception e)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (e <span class="keyword">instanceof</span> BadCredentialsException)</span><br><span class="line">    &#123;</span><br><span class="line">        AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, MessageUtils.message(<span class="string">&quot;user.password.not.match&quot;</span>)));</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UserPasswordNotMatchException</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        AsyncManager.me().execute(AsyncFactory.recordLogininfor(username, Constants.LOGIN_FAIL, e.getMessage()));</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ServiceException</span>(e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在ry中，SpringSecurity接管了整个后端的认证和授权，我们现在来看认证相关的问题。登录的时候，执行了一句代码：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">authentication = authenticationManager.authenticate(authenticationToken);</span><br></pre></td></tr></table></figure><ul><li>根据ry作者的提示，会去自动执行loadUserByUsername方法，那么为何会去执行loadUserByUsername方法呢？</li><li>事实上，我们使用SpringSecurity用来认证的时候，<strong>只需要调用AuthenticationManager接口上的authenticate方法即可</strong>。若需要获得AuthenticationManager的实例，则需要写个类，该类继承WebSecurityConfigurerAdapter类，然后通过重写下面的代码可以获得认证管理器：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 解决 无法直接注入 AuthenticationManager</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> AuthenticationManager <span class="title function_">authenticationManagerBean</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">super</span>.authenticationManagerBean();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>我们在ry中的SecurityConfig类正好就是写了该代码，如此操作之后，认证管理器被注入到了Spring容器中，可以在Spring环境中随时获得认证管理器的Bean。</li><li>在我们的登录SysLoginService类中，通过下面的代码把认证管理器拿来了：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Resource</span></span><br><span class="line"><span class="keyword">private</span> AuthenticationManager authenticationManager;</span><br></pre></td></tr></table></figure><ul><li>此时，在此我们只需要调用authenticationManager实例的authenticate方法即可完成认证。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> Authentication <span class="title function_">authenticate</span><span class="params">(Authentication authentication)</span> <span class="keyword">throws</span> AuthenticationException &#123;</span><br><span class="line">   ...省略其他代码</span><br><span class="line"> <span class="comment">// 传递过来的用户名</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> authentication.getName();</span><br><span class="line">    <span class="comment">// 调用UserDetailService的方法，通过用户名查询出用户对象UserDetail（查询不出来UserDetailService则会抛出异常）</span></span><br><span class="line">    <span class="type">UserDetails</span> <span class="variable">userDetails</span> <span class="operator">=</span> <span class="built_in">this</span>.getUserDetailsService().loadUserByUsername(username);</span><br><span class="line">    <span class="type">String</span> <span class="variable">presentedPassword</span> <span class="operator">=</span> authentication.getCredentials().toString();</span><br><span class="line"></span><br><span class="line">      <span class="comment">// 传递过来的密码</span></span><br><span class="line">    <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> authentication.getCredentials().toString();</span><br><span class="line">    <span class="comment">// 使用密码解析器PasswordEncoder传递过来的密码是否和真实的用户密码匹配</span></span><br><span class="line">    <span class="keyword">if</span> (!passwordEncoder.matches(password, userDetails.getPassword())) &#123;</span><br><span class="line">        <span class="comment">// 密码错误则抛出异常</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">BadCredentialsException</span>(<span class="string">&quot;错误信息...&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">     <span class="comment">// 注意哦，这里返回的已认证Authentication，是将整个UserDetails放进去充当Principal</span></span><br><span class="line">    <span class="type">UsernamePasswordAuthenticationToken</span> <span class="variable">result</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordAuthenticationToken</span>(userDetails,</span><br><span class="line">                authentication.getCredentials(), userDetails.getAuthorities());</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line"></span><br><span class="line">    ...省略其他代码</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>UserDetialsService UserDetails PasswordEncoder，这三个组件Spring Security都有默认实现，这一般是满足不了我们的实际需求的，所以这里我们自己来实现这些组件！</li><li>ry写了UserDetailsServiceImpl类实现了UserDetialsService 接口，并重写了loadUserByUsername方法，该方法返回UserDetails接口实例对象，ry并不满足于SpringSecurity提供的User类，于是自己写了LoginUser类，LoginUser类实现了UserDetails接口，并重写了接口内要求的方法getPassword和getUsername，其他方法并不重要，ry仅仅简单返回一个true。值得注意的是，getAuthorities方法ry仅仅是简单返回一个null！！！原因是因为ry有着自己的一套权限检查方法。</li><li>对于PasswordEncoder，ry使用的BCryptPasswordEncoder，只需要注入到Spring容器即可被SpringSecurity找到，当然在Spring容器中也方便我们在注册的时候也拿到该单例对象对密码做加密处理：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span>    </span><br><span class="line"><span class="keyword">public</span> BCryptPasswordEncoder <span class="title function_">bCryptPasswordEncoder</span><span class="params">()</span></span><br><span class="line">&#123;        </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>();    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>ry的UserDetailsServiceImpl类中的loadUserByUsername方法主要是去数据库查询，通过username找到需要检索的用户，然后对用户做简单校验：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (StringUtils.isNull(user))</span><br><span class="line">&#123;</span><br><span class="line">    log.info(<span class="string">&quot;登录用户：&#123;&#125; 不存在.&quot;</span>, username);</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ServiceException</span>(<span class="string">&quot;登录用户：&quot;</span> + username + <span class="string">&quot; 不存在&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (UserStatus.DELETED.getCode().equals(user.getDelFlag()))</span><br><span class="line">&#123;</span><br><span class="line">    log.info(<span class="string">&quot;登录用户：&#123;&#125; 已被删除.&quot;</span>, username);</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ServiceException</span>(<span class="string">&quot;对不起，您的账号：&quot;</span> + username + <span class="string">&quot; 已被删除&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (UserStatus.DISABLE.getCode().equals(user.getStatus()))</span><br><span class="line">&#123;</span><br><span class="line">    log.info(<span class="string">&quot;登录用户：&#123;&#125; 已被停用.&quot;</span>, username);</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ServiceException</span>(<span class="string">&quot;对不起，您的账号：&quot;</span> + username + <span class="string">&quot; 已停用&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>之后，ry就想new LoginUser，LoginUser类是loadUserByUsername方法返回值所需要的，如下：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LoginUser</span>(user.getUserId(), user.getDeptId(), user, permissionService.getMenuPermission(user));</span><br></pre></td></tr></table></figure><ul><li>这里把用户id，部门，用户详情“user”都封装进入了LoginUser的实例。需要注意最后一个参数，这里去数据库查询了权限！！！也就是查询登录人的权限【包括页面权限和按钮权限】。关于权限，后面再说。</li><li>接下来，SpringSecurity会自动去检查密码对不对</li><li>认证完成之后，login方法拿着经过认证的authentication实例生成了token，并把token和LoginUser存到了Redis，再把token返回给了前端。</li><li>前端拿到token就立刻存到了cookie中，并且下次给后端发请求的时候带上了token表明自己的身份。</li><li>每一次后端被请求时，都会执行JwtAuthenticationTokenFilter过滤器，该过滤器是在从请求request的请求头（key为Authorization的条目）中获得token，然后验证token，验证成功则直接封装一个已经成功认证的信息authenticationToken，并存在上下文中。相关代码如下：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ruoyi.framework.security.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.WebAuthenticationDetailsSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.OncePerRequestFilter;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.core.domain.model.LoginUser;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.framework.web.service.TokenService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * token过滤器 验证token有效性</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JwtAuthenticationTokenFilter</span> <span class="keyword">extends</span> <span class="title class_">OncePerRequestFilter</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TokenService tokenService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doFilterInternal</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain chain)</span></span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">LoginUser</span> <span class="variable">loginUser</span> <span class="operator">=</span> tokenService.getLoginUser(request);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotNull(loginUser) &amp;&amp; StringUtils.isNull(SecurityUtils.getAuthentication()))</span><br><span class="line">        &#123;</span><br><span class="line">            tokenService.verifyToken(loginUser);</span><br><span class="line">            <span class="type">UsernamePasswordAuthenticationToken</span> <span class="variable">authenticationToken</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordAuthenticationToken</span>(loginUser, <span class="literal">null</span>, loginUser.getAuthorities());</span><br><span class="line">            authenticationToken.setDetails(<span class="keyword">new</span> <span class="title class_">WebAuthenticationDetailsSource</span>().buildDetails(request));</span><br><span class="line">            SecurityContextHolder.getContext().setAuthentication(authenticationToken);</span><br><span class="line">        &#125;</span><br><span class="line">        chain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-ry认证出现问题如何处理的？"><a href="#3-ry认证出现问题如何处理的？" class="headerlink" title="3.ry认证出现问题如何处理的？"></a>3.ry认证出现问题如何处理的？</h2><ol><li>认证配置类中最重要的HttpSecurity配置如下：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * anyRequest          |   匹配所有请求路径</span></span><br><span class="line"><span class="comment"> * access              |   SpringEl表达式结果为true时可以访问</span></span><br><span class="line"><span class="comment"> * anonymous           |   匿名可以访问</span></span><br><span class="line"><span class="comment"> * denyAll             |   用户不能访问</span></span><br><span class="line"><span class="comment"> * fullyAuthenticated  |   用户完全认证可以访问（非remember-me下自动登录）</span></span><br><span class="line"><span class="comment"> * hasAnyAuthority     |   如果有参数，参数表示权限，则其中任何一个权限可以访问</span></span><br><span class="line"><span class="comment"> * hasAnyRole          |   如果有参数，参数表示角色，则其中任何一个角色可以访问</span></span><br><span class="line"><span class="comment"> * hasAuthority        |   如果有参数，参数表示权限，则其权限可以访问</span></span><br><span class="line"><span class="comment"> * hasIpAddress        |   如果有参数，参数表示IP地址，如果用户IP和参数匹配，则可以访问</span></span><br><span class="line"><span class="comment"> * hasRole             |   如果有参数，参数表示角色，则其角色可以访问</span></span><br><span class="line"><span class="comment"> * permitAll           |   用户可以任意访问</span></span><br><span class="line"><span class="comment"> * rememberMe          |   允许通过remember-me登录的用户访问</span></span><br><span class="line"><span class="comment"> * authenticated       |   用户登录后可访问</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(HttpSecurity httpSecurity)</span> <span class="keyword">throws</span> Exception</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// 注解标记允许匿名访问的url</span></span><br><span class="line">    ExpressionUrlAuthorizationConfigurer&lt;HttpSecurity&gt;.<span class="type">ExpressionInterceptUrlRegistry</span> <span class="variable">registry</span> <span class="operator">=</span> httpSecurity.authorizeRequests();</span><br><span class="line">    permitAllUrl.getUrls().forEach(url -&gt; registry.antMatchers(url).permitAll());</span><br><span class="line"></span><br><span class="line">    httpSecurity</span><br><span class="line">            <span class="comment">// CSRF禁用，因为不使用session</span></span><br><span class="line">            .csrf().disable()</span><br><span class="line">            <span class="comment">// 禁用HTTP响应标头</span></span><br><span class="line">            .headers().cacheControl().disable().and()</span><br><span class="line">            <span class="comment">// 认证失败处理类</span></span><br><span class="line">            .exceptionHandling().authenticationEntryPoint(unauthorizedHandler).and()</span><br><span class="line">            <span class="comment">// 基于token，所以不需要session</span></span><br><span class="line">            .sessionManagement().sessionCreationPolicy(SessionCreationPolicy.STATELESS).and()</span><br><span class="line">            <span class="comment">// 过滤请求</span></span><br><span class="line">            .authorizeRequests()</span><br><span class="line">            <span class="comment">// 对于登录login 注册register 验证码captchaImage 允许匿名访问</span></span><br><span class="line">            .antMatchers(<span class="string">&quot;/login&quot;</span>, <span class="string">&quot;/register&quot;</span>, <span class="string">&quot;/captchaImage&quot;</span>).permitAll()</span><br><span class="line">            <span class="comment">// 静态资源，可匿名访问</span></span><br><span class="line">            .antMatchers(HttpMethod.GET, <span class="string">&quot;/&quot;</span>, <span class="string">&quot;/*.html&quot;</span>, <span class="string">&quot;/**/*.html&quot;</span>, <span class="string">&quot;/**/*.css&quot;</span>, <span class="string">&quot;/**/*.js&quot;</span>, <span class="string">&quot;/profile/**&quot;</span>).permitAll()</span><br><span class="line">            .antMatchers(<span class="string">&quot;/swagger-ui.html&quot;</span>, <span class="string">&quot;/swagger-resources/**&quot;</span>, <span class="string">&quot;/webjars/**&quot;</span>, <span class="string">&quot;/*/api-docs&quot;</span>, <span class="string">&quot;/druid/**&quot;</span>).permitAll()</span><br><span class="line">            <span class="comment">// 除上面外的所有请求全部需要鉴权认证</span></span><br><span class="line">            .anyRequest().authenticated()</span><br><span class="line">            .and()</span><br><span class="line">            .headers().frameOptions().disable();</span><br><span class="line">    <span class="comment">// 添加Logout filter</span></span><br><span class="line">    httpSecurity.logout().logoutUrl(<span class="string">&quot;/logout&quot;</span>).logoutSuccessHandler(logoutSuccessHandler);</span><br><span class="line">    <span class="comment">// 添加JWT filter</span></span><br><span class="line">    httpSecurity.addFilterBefore(authenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);</span><br><span class="line">    <span class="comment">// 添加CORS filter</span></span><br><span class="line">    httpSecurity.addFilterBefore(corsFilter, JwtAuthenticationTokenFilter.class);</span><br><span class="line">    httpSecurity.addFilterBefore(corsFilter, LogoutFilter.class);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在SecurityConfig类中明确指定了认证失败后handle：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.exceptionHandling().authenticationEntryPoint(unauthorizedHandler).and()</span><br></pre></td></tr></table></figure><ol start="3"><li>也就是如下的方式来处理：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ruoyi.framework.security.handle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.AuthenticationException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.AuthenticationEntryPoint;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson2.JSON;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.constant.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.core.domain.AjaxResult;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.ServletUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 认证失败处理类 返回未授权</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AuthenticationEntryPointImpl</span> <span class="keyword">implements</span> <span class="title class_">AuthenticationEntryPoint</span>, Serializable</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> -<span class="number">8970718410437077606L</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">commence</span><span class="params">(HttpServletRequest request, HttpServletResponse response, AuthenticationException e)</span></span><br><span class="line">            <span class="keyword">throws</span> IOException</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">code</span> <span class="operator">=</span> HttpStatus.UNAUTHORIZED;</span><br><span class="line">        <span class="type">String</span> <span class="variable">msg</span> <span class="operator">=</span> StringUtils.format(<span class="string">&quot;请求访问：&#123;&#125;，认证失败，无法访问系统资源&quot;</span>, request.getRequestURI());</span><br><span class="line">        ServletUtils.renderString(response, JSON.toJSONString(AjaxResult.error(code, msg)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>可以看到如果认证失败就简单返回一句话【请求访问：{}，认证失败，无法访问系统资源】。</li><li>通过postman或apifox等发请求的软件，随便给后端发一个请求，很容易就能得到一个这样的返回：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306151701160.png"                      alt="图片"                ></p><h2 id="4-新问题：postman如何调接口？"><a href="#4-新问题：postman如何调接口？" class="headerlink" title="4.新问题：postman如何调接口？"></a>4.新问题：postman如何调接口？</h2><ul><li>现在有一个这样的问题，遇到认证失败，但是自己想用postman、apifox、apipost等软件就想要调通API，怎么办？现在介绍一种方法，因为超级管理员是无视一切权限的，只要用上超级管理员的token，一切权限都能轻轻松松越过去。</li><li>然而，如果用上了超级管理员token，一切查询方面的结果都是和超级管理员有关的，有时候可能并不是自己想要的，这就需要给授权，后面再说。</li></ul><h2 id="5-Swagger好像也调不通"><a href="#5-Swagger好像也调不通" class="headerlink" title="5.Swagger好像也调不通"></a>5.Swagger好像也调不通</h2><ol><li>swagger也不通，如下：</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306151704484.png"                      alt="image-20230615170430330"                ></p><ol start="2"><li>也是因为没有权限，如下方式加上token就能调通：</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306151705365.png"                      alt="image-20230615170506089"                ></p><h1 id="十四、深入认证源码过滤器链"><a href="#十四、深入认证源码过滤器链" class="headerlink" title="十四、深入认证源码过滤器链"></a>十四、深入认证源码过滤器链</h1><h2 id="1-手动修改过滤器链和认识addFilterAfter方法"><a href="#1-手动修改过滤器链和认识addFilterAfter方法" class="headerlink" title="1.手动修改过滤器链和认识addFilterAfter方法"></a>1.手动修改过滤器链和认识addFilterAfter方法</h2><h3 id="1-手动修改过滤器链和认识addFilterAfter方法-1"><a href="#1-手动修改过滤器链和认识addFilterAfter方法-1" class="headerlink" title="1.手动修改过滤器链和认识addFilterAfter方法"></a>1.手动修改过滤器链和认识addFilterAfter方法</h3><p>我们知道，SpringSecurity的机制无非就是过滤器链，一个一个执行过滤器，当前ry的过滤器链如下：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161040165.png"                      alt="图片"                ></p><ul><li>这里我先看cors（处理跨域）的过滤器有两个，但是处理跨域的过滤器只会执行一次（因为继承了<strong>OncePerRequestFilter</strong>），所以没有加入两个解决跨域过滤器的必要。所以我删除了一个，我怎么删除的呢？我直接在ry添加两个过滤器的地方注释了一个：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161043455.png"                      alt="image-20230616104344315"                ></p><ul><li>从上面的红色框可以看出，我就是删除了在JwtAuthenticationTokenFilter过滤器前面的一个cors过滤器。</li><li><strong>addFilterBefore（参数一，参数二）方法的功能是添加一个过滤器，并且添加到参数二过滤器之前。</strong></li><li>当我删除了一个跨域过滤器之后，新的过滤器链如下：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161045869.png"                      alt="图片"                ></p><h3 id="2-新方法：addFilterAfter"><a href="#2-新方法：addFilterAfter" class="headerlink" title="2.新方法：addFilterAfter"></a>2.新方法：addFilterAfter</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        httpSecurity.addFilterBefore(authenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);           </span></span><br><span class="line">       httpSecurity.addFilterAfter(authenticationTokenFilter, UsernamePasswordAuthenticationFilter.class);</span><br></pre></td></tr></table></figure><ul><li>刚刚说到addFilterBefore是在添加到指定过滤器之前，而addFilterAfter相反，添加到指定过滤器之后。</li><li>通过addFilterAfter和addFilterBefore，我们可以控制additionalFilters过滤器链每一个过滤器的顺序。</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161055326.png"                      alt="图片"                ></p><ul><li>其实上面几行，已经用过了addFilterAfter方法，然而，这里虽然把addFilterBefore改成了addFilterAfter，但是其实结果还是一样的。</li><li>因为没有启用表单认证所以UsernamePasswordAuthenticationFilter被移除了。UsernamePasswordAuthenticationFilter自然也不起作用了，相当于我们刚刚的addFilterAfter其实就是取代了UsernamePasswordAuthenticationFilter的位置，由authenticationTokenFilter（JwtAuthenticationTokenFilter）实例来完成认证。</li></ul><h2 id="2-安全过滤器链条的每个过滤器作用"><a href="#2-安全过滤器链条的每个过滤器作用" class="headerlink" title="2.安全过滤器链条的每个过滤器作用"></a>2.安全过滤器链条的每个过滤器作用</h2><p>Tips：SpringSecurity成功认证的标志是上下文存储着经过认证的用户信息，像下面这样：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">UsernamePasswordAuthenticationToken</span> <span class="variable">authenticationToken</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordAuthenticationToken</span>(loginUser, <span class="literal">null</span>, loginUser.getAuthorities());</span><br><span class="line">SecurityContextHolder.getContext().setAuthentication(authenticationToken);</span><br></pre></td></tr></table></figure><ul><li>当前过滤器链共12个过滤器：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161111223.png"                      alt="图片"                ></p><ul><li><strong>WebAsyncManagerIntegrationFilter</strong>，用于将SecurityContext传递到异步线程中(异步线程就可以获取安全上下文)。</li><li><strong>SecurityContextPersistenceFilter</strong>，它主要是使用SecurityContextRepository在session中保存或更新一个SecurityContext，并将SecurityContext给以后的过滤器使用，来为后续filter建立所需的上下文。</li><li><strong>HeaderWriterFilter</strong>，它用于向请求的Header中添加相应的信息。</li><li><strong>CorsFilter</strong>，它用于处理跨域，ry有自定义此过滤器，如下：文件ResourcesConfig.java</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 跨域配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Bean</span></span><br><span class="line"><span class="keyword">public</span> CorsFilter <span class="title function_">corsFilter</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">CorsConfiguration</span> <span class="variable">config</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CorsConfiguration</span>();</span><br><span class="line">    config.setAllowCredentials(<span class="literal">true</span>);</span><br><span class="line">    <span class="comment">// 设置访问源地址</span></span><br><span class="line">    config.addAllowedOriginPattern(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    <span class="comment">// 设置访问源请求头</span></span><br><span class="line">    config.addAllowedHeader(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    <span class="comment">// 设置访问源请求方法</span></span><br><span class="line">    config.addAllowedMethod(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">    <span class="comment">// 有效期 1800秒</span></span><br><span class="line">    config.setMaxAge(<span class="number">1800L</span>);</span><br><span class="line">    <span class="comment">// 添加映射路径，拦截一切请求</span></span><br><span class="line">    <span class="type">UrlBasedCorsConfigurationSource</span> <span class="variable">source</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UrlBasedCorsConfigurationSource</span>();</span><br><span class="line">    source.registerCorsConfiguration(<span class="string">&quot;/**&quot;</span>, config);</span><br><span class="line">    <span class="comment">// 返回新的CorsFilter</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">CorsFilter</span>(source);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>上面的配置可以让前端请求基本上是随便跨域了。ry把此过滤器设置了两次，一次在LogoutFilter.class之前，一次在JwtAuthenticationTokenFilter.class之前，但是被我删除了JwtAuthenticationTokenFilter.class前面的，但是执行的效果还是一样的。</li><li><strong>LogoutFilter，用于处理注销主体。</strong></li><li>LogoutFilter会去执行两个handler，分别是SecurityContextLogoutHandler和LogoutSuccessEventPublishingLogoutHandler。SecurityContextLogoutHandler用于清除上下文认证信息。做的一些关键代码如下：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="built_in">this</span>.clearAuthentication) &#123;</span><br><span class="line">    <span class="type">SecurityContext</span> <span class="variable">context</span> <span class="operator">=</span> SecurityContextHolder.getContext();</span><br><span class="line">    context.setAuthentication((Authentication)<span class="literal">null</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SecurityContextHolder.clearContext();</span><br></pre></td></tr></table></figure><ul><li>LogoutSuccessEventPublishingLogoutHandler啥都没干，如果authentication已经是Null的情况下，正好上一个handler已经将authentication清理了，所以可以理解LogoutSuccessEventPublishingLogoutHandler啥都没做。<strong>如果前一个handler执行出现问题，本handler也可以理解为一种补偿机制，发布一个事件说authentication已经登出了</strong></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">logout</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Authentication authentication)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.eventPublisher != <span class="literal">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (authentication != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="built_in">this</span>.eventPublisher.publishEvent(<span class="keyword">new</span> <span class="title class_">LogoutSuccessEvent</span>(authentication));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>ry对成功注销做了自定义实现：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ruoyi.framework.security.handle;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.Authentication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.token.TokenService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.logout.LogoutSuccessHandler;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson2.JSON;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.constant.Constants;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.core.domain.AjaxResult;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.core.domain.model.LoginUser;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.ServletUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.framework.manager.AsyncManager;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.framework.manager.factory.AsyncFactory;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.framework.web.service.TokenService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 自定义退出处理类 返回成功</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LogoutSuccessHandlerImpl</span> <span class="keyword">implements</span> <span class="title class_">LogoutSuccessHandler</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TokenService tokenService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 退出处理</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">onLogoutSuccess</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Authentication authentication)</span></span><br><span class="line">            <span class="keyword">throws</span> IOException, ServletException</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">LoginUser</span> <span class="variable">loginUser</span> <span class="operator">=</span> tokenService.getLoginUser(request);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotNull(loginUser))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">userName</span> <span class="operator">=</span> loginUser.getUsername();</span><br><span class="line">            <span class="comment">// 删除用户缓存记录</span></span><br><span class="line">            tokenService.delLoginUser(loginUser.getToken());</span><br><span class="line">            <span class="comment">// 记录用户退出日志</span></span><br><span class="line">            AsyncManager.me().execute(AsyncFactory.recordLogininfor(userName, Constants.LOGOUT, <span class="string">&quot;退出成功&quot;</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        ServletUtils.renderString(response, JSON.toJSONString(AjaxResult.success(<span class="string">&quot;退出成功&quot;</span>)));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>无非就是在退出的时候做一下收尾工作，清缓存，写登出日志，最后再返回一个退出成功的信息。</li><li><strong>JwtAuthenticationTokenFilter，用于认证用户</strong></li><li>当用户登陆成功之后，发请求会带上token，<strong>JwtAuthenticationTokenFilter</strong>是专门用于<strong>解析token并把认证成功的用户信息设置到上下文中</strong>，用于后续的鉴权（认证成功的LoginUser里面有字段里面带着用户的权限的）。相关代码如下：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ruoyi.framework.security.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.context.SecurityContextHolder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.web.authentication.WebAuthenticationDetailsSource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.filter.OncePerRequestFilter;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.core.domain.model.LoginUser;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.SecurityUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.framework.web.service.TokenService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * token过滤器 验证token有效性</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">JwtAuthenticationTokenFilter</span> <span class="keyword">extends</span> <span class="title class_">OncePerRequestFilter</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TokenService tokenService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doFilterInternal</span><span class="params">(HttpServletRequest request, HttpServletResponse response, FilterChain chain)</span></span><br><span class="line">            <span class="keyword">throws</span> ServletException, IOException</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">LoginUser</span> <span class="variable">loginUser</span> <span class="operator">=</span> tokenService.getLoginUser(request);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotNull(loginUser) &amp;&amp; StringUtils.isNull(SecurityUtils.getAuthentication()))</span><br><span class="line">        &#123;</span><br><span class="line">            tokenService.verifyToken(loginUser);</span><br><span class="line">            <span class="type">UsernamePasswordAuthenticationToken</span> <span class="variable">authenticationToken</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UsernamePasswordAuthenticationToken</span>(loginUser, <span class="literal">null</span>, loginUser.getAuthorities());</span><br><span class="line">            authenticationToken.setDetails(<span class="keyword">new</span> <span class="title class_">WebAuthenticationDetailsSource</span>().buildDetails(request));</span><br><span class="line">            SecurityContextHolder.getContext().setAuthentication(authenticationToken);</span><br><span class="line">        &#125;</span><br><span class="line">        chain.doFilter(request, response);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><strong>RequestCacheAwareFilter</strong>，通过HttpSessionRequestCache内部维护了一个RequestCache，用于缓存HttpServletRequest。</li><li><strong>SecurityContextHolderAwareRequestFilter，针对ServletRequest进行了一次包装，使得request具有更加丰富的API。</strong>通过SecurityContextHolderAwareRequestWrapper把ServletRequest包装起来，多了一些方法如getUserPrincipal，getAuthentication方便后续的确认是否目前已经认证。因为在过滤器链条上面request和response一直在链条上传输，这也是包装request的原因。</li><li><strong>AnonymousAuthenticationFilter</strong>，当SecurityContextHolder中认证信息为空,则会创建一个匿名用户存入到SecurityContextHolder中。<strong>SpringSecurity为了兼容未登录的访问，也走了一套认证流程，只不过是一个匿名的身份</strong>。</li><li><strong>SessionManagementFilter</strong>，SecurityContextRepository限制同一用户开启多个会话的数量，但是<strong>前后端分离往往会禁用session，改用Redis存储用户会话状态。</strong></li><li><strong>ExceptionTranslationFilter，用于处理异常</strong>，它的过滤器方法直接放行，但是catch了许多异常例如认证过程的异常</li><li><strong>FilterSecurityInterceptor</strong>，获取所配置资源访问的授权信息，根据SecurityContextHolder中存储的用户信息来决定其是否有权限，然而ry自创了一套鉴权方式，所以原生FilterSecurityInterceptor这里不做展开。</li><li><strong>这些过滤器由一个代理管理</strong>，从上依次往下执行。下面我来来看一下代理（FilterChainProxy.VirtualFilterChain）的关键性代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doFilter</span><span class="params">(ServletRequest request, ServletResponse response)</span> <span class="keyword">throws</span> IOException, ServletException &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.currentPosition == <span class="built_in">this</span>.size) &#123;</span><br><span class="line">     ...省略非关键代码 </span><br><span class="line">        <span class="comment">// Deactivate path stripping as we exit the security filter chain</span></span><br><span class="line">        <span class="built_in">this</span>.firewalledRequest.reset();</span><br><span class="line">        <span class="built_in">this</span>.originalChain.doFilter(request, response);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        ++<span class="built_in">this</span>.currentPosition;</span><br><span class="line">        <span class="type">Filter</span> <span class="variable">nextFilter</span> <span class="operator">=</span> (Filter)<span class="built_in">this</span>.additionalFilters.get(<span class="built_in">this</span>.currentPosition - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (FilterChainProxy.logger.isTraceEnabled()) &#123;</span><br><span class="line">            FilterChainProxy.logger.trace(LogMessage.format(<span class="string">&quot;Invoking %s (%d/%d)&quot;</span>, nextFilter.getClass().getSimpleName(), <span class="built_in">this</span>.currentPosition, <span class="built_in">this</span>.size));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        nextFilter.doFilter(request, response, <span class="built_in">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>从上面的代码可以看得出，有一个名为additionalFilters的ArrayList存储了12个过滤器，一个一个依次执行，执行完毕之后继续执行originalChain里面的过滤器。</li></ul><h1 id="十五、RBAC"><a href="#十五、RBAC" class="headerlink" title="十五、RBAC"></a>十五、RBAC</h1><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1.简介"></a>1.简介</h2><ul><li><strong>RBAC是一种基于角色权限控制，进而控制用户的权限</strong>。具体而言，对系统操作的各种权限不是直接授予具体的用户，而是在<strong>用户集合与权限集合之间建立一个角色集合</strong>。每一种角色对应一组相应的权限。一旦用户被分配了适当的角色后，该用户就拥有此角色的所有操作权限。这样做的好处是，不必在每次创建用户时都进行分配权限的操作，只要分配用户相应的角色即可，而且角色的权限变更比用户的权限变更要少得多，这样将简化用户的权限管理，减少系统的开销。</li></ul><h2 id="2-什么是页面权限、按钮权限"><a href="#2-什么是页面权限、按钮权限" class="headerlink" title="2.什么是页面权限、按钮权限"></a>2.什么是页面权限、按钮权限</h2><ul><li>所谓页面权限，就是进入某个页面所需要的权限。</li><li>按钮权限则是能点击某个按钮所需要的权限。</li></ul><h2 id="3-权限表现形式"><a href="#3-权限表现形式" class="headerlink" title="3.权限表现形式"></a>3.权限表现形式</h2><ul><li><strong>对于权限，在程序中往往表现为一个字符串</strong>，比如说“system:user:add”表示对用户具有增加权限，当然也可以说“dsadsaddsadsadsa”表示对用户有增加权限，字符串是随意定的，但是为了符合人类的想法，要做到尽量的见名知意。</li><li>对于ry而言，在系统管理→菜单管理对每一个菜单对应了某种权限，如下图所示：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161358029.png"                      alt="图片"                ></p><ul><li>下面我们以岗位管理为例子，说明岗位管理的每个字符串的作用，岗位管理的权限字符串如下：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161358774.png"                      alt="图片"                ></p><ul><li>上图的岗位管理对应的字符串为“system:post:list”，该字符串的意思是，有了这个字符串才能查看岗位管理的菜单。</li><li>“system:post:query”字符串表示对单个岗位详情的查询权限。“system:post:add”表示增权限，“system:post:edit”表示修改权限，“system:post:remove”表示删岗位权限，“system:post:export”表示导出岗位数据Excel文件的权限。</li><li>岗位管理的“system:post:list”是<strong>页面权限</strong>，如果没有该权限，连菜单都看不到，自然页面也看不到。</li><li>其他的“system:post:add”、“system:post:edit”、“system:post:remove”、“system:post:export”都是<strong>按钮权限</strong>。</li><li>按钮权限在前端页面的表现就是能不能看到按钮，在后端的表现就是能不能执行按钮对应的controller的增删改查方法。</li></ul><h2 id="4-ry如何进行权限控制"><a href="#4-ry如何进行权限控制" class="headerlink" title="4.ry如何进行权限控制"></a>4.ry如何进行权限控制</h2><ul><li>在ry中，页面菜单、目录菜单和按钮菜单基本上都是存在数据库中（首页、404等特殊页面除外），在系统管理→菜单管理可以填写每一个菜单对应的权限字符串，不过目前目录菜单不能添加权限字符串。</li><li>当我们在菜单管理写好权限字符串之后，在角色管理我们可以添加角色，并把相关的权限赋予给角色。</li><li>角色和权限是多对多关系，<strong>一个权限可以给多个角色，一个角色可以有多个权限</strong>。</li><li>当我们让给角色赋权完毕之后，我们可以在角色管理页面直接给角色分配用户，比如把角色1和角色2分给用户1，那么用户1就会拥有角色1和角色2的全部权限。角色1和角色2的权限可以重复，但是没有双倍权限这种快乐。角色和用户的关系也是多对多，<strong>一个用户可以有多个角色，一个角色也可以给多个用户</strong>。</li><li>以上就是ry控制权限的基本思想。</li></ul><h1 id="十六、深入源码理解权限控制"><a href="#十六、深入源码理解权限控制" class="headerlink" title="十六、深入源码理解权限控制"></a>十六、深入源码理解权限控制</h1><h2 id="1-何时获得权限"><a href="#1-何时获得权限" class="headerlink" title="1.何时获得权限"></a>1.何时获得权限</h2><ol><li>对于ry系统的ry用户（userId&#x3D;2的用户），它是在登录的时候就在数据库得到了属于自己的权限。回顾登录过程，在执行loadUserByUsername方法的时候，权限就已经被拿到了：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ruoyi.framework.web.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetails;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UserDetailsService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.security.core.userdetails.UsernameNotFoundException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.core.domain.entity.SysUser;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.core.domain.model.LoginUser;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.enums.UserStatus;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.exception.ServiceException;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.common.utils.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.ruoyi.system.service.ISysUserService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 用户验证处理</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserDetailsServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserDetailsService</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">Logger</span> <span class="variable">log</span> <span class="operator">=</span> LoggerFactory.getLogger(UserDetailsServiceImpl.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ISysUserService userService;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SysPasswordService passwordService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> SysPermissionService permissionService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> UserDetails <span class="title function_">loadUserByUsername</span><span class="params">(String username)</span> <span class="keyword">throws</span> UsernameNotFoundException</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">SysUser</span> <span class="variable">user</span> <span class="operator">=</span> userService.selectUserByUserName(username);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNull(user))</span><br><span class="line">        &#123;</span><br><span class="line">            log.info(<span class="string">&quot;登录用户：&#123;&#125; 不存在.&quot;</span>, username);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ServiceException</span>(<span class="string">&quot;登录用户：&quot;</span> + username + <span class="string">&quot; 不存在&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (UserStatus.DELETED.getCode().equals(user.getDelFlag()))</span><br><span class="line">        &#123;</span><br><span class="line">            log.info(<span class="string">&quot;登录用户：&#123;&#125; 已被删除.&quot;</span>, username);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ServiceException</span>(<span class="string">&quot;对不起，您的账号：&quot;</span> + username + <span class="string">&quot; 已被删除&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (UserStatus.DISABLE.getCode().equals(user.getStatus()))</span><br><span class="line">        &#123;</span><br><span class="line">            log.info(<span class="string">&quot;登录用户：&#123;&#125; 已被停用.&quot;</span>, username);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">ServiceException</span>(<span class="string">&quot;对不起，您的账号：&quot;</span> + username + <span class="string">&quot; 已停用&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        passwordService.validate(user);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> createLoginUser(user);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> UserDetails <span class="title function_">createLoginUser</span><span class="params">(SysUser user)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">LoginUser</span>(user.getUserId(), user.getDeptId(), user, permissionService.getMenuPermission(user));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>permissionService.getMenuPermission(user)则是根据当前登录的用户查询该用户的权限。转到方法进去看看：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取菜单数据权限</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> user 用户信息</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 菜单权限信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">getMenuPermission</span><span class="params">(SysUser user)</span></span><br><span class="line">&#123;</span><br><span class="line">    Set&lt;String&gt; perms = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;String&gt;();</span><br><span class="line">    <span class="comment">// 管理员拥有所有权限</span></span><br><span class="line">    <span class="keyword">if</span> (user.isAdmin())</span><br><span class="line">    &#123;</span><br><span class="line">        perms.add(<span class="string">&quot;*:*:*&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        List&lt;SysRole&gt; roles = user.getRoles();</span><br><span class="line">        <span class="keyword">if</span> (!roles.isEmpty() &amp;&amp; roles.size() &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">// 多角色设置permissions属性，以便数据权限匹配权限</span></span><br><span class="line">            <span class="keyword">for</span> (SysRole role : roles)</span><br><span class="line">            &#123;</span><br><span class="line">                Set&lt;String&gt; rolePerms = menuService.selectMenuPermsByRoleId(role.getRoleId());</span><br><span class="line">                role.setPermissions(rolePerms);</span><br><span class="line">                perms.addAll(rolePerms);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            perms.addAll(menuService.selectMenuPermsByUserId(user.getUserId()));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> perms;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>从上面的代码可以看到，如果是超级管理员就给权限字符串为“*:*:*”，那么什么样的人是超级管理员呢？我们直接看源码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">isAdmin</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> isAdmin(<span class="built_in">this</span>.userId);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">boolean</span> <span class="title function_">isAdmin</span><span class="params">(Long userId)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> userId != <span class="literal">null</span> &amp;&amp; <span class="number">1L</span> == userId;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>原来userId&#x3D;1的用户就是超级管理员，也就是说超级管理员是代码写死的，牛逼和气质是与生俱来的，在前端判断字符串也要先看看权限字符串是不是“*:*:*”，如果是就知道是大爷来了都让道，直接获得所有权限。</li><li>那么如果不是超级管理员呢？代码中是执行了perms.addAll(menuService.selectMenuPermsByUserId(user.getUserId()))，也就是获得当前用户的userId，拿着userId去数据库查询权限。继续进入Service层代码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据用户ID查询权限</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> userId 用户ID</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 权限列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> Set&lt;String&gt; <span class="title function_">selectMenuPermsByUserId</span><span class="params">(Long userId)</span></span><br><span class="line">&#123;</span><br><span class="line">    List&lt;String&gt; perms = menuMapper.selectMenuPermsByUserId(userId);</span><br><span class="line">    Set&lt;String&gt; permsSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (String perm : perms)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isNotEmpty(perm))</span><br><span class="line">        &#123;</span><br><span class="line">            permsSet.addAll(Arrays.asList(perm.trim().split(<span class="string">&quot;,&quot;</span>)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> permsSet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>可以看出，此时去数据库查询权限，然后迭代查询的每个权限并且split分割了一下，通过“，”做的分割，所以<strong>我们写权限的时候可以这样写“system:user:add,system:user:edit”</strong>，可以在一个菜单的权限标识写好几个权限字符串，用逗号分割。</li><li>话说回来，去数据库怎么查询的权限呢？我们看到传入的只有userId，我们继续上源码：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=<span class="string">&quot;selectMenuPermsByUserId&quot;</span> parameterType=<span class="string">&quot;Long&quot;</span> resultType=<span class="string">&quot;String&quot;</span>&gt;</span><br><span class="line">   select distinct m.perms</span><br><span class="line">   from sys_menu m</span><br><span class="line">       left join sys_role_menu rm on m.menu_id = rm.menu_id</span><br><span class="line">       left join sys_user_role ur on rm.role_id = ur.role_id</span><br><span class="line">       left join sys_role r on r.role_id = ur.role_id</span><br><span class="line">   where m.status = <span class="string">&#x27;0&#x27;</span> and r.status = <span class="string">&#x27;0&#x27;</span> and ur.user_id = #&#123;userId&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><ul><li>可以看到，到目前为止就已经是到了执行SQL了。我手动在navicat查询一下userId&#x3D;2用户的权限是什么，如下：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161457067.png"                      alt="图片"                ></p><ul><li>可以看到SQL实际上就是不断在左连接，所谓左连接通俗而言就是左边表展示全部数据，右边表若匹配成功就连接，没有匹配成功就右边表空着。</li><li>学习左连接：<a class="link"   href="https://blog.csdn.net/m0_46628605/article/details/119728797" >https://blog.csdn.net/m0_46628605/article/details/119728797<i class="fas fa-external-link-alt"></i></a></li><li>从ry获取userId &#x3D; 2用户权限的SQL来看，实际就是所有权限左连接了角色，然后左连接用户，从而得到该用户的所有权限</li><li>值得注意的是，我们发现where后面有俩校验，校验status是不是＝0，其实在ry系统中status&#x3D;0表示正常的意思，status&#x3D;1表示停用的意思。</li><li>至此，我们说完了认证的时候获得权限的代码，ry把获得的权限放到了LoginUser类的实例中的字段permissions中存储起来，并把LoginUser的实例对象存储到了Redis中。</li><li>也就是说，登录过的用户Redis中存储着该用户的权限【那么这里就涉及到一个问题：当我用超级管理员修改了角色的权限，对于已经登录的和该角色相关联的用户，是不是立刻生效呢？<strong>其实对于页面权限是立刻生效的，但是对于按钮权限并不是立刻生效的，而是要重新登录重新从数据库获取权限，然后再存入Redis</strong>】。</li></ul><h2 id="2-用户菜单（页面权限）的获取"><a href="#2-用户菜单（页面权限）的获取" class="headerlink" title="2.用户菜单（页面权限）的获取"></a>2.用户菜单（页面权限）的获取</h2><ul><li>当用户登录完毕之后，左侧菜单栏展示出来了大量的菜单，对于不同权限的用户，展示的菜单不尽相同。那么，左侧菜单是怎么来的呢？这就需要打开“Layout”组件，然后找到侧边栏组件，如下：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161526218.png"                      alt="图片"                ></p><ul><li>通过以上代码，发现每一个菜单为一个“SidebarItem”组件，我们也可以用开发者工具确定，如下：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161526488.png"                      alt="图片"                ></p><ul><li><p>发现Layout组件的菜单栏组件是Sidebar，里面有一个ElMenu组件（对应整个菜单整体），这里面的SidebarItem全部都是一级菜单，一级菜单里面有ElSubmenu组件，对应我们的二级菜单整体，里面的SidebarItem组件为具体的每一个二级菜单。</p><p>我们可以发现，ElMenu中的菜单项的迭代数据来自变量sidebarRouters，所以我们到这里就知道，<strong>sidebarRouters变量的数据一定是后端查询来的菜单数据</strong>。我们继续深入，它是vuex的getters：</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">...<span class="title function_">mapGetters</span>([<span class="string">&quot;sidebarRouters&quot;</span>, <span class="string">&quot;sidebar&quot;</span>]),</span><br></pre></td></tr></table></figure><p>继续追代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sidebarRouters</span>:<span class="function"><span class="params">state</span> =&gt;</span> state.<span class="property">permission</span>.<span class="property">sidebarRouters</span>,</span><br></pre></td></tr></table></figure><p>追：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">state</span>: &#123;</span><br><span class="line">  <span class="attr">routes</span>: [],</span><br><span class="line">  <span class="attr">addRoutes</span>: [],</span><br><span class="line">  <span class="attr">defaultRoutes</span>: [],</span><br><span class="line">  <span class="attr">topbarRouters</span>: [],</span><br><span class="line">  <span class="attr">sidebarRouters</span>: []</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>到这里就追到底了，那么sidebarRouters是在哪里赋值的呢？我们继续看：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161532870.png"                      alt="图片"                ></p><ul><li>从上面发现，<strong>sidebarRouters</strong>的数据是来自<strong>两部分</strong>，一部分来自getRouters方法向后端发请求，返回的res的data经过filterAsyncRouter（<strong>ry解释了该方法的作用：遍历后台传来的路由字符串，转换为组件对象</strong>）方法过滤后的路由；另一部分来自constantRoutes，constantRoutes是写死的，<strong>来自router文件夹下的index.js文件</strong>：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 公共路由</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> constantRoutes = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/redirect&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;/redirect/:path(.*)&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/redirect&#x27;</span>)</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/login&#x27;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/register&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/register&#x27;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/404&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/error/404&#x27;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/401&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/error/401&#x27;</span>),</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&#x27;index&#x27;</span>,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;index&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/index&#x27;</span>),</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;Index&#x27;</span>,</span><br><span class="line">        <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&#x27;首页&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;dashboard&#x27;</span>, <span class="attr">affix</span>: <span class="literal">true</span> &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">path</span>: <span class="string">&#x27;/user&#x27;</span>,</span><br><span class="line">    <span class="attr">component</span>: <span class="title class_">Layout</span>,</span><br><span class="line">    <span class="attr">hidden</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">redirect</span>: <span class="string">&#x27;noredirect&#x27;</span>,</span><br><span class="line">    <span class="attr">children</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">path</span>: <span class="string">&#x27;profile&#x27;</span>,</span><br><span class="line">        <span class="attr">component</span>: <span class="function">() =&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/system/user/profile/index&#x27;</span>),</span><br><span class="line">        <span class="attr">name</span>: <span class="string">&#x27;Profile&#x27;</span>,</span><br><span class="line">        <span class="attr">meta</span>: &#123; <span class="attr">title</span>: <span class="string">&#x27;个人中心&#x27;</span>, <span class="attr">icon</span>: <span class="string">&#x27;user&#x27;</span> &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ul><li>现在的问题就是getRouters方法从后端拿菜单，我们需要深入，追：</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取路由</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getRouters</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/getRouters&#x27;</span>,</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&#x27;get&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>现在可以进入后端SysLoginController的getRouters方法了：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取路由信息</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 路由信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@GetMapping(&quot;getRouters&quot;)</span></span><br><span class="line"><span class="keyword">public</span> AjaxResult <span class="title function_">getRouters</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">Long</span> <span class="variable">userId</span> <span class="operator">=</span> SecurityUtils.getUserId();</span><br><span class="line">    List&lt;SysMenu&gt; menus = menuService.selectMenuTreeByUserId(userId);</span><br><span class="line">    <span class="keyword">return</span> AjaxResult.success(menuService.buildMenus(menus));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>第一句话拿到了userId，然后通过userId获得了菜单树：</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 根据用户ID查询菜单</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> userId 用户名称</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 菜单列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> List&lt;SysMenu&gt; <span class="title function_">selectMenuTreeByUserId</span><span class="params">(Long userId)</span></span><br><span class="line">&#123;</span><br><span class="line">    List&lt;SysMenu&gt; menus = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (SecurityUtils.isAdmin(userId))</span><br><span class="line">    &#123;</span><br><span class="line">        menus = menuMapper.selectMenuTreeAll();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        menus = menuMapper.selectMenuTreeByUserId(userId);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> getChildPerms(menus, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>从以上代码可以发现，如果是超级管理员直接获得全部菜单（ry在系统中对userId&#x3D;1的用户采取了硬编码方案，手动制造了一个超级牛逼管理员），普通用户则需要根据权限获得菜单：</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">   <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectMenuTreeByUserId&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Long&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;SysMenuResult&quot;</span>&gt;</span></span><br><span class="line">   select distinct m.menu_id, m.parent_id, m.menu_name, m.path, m.component, m.`query`, m.visible, m.status, ifnull(m.perms,&#x27;&#x27;) as perms, m.is_frame, m.is_cache, m.menu_type, m.icon, m.order_num, m.create_time</span><br><span class="line">   from sys_menu m</span><br><span class="line">       left join sys_role_menu rm on m.menu_id = rm.menu_id</span><br><span class="line">       left join sys_user_role ur on rm.role_id = ur.role_id</span><br><span class="line">       left join sys_role ro on ur.role_id = ro.role_id</span><br><span class="line">       left join sys_user u on ur.user_id = u.user_id</span><br><span class="line">   where u.user_id = #&#123;userId&#125; and m.menu_type in (&#x27;M&#x27;, &#x27;C&#x27;) and m.status = 0  AND ro.status = 0</span><br><span class="line">   order by m.parent_id, m.order_num</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>上面SQL再明显不过了，查询menu_type类型为M和C的菜单，M表示目录，C表示菜单，从ry的数据库建表语句也可以得到证实：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161542657.png"                      alt="图片"                ></p><ul><li>查询到目录和菜单之后，通过构造树结构，然后再把树结构返回给了前端，关于树结构的构造逻辑不再赘述</li><li>目前还有一个问题，GenerateRoutes方法是什么时候执行的？如下：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161543778.png"                      alt="图片"                ></p><ul><li>可以发现，是在已经登录，并且不是去“&#x2F;login”的情况下，会执行生成路由方法。</li><li>以上我只是说明了左侧菜单栏能展示那么多菜单，但是要实现跳转，路由器的路由表也必须到位，实际上路由表就在下面一句话就成功添加到了路由器：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161544387.png"                      alt="图片"                ></p><ul><li>另外，左侧的菜单能进行跳转，利用了Applink组件（Sidebar文件夹下的Link.vue组件），如下：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161545102.png"                      alt="图片"                ></p><ul><li>Applink被渲染为了a标签，to&#x3D;xxxx被渲染为了href&#x3D;xxxx。关于组件的具体代码，不做展开。</li></ul><h2 id="3-页面权限补充"><a href="#3-页面权限补充" class="headerlink" title="3.页面权限补充"></a>3.页面权限补充</h2><ul><li>上一讲，我们只是说了页面权限的前端，前端为什么能展示出来那么多菜单，因为前端请求后端接口“getRouters”，后端根据前端人员的角色，查询出来了该用户的菜单权限，然后返回给前端，前端所以才显示那么多菜单。</li><li>一个新注册的用户，默认是没有任何角色的，那么登录就只有一个菜单，那就是首页，就像下面这样：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161756266.png"                      alt="图片"                ></p><ul><li>页面权限往往不仅仅和前端菜单展示有关，前端点击岗位管理的时候，调用了岗位管理的“system&#x2F;post&#x2F;list”接口，难道调用该接口不需要权限吗？？？</li><li>其实，调用该接口是需要权限的，并且权限为“system:post:list”，每一个接口的调用需要什么权限，我们都可以在上面的注解可以看到：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161756481.png"                      alt="图片"                ></p><ul><li>@<strong>PreAuthorize</strong>注解是SpringSecurity框架的注解，注解的value值所需要填写一个表达式，如果表达式计算的结果是true，那么就允许访问对应的接口，如果表达式计算的结果是false，则表示没有权限。</li><li>如果没有权限，那么会怎么样呢？我现在手动把岗位管理的接口权限改成“system:post:list1”，如下：</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306161757413.png"                      alt="图片"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、后端在本地运行&quot;&gt;&lt;a href=&quot;#一、后端在本地运行&quot; class=&quot;headerlink&quot; title=&quot;一、后端在本地运行&quot;&gt;&lt;/a&gt;一、后端在本地运行&lt;/h1&gt;&lt;h2 id=&quot;1-系统需求&quot;&gt;&lt;a href=&quot;#1-系统需求&quot; class=&quot;head</summary>
      
    
    
    
    
    <category term="实习" scheme="http://example.com/tags/%E5%AE%9E%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Java基础之String、ArrayList</title>
    <link href="http://example.com/2023/06/12/Java%E5%9F%BA%E7%A1%80%E4%B9%8BString%E3%80%81ArrayList/"/>
    <id>http://example.com/2023/06/12/Java%E5%9F%BA%E7%A1%80%E4%B9%8BString%E3%80%81ArrayList/</id>
    <published>2023-06-12T01:27:46.000Z</published>
    <updated>2023-06-12T05:15:22.266Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、String"><a href="#1、String" class="headerlink" title="1、String"></a>1、String</h1><ol><li>String类定义的变量可以用于存储字符串，同时String类提供了很多操作字符串的功能，我们可以直接使用。</li><li>应用场景：<ul><li>登陆时需要跟正确的用户名和密码进行比较</li><li>敏感词替换</li><li>搜索时将包含关键词的信息展示</li></ul></li></ol><hr><h2 id="1-String概述"><a href="#1-String概述" class="headerlink" title="1.String概述"></a>1.String概述</h2><ol><li>String是什么，可以做什么？<ul><li>字符串类型，可以定义字符串遍历指向字符串对象</li></ul></li><li>String是不可变字符串的原因？<ul><li>String变量<strong>每次的修改</strong>其实都是<strong>产生并指向了新的字符串对象</strong>。</li><li>原来的字符串对象都是没有改变的，所以称<strong>不可变字符串</strong>。</li></ul></li></ol><h2 id="2-String类创建对象的2种方式"><a href="#2-String类创建对象的2种方式" class="headerlink" title="2.String类创建对象的2种方式"></a>2.String类创建对象的2种方式</h2><ol><li>直接使用” “定义（推荐方法）<ul><li>String name &#x3D; “小方”</li></ul></li><li>通过String类的构造器创建对象</li></ol><table><thead><tr><th align="center">构造器</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">public String()</td><td align="center">创建一个空白字符串对象，不含有任何内容</td></tr><tr><td align="center">public String(String original)</td><td align="center">根据传入的字符串内容，来创建字符串对象</td></tr><tr><td align="center">public String(char[] chs)</td><td align="center">根据字符数组的内容，来创建字符串对象</td></tr><tr><td align="center">public String(byte[] chs)</td><td align="center">根据字节数组的内容，来创建字符串对象</td></tr></tbody></table><ol start="3"><li>两种创建方式有什么区别吗？<ul><li>以“”方式给出的字符串对象，在字符串常量池中存储，而且<strong>相同内容只会在其中存储一份</strong>。</li><li>通过构造器new对象，每new一次都会产生一个新对象，放在堆内存中。</li></ul></li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306120956356.png"                      alt="image-20230612095634635"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306120956454.png"                      alt="image-20230612095659145"                ></p><h2 id="3-常见的面试题"><a href="#3-常见的面试题" class="headerlink" title="3.常见的面试题"></a>3.常见的面试题</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306121001525.png"                      alt="image-20230612100105285"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306121004710.png"                      alt="image-20230612100426493"                ></p><ul><li>第二个图的第一个为什么是false呢？是因为s1指向的常量池，而s3涉及到了变量，只要涉及到变量就在堆内存中，所以他们的地址不一样，也就是false了。</li></ul><h2 id="4-String类常用API"><a href="#4-String类常用API" class="headerlink" title="4.String类常用API"></a>4.String类常用API</h2><ol><li>针对于字符串的内容比较<ul><li>不适合用”&#x3D;&#x3D; “比较，因为 “&#x3D;&#x3D;”比较的是地址。（基本数据类型比较时使用）</li><li>推荐使用String类提供的”equals”比较：只关心内容一样即可</li></ul></li></ol><table><thead><tr><th align="center">方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">public boolean equals (Object anobject)</td><td align="center">将此字符串与指定对象进行比较。只关心字符内容是否一致！</td></tr><tr><td align="center">public boolean equalsIgnoreCase (String anotherString)</td><td align="center">将此字符串与指定对象进行比较，忽略大小写比较字符串。只关心字符内容是否一致！</td></tr></tbody></table><ol start="2"><li>String类常用API-遍历、替换、截取、分割操作</li></ol><table><thead><tr><th align="center">方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">public int length()</td><td align="center">返回此字符串的长度</td></tr><tr><td align="center">public char charAt(int index)</td><td align="center">获取某个索引位置处的字符</td></tr><tr><td align="center">public char[] toCharArray():</td><td align="center">将当前字符串转换成字符数组返回</td></tr><tr><td align="center">public String substring(int beginIndex, int endIndex)</td><td align="center">根据开始和结束索引进行截取，得到新的字符串（包前不包后）</td></tr><tr><td align="center">public String substring(int beginIndex)</td><td align="center">从传入的索引处截取，截取到末尾，得到新的字符串</td></tr><tr><td align="center">public String replace(CharSequence target, CharSequence replacement)</td><td align="center">使用新值，将字符串中的旧值替换，得到新的字符串</td></tr><tr><td align="center">public String[] split(String regex)</td><td align="center">根据传入的规则切割字符串，得到字符串数组返回</td></tr></tbody></table><h2 id="5-String类案例"><a href="#5-String类案例" class="headerlink" title="5.String类案例"></a>5.String类案例</h2><ol><li><p>String类开发验证码功能</p><ul><li>需求：随机产生一个5位的验证码，每位可能是数字、大写字母、小写字母。</li><li>分析:<ul><li>定义一个String类型的变量存储验a-zA-ZO-9之间的全部字符。</li><li>循环5次，随机一个范围内的索引，获取对应字符连接起来即可。</li></ul></li></ul></li><li><p>模拟用户登录功能</p><ul><li>需求：模拟用户登录功能，最多只给三次机会。</li><li>分析：<ul><li>系统后台定义好正确的登录名称，密码。</li><li>使用循环控制三次，让用户输入正确的登录名和密码，判断是否登录成功，登录成功则不再进行登录；登录失败给出提示，并让用户继续登录。</li></ul></li></ul></li><li><p>手机号码屏蔽</p><ul><li>需求：以字符串的形式从键盘接受一个手机号，将中间四位号码屏蔽</li><li>分析：<ul><li>键盘录入一个字符串，用Scanner实现。</li><li>截取字符串前三位，截取字符串后四位，一拼接。</li></ul></li></ul></li></ol><h1 id="2、ArrayList"><a href="#2、ArrayList" class="headerlink" title="2、ArrayList"></a>2、ArrayList</h1><h2 id="1-集合概述"><a href="#1-集合概述" class="headerlink" title="1.集合概述"></a>1.集合概述</h2><ol><li>数组和集合的元素存储的个数问题？<ul><li>数组定义后类型确定，长度固定</li><li>集合类型可以不固定，大小是可变的。</li></ul></li><li>数组和集合适合的场景<ul><li>数组适合做数据个数和类型确定的场景</li><li>集合适合做数据个数不确定，且要做增删元素的场景</li></ul></li></ol><h2 id="2-ArrayList集合入门"><a href="#2-ArrayList集合入门" class="headerlink" title="2.ArrayList集合入门"></a>2.ArrayList集合入门</h2><ol><li>ArrayList是集合中的一种，它支持索引。</li><li>ArrayList集合的对象获取</li></ol><table><thead><tr><th align="center">方法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">ArrayList list&#x3D; new ArrayList();</td><td align="center">创建一个空的集合对象</td></tr></tbody></table><ol start="3"><li>ArrayList集合添加元素的方法</li></ol><table><thead><tr><th align="center">方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">public boolean add(E e)</td><td align="center">将指定的元素追加到此集合的末尾</td></tr><tr><td align="center">public void add(int index,E element)</td><td align="center">在此集合中的指定位置插入指定的元素</td></tr></tbody></table><h2 id="3-ArrayList对于泛型的支持"><a href="#3-ArrayList对于泛型的支持" class="headerlink" title="3.ArrayList对于泛型的支持"></a>3.ArrayList对于泛型的支持</h2><ol><li>泛型就相当于一个标记，就跟厕所贴上男生还是女生一样，只允许特定人进入</li><li><strong>泛型概述</strong>：ArrayList&lt; E &gt;：其实就是一个泛型类，可以在编译阶段约束集合对象只能操作某种数据类型。</li><li>举例<ul><li>ArrayList<String>：此集合只能操作字符串类型的元素。</li><li>ArrayList<Integer>：此集合只能操作整数类型的元素。</li><li>集合中只能存储引用类型，不支持基本数据类型</li></ul></li></ol><h2 id="4-ArrayList常用API"><a href="#4-ArrayList常用API" class="headerlink" title="4.ArrayList常用API"></a>4.ArrayList常用API</h2><table><thead><tr><th align="center">方法名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">public E get(int index)</td><td align="center">返回指定索引处的元素</td></tr><tr><td align="center">public int size()</td><td align="center">返回集合中的元素的个数</td></tr><tr><td align="center">public E remove(int index)</td><td align="center">删除指定索引处的元素，返回被删除的元素</td></tr><tr><td align="center">public boolean remove(Object o)</td><td align="center">删除指定的元素，返回删除是否成功</td></tr><tr><td align="center">public E set(int index,E element)</td><td align="center">修改指定索引处的元素，返回被修改的元素</td></tr></tbody></table><h2 id="5-ArrayList集合案例"><a href="#5-ArrayList集合案例" class="headerlink" title="5.ArrayList集合案例"></a>5.ArrayList集合案例</h2><ol><li><p>遍历并删除元素值</p><ul><li>需求：<ul><li>某个班级的考试在系统上进行，成绩大致为：98，77，66，89，79，50，100</li><li>现在需要先把成绩低于80分以下的数据去掉。</li></ul></li><li>分析：<ul><li>定义ArrayList集合存储多名学员的成绩。</li><li>遍历集合每个元素，如果元素值低于80分，去掉它。</li></ul></li><li>从集合中遍历元素，并筛选出元素删除它，应该怎么解决？<ul><li>从集合后面遍历然后删除，可以避免漏掉元素。</li><li>要是在集合前面遍历，那么在循环整个集合的里面让i–</li></ul></li></ul></li><li><p>影片信息在程序中的表示</p><ul><li>需求：某影院系统需要在后台存储上述三部电影，然后依次展示出来。</li><li>分析<ul><li>定义一个电影类，定义一个集合存储电影对象。</li><li>创建3个电影对象，封装相关数据，把3个对象存入到集合中去。</li><li>遍历集合中的3个对象，输出相关信息。</li></ul></li><li><strong>结论</strong>：集合中存储的元素并不是对象本身，而是对象的地址。</li></ul></li></ol><p>3.学生信息系统的数据搜索</p><ul><li>需求：后台程序需要存储如上学生信息并展示，然后要提供按照学号搜索学生信息的功能。</li><li>分析</li><li>定义Student类，定义ArrayList集合存储如上学生对象信息，并遍历展示出来。</li><li>提供一个方法，可以接收ArrayList集合，和要搜索的学号，返回搜索到的学生对象信息，并展示。</li><li>使用死循环，让用户可以不停的搜索。</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1、String&quot;&gt;&lt;a href=&quot;#1、String&quot; class=&quot;headerlink&quot; title=&quot;1、String&quot;&gt;&lt;/a&gt;1、String&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;String类定义的变量可以用于存储字符串，同时String类提供了很多操作字符</summary>
      
    
    
    
    
    <category term="java基础" scheme="http://example.com/tags/java%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>英语作文模板</title>
    <link href="http://example.com/2023/06/09/%E8%8B%B1%E8%AF%AD%E4%BD%9C%E6%96%87%E6%A8%A1%E6%9D%BF/"/>
    <id>http://example.com/2023/06/09/%E8%8B%B1%E8%AF%AD%E4%BD%9C%E6%96%87%E6%A8%A1%E6%9D%BF/</id>
    <published>2023-06-09T00:57:15.000Z</published>
    <updated>2023-06-16T08:34:26.379Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、名言评论"><a href="#1、名言评论" class="headerlink" title="1、名言评论"></a>1、名言评论</h1><p>For this part, you are allowed 30 minutes to write an essay commenting on the quote “What is worth doing is worth doing well. “You should write at least 150 words but no more than 200 words.</p><ul><li><strong>There is a simple but enlightening saying</strong> -“What is worth doing is worth doing well”.Then ,what is worth doing? My answer is enjoying the thing you love,taking responsibility and cultivating a habit of lifetime learning.</li><li><strong>To begin with</strong>,enjoying the thing our love may <strong>arouse our passion</strong> ,<strong>bring</strong> us motivation to move forward and <strong>help</strong> us grow up.Thus,<strong>Provided that</strong> one <strong>intends to</strong> acqurie and enjoy long-time happiness,<strong>it is advisable for</strong> us <strong>to</strong> do what they love and do it well.</li><li><strong>In addition,</strong> <strong>it is of great necessity for</strong> us,as young people ,<strong>to</strong> be responsible in life,work,and study.<strong>Doing our best to</strong> take responsibility,<strong>with no doubt</strong>,will <strong>foster</strong> our concrete skills,<strong>ensure</strong> more useful results,and <strong>enable</strong> us <strong>to</strong> go further on the way to success.</li><li>Meanwhile,<strong>the profound meaning in</strong> celebrities^,^ life <strong>persuaded us that</strong> the habit of lifelong learning <strong>is an engine which drives both our study and future career.</strong> <strong>Living in an era of fierce competition,every youngster should be educated to</strong> gain new skills and knowledge to adapt to the speedy social development.If one rests,they will rust.</li><li><strong>As a matter of fact</strong>,there are so many other things that are worth doing well.<strong>We can make a promising and hopeful future only by</strong> doing what is worth dong well.</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306111037481.png"                      alt="image-20230611103741233"                ></p><hr><h1 id="2、意义阐述"><a href="#2、意义阐述" class="headerlink" title="2、意义阐述"></a>2、意义阐述</h1><p>For this part, you are allowed 30 minutes to write an essay that begins with the sentence “Nowadays more and more people keep learning new skills to adapt to a fast-changing world.”You can make comments, cite examples, or use youra personal experiences to develop your essay. You should write at least 150 words but no more than 200 words.</p><ul><li><strong>There is a simple but enlightening sentence</strong> - “Nowadays more and more people keep learning new skills to adapt to a fast-changing world”,which can be naturally associated with the necessity of acquiring new skills.<strong>Provided that we intend to achieve long-term success in the ever-changing world,it is advisable for us to master as many new skills as possible.</strong></li><li><strong>As a college student, I am convicend that</strong> we should equip ourselves with three major skills: foreign language skills,interpersonal communication skills and innovation skills.To begin with, foreign language skill <strong>is like a stepping stone which enables us to</strong> travel or work freely in world without commuication barriers.</li><li>Besides,<strong>living in an are of globalization</strong>,people are closely connected with each other in study ,work and life.<strong>Without interpersonal commuication skill,our life and career would be a mess.</strong></li><li><strong>Meanwhile,the profound meaning in celebrities career persuaded that innovation skill is the engine which drives both our life and future career.</strong></li><li>In a word,it is of great necessity for us to adapt new skills,we can make a promising and hopeful future only by learning new skills.</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306111140021.png"                      alt="image-20230611114007791"                ></p><hr><h1 id="3、措施解释"><a href="#3、措施解释" class="headerlink" title="3、措施解释"></a>3、措施解释</h1><p>For this part, you are allowed 30 minutes to write an essay on how to balance job responsibilities and personal interests. You can cite examples to illustrate your views. You should write at least 150 words but no more than 200 words.d</p><ul><li><strong>Supposing that youngsters intend to acquire and enjoy wonderful and rewarding living,it is advisable for them to have a good balance between job responsibilities and pesonal interests</strong>.How to achieve that? There are several measures.</li><li>To begin with,college students are supposed to improve their working efficiency.**Without a doubt,efficiency is the stepping stone which enhances their speed of working,ensures more useful results,and enables them to go further on the way of both work and life.**Living in an era of intense competition, <strong>without efficiency,they are prone to confine themselves to poor abilities and narrow-mindedness.</strong></li><li>In addition,it is rational for  youngsters to limit the number of hobbies,since spending too much time on interests may distract their major tasks.<strong>A typical example is that</strong> once trapped by a host of hobbies including playing chess,and painting,my friend Dave had no time to finish working.</li><li><strong>Last but not the least</strong>,<strong>as a yongster myself,I am deeply convinced that</strong> we ought to give our <strong>priority</strong> to job responsibilities,the rest of time can cultivate personal interests.</li><li>In conclusion,the above measures will be the keys to balancing the two.</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306111619730.png"                      alt="image-20230611161937490"                ></p><hr><h1 id="4、图画评述"><a href="#4、图画评述" class="headerlink" title="4、图画评述"></a>4、图画评述</h1><p>For this part, you are allowed 30 minutes to write a short essay based on the picture below. You should focus on the impact of social networking websites on reading. You should write at least 150 words but no more than 200 words.</p><ul><li><strong>There is a simple but enlightening drawing</strong> where a man introducing his hobby to a lady,”图片上写的话”.However Facebook is not a book, it is a social networking website.</li><li><strong>Living in an information era</strong> ,a host of youngsters are browsing various e-contents and e-books via networking website,such as QQ，Weibo。<strong>These social networking websites or apps bring us great convenience,arouse our passion for reading,and help us receive the latest news and infomation anytime and anywhere</strong>.Without any doubt,it is these social media platforms that enable people to read more easily and frequently.</li><li><strong>On the flip side</strong>,compared with the traditional way of reading paper books,knowledge on social media is increasingly shallow.Consequently,<strong>provided that youngsters read mostly on these websites,they are prone to confine themselves to low-efficiency and narrow-mindedness.</strong></li><li><strong>I,as a college student,am conviced that it is rational for us to</strong> read on social networking selectively.In addition,student in college should be educated to foster o healthier habit of reading.<strong>Only in these ways can youngsters gain</strong> life-long benefits.</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306111618598.png"                      alt="image-20230611161818330"                ></p><hr><h1 id="5、图表评述"><a href="#5、图表评述" class="headerlink" title="5、图表评述"></a>5、图表评述</h1><p>For this part, you are allowed 30 minutes to write an essay based on the chart below. You should start your essay with a brief description of the chart and comment on China’s achievements in poverty alleviation. You should write at least150 words but no more than 200 words.</p><ul><li><strong>This is a simple but enlightening chart where</strong> China^,^s rural population in poverty decreased rapidly from more than 75 million people in 2012 to zero in 2020.**Without any doubt,**China has made great contributions and achievements in poverty alleviation.</li><li>On the one hand,<strong>without</strong> China^,^s various policies in realizing the goal of common prosperity,<strong>it would be impossible for people to live a wealthy life</strong>;<strong>our economy is prone to confine itself to low efficiency and poor development</strong>. To be specific,Chinese poverty alleviation policies <strong>are like engines which can enrich</strong> people^,^s lives in rural areas,enhance people^,^s living standards,<strong>ensure</strong> more useful results in protecting human rights,and <strong>enable our society to go further</strong> on the way of economic prosperity, On the other hand,to get rid of poverty,<strong>a growing number of</strong> impoverished people <strong>have realized</strong> the importance of diligence intelligence and unity.</li><li>Thus,as a chinese, <strong>I deeply that provided that</strong> our society <strong>intends to</strong> acquire and enjoy common wealth and long-time prosperity,<strong>it is advisable for everyone to</strong> work together to alleviate poverty.<strong>Only in this way can</strong> the poor gain life-long benifits from the economic development</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306111704585.png"                      alt="image-20230611170445406"                ></p><h1 id="6、作文模板"><a href="#6、作文模板" class="headerlink" title="6、作文模板"></a>6、作文模板</h1><ul><li><p><strong>There is a simple but enlightening saying&#x2F;sentence&#x2F;drawing&#x2F;chart</strong>-{},<strong>Provided that</strong> {youngsters }<strong>intend to</strong> {acquire and enjoy wonderful and rewarding living}<strong>,it is advisable for them to</strong> {have a good balance between job responsibilities and pesonal interests}</p></li><li><p><strong>To begin with,</strong>  {college students are supposed to improve their working efficiency.} <strong>Without any doubt</strong>,{efficiency } **is the stepping stone which enhances ** their speed of working,<strong>ensures more fruitful results</strong>,and <strong>enables</strong> them to go further on the way of both work and life.</p></li><li><p><strong>In addition,</strong> <strong>it is of great necessity for</strong> {us,as young people },<strong>to</strong> {be responsible in life,work,and study},**Living in an era of intense competition, ** <strong>without</strong>  {efficiency}, <strong>they are prone to confine themselves to poor abilities and narrow-mindedness.</strong></p></li><li><p><strong>Last but not  least</strong>,<strong>I,as a college student,am conviced that it is rational for us to</strong> { give our priority to job responsibilities,the rest of time can cultivate personal interests.}  &#x2F; <strong>A typical example is that</strong> {once trapped by a host of hobbies including playing chess,and painting,my friend Dave had no time to finish working}.&#x2F;  <strong>the profound meaning in</strong> {celebrities^,^ life} <strong>persuaded us that</strong> {the habit of lifelong learning} <strong>is an engine which drives both our study and future career.</strong> </p></li><li><p><strong>In conclusion</strong>,there are so many other things that are worth doing well.<strong>every youngster should be educated to</strong> gain new skills and knowledge to adapt to the speedy social development. <strong>We can make a promising and hopeful future only by</strong> doing what is worth dong well.</p></li><li><p><strong>有一个简单但有启发性的说法&#x2F;句子&#x2F;图画&#x2F;图表</strong>-{}，<strong>如果</strong>{年轻人}<strong>打算</strong>{获得并享受美好而有意义的生活}<strong>，建议他们</strong>{在工作责任和个人兴趣之间取得良好的平衡}</p></li><li><p><strong>首先</strong>，{大学生应该提高他们的工作效率}。<strong>没有疑问</strong>，{效率}<strong>是提高</strong>人工作速度的<strong>垫脚石，</strong> <strong>保证了更多丰硕的结果，</strong> <strong>使</strong>人在工作和生活的道路上都走得更远</p></li><li><p><strong>此外</strong>， <strong>对于</strong>{我们作为年轻人}来说，{对生活、工作和学习负责}<strong>是非常必要的， 生活在一个激烈竞争的时代 ** <strong>没有</strong>{效率}，</strong>他们很容易把自己局限于能力差和心胸狭窄。**</p></li><li><p><strong>最后但并非最不重要的一点，我，作为一名大学生，我相信</strong> 我们把工作职责放在首位<strong>是合理的</strong>，其余的时间可以培养个人兴趣。} &#x2F; <strong>一个典型的例子是</strong>{我的朋友Dave曾经被下棋、绘画等一大堆爱好所困，以至于没有时间完成工作}。&#x2F; 名人生活的<strong>深刻意义</strong> <strong>使我们相信</strong> {终身学习的习惯}<strong>是驱动我们学习和未来事业的引擎</strong>。</p></li><li><p><strong>总之</strong>，还有很多其他的事情值得做好。<strong>每个年轻人都应该接受教育</strong>，获得新的技能和知识，以适应快速发展的社会。<strong>只有把值得做的事情做好，我们才能创造一个充满希望的未来。</strong></p></li></ul><h1 id="7、手机支付预测"><a href="#7、手机支付预测" class="headerlink" title="7、手机支付预测"></a>7、手机支付预测</h1><ul><li>There is a simple but enlightening question -“whether transferring money via smartphone is a positive or negative development”. Of course, using a smartphone is a difficult problem, but provided that most people intend to enjoy wonderful and convenient living, it is advisable for them to transfer money via smartphone. </li><li>To begin with, without any doubt, transferring money online with smartphones offers greater convenience. It is the stepping stone which enhances their speed of living, ensures more time to give themselves, and enables them to not fear the loss of their money. </li><li>In addition, it is of great necessity for us, as young people, to transfer money via smartphone. Living in an era of intense competition, without transferring money via smartphone, they are prone to confine themselves to poor efficiency. </li><li>Last but not least, I, as a college student, am convinced that it is more secure for us to transfer money via smartphone, <strong>the more advanced technology we have, the more secure our financial transactions are.</strong></li><li>In conclusion, the advent of the internet and smartphone-base money transfers has brought about positive developments. We can make a promising and hopeful future only by going further on the way.</li></ul><h1 id="8、人工智能发展迅速预测"><a href="#8、人工智能发展迅速预测" class="headerlink" title="8、人工智能发展迅速预测"></a>8、人工智能发展迅速预测</h1><ul><li>There is a simple but enlightening problem -“Some people are excited or terrified about the influence of AI”.Of courser,it is negative for the elderly ,But provided that most people intend to  have a convenient future ,it is advisable for them to support the AI,and that is also my point. </li><li>To begin with,without any doubt,AI offers greater convenience,it is the stepping stone which enhance their efficiency of work,ensures people have more time to other cultivate skills ,enables them to go further on the way of both work and career</li><li>In addition,it is of great necessity for us ,as young people ,to use AI in work or life.Living in an era of intense competition,without advanced AI ,they are prone to confine themselves to poor ability and efficiency</li><li>Last but not least,I, as a college student, am convinced that AI technology  is more productive.the more advanced technology we have,the more things we can produce</li><li>In conclusion,the advent of Ai has brought about positive developments,every yongster should be educate to use AI rational.we can make a promising and hopeful future only by striving to develop AI</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1、名言评论&quot;&gt;&lt;a href=&quot;#1、名言评论&quot; class=&quot;headerlink&quot; title=&quot;1、名言评论&quot;&gt;&lt;/a&gt;1、名言评论&lt;/h1&gt;&lt;p&gt;For this part, you are allowed 30 minutes to write an </summary>
      
    
    
    
    
    <category term="英语" scheme="http://example.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>英语翻译</title>
    <link href="http://example.com/2023/06/05/%E8%8B%B1%E8%AF%AD%E7%BF%BB%E8%AF%91/"/>
    <id>http://example.com/2023/06/05/%E8%8B%B1%E8%AF%AD%E7%BF%BB%E8%AF%91/</id>
    <published>2023-06-05T06:01:34.000Z</published>
    <updated>2023-06-16T09:44:32.057Z</updated>
    
    <content type="html"><![CDATA[<ul><li>Sticking Spring Festival couplets is <strong>an</strong> important custom for chinese people <strong>to</strong>  celebrate Spring Festival.</li><li>Spring Festival couplets are consisted of two <strong>verses</strong> and horizontal scroll <strong>of four words</strong>,The verses and horizontal scroll are written on red papers with gold or black ink,red means <strong>lucky</strong>,<strong>gold</strong> means <strong>fortune</strong></li><li>Spring Festival couplets  <strong>are sticked</strong> on <strong>both sides</strong> of the door and the upper of door <strong>frame</strong>.</li><li>The verses <strong>on</strong> Spring Festival couplets represent <strong>the characteristics</strong> of chinese traditional <strong>poem</strong>,<strong>The</strong> two verses <strong>have</strong> the same <strong>number of</strong>  words and <strong>relevant</strong> contents</li><li>horizontal scroll <strong>highlights</strong> the theme of Spring Festival couplets,<strong>makes</strong> it even better</li><li>Spring Festival couplets depict vivid <strong>images</strong> with simple words and <strong>express</strong> beautiful <strong>wishes</strong>.</li><li>people will <strong>realize</strong> that the Spring Festival has <strong>officially</strong> <strong>begun</strong>,when every famliy <strong>sticks</strong> Spring Festival couplets.</li></ul><hr><ul><li>Since ancient <strong>times</strong>,<strong>the seals have always been a proof</strong> of <strong>identity</strong> and <strong>a</strong> symbol of power in China.</li><li>The seal is not only <strong>practical</strong>,but also <strong>a type of</strong> art ,and it is <strong>an</strong> old art <strong>that</strong> <strong>integrate calligraphy and carving</strong> ,it is usually <strong>viewed</strong> as a unique art <strong>work</strong> that is <strong>comparable to calligraphy and painting</strong></li><li>From selections of <strong>materials</strong>, craft of crating to the <strong>design</strong> of characters,seals all have enrichly <strong>aesthetic</strong> expressions</li><li><strong>Artists from</strong> other <strong>countries</strong>  usually <strong>sign on their paintings</strong>,<strong>while</strong> chinese artists <strong>seal on their paintings and calligraphy instead of sign on them</strong>.</li><li><strong>In this way</strong>,seals <strong>have</strong> become <strong>an</strong> part of <strong>works</strong> and <strong>are</strong> a way of <strong>reflecting their uniqueness</strong></li></ul><hr><ul><li>CCTV <strong>headquarters building</strong> is located in Chaoyang <strong>district</strong>, Beijing city,<strong>with</strong> a <strong>total construction</strong> area of <strong>about</strong> 55000 m^2^.</li><li><strong>Its main building</strong> consists of tow <strong>towers</strong>,and for its <strong>unique shape</strong>,it has become a popular <strong>tourist attraction</strong> in the city,attracts the number of <strong>tourists</strong> to <strong>visit</strong> everyday.</li><li>The <strong>innovative</strong> structure of <strong>the building</strong> is the result of long-term <strong>cooperation</strong> <strong>between</strong> Chinese and foreign <strong>architects</strong>,<strong>which has</strong> not only <strong>reflected</strong> <strong>the awareness of</strong> <strong>environmental</strong> protection ,but also has greatly <strong>saved</strong> <strong>construction</strong> materials.</li><li>CCTV <strong>headquarters</strong> <strong>has</strong> a <strong>special passageway</strong> through the <strong>building</strong>,It shows the public <strong>all studios</strong> and history of CCTV</li><li>There,visitors <strong>can also</strong> enjoy the <strong>spectacular</strong> view of the Forbidden City and other places in Beijing</li></ul><hr><ul><li>the Qinghai-Tibet Plateau is located in the <strong>southwest</strong> of China,with <strong>an</strong> area <strong>of</strong>  about 2300000 km^2^,and the <strong>average</strong> <strong>altitude</strong> over 4000 <strong>meters</strong>, It is called “<strong>the</strong> roof of the world”。(east south west north )</li><li>the Qinghai-Tibet Plateau <strong>has</strong> <strong>rich</strong> natural <strong>resources</strong>,beautiful <strong>landscapes</strong>,and <strong>multiple</strong> rare animals</li><li><strong>A large area of alpine glaciers was formed,because of extremely low temperature in the Qinghai-Tibet Plateau .</strong></li><li>Here is <strong>the</strong> origin of <strong>many</strong> famous rivers in <strong>Asia</strong>,and  <strong>main</strong> <strong>fresh</strong> water <strong>supply</strong> of china and southrast Asia.</li><li>the Qinghai-Tibet Plateau is <strong>extremely</strong> important for <strong>global</strong> ecosystem</li><li>Due to the influence of <strong>climate</strong> change ,<strong>glaciers in</strong> the Qinghai-Tibet Plateau is <strong>melting</strong> in an <strong>accelerating speed</strong></li><li>china <strong>has been</strong> trying hard to protect the <strong>ecosystem</strong> of the Qinghai-Tibet Plateau </li><li><strong>Grass coverage rate increasing constantly</strong>  </li><li>many <strong>endangered species</strong> are protected effect</li><li>现代完成进行时:<strong>has been</strong> trying </li><li>现在完成时:have (has) + V过去分词</li><li>过去完成时：<strong>had+动词的过去分词</strong></li></ul><hr><ul><li>the Loess Plateau is the third <strong>biggest</strong> plateau in China,with an area of about 600000 km^2^,the average alititude of 1000 <strong>to</strong>  2000 meters </li><li>Most of it is covered with 50meters to  80 meters <strong>thick</strong> loess,and it is the area with most <strong>concentrated</strong> loess <strong>distribution</strong>  and the largest  coverage thickness </li><li>This is a <strong>miracle</strong> <strong>that</strong> created by nature,and it is also unique in <strong>the</strong> world</li><li>the Loess Plateau is one of the <strong>birthplaces</strong> of chinese people</li><li><strong>As early as</strong> 5500 years ago,people <strong>started to farm</strong> in the Loess Plateau</li><li>With  the development of <strong>agriculture</strong>,population  in the Loess Plateau constantly <strong>increasd</strong> ,</li><li><strong>In Qin and Han Dynasties,it  had become the political and economic center in China</strong> envirnoment</li><li><strong>Nowadays</strong>,With the <strong>implementation</strong> of western <strong>development straregy</strong>,<strong>economy</strong> there  has been <strong>developed</strong> rapidly</li></ul><hr><ul><li>the Yunnan-Guizhou Plateau is <strong>mostly</strong> located in Yunnan and Guizhou Provinces,with the <strong>total</strong> area of about 50000 km^2^,and the average <strong>altitude</strong> of 2000 to 4000 meters,it is the fourth largest plateau in China</li><li>the Yunnan-Guizhou Plateau is high in the west and low in the  east,with many rivers,Numberous deep and <strong>steep</strong> canyons <strong>were formed</strong></li><li>In many places in the canyons, <strong>soils are fertile and extremely good for the growth of multiple crops</strong></li><li>the Yunnan-Guizhou Plateau^，^s unique  <strong>natural</strong> <strong>environment</strong> has created <strong>biological and cultural diversity</strong></li><li>It is the area with extreme rich <strong>forest and mineral</strong> resources in China,and also an important region where ancient human <strong>originated</strong></li><li>In China,the Yunnan-Guizhou Plateau is the area with most population of <strong>minorities</strong>,which have all kept their own rich cultural traditions</li></ul><hr><ul><li>Marco polo bridge is located  on 15km southwest of Tiananmen <strong>square</strong>. With the <strong>span across</strong> Yongding River, it is the oldest stone bridge of <strong>multiple</strong> <strong>arches</strong>,which exists in Beijing nowadays.</li><li>Marco polo bridge was <strong>originally</strong> <strong>built</strong>  1192 ,and was rebuilt in 1698 </li><li>It is <strong>supported</strong> by 281 pillars,with a <strong>lion</strong> on each <strong>pillar</strong>.More lions are <strong>hidden</strong> on these stone lions^,^ heads, backs,<strong>bellies</strong> or <strong>claws</strong>.</li><li>With <strong>vivid</strong> images and <strong>various</strong> <strong>figures</strong>,these ston lion are <strong>delicate</strong> wares of stone <strong>carving</strong> art of  marco polo bridge.</li><li>There are <strong>countless</strong> stone lions on the bridge.Therefore ,in Beijing,there is a saying that you can^,^t count the <strong>exact</strong> number of lions on the marco polo bridge</li><li>The marco polo bridge is not only famous for its <strong>aesthetic characteristics</strong>, but also is known as a <strong>monument</strong> in the history of stone bridge aechitecture</li></ul><hr><ul><li>Zhaozhou Bridge was built in <strong>the</strong> Sui Dynasty,around 605 <strong>AD</strong> ,it has the <strong>length</strong> of  50.82 meters, the <strong>width</strong> of  9.6 meters and <strong>the span</strong> of 37.37 meters</li><li>The talent <strong>architect</strong>, Lichun , had <strong>designed</strong> and <strong>monitored</strong> <strong>construction</strong> of the bridge.</li><li>The structure of Zhaozhou Bridge is <strong>novel</strong> and the <strong>shape</strong> of it is <strong>gorgeous</strong></li><li>There is  a big arch in the bridge.<strong>On both ends of</strong>  the big arch, there are two small arches,which <strong>are used to</strong> help relieve floods,reduce the weigh of the bridge and <strong>save</strong> the stone <strong>material</strong></li><li>Since its construction,Zhaozhou Bridge has <strong>endured</strong> <strong>several</strong> floods and <strong>earthquakes</strong>,However its main structure <strong>remained</strong> perfect and it is still <strong>in use</strong> today.</li><li>Zhaozhou Bridge is a <strong>great work</strong> in the history of bridge construction in the world,and it is an <strong>outstanding</strong> <strong>achievement</strong> in the history of chinese ancient <strong>civilization</strong></li><li>The bridge of <strong>similar</strong> designs did not <strong>appear</strong> until 14^th^ <strong>century</strong> in <strong>Europe</strong>, 700 years later than Zhaozhou Bridge</li></ul><hr><ul><li>Seal engraving is a traditional Chinese art <strong>form</strong>,<strong>characterized</strong> by engraving words and <strong>patterns</strong> onto <strong>seals</strong> or stone materials.</li><li>it <strong>originated</strong> <strong>from</strong> ancient,Boci and Mingwen,and <strong>evolved into</strong> a unique <strong>artistic skill</strong></li><li>carving is famous for its delicate line and unique style,it is not only a <strong>presenting</strong> form of words,but also a <strong>expressing</strong> way of art. </li><li>The art of carving <strong>pursues</strong> <strong>regularity</strong> of characters,change of <strong>force</strong> and <strong>mastery</strong> of <strong>knife</strong> skills.</li><li>A <strong>special</strong> sense of <strong>beauty</strong> and <strong>charm</strong> is shown by <strong>interaction</strong> of knife <strong>point</strong> and ink <strong>traces</strong></li><li>carving works are usually used in <strong>decorations</strong> or <strong>collections</strong> of  seals and <strong>calligraphy</strong> works,They are <strong>considered</strong> as a symbol of <strong>status</strong> and <strong>respect</strong></li><li>carving  is not only a craft ,but also an important way of cultural  <strong>inheritance</strong>,it has shown an <strong>profound</strong> background and <strong>esthetic</strong> <strong>concepts</strong>  of <strong>traditional  Chinese</strong> culture</li></ul><hr><ul><li>calligraphy is an important art form in traditional Chinese culture,characterized by writing with a <strong>brush</strong></li><li>it  originated from ancient page,and evoloved into a unique <strong>artistic</strong> <strong>craft</strong></li><li>calligraphy is famous for its unique <strong>brushstroke</strong>,<strong>structure</strong> and <strong>rhythm</strong>, it is not only <strong>writings</strong> of characters but also a special way  of <strong>artistic expression</strong></li><li>calligraphy pursues the <strong>esthetic</strong> beauty of word <strong>shape</strong> ,the <strong>balance</strong> of structure and the application of ink</li><li>the artistic value of characters and <strong>spiritual connotation</strong> are shown by <strong>emotions</strong> and <strong>spirits</strong> of writer</li><li>calligraphy works are <strong>widely</strong> used in the area of decorative art.</li><li>Meanwhile,calligraphy is also a way of <strong>cultivate</strong> self mind</li><li>People can <strong>reach</strong> inner <strong>peace</strong> and thinking <strong>concentration</strong> by the process of writing</li><li>calligraphy as a traditional art  not only <strong>has</strong> esthetic value, but also <strong>carries</strong> culture <strong>inheritance</strong> and  people^，^s <strong>pursuits</strong> of better lives. </li><li>it has shown an profound background and <strong>esthetic concepts</strong> of traditional Chinese culture, it is <strong>crystallization</strong> of <strong>wisdom</strong> and <strong>creativity</strong> of Chinese nation.</li></ul><hr><ul><li><strong>Targeted</strong> <strong>poverty</strong> <strong>alleviation</strong> is an innovative and accurate  way ,which was <strong>adopted</strong> by China in poverty alleviation careers</li><li>Through <strong>accurate identification, classification, and location</strong> of poverty population,it has targetedly provided accurate <strong>assistance</strong> and support</li><li>During its <strong>implementation</strong> process,the government <strong>adjusted</strong> measures according to the local <strong>conditions</strong> and fully used forces of various social <strong>forces</strong>. Targeted poverty alleviation <strong>emphasizes</strong> accurate data analysis and scientific policy-making</li><li>Via this <strong>method</strong>,China has successfully realized the <strong>goal</strong> of poverty alleviation <strong>on a large scale</strong> in recent years. it has set an example for <strong>global</strong> poverty alleviation <strong>efforts</strong>.</li><li>Via <strong>implementing</strong> targeted poverty alleviation <strong>strategy</strong>, China has achieved a remarkable <strong>accomplishment</strong> of poverty <strong>alleviation</strong>.Hundreds of millions of poor people <strong>stepped out of</strong> poverty.Development levels in poor areas have been <strong>improved</strong>.</li></ul><hr><ul><li>Huanan tiger also <strong>known as</strong> China south tigger, is one of the rarest and the most endangered <strong>large</strong> ainimal<strong>s</strong> in China.</li><li>Huanan tiger are  <strong>distributed</strong> in  Chinese southern area,including Guangdong,Fujian,Guangxi and Jiangxi etc. </li><li>They are good at swimming and <strong>climbing</strong>.with a body  length <strong>of</strong> <strong>up to</strong>  2.5 meters and a body weigh <strong>of</strong> about from 150 to 180kg.</li><li>Huanan tiger is an <strong>excellent hunter</strong> with strong <strong>muscles</strong> and <strong>sharp claws</strong></li><li>However,due to <strong>factors</strong> like the loss of <strong>habitat</strong>  and <strong>illegal hunting</strong>,the population of Huanan tiger has <strong>dramatically</strong> <strong>decreased</strong>,and it was listed as an endangered <strong>species</strong></li><li>Chinese government has  taken a <strong>series</strong> of measures to protect Huanan tiger,including  <strong>establishing</strong> natural protection area and <strong>prohibiting</strong> hunting and <strong>illegal trade</strong></li><li><strong>Despite</strong> facing huge <strong>challenges</strong>,<strong>efforts</strong>  to protect Huanan tiger are gradually <strong>coming into effect</strong>,This has <strong>brought</strong> a <strong>glimmer</strong> of hope for the future of this rare creature</li></ul><hr><ul><li>The giant panda is a national <strong>treasure</strong> of China,it is also one of  the most popular rare animals in the world.</li><li>They are famous for <strong>their</strong> unique <strong>appearance</strong> and cute image </li><li>The giant panda mainly eat <strong>bamboo</strong>, They are also eat some fruits and <strong>tender leaves</strong> of plants</li><li>They have big body size,with  a length of up to 12 to 1.8m, with <strong>a</strong> weight of over 100kg</li><li>They live in Chines mountain area,including  Shanxi ,Shanxi, Gansu and Qinghai so on</li><li>due to factors like the  <strong>loss</strong> of habitat ,<strong>reproduction</strong> difficulty and illegal hunting,the  number of giant panda has rapidly decreased, The giant panda was listed as  an endangered species</li><li>Chinese government <strong>has been putting efforts to</strong> protect  panda and <strong>strives</strong> to <strong>restore</strong> the population of it  by <strong>establishing</strong> natural protection area and <strong>artificial reproduction</strong></li><li>nowadays, the condition of pandas^,^ protection is gradually improving. it has become a successful <strong>model</strong>  for the <strong>protection</strong> of Chines rare  <strong>wild</strong> ainimal</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;ul&gt;
&lt;li&gt;Sticking Spring Festival couplets is &lt;strong&gt;an&lt;/strong&gt; important custom for chinese people &lt;strong&gt;to&lt;/strong&gt;  celebrate Spring </summary>
      
    
    
    
    
    <category term="英语" scheme="http://example.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>英语生词</title>
    <link href="http://example.com/2023/05/30/%E8%8B%B1%E8%AF%AD%E7%94%9F%E8%AF%8D/"/>
    <id>http://example.com/2023/05/30/%E8%8B%B1%E8%AF%AD%E7%94%9F%E8%AF%8D/</id>
    <published>2023-05-30T03:29:44.000Z</published>
    <updated>2023-06-16T02:27:57.868Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、2021-12-1"><a href="#一、2021-12-1" class="headerlink" title="一、2021.12.1"></a>一、2021.12.1</h1><ul><li>basis：<strong>原因</strong>           regularly：<strong>有规律的</strong>           engage：<strong>从事</strong>           medium：<strong>媒介</strong>           permanent：<strong>永久</strong>           </li><li>glimpse：<strong>窥探</strong>           simultaneously：<strong>同时</strong>           countless：<strong>无数</strong>           incorporating：<strong>包括</strong>           gender：<strong>性别</strong></li><li>relevant：<strong>相关的</strong>           stain：<strong>败坏</strong>           toxic：<strong>有毒</strong>           reputation：<strong>声誉</strong>           delicate：<strong>微妙的</strong></li><li>stipulate：<strong>规定</strong>           consistent：<strong>一致</strong>           advantage：<strong>优势</strong>           screen：<strong>筛选</strong>           drawback：<strong>弊端</strong></li><li>sensational：<strong>耸人听闻的</strong>           complicate：<strong>复杂的</strong>           detrimental：<strong>不利的</strong>           scrutiny：<strong>审查</strong></li><li>magnifued：<strong>放大</strong>           ruinous：<strong>毁灭</strong>           revealed：<strong>泄露</strong>           tipped：<strong>打破</strong>           delicate：<strong>微妙</strong></li><li>navigate：<strong>引导</strong>           anticipating：<strong>预测</strong>           stipulating：<strong>设定</strong></li></ul><hr><ul><li>brands：<strong>品牌</strong>           intuitive：<strong>直观的</strong>           represent：<strong>代表</strong>           crush：<strong>有害的</strong>           dairy：<strong>乳制品</strong></li><li>naturally：<strong>天然的</strong>           misconception：<strong>误解</strong>           play on：<strong>利用</strong>           temporary：<strong>短暂</strong>           aisle：<strong>过道</strong></li><li>grocery：<strong>杂货店</strong>           inject：<strong>注射</strong>           discourse：<strong>话题</strong>           eroding：<strong>削弱</strong>           supposition：<strong>推测</strong></li><li>stigma：<strong>污名</strong>           verbal：<strong>口头</strong>           trick：<strong>诡斗</strong>           bolster：<strong>提高</strong>           catch：<strong>吸引</strong>           label：<strong>标签</strong></li><li>manufacturers：<strong>制造商</strong>           articulating：<strong>明确说明</strong>           supply：<strong>提供</strong>           claim：<strong>声明</strong>           erode：<strong>破坏</strong></li></ul><h1 id="二、2021-12-2"><a href="#二、2021-12-2" class="headerlink" title="二、2021.12.2"></a>二、2021.12.2</h1><ul><li>ration：<strong>理性</strong>           enlightenment：<strong>启蒙</strong>          advent：<strong>出现</strong>          note：<strong>指出</strong>          introduce：<strong>引入</strong>          discourse：<strong>交流</strong></li><li>in turn：<strong>反过来</strong>          exposition：<strong>解释</strong>          uncover：<strong>发现</strong>          detect：<strong>发现</strong>          abuses：<strong>滥用</strong>          contrast：<strong>对比</strong></li><li>generalization：<strong>概括</strong>          confined：<strong>局限</strong>          overturned：<strong>颠覆</strong>          conduct：<strong>行为</strong>          reduce：<strong>减少</strong></li><li>commerce：<strong>商业运作</strong>          proposition：<strong>见解</strong>          purely：<strong>纯的</strong>          derived from：<strong>起源</strong>          hosted：<strong>举办</strong></li><li>alternative：<strong>可替代的</strong>          grip：<strong>控制</strong>          colonized：<strong>占领</strong>          refocuses：<strong>重新聚焦</strong>          reward：<strong>奖励</strong></li><li>instant：<strong>即时</strong>          unconscious：<strong>不自觉</strong>          profiles：<strong>个人简介</strong>          initiate：<strong>引发</strong>          dominance：<strong>主导</strong></li><li>conducive：<strong>有助于</strong>          rendered：<strong>使成为</strong>          superficial：<strong>肤浅</strong>          forum：<strong>论坛</strong></li></ul><hr><ul><li>propertion：<strong>部分</strong>           workforce：<strong>劳动力</strong>           dysfunction：<strong>失衡</strong>           refer：<strong>指向</strong>           denied：<strong>指向</strong></li><li>flexible：<strong>弹性的</strong>           irrespective：<strong>不考虑</strong>           discrepancy：<strong>不一致</strong>           overindulge：<strong>娇纵</strong>           spoilt：<strong>呵护</strong></li><li>virtue：<strong>美德</strong>           perform：<strong>工作</strong>           sampled：<strong>抽样</strong>           entitlement：<strong>特权</strong>           measured：<strong>衡量</strong>           extent：<strong>程度</strong></li><li>assessed：<strong>采用</strong>           alleviate：<strong>减轻</strong>           accountable：<strong>负责</strong>           committed：<strong>承诺</strong>           deviate：<strong>背离</strong></li><li>confronted：<strong>面对</strong>           entitle：<strong>使享有权利</strong>           disinclined：<strong>不愿意</strong>           accommodate：<strong>满足</strong>           distorted：<strong>扭曲</strong></li><li>constructive：<strong>积极的</strong>           tactfully：<strong>委婉的</strong>           specific：<strong>具体</strong>           objective：<strong>客观的</strong>           criteria：<strong>标准</strong></li><li>deliver：<strong>兑现</strong>           promises：<strong>承诺</strong>           caution：<strong>谨慎</strong>           remedy：<strong>处理措施</strong>           critical：<strong>关键</strong>           aware：<strong>注意</strong></li><li>promotion：<strong>升职</strong>           sustain：<strong>保持</strong>           transparent：<strong>透明</strong>           fulfill：<strong>完成</strong>           commitment：<strong>承诺</strong></li></ul><h1 id="三、2021-12-3"><a href="#三、2021-12-3" class="headerlink" title="三、2021.12.3"></a>三、2021.12.3</h1><ul><li>communities：<strong>社区</strong>           manual：<strong>人工的</strong>           employment：<strong>就业</strong>           fade：<strong>减少</strong>           manufacturing：<strong>制造</strong>          </li><li>have been：<strong>一直</strong>           stagger：<strong>令人吃惊的</strong>           transformation：<strong>转化</strong>           vulnerable：<strong>脆弱的</strong>           avail：<strong>利用</strong></li><li>sensible：<strong>明智的</strong>           alleged：<strong>所谓的</strong>           attach：<strong>附加</strong>           mobility：<strong>流动性</strong>           subject：<strong>话题</strong>           </li><li>broadly：<strong>广泛地</strong>           specifically：<strong>确切地</strong>           devastating：<strong>强有力</strong>           warehouses：<strong>仓库</strong>           behind：<strong>在后面</strong></li><li>secure：<strong>稳定的</strong>           adverse：<strong>不利的</strong>           transformative：<strong>改革</strong>           adverse：<strong>不利的</strong>           insistent：<strong>坚持的</strong>      </li><li>peril：<strong>危险</strong>           resist：<strong>抵制</strong>           sensible：<strong>明智的</strong>            slip back：<strong>跌落</strong>           prominent：<strong>杰出的</strong>           </li><li>mobility：<strong>流动性</strong></li></ul><hr><ul><li>passive：<strong>消极</strong>           passion：<strong>激情</strong>           aggressive：<strong>进取</strong>           crave：<strong>渴望</strong>           variation：<strong>差异</strong>           </li><li>verview：<strong>概述</strong>           homeland：<strong>国籍</strong>           validity：<strong>有效性</strong>           singular：<strong>突出</strong>           comparision：<strong>比较</strong></li><li>occupation：<strong>职业</strong>           credit：<strong>信用</strong>           international：<strong>国际的</strong>           assumption：<strong>假设</strong>           regard：<strong>方面</strong></li><li>mask：<strong>掩盖</strong>           identify：<strong>分辨&#x2F;一致</strong>           constrain：<strong>制约</strong>           dwell on：<strong>考虑</strong>          dimension：<strong>维度</strong></li><li>underestimate：<strong>低估</strong>           diversity：<strong>多样化</strong>           transaction：<strong>交易</strong>           procedure：<strong>程序</strong>           authority：<strong>权力</strong></li><li>indicator：<strong>指标</strong>           constrain：<strong>束缚</strong>           generalize：<strong>概括</strong></li></ul><h1 id="四、2022-6-1"><a href="#四、2022-6-1" class="headerlink" title="四、2022.6.1"></a>四、2022.6.1</h1><ul><li>concerning：<strong>关于</strong>           attack：<strong>抨击</strong>           civic：<strong>公民</strong>           argue：<strong>辩解</strong>           attract：<strong>吸引</strong>           proposal：<strong>提案</strong></li><li>reform：<strong>改革</strong>           bill：<strong>法案</strong>           strip：<strong>剥夺</strong>           loan：<strong>贷款</strong>           rigor：<strong>严谨</strong>           excel：<strong>优异</strong>           liberal：<strong>文科</strong></li><li>thoughtful：<strong>深思熟虑</strong>           lifelong：<strong>终身</strong>           assault：<strong>攻击</strong>           waiver：<strong>免除</strong>           investment：<strong>投资</strong>           </li><li>attack：<strong>批评</strong>           take for granted：<strong>理所应当</strong>           excellent：<strong>极好的</strong>           rigorous：<strong>严格的</strong>           imaginable：<strong>可能的</strong></li><li>available：<strong>有效的</strong>           mission：<strong>使命</strong>           a significant portion of：<strong>很大一部分</strong>           drains：<strong>吸血</strong>                              </li><li>Beyond：<strong>除了..之外</strong>           access：<strong>获得权力</strong>             virtue:<strong>美德</strong></li></ul><hr><ul><li><p>basis：<strong>基础</strong>         sort：<strong>种类</strong>           internalised：<strong>内在的</strong>               interact：<strong>相互交流</strong>          accord：<strong>一致</strong>   </p></li><li><p>compatibility：<strong>兼容性</strong>           susceptible：<strong>易受影响</strong>            inconsistencies：<strong>不一致</strong>             make sense：<strong>有意义</strong></p></li><li><p>rigorous：<strong>严格的</strong>         extent：<strong>程度</strong>         inquiry：<strong>询问</strong>           integrated：<strong>融合</strong>           investigation：<strong>调查</strong></p></li><li><p>involvement：<strong>参与</strong>             tightly：<strong>紧紧的</strong>             formulated：<strong>明确表达</strong>           produce：<strong>引起</strong>          </p></li><li><p>convincing：<strong>令人信服的</strong>              overall：<strong>整体</strong>                restrictions：<strong>限制</strong>                   appeal：<strong>呼吁&#x2F;吸引</strong></p></li></ul><p></p><h1 id="五、2022-6-2"><a href="#五、2022-6-2" class="headerlink" title="五、2022.6.2"></a>五、2022.6.2</h1><ul><li>composing：<strong>组成</strong>         implications：<strong>暗示</strong>         perceived：<strong>认为</strong>            put together：<strong>合并</strong>      collaborative：<strong>合作</strong></li><li>distinctly：<strong>清楚的</strong>         inspiration：<strong>灵感</strong>          scene：<strong>场景</strong>           authentic：<strong>真正的</strong>            emulate：<strong>模仿</strong></li><li>integral：<strong>必须的</strong>            impart：<strong>传授</strong>              painstakingly：<strong>煞费苦心的</strong>           fall on：<strong>降临</strong>           bleak：<strong>无望的</strong></li><li>infancy：<strong>幼年</strong>              matter：<strong>问题</strong>            detrimental：<strong>不利的</strong>           hinder：<strong>阻碍</strong>           composition：<strong>组成</strong></li><li>indispensable：<strong>不可或缺的</strong>        depreciate：<strong>贬值</strong>           deplete：<strong>大量减少</strong>         pains：<strong>煞费苦心</strong></li><li>prospect：<strong>前景</strong>        norm：<strong>标准</strong>          freshness：<strong>新鲜感</strong></li></ul><hr><ul><li>viruses：<strong>病毒</strong>        issued：<strong>发布</strong>            apology：<strong>道歉</strong>        bubble：<strong>圈</strong>          augmenting：<strong>增加</strong>          acknowledge：<strong>承认</strong></li><li>expertise：<strong>专业知识</strong>            constraints：<strong>局限</strong>            discipline：<strong>学科</strong>             consult：<strong>咨询</strong>          specialty：<strong>专长</strong></li><li>unintentional：<strong>无意的</strong>           yield：<strong>产生&#x2F;屈服</strong>         incorporated：<strong>合并的</strong>          absurd：<strong>荒谬的</strong>             argued：<strong>争辩</strong>      </li><li>craves：<strong>渴望</strong>               baffling：<strong>阻碍的</strong>              principles：<strong>原理</strong>           imperative：<strong>重要的</strong>           qualified：<strong>有资格的</strong></li><li>credentials：<strong>认证信息</strong>          vaccines：<strong>疫苗</strong>            consumption：<strong>消费</strong>         instruction：<strong>指示</strong>             eliminate：<strong>消除</strong></li><li>assume：<strong>假设</strong>           decided：<strong>认为</strong>           Utilize：<strong>利用</strong>             facilitated：<strong>促进</strong>        intricate：<strong>复杂的</strong>           analogy：<strong>类比</strong></li><li>illustrations：<strong>插画 **          duly：</strong>适当的**</li></ul><h1 id="六、2022-9"><a href="#六、2022-9" class="headerlink" title="六、2022.9"></a>六、2022.9</h1><ul><li>currency：<strong>货币</strong>          at odds：<strong>不一致</strong>          march：<strong>进行</strong>           drum：<strong>击打</strong>             intensify：<strong>加强</strong>        crackdown：<strong>打压</strong></li><li>unveiling：<strong>揭示</strong>          monopoly：<strong>垄断</strong>         draft：<strong>草案</strong>          suspension：<strong>暂停</strong>         coincide：<strong>巧合</strong>          rein：<strong>控制</strong></li><li>championed：<strong>拥护</strong>          pricing：<strong>定价</strong>        assuming：<strong>假定 **      positions：</strong>位置**         reach：<strong>到达</strong>             alarmed：<strong>惊慌</strong></li><li>revenue：<strong>收入</strong>        chief：<strong>首要的</strong>          suspension：<strong>暂停 **         doomed：</strong>注定**        monopolize：<strong>垄断 **      expansion：</strong>扩张**</li><li>invading：<strong>入侵</strong>           untrustworthy：<strong>不能信赖的</strong></li></ul><hr><ul><li>accessibility：<strong>可达性</strong>        regions：<strong>地区</strong>           comparative：<strong>相当的</strong>            portrayed：<strong>描绘</strong>            motor：<strong>发动机</strong></li><li>destination：<strong>目的地 **         involved：</strong>卷入**          bang：<strong>重击</strong>             literally：<strong>真正的</strong>           protests：<strong>抗议</strong></li><li>disturbances：<strong>干扰</strong>            disruption：<strong>破坏</strong>       resentment：<strong>愤恨 **          overstayed：</strong>过时**            frustrated：<strong>沮丧的</strong></li><li>locally：<strong>本地的</strong>             allocate：<strong>分配</strong>            resorts：<strong>度假村</strong>            negotiating：<strong>谈判</strong>            dynamics：<strong>动力</strong></li><li>corresponds：<strong>对应</strong>             adopt：<strong>采用</strong>            honor：<strong>荣誉</strong>           hosts：<strong>主人</strong>       norms：<strong>标准</strong>            reward：<strong>回报</strong></li><li>performers：<strong>表演者</strong>          excuse：<strong>借口&#x2F;理由</strong>           distinguish：<strong>区分</strong>       net：<strong>净</strong>          available：<strong>可得到的</strong></li><li>compensate：<strong>补偿 **         attributed：</strong>归因于 **           antagonism：<strong>敌意 **              inhibits：</strong>阻止**            victim：<strong>受害者</strong></li><li>endeavor：<strong>尽力</strong>             immerse：<strong>沉浸于</strong></li></ul><h1 id="七、2023-3"><a href="#七、2023-3" class="headerlink" title="七、2023.3"></a>七、2023.3</h1><ul><li>make inference：<strong>做出推论</strong>          cornerstone：<strong>基石</strong>          devise：<strong>涉及</strong>        expose：<strong>使暴露于</strong>       mismatch：<strong>不匹配</strong></li><li>sensory：<strong>感官</strong>         imprinting：<strong>烙印</strong>             discern：<strong>辨别</strong>              extensive：<strong>大量的</strong>          variety：<strong>品种</strong>      context：<strong>背景</strong></li><li>crucial：<strong>至关重要</strong>           phase：<strong>阶段</strong>            intricate：<strong>复杂</strong></li></ul><hr><ul><li>dietary：<strong>饮食的</strong>        interpret：<strong>把…理解</strong>            implication：<strong>暗示</strong>           prevalence：<strong>流行</strong>        contradict：<strong>相矛盾</strong></li><li>agreement：<strong>一致</strong>             consistenly：<strong>一致</strong>               distribution：<strong>分配</strong>           involve：<strong>参与</strong>           regimented：<strong>严格控制</strong></li><li>anecdotal：<strong>传闻</strong>           optimal：<strong>最佳的</strong>              delay：<strong>推迟</strong>               endorse：<strong>赞同</strong>             simultaneously：<strong>同时的</strong></li><li>endeavor：<strong>努力</strong>            imply：<strong>意味着</strong>                consensus：<strong>共识</strong>            conventional：<strong>常规的</strong>             wisdom：<strong>智慧</strong></li><li>go hand in hand：<strong>密切相关</strong></li></ul><p>​           </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、2021-12-1&quot;&gt;&lt;a href=&quot;#一、2021-12-1&quot; class=&quot;headerlink&quot; title=&quot;一、2021.12.1&quot;&gt;&lt;/a&gt;一、2021.12.1&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;basis：&lt;strong&gt;原因&lt;/strong&gt;   </summary>
      
    
    
    
    
    <category term="英语" scheme="http://example.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>英语作文</title>
    <link href="http://example.com/2023/05/17/%E8%8B%B1%E8%AF%AD%E4%BD%9C%E6%96%87/"/>
    <id>http://example.com/2023/05/17/%E8%8B%B1%E8%AF%AD%E4%BD%9C%E6%96%87/</id>
    <published>2023-05-17T01:05:47.000Z</published>
    <updated>2023-05-19T03:51:59.053Z</updated>
    
    <content type="html"><![CDATA[<p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305170921820.png"                      alt="image-20230517092113350"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305170930614.png"                      alt="image-20230517093014795"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305170930464.png"                      alt="image-20230517093057711"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305170929948.png"                      alt="image-20230517092952171"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305170932057.png"                      alt="image-20230517093247356"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305170937511.png"                      alt="image-20230517093718575"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305170944173.png"                      alt="image-20230517094424347"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305170955243.png"                      alt="image-20230517095520350"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305170956694.png"                      alt="image-20230517095647205"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305170958545.png"                      alt="image-20230517095848972"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305171003765.png"                      alt="image-20230517100302843"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305171003765.png"                                     ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305171006304.png"                      alt="image-20230517100624748"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305171007613.png"                      alt="image-20230517100733947"                ></p><ul><li>如果不加can，那么bring并列的都需要加s</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305171012583.png"                      alt="image-20230517101202692"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305171012816.png"                      alt="image-20230517101217337"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305171014036.png"                      alt="image-20230517101404144"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305171015779.png"                      alt="image-20230517101544960"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305171016093.png"                      alt="image-20230517101624556"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305180911508.png"                      alt="image-20230518091121478"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305180911789.png"                      alt="image-20230518091138075"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305180915748.png"                      alt="image-20230518091549549"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305180918269.png"                                     ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305180921460.png"                      alt="image-20230518092133128"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305180922678.png"                      alt="image-20230518092250638"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305180926367.png"                      alt="image-20230518092628889"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305180926755.png"                      alt="image-20230518092640550"                ></p><hr><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305180935315.png"                      alt="image-20230518093537682"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305180936477.png"                      alt="image-20230518093653929"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305180940062.png"                      alt="image-20230518094032447"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305180941007.png"                      alt="image-20230518094128574"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305180948646.png"                      alt="image-20230518094855922"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305180953616.png"                      alt="image-20230518095321163"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305180954617.png"                      alt="image-20230518095458208"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305180957334.png"                      alt="image-20230518095719651"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305181001760.png"                      alt="image-20230518100103805"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305181001349.png"                      alt="image-20230518100135901"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305181004336.png"                      alt="image-20230518100419674"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305181004373.png"                      alt="image-20230518100445038"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305181005271.png"                      alt="image-20230518100536878"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305181008732.png"                      alt="image-20230518100818526"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305181009746.png"                      alt="image-20230518100937278"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305181010707.png"                      alt="image-20230518101037400"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305181011687.png"                      alt="image-20230518101157698"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305181012260.png"                      alt="image-20230518101258695"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305181013855.png"                      alt="image-20230518101314493"                ></p><hr><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305190857004.png"                      alt="image-20230519085744371"                ></p><ul><li><strong>There is a simple but enlightening quote</strong>:”What is worth doing is worth doing well.” Then，what is  worth doing？My answer is enjoying the things that you love，taking responsibility，and clutivating a habit of lifelong learning。</li><li>To begin  with,doing the things we love <strong>can arouse our passion for success,bring us the motivation for moving forward,and help us grow up。Provided that one intends to acqurie and enjoy long-term prosperity,it is advisable to</strong> get the things he loves done well。In addition,<strong>as a youngster,I am convinced that it is of great necessity for us to</strong> be responsible in study,work and life。Doing our best to take responsibility can foster solid skills,<strong>ensure fruitful results,and enable us to go further on the way to success</strong>。Meanwhile,life-long learning <strong>is like an engine which drives both our study and career</strong>。Therefore,<strong>everyone should be educated to</strong> acquire new skills and knowledge to adapt to the speedy social development.</li><li>In conclusion,<strong>only by doing</strong> what is worth doing well <strong>can we create a hopeful and promising future.</strong></li></ul><hr><ul><li>Nowadays more and more people keep learning new skills to adapt to a fast-changing world.<strong>This is a simple but enlightening sentence on</strong> the necessity of acquiring new skills.<strong>Provided that we intend to achieve long-term success in the ever-changing world,it is advisable for us to master as many new skills as possible</strong>.</li><li><strong>As a college student,I am convinced that</strong> we should equip ourselves with three major skills: foreign language proficiency,interpersonal communication skills and innovation skills. To begin with,<strong>foreign language proficiency is like a stepping stone which enables us to travel or work</strong> freely in the world without communication barriers.  Besides,**living in an era of globalization,**people are closely connected with each other in study,life and work. **Without interpersonal communication skill,we are prone to confine ourselves to  low efficiency,poor abilities,and narrow-mindedness.**Finally, we are also supposed to develop innovation skills <strong>since it can bring us knowledge,arouse our passion for learning and help us move forward.</strong></li><li>In a nut shell,<strong>we should bear in mind that</strong> it is never too late to learn.Let’s all become lifelong learners to embrace the fast-changing world</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img  
                     lazyload
                     src=&quot;/images/loading.svg&quot;
                     data-src=&quot;https://raw.githubuser</summary>
      
    
    
    
    
    <category term="英语" scheme="http://example.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>C语言</title>
    <link href="http://example.com/2023/05/16/C%E8%AF%AD%E8%A8%80/"/>
    <id>http://example.com/2023/05/16/C%E8%AF%AD%E8%A8%80/</id>
    <published>2023-05-16T08:33:46.000Z</published>
    <updated>2023-05-16T12:51:33.502Z</updated>
    
    
    
    
    
    <category term="C语言" scheme="http://example.com/tags/C%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>英语阅读</title>
    <link href="http://example.com/2023/05/10/%E8%8B%B1%E8%AF%AD%E9%98%85%E8%AF%BB/"/>
    <id>http://example.com/2023/05/10/%E8%8B%B1%E8%AF%AD%E9%98%85%E8%AF%BB/</id>
    <published>2023-05-10T00:48:07.000Z</published>
    <updated>2023-05-16T01:58:25.572Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、阅读基本解题思路和观点态度题"><a href="#1、阅读基本解题思路和观点态度题" class="headerlink" title="1、阅读基本解题思路和观点态度题"></a>1、阅读基本解题思路和观点态度题</h1><ol><li><strong>作者观点：</strong><ul><li>明显：<ul><li>I think&#x2F;believe<strong>（不对）</strong></li><li>评注性状语后（of course，obviously，unfortunately，certainly）<strong>（对）</strong></li></ul></li><li>不明显：<ul><li>无人认领的观点</li><li>反复出现的观点</li><li>不反驳即赞同</li></ul></li></ul></li><li>第一题考作者态度，极有可能是主旨题</li><li>题干和选项中的指示代词是考点<strong>（选项中的指示代词一般指代选项本身或题干）</strong></li><li><strong>利用态度</strong>指导做题</li><li><strong>利用主题</strong>指导做题</li><li>生词：<ul><li><strong>tackling</strong>：处理</li><li><strong>by：</strong>通常用来引出原因</li><li><strong>as to：</strong>对于</li><li>rarely &#x3D; barely &#x3D; scarcely &#x3D; hardly &#x3D; seldom<strong>（否定）</strong></li><li><strong>too····to：</strong>太·····以至于不</li><li><strong>incentive：</strong>刺激，动力</li></ul></li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305100911747.png"                      alt="image-20230510091149054"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305100915916.png"                      alt="image-20230510091542324"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305100936843.png"                      alt="image-20230510093621945"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305100941873.png"                      alt="image-20230510094124359"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305100946393.png"                      alt="image-20230510094651503"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305101008853.png"                      alt="image-20230510100851384"                ></p><h1 id="2、因果关系的解题思路和常见的考点"><a href="#2、因果关系的解题思路和常见的考点" class="headerlink" title="2、因果关系的解题思路和常见的考点"></a>2、因果关系的解题思路和常见的考点</h1><ol><li>否定＋比较&#x3D;最高级</li><li>seemed是专责先兆词</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305101031085.png"                      alt="image-20230510103104255"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305101051877.png"                      alt="image-20230510105134994"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305101054039.png"                      alt="image-20230510105409284"                ></p><ol start="3"><li><strong>that解释就是原因</strong></li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305101101279.png"                      alt="image-20230510110144763"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305101108316.png"                      alt="image-20230510110834715"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305101131597.png"                      alt="image-20230510113154935"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305110911257.png"                      alt="image-20230511091119691"                ></p><h1 id="3、段落推理题的三大破题原则"><a href="#3、段落推理题的三大破题原则" class="headerlink" title="3、段落推理题的三大破题原则"></a>3、段落推理题的三大破题原则</h1><ol><li>论点至上原则：答案往往与段落的重点信息有关</li><li>逻辑优先原则：某些特殊的逻辑关系可能是答案的出处</li><li>收尾对应原则：正确答案经常出现在首末句</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305110919606.png"                      alt="image-20230511091901194"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305110931568.png"                      alt="image-20230511093136750"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305110931049.png"                      alt="image-20230511093155959"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305110946948.png"                      alt="image-20230511094643367"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305110947634.png"                      alt="image-20230511094712084"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305110953565.png"                      alt="image-20230511095333777"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305111004540.png"                      alt="image-20230511100419944"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305111007176.png"                      alt="image-20230511100739521"                ></p><ul><li>主旨题出现在第一个题：mainly discuss&#x2F;main idea&#x2F;best title&#x2F;the author+主题词（做题方法：蒙+排除法）</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305120944209.png"                      alt="image-20230512094407446"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305120944242.png"                      alt="image-20230512094428576"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305120944498.png"                      alt="image-20230512094453764"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305120945099.png"                      alt="image-20230512094516463"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305120952989.png"                      alt="image-20230512095230355"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305120957535.png"                      alt="image-20230512095716801"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305120957430.png"                      alt="image-20230512095739697"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305121005633.png"                      alt="image-20230512100507060"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305121005234.png"                      alt="image-20230512100529663"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305121037859.png"                      alt="image-20230512103744224"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305121041054.png"                      alt="image-20230512104157344"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305130900528.png"                      alt="image-20230513090032057"                ></p><h1 id="4、例证关系与例证题的解题思路"><a href="#4、例证关系与例证题的解题思路" class="headerlink" title="4、例证关系与例证题的解题思路"></a>4、例证关系与例证题的解题思路</h1><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305130910835.png"                      alt="image-20230513091004466"                ></p><ol><li><strong>识别：</strong></li></ol><ul><li>例子：example；story；case</li><li>证明：demonstrate；illustrate；show</li><li>提及：cite；note；quote；mention</li></ul><ol start="2"><li><p><strong>做题思路：</strong>找论点：80%往前找（大概是前一句话）；剩下的往往出现在例子结束的地方</p></li><li><p>be conducive to有助于某事</p></li><li><p>就例论例一定错</p></li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305130933368.png"                      alt="image-20230513093311750"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305130934719.png"                      alt="image-20230513093430199"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305131016352.png"                      alt="image-20230513095826459"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305131015073.png"                      alt="image-20230513101515534"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305151546246.png"                      alt="image-20230515154600998"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305151554802.png"                      alt="image-20230515155400122"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305151558632.png"                      alt="image-20230515155822847"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305151600866.png"                      alt="image-20230515160025230"                ></p><ul><li>while A，B：虽然A但是B</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305151604765.png"                      alt="image-20230515160431145"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305151615458.png"                      alt="image-20230515161555989"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305151619650.png"                      alt="image-20230515161913207"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305151625180.png"                      alt="image-20230515162540402"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305151629293.png"                      alt="image-20230515162942626"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305151632929.png"                      alt="image-20230515163241433"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305151636821.png"                      alt="image-20230515163621203"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305160845918.png"                      alt="image-20230516084459347"                ></p><h1 id="5、语义题与实验类文章的解题思路"><a href="#5、语义题与实验类文章的解题思路" class="headerlink" title="5、语义题与实验类文章的解题思路"></a>5、语义题与实验类文章的解题思路</h1><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305160855828.png"                      alt="image-20230516085511365"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305160905248.png"                      alt="image-20230516090544826"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305160912939.png"                      alt="image-20230516091228295"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305160919237.png"                      alt="image-20230516091934683"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305160926153.png"                      alt="image-20230516092600557"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305160926394.png"                      alt="image-20230516092630640"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305160931913.png"                      alt="image-20230516093111321"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305160942669.png"                      alt="image-20230516094216243"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305160945013.png"                      alt="image-20230516094505698"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305160945734.png"                      alt="image-20230516094521876"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305160952808.png"                      alt="image-20230516095210910"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305160958310.png"                      alt="image-20230516095807807"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1、阅读基本解题思路和观点态度题&quot;&gt;&lt;a href=&quot;#1、阅读基本解题思路和观点态度题&quot; class=&quot;headerlink&quot; title=&quot;1、阅读基本解题思路和观点态度题&quot;&gt;&lt;/a&gt;1、阅读基本解题思路和观点态度题&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;</summary>
      
    
    
    
    
    <category term="英语" scheme="http://example.com/tags/%E8%8B%B1%E8%AF%AD/"/>
    
  </entry>
  
  <entry>
    <title>实战支付+电商双系统</title>
    <link href="http://example.com/2023/04/29/%E5%AE%9E%E6%88%98%E6%94%AF%E4%BB%98-%E7%94%B5%E5%95%86%E5%8F%8C%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2023/04/29/%E5%AE%9E%E6%88%98%E6%94%AF%E4%BB%98-%E7%94%B5%E5%95%86%E5%8F%8C%E7%B3%BB%E7%BB%9F/</id>
    <published>2023-04-29T08:29:15.000Z</published>
    <updated>2023-06-09T10:01:00.306Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、数据库设计"><a href="#一、数据库设计" class="headerlink" title="一、数据库设计"></a>一、数据库设计</h1><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304291649317.png"                      alt="未命名文件"                ></p><ol><li>用户表结构</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `mall_user`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `mall_user` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;用户表id&#x27;</span>,</span><br><span class="line">  `username` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户名&#x27;</span>,</span><br><span class="line">  `password` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户密码，MD5加密&#x27;</span>,</span><br><span class="line">  `email` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `phone` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `question` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;找回密码问题&#x27;</span>,</span><br><span class="line">  `answer` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;找回密码答案&#x27;</span>,</span><br><span class="line">  `role` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;角色0-管理员,1-普通用户&#x27;</span>,</span><br><span class="line">  `create_time` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `update_time` datetime <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;最后一次更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `user_name_unique` (`username`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ol start="2"><li>分类表结构</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `mall_category`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `mall_category` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;类别Id&#x27;</span>,</span><br><span class="line">  `parent_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;父类别id当id=0时说明是根节点,一级类别&#x27;</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;类别名称&#x27;</span>,</span><br><span class="line">  `status` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;1&#x27;</span> COMMENT <span class="string">&#x27;类别状态1-正常,2-已废弃&#x27;</span>,</span><br><span class="line">  `sort_order` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;排序编号,同类展示顺序,数值相等则自然排序&#x27;</span>,</span><br><span class="line">  `create_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ol start="3"><li>产品表结构</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `mall_product`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `mall_product` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;商品id&#x27;</span>,</span><br><span class="line">  `category_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;分类id,对应mall_category表的主键&#x27;</span>,</span><br><span class="line">  `name` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品名称&#x27;</span>,</span><br><span class="line">  `subtitle` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品副标题&#x27;</span>,</span><br><span class="line">  `main_image` <span class="type">varchar</span>(<span class="number">500</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;产品主图,url相对地址&#x27;</span>,</span><br><span class="line">  `sub_images` text COMMENT <span class="string">&#x27;图片地址,json格式,扩展用&#x27;</span>,</span><br><span class="line">  `detail` text COMMENT <span class="string">&#x27;商品详情&#x27;</span>,</span><br><span class="line">  `price` <span class="type">decimal</span>(<span class="number">20</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;价格,单位-元保留两位小数&#x27;</span>,</span><br><span class="line">  `stock` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;库存数量&#x27;</span>,</span><br><span class="line">  `status` <span class="type">int</span>(<span class="number">6</span>) <span class="keyword">DEFAULT</span> <span class="string">&#x27;1&#x27;</span> COMMENT <span class="string">&#x27;商品状态.1-在售 2-下架 3-删除&#x27;</span>,</span><br><span class="line">  `create_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ol start="4"><li>支付信息表结构</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `mall_pay_info`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `mall_pay_info` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `user_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户id&#x27;</span>,</span><br><span class="line">  `order_no` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单号&#x27;</span>,</span><br><span class="line">  `pay_platform` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;支付平台:1-支付宝,2-微信&#x27;</span>,</span><br><span class="line">  `platform_number` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;支付宝支付流水号&#x27;</span>,</span><br><span class="line">  `platform_status` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;支付宝支付状态&#x27;</span>,</span><br><span class="line">  `create_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ol start="5"><li>订单表结构</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `mall_order`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `mall_order` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;订单id&#x27;</span>,</span><br><span class="line">  `order_no` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单号&#x27;</span>,</span><br><span class="line">  `user_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户id&#x27;</span>,</span><br><span class="line">  `shipping_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `payment` <span class="type">decimal</span>(<span class="number">20</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;实际付款金额,单位是元,保留两位小数&#x27;</span>,</span><br><span class="line">  `payment_type` <span class="type">int</span>(<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;支付类型,1-在线支付&#x27;</span>,</span><br><span class="line">  `postage` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;运费,单位是元&#x27;</span>,</span><br><span class="line">  `status` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;订单状态:0-已取消-10-未付款，20-已付款，40-已发货，50-交易成功，60-交易关闭&#x27;</span>,</span><br><span class="line">  `payment_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;支付时间&#x27;</span>,</span><br><span class="line">  `send_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;发货时间&#x27;</span>,</span><br><span class="line">  `end_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;交易完成时间&#x27;</span>,</span><br><span class="line">  `close_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;交易关闭时间&#x27;</span>,</span><br><span class="line">  `create_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">  `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  <span class="keyword">UNIQUE</span> KEY `order_no_index` (`order_no`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ol start="6"><li>订单明细表结构</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `mall_order_item` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT COMMENT <span class="string">&#x27;订单子表id&#x27;</span>,</span><br><span class="line">  `user_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `order_no` <span class="type">bigint</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `product_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品id&#x27;</span>,</span><br><span class="line">  `product_name` <span class="type">varchar</span>(<span class="number">100</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品名称&#x27;</span>,</span><br><span class="line">  `product_image` <span class="type">varchar</span>(<span class="number">500</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品图片地址&#x27;</span>,</span><br><span class="line">  `current_unit_price` <span class="type">decimal</span>(<span class="number">20</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;生成订单时的商品单价，单位是元,保留两位小数&#x27;</span>,</span><br><span class="line">  `quantity` <span class="type">int</span>(<span class="number">10</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品数量&#x27;</span>,</span><br><span class="line">  `total_price` <span class="type">decimal</span>(<span class="number">20</span>,<span class="number">2</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;商品总价,单位是元,保留两位小数&#x27;</span>,</span><br><span class="line">  `create_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`),</span><br><span class="line">  KEY `order_no_index` (`order_no`) <span class="keyword">USING</span> BTREE,</span><br><span class="line">  KEY `order_no_user_id_index` (`user_id`,`order_no`) <span class="keyword">USING</span> BTREE</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><ol start="7"><li>收货地址表结构</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `mall_shipping`;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `mall_shipping` (</span><br><span class="line">  `id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  `user_id` <span class="type">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;用户id&#x27;</span>,</span><br><span class="line">  `receiver_name` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;收货姓名&#x27;</span>,</span><br><span class="line">  `receiver_phone` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;收货固定电话&#x27;</span>,</span><br><span class="line">  `receiver_mobile` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;收货移动电话&#x27;</span>,</span><br><span class="line">  `receiver_province` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;省份&#x27;</span>,</span><br><span class="line">  `receiver_city` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;城市&#x27;</span>,</span><br><span class="line">  `receiver_district` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;区/县&#x27;</span>,</span><br><span class="line">  `receiver_address` <span class="type">varchar</span>(<span class="number">200</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;详细地址&#x27;</span>,</span><br><span class="line">  `receiver_zip` <span class="type">varchar</span>(<span class="number">6</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;邮编&#x27;</span>,</span><br><span class="line">  `create_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span>,</span><br><span class="line">  <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8;</span><br></pre></td></tr></table></figure><hr><p>表关系-表结构-唯一索引-单索引、组合索引-时间戳</p><h1 id="二、MyBatis三剑客"><a href="#二、MyBatis三剑客" class="headerlink" title="二、MyBatis三剑客"></a>二、MyBatis三剑客</h1><h2 id="1、MyBatis注解使用"><a href="#1、MyBatis注解使用" class="headerlink" title="1、MyBatis注解使用"></a>1、MyBatis注解使用</h2><ol><li>现在pom.xml中引入依赖包</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.spring.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>其次编写src&#x2F;main中的那个application.yml文件</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://127.0.0.1:3306/mall?characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=UTC</span></span><br></pre></td></tr></table></figure><ol start="3"><li>连接数据库，创建数据库的各种表</li><li>创建package com.mall.pojo;Category</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Category</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer parentId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date UpdateTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(Integer id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getParentId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> parentId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setParentId</span><span class="params">(Integer parentId)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.parentId = parentId;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getStatus</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setStatus</span><span class="params">(Integer status)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.status = status;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getCreateTime</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCreateTime</span><span class="params">(Date createTime)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.createTime = createTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Date <span class="title function_">getUpdateTime</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> UpdateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setUpdateTime</span><span class="params">(Date updateTime)</span> &#123;</span><br><span class="line">        UpdateTime = updateTime;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="type">StringBuffer</span> <span class="variable">sb</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(<span class="string">&quot;Category&#123;&quot;</span>);</span><br><span class="line">        sb.append(<span class="string">&quot;id=&quot;</span>).append(id);</span><br><span class="line">        sb.append(<span class="string">&quot;, parentId=&quot;</span>).append(parentId);</span><br><span class="line">        sb.append(<span class="string">&quot;, name=&#x27;&quot;</span>).append(name).append(<span class="string">&#x27;\&#x27;&#x27;</span>);</span><br><span class="line">        sb.append(<span class="string">&quot;, status=&quot;</span>).append(status);</span><br><span class="line">        sb.append(<span class="string">&quot;, createTime=&quot;</span>).append(createTime);</span><br><span class="line">        sb.append(<span class="string">&quot;, UpdateTime=&quot;</span>).append(UpdateTime);</span><br><span class="line">        sb.append(<span class="string">&#x27;&#125;&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> sb.toString();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>创建package com.mall.dao;CategoryMapper</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.Category;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Mapper;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Param;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.annotations.Select;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">CategoryMapper</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Select(&quot;select * from mall_category where id = #&#123;id&#125;&quot;)</span></span><br><span class="line">    Category <span class="title function_">findById</span><span class="params">(<span class="meta">@Param(&quot;id&quot;)</span> Integer id)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>在测试类里进行测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.dao.CategoryMapper;</span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.Category;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MallApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CategoryMapper categoryMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">contextLoads</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Category</span> <span class="variable">category</span> <span class="operator">=</span> categoryMapper.findById(<span class="number">100001</span>);</span><br><span class="line">        System.out.println(category.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>发现查出来的结果好多是null</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305031642777.png"                      alt="image-20230503164157473"                ></p><ol start="8"><li>只需要在application.yml中添加配置</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305031645546.png"                      alt="image-20230503164532410"                ></p><ol start="9"><li>如果不想在CategoryMapper上加@mapper注解那么就在启动类加注解@MapperScan(basePackages &#x3D; “com.mall.dao”)</li></ol><h2 id="2、使用lombok插件"><a href="#2、使用lombok插件" class="headerlink" title="2、使用lombok插件"></a>2、使用lombok插件</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后去插件里下载</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305031732978.png"                      alt="image-20230503173206677"                ></p><p>这时候pojo就可以用了</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Category</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer parentId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date UpdateTime;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、Mybatis的Xml方式使用"><a href="#3、Mybatis的Xml方式使用" class="headerlink" title="3、Mybatis的Xml方式使用"></a>3、Mybatis的Xml方式使用</h2><ol><li>修改一下日志的格式</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">logging:</span></span><br><span class="line">  <span class="attr">pattern:</span></span><br><span class="line">    <span class="attr">console:</span> <span class="string">&quot;[%thread] %-5level %logger&#123;36&#125; - %msg%n&quot;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>在dao.CategoryMapper添加方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Category <span class="title function_">queryById</span><span class="params">(Integer id)</span>;</span><br></pre></td></tr></table></figure><ol start="3"><li>在resources下新建mappers，新建CategoryMapper.xml文件</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="line">&lt;!DOCTYPE mapper</span><br><span class="line">        PUBLIC <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span><br><span class="line">        <span class="string">&quot;https://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span><br><span class="line">&lt;mapper namespace=<span class="string">&quot;com.mall.dao.CategoryMapper&quot;</span>&gt;</span><br><span class="line">    &lt;sql id=<span class="string">&quot;Base_Column_List&quot;</span>&gt;</span><br><span class="line">        id, parent_id, name, status, sort_order, create_time, update_time</span><br><span class="line">    &lt;/sql&gt;</span><br><span class="line">    &lt;select id=<span class="string">&quot;queryById&quot;</span> resultType=<span class="string">&quot;com.mall.pojo.Category&quot;</span>&gt;</span><br><span class="line">        select</span><br><span class="line">        &lt;include refid=<span class="string">&quot;Base_Column_List&quot;</span>/&gt;</span><br><span class="line">        from mall_category <span class="type">where</span> <span class="variable">id</span> <span class="operator">=</span> #&#123;id&#125;</span><br><span class="line">    &lt;/select&gt;</span><br><span class="line"></span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>在yml中配置一下mapper路径要不然扫描不到</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mappers/*.xml</span></span><br></pre></td></tr></table></figure><ol start="5"><li>我们在给每个dao弄一个测试类鼠标右键转到测试，弄一个主类用来继承注解，生成的用来测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.mybatis.spring.annotation.MapperScan;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</span><br><span class="line"></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="meta">@MapperScan(basePackages = &quot;com.mall.dao&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MallApplication</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        SpringApplication.run(MallApplication.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.dao;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.MallApplicationTests;</span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.Category;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CategoryMapperTest</span> <span class="keyword">extends</span> <span class="title class_">MallApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CategoryMapper categoryMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findById</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Category</span> <span class="variable">category</span> <span class="operator">=</span> categoryMapper.findById(<span class="number">100001</span>);</span><br><span class="line">        System.out.println(category.toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">queryById</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">Category</span> <span class="variable">category</span> <span class="operator">=</span> categoryMapper.queryById(<span class="number">100001</span>);</span><br><span class="line">        System.out.println(category.toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、Mybatis-generator"><a href="#4、Mybatis-generator" class="headerlink" title="4、Mybatis generator"></a>4、Mybatis generator</h2><ol><li>在pom.xml中添加插件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- mybatis generator 自动生成代码插件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis.generator<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-generator-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.7<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">configurationFile</span>&gt;</span>src/main/resources/generator/generatorConfig.xml<span class="tag">&lt;/<span class="name">configurationFile</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">overwrite</span>&gt;</span>true<span class="tag">&lt;/<span class="name">overwrite</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">verbose</span>&gt;</span>true<span class="tag">&lt;/<span class="name">verbose</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.23<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>添加配置文件generatorConfig.xml：加上反引号&#96;&#96;后，一些mysql的关键字就可以当作表明或者字段名来使用。</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">generatorConfiguration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">&quot;Mysql&quot;</span> <span class="attr">targetRuntime</span>=<span class="string">&quot;MyBatis3&quot;</span> <span class="attr">defaultModelType</span>=<span class="string">&quot;flat&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;autoDelimitKeywords&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;beginningDelimiter&quot;</span> <span class="attr">value</span>=<span class="string">&quot;`&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;endingDelimiter&quot;</span> <span class="attr">value</span>=<span class="string">&quot;`&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--覆盖生成XML文件--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">type</span>=<span class="string">&quot;org.mybatis.generator.plugins.UnmergeableXmlMappersPlugin&quot;</span> /&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 生成的实体类添加toString()方法 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span> <span class="attr">type</span>=<span class="string">&quot;org.mybatis.generator.plugins.ToStringPlugin&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 不生成注释 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;suppressAllComments&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">connectionURL</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/mall&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">userId</span>=<span class="string">&quot;root&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">password</span>=<span class="string">&quot;数据库密码&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- domain类的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetProject</span>=<span class="string">&quot;src\main\java&quot;</span></span></span><br><span class="line"><span class="tag">                            <span class="attr">targetPackage</span>=<span class="string">&quot;com.mall.pojo&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mapper xml的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetProject</span>=<span class="string">&quot;src\main\resources&quot;</span></span></span><br><span class="line"><span class="tag">                         <span class="attr">targetPackage</span>=<span class="string">&quot;mappers&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- mapper类的位置 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">targetProject</span>=<span class="string">&quot;src\main\java&quot;</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">targetPackage</span>=<span class="string">&quot;com.mall.dao&quot;</span></span></span><br><span class="line"><span class="tag">                             <span class="attr">type</span>=<span class="string">&quot;XMLMAPPER&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;mall_order&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Order&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>创建一个maven启动命令mybatis-generator:generate -e</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305041716515.png"                      alt="image-20230504171642304"                ></p><h2 id="5、MyBatis-plugin"><a href="#5、MyBatis-plugin" class="headerlink" title="5、MyBatis plugin"></a>5、MyBatis plugin</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305041729145.png"                      alt="image-20230504172902863"                ></p><h1 id="三、通用型支付系统"><a href="#三、通用型支付系统" class="headerlink" title="三、通用型支付系统"></a>三、通用型支付系统</h1><ol><li>顾客扫商户的码：Native支付</li><li>商户扫顾客的码：付款码支付</li><li>新建一个pay项目</li><li>首先添加依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>cn.springboot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>best-pay-sdk<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.3.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1、支付-微信Native支付业务逻辑实现"><a href="#1、支付-微信Native支付业务逻辑实现" class="headerlink" title="1、支付-微信Native支付业务逻辑实现"></a>1、支付-微信Native支付业务逻辑实现</h2><ol><li>首先创建service</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pay.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IPayService</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建/发起支付</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> orderId</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> amount</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    PayResponse <span class="title function_">create</span><span class="params">(String orderId, BigDecimal amount)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>其次创建service实现类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pay.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.config.WxPayConfig;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.enums.BestPayTypeEnum;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.model.PayRequest;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.model.PayResponse;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.service.impl.BestPayServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.pay.service.IPayService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PayService</span> <span class="keyword">implements</span> <span class="title class_">IPayService</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> PayResponse <span class="title function_">create</span><span class="params">(String orderId, BigDecimal amount)</span> &#123;</span><br><span class="line">        <span class="type">WxPayConfig</span> <span class="variable">wxPayConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WxPayConfig</span>();</span><br><span class="line">        wxPayConfig.setAppAppId(<span class="string">&quot;ID&quot;</span>);</span><br><span class="line">        wxPayConfig.setMchId(<span class="string">&quot;ID&quot;</span>);</span><br><span class="line">        wxPayConfig.setMchKey(<span class="string">&quot;Key&quot;</span>);</span><br><span class="line">        wxPayConfig.setNotifyUrl(<span class="string">&quot;http://127.0.0.1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">BestPayServiceImpl</span> <span class="variable">bestPayService</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">BestPayServiceImpl</span>();</span><br><span class="line">        bestPayService.setWxPayConfig(wxPayConfig);</span><br><span class="line"></span><br><span class="line">        <span class="type">PayRequest</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PayRequest</span>();</span><br><span class="line">        request.setOrderName(<span class="string">&quot;asdasd&quot;</span>);</span><br><span class="line">        request.setOrderId(<span class="string">&quot;1321313&quot;</span>);</span><br><span class="line">        request.setOrderAmount(<span class="number">0.01</span>);</span><br><span class="line">        request.setPayTypeEnum(BestPayTypeEnum.WXPAY_NATIVE);</span><br><span class="line">        <span class="type">PayResponse</span> <span class="variable">response</span> <span class="operator">=</span> bestPayService.pay(request);</span><br><span class="line">        log.info(<span class="string">&quot;response=&#123;&#125;&quot;</span>,response);</span><br><span class="line">        <span class="keyword">return</span> response;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、支付-用程序实现支付链接转换成二维码"><a href="#2、支付-用程序实现支付链接转换成二维码" class="headerlink" title="2、支付-用程序实现支付链接转换成二维码"></a>2、支付-用程序实现支付链接转换成二维码</h2><ol><li>在网页写js代码，这里需要一个技术将其渲染出来，引入pom.xml依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-freemarker<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>其次创建controller</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pay.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/pay&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PayController</span> &#123;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/create&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView <span class="title function_">create</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>(<span class="string">&quot;create&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>在templates下创建create.ftl</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>支付<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;qrcodeCanvas&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery/1.5.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.bootcdn.net/ajax/libs/jquery.qrcode/1.0/jquery.qrcode.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">jQuery</span>(<span class="string">&#x27;#qrcodeCanvas&#x27;</span>).<span class="title function_">qrcode</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        text : <span class="string">&quot;You are a pig&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3、支付-避免重复支付的正确姿势"><a href="#3、支付-避免重复支付的正确姿势" class="headerlink" title="3、支付-避免重复支付的正确姿势"></a>3、支付-避免重复支付的正确姿势</h2><ol><li>接下来把二维码生成变成活的，修改create.ftl</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">jQuery</span>(<span class="string">&#x27;#qrcodeCanvas&#x27;</span>).<span class="title function_">qrcode</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        text : <span class="string">&quot;$&#123;codeUrl&#125;&quot;</span></span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>修改对应的Controller</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pay.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.model.PayResponse;</span><br><span class="line"><span class="keyword">import</span> com.pay.service.impl.PayService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.ModelAndView;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/pay&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PayController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PayService payService;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@GetMapping(&quot;/create&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ModelAndView <span class="title function_">create</span><span class="params">(<span class="meta">@RequestParam(&quot;orderId&quot;)</span> String orderId,</span></span><br><span class="line"><span class="params">                               <span class="meta">@RequestParam(&quot;amount&quot;)</span>BigDecimal amount</span></span><br><span class="line"><span class="params">                                )</span>&#123;</span><br><span class="line">        <span class="type">PayResponse</span> <span class="variable">response</span> <span class="operator">=</span> payService.create(orderId,BigDecimal.valueOf(<span class="number">0.01</span>));</span><br><span class="line">        </span><br><span class="line">        <span class="type">Map</span> <span class="variable">map</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;codeUrl&quot;</span>,response.getCodeUrl());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>(<span class="string">&quot;create&quot;</span>,map);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、支付-微信异步通知"><a href="#4、支付-微信异步通知" class="headerlink" title="4、支付-微信异步通知"></a>4、支付-微信异步通知</h2><ol><li>notify_url要在微信后台设置吗？不需要（我们用的模式二）</li><li>notify_url一定要用域名吗？不需要（用IP即可）</li><li>我们使用NATAPP来实现内网穿透</li><li>在PayController里写一个简单的异步通知方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/notify&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">asyncNotify</span><span class="params">(<span class="meta">@RequestBody</span> String notifyData)</span>&#123;</span><br><span class="line">    log.info(<span class="string">&quot;notifyData=&#123;&#125;&quot;</span>,notifyData)；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>记得在PayService中修改setNotifyUrl的值</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wxPayConfig.setNotifyUrl(<span class="string">&quot;http://127.0.0.1/pay/notiy&quot;</span>);</span><br></pre></td></tr></table></figure><ol start="6"><li>在IPayService.java中新建接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 异步通知处理</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> notifyData</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    String <span class="title function_">asyncNotify</span><span class="params">(String notifyData)</span>;</span><br></pre></td></tr></table></figure><ol start="7"><li>我们将设置的wxPayConfig公共部分提取出来</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pay.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.config.WxPayConfig;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.service.BestPayService;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.service.impl.BestPayServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BestPayConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> BestPayService <span class="title function_">bestPayService</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">WxPayConfig</span> <span class="variable">wxPayConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WxPayConfig</span>();</span><br><span class="line">        wxPayConfig.setAppAppId(<span class="string">&quot;ID&quot;</span>);</span><br><span class="line">        wxPayConfig.setMchId(<span class="string">&quot;ID&quot;</span>);</span><br><span class="line">        wxPayConfig.setMchKey(<span class="string">&quot;Key&quot;</span>);</span><br><span class="line">        wxPayConfig.setNotifyUrl(<span class="string">&quot;http://127.0.0.1/pay/notiy&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">BestPayServiceImpl</span> <span class="variable">bestPayService</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">BestPayServiceImpl</span>();</span><br><span class="line">        bestPayService.setWxPayConfig(wxPayConfig);</span><br><span class="line">        <span class="keyword">return</span> bestPayService;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8"><li>接下来就可以在PayService中直接使用bestPayService</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> BestPayService bestPayService;</span><br></pre></td></tr></table></figure><ol start="9"><li>重写IPayService接口的方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">asyncNotify</span><span class="params">(String notifyData)</span> &#123;</span><br><span class="line">    <span class="comment">//1.签名校验</span></span><br><span class="line">    <span class="type">PayResponse</span> <span class="variable">payResponse</span> <span class="operator">=</span> bestPayService.asyncNotify(notifyData);</span><br><span class="line">    log.info(<span class="string">&quot;payResponse=&#123;&#125;&quot;</span>,payResponse);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.金额校验（从数据库查订单）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.修改订单支付状态</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.告诉微信不要在通知了</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;&lt;xml&gt;\n&quot;</span>+</span><br><span class="line">            <span class="string">&quot;&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&lt;/return_code&gt;\n&quot;</span>+</span><br><span class="line">            <span class="string">&quot;&lt;return_msg&gt;&lt;![CDATA[OK]]&lt;/return_msg&gt;\n&quot;</span>+</span><br><span class="line">            <span class="string">&quot;&lt;/xml&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="10"><li>在PayController中调用该方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/notify&quot;)</span></span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">asyncNotify</span><span class="params">(<span class="meta">@RequestBody</span> String notifyData)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> payService.asyncNotify(notifyData);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5、支付密匙说明"><a href="#5、支付密匙说明" class="headerlink" title="5、支付密匙说明"></a>5、支付密匙说明</h2><ol><li>通过支付宝公钥生成器可以生成三个密钥：<ul><li>商户应用私钥</li><li>商户应用公钥</li><li>支付宝公钥</li></ul></li><li>下面有两个RSA非对称逻辑：<ul><li>发起支付：<strong>商户</strong>（商户应用私钥签名）-&gt;支付宝（商户应用公钥验签）</li><li>异步通知：支付宝（支付宝私钥签名）-&gt;<strong>商户</strong>（支付宝公钥验签）</li></ul></li><li>RSA签名不等于加密</li></ol><h2 id="6、支付宝电脑网站支付"><a href="#6、支付宝电脑网站支付" class="headerlink" title="6、支付宝电脑网站支付"></a>6、支付宝电脑网站支付</h2><ol><li>首先改一下PayService、IPayService、PayController的create函数里面的参数，增加BestPayTypeEnum bestPayTypeEnum，来适应微信和支付宝支付</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> PayResponse <span class="title function_">create</span><span class="params">(String orderId, BigDecimal amount,BestPayTypeEnum bestPayTypeEnum)</span> &#123;</span><br><span class="line">    request.setPayTypeEnum(bestPayTypeEnum);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PayResponse <span class="title function_">create</span><span class="params">(String orderId, BigDecimal amount, BestPayTypeEnum bestPayTypeEnum)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> ModelAndView <span class="title function_">create</span><span class="params">(<span class="meta">@RequestParam(&quot;orderId&quot;)</span> String orderId,</span></span><br><span class="line"><span class="params">                           <span class="meta">@RequestParam(&quot;amount&quot;)</span>BigDecimal amount,</span></span><br><span class="line"><span class="params">                           <span class="meta">@RequestParam(&quot;payType&quot;)</span>BestPayTypeEnum bestPayTypeEnumm</span></span><br><span class="line"><span class="params">                           )</span></span><br></pre></td></tr></table></figure><ol start="2"><li>接下来设置一下BestPayConfig里面的支付宝通用配置</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pay.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.config.AliPayConfig;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.config.WxPayConfig;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.service.BestPayService;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.service.impl.BestPayServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BestPayConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> BestPayService <span class="title function_">bestPayService</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">WxPayConfig</span> <span class="variable">wxPayConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WxPayConfig</span>();</span><br><span class="line">        wxPayConfig.setAppAppId(<span class="string">&quot;ID&quot;</span>);</span><br><span class="line">        wxPayConfig.setMchId(<span class="string">&quot;ID&quot;</span>);</span><br><span class="line">        wxPayConfig.setMchKey(<span class="string">&quot;Key&quot;</span>);</span><br><span class="line">        wxPayConfig.setNotifyUrl(<span class="string">&quot;http://127.0.0.1/pay/notiy&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">AliPayConfig</span> <span class="variable">aliPayConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AliPayConfig</span>();</span><br><span class="line">        aliPayConfig.setAppId(<span class="string">&quot;ID&quot;</span>);</span><br><span class="line">        aliPayConfig.setPrivateKey(<span class="string">&quot;PrivateKey&quot;</span>);</span><br><span class="line">        aliPayConfig.setAliPayPublicKey(<span class="string">&quot;PublicKey&quot;</span>);</span><br><span class="line">        aliPayConfig.setNotifyUrl(<span class="string">&quot;http://127.0.0.1/pay/notiy&quot;</span>);</span><br><span class="line">        aliPayConfig.setReturnUrl(<span class="string">&quot;http://127.0.0.1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">BestPayServiceImpl</span> <span class="variable">bestPayService</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">BestPayServiceImpl</span>();</span><br><span class="line">        bestPayService.setWxPayConfig(wxPayConfig);</span><br><span class="line">        bestPayService.setAliPayConfig(aliPayConfig);</span><br><span class="line">        <span class="keyword">return</span> bestPayService;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>写PayController里面create方法，不同支付方式的渲染</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/create&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ModelAndView <span class="title function_">create</span><span class="params">(<span class="meta">@RequestParam(&quot;orderId&quot;)</span> String orderId,</span></span><br><span class="line"><span class="params">                           <span class="meta">@RequestParam(&quot;amount&quot;)</span>BigDecimal amount,</span></span><br><span class="line"><span class="params">                           <span class="meta">@RequestParam(&quot;payType&quot;)</span>BestPayTypeEnum bestPayTypeEnumm</span></span><br><span class="line"><span class="params">                           )</span>&#123;</span><br><span class="line">    <span class="type">PayResponse</span> <span class="variable">response</span> <span class="operator">=</span> payService.create(orderId,amount,bestPayTypeEnumm);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//支付方式不同，渲染就不同，WXPAY_NATIVE使用codeUrl，ALIPAY_PC使用body</span></span><br><span class="line">    Map&lt;String,String&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">if</span>(bestPayTypeEnumm == BestPayTypeEnum.WXPAY_NATIVE)&#123;</span><br><span class="line">        map.put(<span class="string">&quot;codeUrl&quot;</span>,response.getCodeUrl());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>(<span class="string">&quot;createForWxNative&quot;</span>,map);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span>(bestPayTypeEnumm == BestPayTypeEnum.ALIPAY_PC)&#123;</span><br><span class="line">        map.put(<span class="string">&quot;body&quot;</span>,response.getBody());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>(<span class="string">&quot;createForAlipayPc&quot;</span>,map);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;暂不支持的支付类型&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>修改微信支付的模板名称为createForWxNative，并且新建支付宝支付模板createForAlipayPc.ftl</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;支付&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;qrcodeCanvas&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/jquery/1.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/jquery.qrcode/1.0/jquery.qrcode.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    jQuery(&#x27;#qrcodeCanvas&#x27;).qrcode(&#123;</span><br><span class="line">        text : &quot;$&#123;codeUrl&#125;&quot;</span><br><span class="line">    &#125;);</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ol start="5"><li>修改PayService的异步通知方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String <span class="title function_">asyncNotify</span><span class="params">(String notifyData)</span> &#123;</span><br><span class="line">    <span class="comment">//1.签名校验</span></span><br><span class="line">    <span class="type">PayResponse</span> <span class="variable">payResponse</span> <span class="operator">=</span> bestPayService.asyncNotify(notifyData);</span><br><span class="line">    log.info(<span class="string">&quot;payResponse=&#123;&#125;&quot;</span>,payResponse);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.金额校验（从数据库查订单）</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.修改订单支付状态</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (payResponse.getPayPlatformEnum() == BestPayPlatformEnum.WX)&#123;</span><br><span class="line">        <span class="comment">//4.告诉微信不要在通知了</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;&lt;xml&gt;\n&quot;</span>+</span><br><span class="line">                <span class="string">&quot;&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&lt;/return_code&gt;\n&quot;</span>+</span><br><span class="line">                <span class="string">&quot;&lt;return_msg&gt;&lt;![CDATA[OK]]&lt;/return_msg&gt;\n&quot;</span>+</span><br><span class="line">                <span class="string">&quot;&lt;/xml&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (payResponse.getPayPlatformEnum() == BestPayPlatformEnum.ALIPAY)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;异步通知中错误的支付平台&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7、支付与数据库"><a href="#7、支付与数据库" class="headerlink" title="7、支付与数据库"></a>7、支付与数据库</h2><ol><li>接下来整理数据库，发现数据库mall_pay_info少了一个字段，不要在可视化界面修改表直接加，一定要使用SQL语句</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> mall_pay_info <span class="keyword">add</span> pay_amount <span class="type">decimal</span>(<span class="number">20</span>,<span class="number">2</span>) <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;支付金额&#x27;</span> after platform_status;</span><br></pre></td></tr></table></figure><ol start="2"><li>使用生成器生成代码</li><li>PayInfo中生成构造函数</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">PayInfo</span><span class="params">(Long orderNo, Integer payPlatform, String platformStatus, BigDecimal payAmount)</span> &#123;</span><br><span class="line">     <span class="built_in">this</span>.orderNo = orderNo;</span><br><span class="line">     <span class="built_in">this</span>.payPlatform = payPlatform;</span><br><span class="line">     <span class="built_in">this</span>.platformStatus = platformStatus;</span><br><span class="line">     <span class="built_in">this</span>.payAmount = payAmount;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>写一个枚举package com.pay.enums.PayPlatformEnum</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pay.enums;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.enums.BestPayTypeEnum;</span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">PayPlatformEnum</span> &#123;</span><br><span class="line">    <span class="comment">//1-支付宝，2-微信</span></span><br><span class="line">    ALIPAY(<span class="number">1</span>),</span><br><span class="line">    WX(<span class="number">2</span>),</span><br><span class="line">    ;</span><br><span class="line">    Integer code;</span><br><span class="line"></span><br><span class="line">    PayPlatformEnum(Integer code) &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> PayPlatformEnum <span class="title function_">getByBestPayTypeEnum</span><span class="params">(BestPayTypeEnum bestPayTypeEnum)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (PayPlatformEnum payPlatformEnum : PayPlatformEnum.values())&#123;</span><br><span class="line">            <span class="keyword">if</span> (bestPayTypeEnum.getPlatform().name().equals(payPlatformEnum.name()))&#123;</span><br><span class="line">                <span class="keyword">return</span> payPlatformEnum;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;错误的支付平台：&quot;</span>+ bestPayTypeEnum.name());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>在PayService中将数据写入数据库</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> PayInfoMapper payInfoMapper;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写入数据库</span></span><br><span class="line">        <span class="type">PayInfo</span> <span class="variable">payInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PayInfo</span>(Long.parseLong(orderId),</span><br><span class="line">                PayPlatformEnum.getByBestPayTypeEnum(bestPayTypeEnum).getCode(),</span><br><span class="line">                OrderStatusEnum.NOTPAY.name(),</span><br><span class="line">                amount);</span><br><span class="line">        payInfoMapper.insertSelective(payInfo);</span><br></pre></td></tr></table></figure><ol start="6"><li>我们需要对订单号进行约束，一个订单号只能发起一次，唯一约束（mall_pay_info）</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UNIQUE</span> KEY `uqe_order_no` (order_no),</span><br><span class="line"><span class="keyword">UNIQUE</span> KEY `uqe_platform_number` (platform_number),</span><br></pre></td></tr></table></figure><ol start="7"><li><p>设置创建时间和更新时间表结构</p><ul><li>数据类型设置为<code>timestamp</code>、默认值设为<code>CURRENT_TIMESTAMP</code></li><li>数据类型设置为<code>timestamp</code>、默认值设为<code>CURRENT_TIMESTAMP</code>、勾选<code>根据当前时间戳更新</code></li></ul></li><li><p>创建以订单号查询的PayInfoMapper.java和PayInfoMapper.xml</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PayInfo <span class="title function_">selectByOrderNo</span><span class="params">(Long orderNo)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByOrderNo&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.Long&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">  select</span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;Base_Column_List&quot;</span> /&gt;</span></span><br><span class="line">  from mall_pay_info</span><br><span class="line">  where order_no = #&#123;id,jdbcType=BIGINT&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="9"><li>接下来写PayService的异步操作方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">asyncNotify</span><span class="params">(String notifyData)</span> &#123;</span><br><span class="line">        <span class="comment">//1.签名校验</span></span><br><span class="line">        <span class="type">PayResponse</span> <span class="variable">payResponse</span> <span class="operator">=</span> bestPayService.asyncNotify(notifyData);</span><br><span class="line">        log.info(<span class="string">&quot;异步通知payResponse=&#123;&#125;&quot;</span>,payResponse);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.金额校验（从数据库查订单）</span></span><br><span class="line">        <span class="comment">//比较严重（正常情况下是不会发生的）发出警告：钉钉、短信</span></span><br><span class="line">        <span class="type">PayInfo</span> <span class="variable">payInfo</span> <span class="operator">=</span> payInfoMapper.selectByOrderNo(Long.parseLong(payResponse.getOrderId()));</span><br><span class="line">        <span class="keyword">if</span> (payInfo == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;通过orderNo查询到的结果是null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果订单支付状态不是“已支付”</span></span><br><span class="line">        <span class="keyword">if</span> (!payInfo.getPlatformStatus().equals(OrderStatusEnum.SUCCESS.name()))&#123;</span><br><span class="line">            <span class="keyword">if</span> (payInfo.getPayAmount().compareTo(BigDecimal.valueOf(payResponse.getOrderAmount()))!=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;异步通知中的金额和数据库里的不一致，orderNo=&quot;</span>+ payResponse.getOrderId());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//3.修改订单支付状态</span></span><br><span class="line">            payInfo.setPlatformStatus(OrderStatusEnum.SUCCESS.name());</span><br><span class="line">            payInfo.setPlatformNumber(payResponse.getOutTradeNo());</span><br><span class="line">            payInfo.setUpdateTime(<span class="literal">null</span>);</span><br><span class="line">            payInfoMapper.updateByPrimaryKeySelective(payInfo);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (payResponse.getPayPlatformEnum() == BestPayPlatformEnum.WX)&#123;</span><br><span class="line">            <span class="comment">//4.告诉微信不要在通知了</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&lt;xml&gt;\n&quot;</span>+</span><br><span class="line">                    <span class="string">&quot;&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&lt;/return_code&gt;\n&quot;</span>+</span><br><span class="line">                    <span class="string">&quot;&lt;return_msg&gt;&lt;![CDATA[OK]]&lt;/return_msg&gt;\n&quot;</span>+</span><br><span class="line">                    <span class="string">&quot;&lt;/xml&gt;&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (payResponse.getPayPlatformEnum() == BestPayPlatformEnum.ALIPAY)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;异步通知中错误的支付平台&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8、微信支付完成页面跳转"><a href="#8、微信支付完成页面跳转" class="headerlink" title="8、微信支付完成页面跳转"></a>8、微信支付完成页面跳转</h2><ol><li>PayController</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/queryByOrderId&quot;)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> PayInfo <span class="title function_">queryByOrderId</span><span class="params">(<span class="meta">@RequestParam</span> String orderId)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> payService.queryByOrderId(orderId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>IPayService</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询支付记录（通过订单号）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> orderId</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">PayInfo <span class="title function_">queryByOrderId</span><span class="params">(String orderId)</span>;</span><br></pre></td></tr></table></figure><ol start="3"><li>PayService</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> PayInfo <span class="title function_">queryByOrderId</span><span class="params">(String orderId)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span>  payInfoMapper.selectByOrderNo(Long.parseLong(orderId));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>写前端createForWxNative.ftl</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;支付&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;qrcodeCanvas&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;orderId&quot; hidden&gt;$&#123;orderId&#125;&lt;/div&gt;</span><br><span class="line">&lt;div id=&quot;returnUrl&quot; hidden&gt;$&#123;returnUrl&#125;&lt;/div&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/jquery/1.5.1/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.bootcdn.net/ajax/libs/jquery.qrcode/1.0/jquery.qrcode.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    jQuery(&#x27;#qrcodeCanvas&#x27;).qrcode(&#123;</span><br><span class="line">        text : &quot;$&#123;codeUrl&#125;&quot;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $(function () &#123;</span><br><span class="line">        //定时器</span><br><span class="line">        setInterval(function ()&#123;</span><br><span class="line">            console.log(&#x27;开始查询支付状态....&#x27;)</span><br><span class="line">            $.ajax(&#123;</span><br><span class="line">                &#x27;url&#x27;:&#x27;/pay/queryByOrderId&#x27;,</span><br><span class="line">                data:&#123;</span><br><span class="line">                    &#x27;orderId&#x27;:$(&#x27;#orderId&#x27;).text()</span><br><span class="line">                &#125;,</span><br><span class="line">                success:function (result)&#123;</span><br><span class="line">                    console.log(result)</span><br><span class="line">                    if (result.platformStatus !=null</span><br><span class="line">                        &amp;&amp; result.platformStatus === &#x27;SUCCESS&#x27;)&#123;</span><br><span class="line">                        location.href = $(&#x27;#returnUrl&#x27;).text()</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                error:function (result)&#123;</span><br><span class="line">                    alert(result)</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><ol start="5"><li>整理BestPayConfig，微信和支付宝单独抽出来</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pay.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.config.AliPayConfig;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.config.WxPayConfig;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.service.BestPayService;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.service.impl.BestPayServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BestPayConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> BestPayService <span class="title function_">bestPayService</span><span class="params">(WxPayConfig wxPayConfig)</span>&#123;</span><br><span class="line">        <span class="type">AliPayConfig</span> <span class="variable">aliPayConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AliPayConfig</span>();</span><br><span class="line">        aliPayConfig.setAppId(<span class="string">&quot;ID&quot;</span>);</span><br><span class="line">        aliPayConfig.setPrivateKey(<span class="string">&quot;PrivateKey&quot;</span>);</span><br><span class="line">        aliPayConfig.setAliPayPublicKey(<span class="string">&quot;PublicKey&quot;</span>);</span><br><span class="line">        aliPayConfig.setNotifyUrl(<span class="string">&quot;http://127.0.0.1/pay/notiy&quot;</span>);</span><br><span class="line">        aliPayConfig.setReturnUrl(<span class="string">&quot;http://127.0.0.1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="type">BestPayServiceImpl</span> <span class="variable">bestPayService</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">BestPayServiceImpl</span>();</span><br><span class="line">        bestPayService.setWxPayConfig(wxPayConfig);</span><br><span class="line">        bestPayService.setAliPayConfig(aliPayConfig);</span><br><span class="line">        <span class="keyword">return</span> bestPayService;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> WxPayConfig <span class="title function_">wxPayConfig</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">WxPayConfig</span> <span class="variable">wxPayConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WxPayConfig</span>();</span><br><span class="line">        wxPayConfig.setAppAppId(<span class="string">&quot;ID&quot;</span>);</span><br><span class="line">        wxPayConfig.setMchId(<span class="string">&quot;ID&quot;</span>);</span><br><span class="line">        wxPayConfig.setMchKey(<span class="string">&quot;Key&quot;</span>);</span><br><span class="line">        wxPayConfig.setNotifyUrl(<span class="string">&quot;http://127.0.0.1/pay/notiy&quot;</span>);</span><br><span class="line">        wxPayConfig.setReturnUrl(<span class="string">&quot;http://127.0.0.1&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> wxPayConfig;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>PayController使用微信</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> WxPayConfig wxPayConfig;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">if</span>(bestPayTypeEnumm == BestPayTypeEnum.WXPAY_NATIVE)&#123;</span><br><span class="line">            map.put(<span class="string">&quot;codeUrl&quot;</span>,response.getCodeUrl());</span><br><span class="line">            map.put(<span class="string">&quot;orderId&quot;</span>,orderId);</span><br><span class="line">            map.put(<span class="string">&quot;returnUrl&quot;</span>,wxPayConfig.getReturnUrl());</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ModelAndView</span>(<span class="string">&quot;createForWxNative&quot;</span>,map);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="9、规范配置"><a href="#9、规范配置" class="headerlink" title="9、规范配置"></a>9、规范配置</h2><ol><li>针对BestPayConfig进行规范配置，将里面的参数写到application.yml中</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">wx:</span></span><br><span class="line">  <span class="attr">appId:</span> <span class="string">ID</span></span><br><span class="line">  <span class="attr">mchId:</span> <span class="string">ID</span></span><br><span class="line">  <span class="attr">mchKey:</span> <span class="string">Key</span></span><br><span class="line">  <span class="attr">notifyUrl:</span> <span class="string">http://127.0.0.1/pay/notiy</span></span><br><span class="line">  <span class="attr">returnUrl:</span> <span class="string">http://127.0.0.1</span></span><br><span class="line"><span class="attr">alipay:</span></span><br><span class="line">  <span class="attr">appId:</span> <span class="string">ID</span></span><br><span class="line">  <span class="attr">privateKey:</span> <span class="string">PrivateKey</span></span><br><span class="line">  <span class="attr">publicKey:</span> <span class="string">PublicKey</span></span><br><span class="line">  <span class="attr">notifyUrl:</span> <span class="string">http://127.0.0.1/pay/notiy</span></span><br><span class="line">  <span class="attr">returnUrl:</span> <span class="string">http://127.0.0.1</span></span><br></pre></td></tr></table></figure><ol start="2"><li>新建WxAccountConfig和AlipayAccountConfig用来映射BestPayConfig所需的参数（application.yml中对应的值）</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pay.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;wx&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WxAccountConfig</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String appId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String mchId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String mchKey;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String notifyUrl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String returnUrl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pay.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.context.properties.ConfigurationProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@ConfigurationProperties(prefix = &quot;alipay&quot;)</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AlipayAccountConfig</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String appId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String privateKey;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String publicKey;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String notifyUrl;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String returnUrl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>最后在BestPayConfig中使用</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pay.config;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.config.AliPayConfig;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.config.WxPayConfig;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.service.BestPayService;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.service.impl.BestPayServiceImpl;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BestPayConfig</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> WxAccountConfig wxAccountConfig;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span> AlipayAccountConfig alipayAccountConfig;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> BestPayService <span class="title function_">bestPayService</span><span class="params">(WxPayConfig wxPayConfig)</span>&#123;</span><br><span class="line">        <span class="type">AliPayConfig</span> <span class="variable">aliPayConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AliPayConfig</span>();</span><br><span class="line">        aliPayConfig.setAppId(alipayAccountConfig.getAppId());</span><br><span class="line">        aliPayConfig.setPrivateKey(alipayAccountConfig.getPrivateKey());</span><br><span class="line">        aliPayConfig.setAliPayPublicKey(alipayAccountConfig.getPublicKey());</span><br><span class="line">        aliPayConfig.setNotifyUrl(alipayAccountConfig.getNotifyUrl());</span><br><span class="line">        aliPayConfig.setReturnUrl(alipayAccountConfig.getReturnUrl());</span><br><span class="line"></span><br><span class="line">        <span class="type">BestPayServiceImpl</span> <span class="variable">bestPayService</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">BestPayServiceImpl</span>();</span><br><span class="line">        bestPayService.setWxPayConfig(wxPayConfig);</span><br><span class="line">        bestPayService.setAliPayConfig(aliPayConfig);</span><br><span class="line">        <span class="keyword">return</span> bestPayService;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> WxPayConfig <span class="title function_">wxPayConfig</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">WxPayConfig</span> <span class="variable">wxPayConfig</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">WxPayConfig</span>();</span><br><span class="line">        wxPayConfig.setAppId(wxAccountConfig.getAppId());</span><br><span class="line">        wxPayConfig.setMchId(wxAccountConfig.getMchId());</span><br><span class="line">        wxPayConfig.setMchKey(wxAccountConfig.getMchKey());</span><br><span class="line">        wxPayConfig.setNotifyUrl(wxAccountConfig.getNotifyUrl());</span><br><span class="line">        wxPayConfig.setReturnUrl(wxAccountConfig.getReturnUrl());</span><br><span class="line">        <span class="keyword">return</span> wxPayConfig;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>**@ConfigurationProperties(prefix &#x3D; “alipay”)**的作用是将application.yml里面的东西用到java中</li></ol><h1 id="四、全模块电商平台之用户模块"><a href="#四、全模块电商平台之用户模块" class="headerlink" title="四、全模块电商平台之用户模块"></a>四、全模块电商平台之用户模块</h1><p>本章实战用户模块，详解注册、登录、MD5安全。在学习过程中，首先，知道什么是cookie和session？其次，需要清楚两者差异和应用场景；最后，小伙伴通过自身努力能上升到原理，即为什么？推荐高效学习路线：是什么？什么场景用？怎么用？为什么？..</p><hr><h2 id="1、理论介绍"><a href="#1、理论介绍" class="headerlink" title="1、理论介绍"></a>1、理论介绍</h2><ol><li>一个项目是前后端分离还是前后端不分离：主要看的是通过前端渲染的还是通过api接口获得的</li><li>Content-Type：application&#x2F;json</li><li>开发顺序：Dao-&gt;Service-&gt;Controller</li><li>单元测试：Service</li></ol><h2 id="2、Service-完成注册功能"><a href="#2、Service-完成注册功能" class="headerlink" title="2、Service-完成注册功能"></a>2、Service-完成注册功能</h2><ol><li>首先通过mybatis-generator生成代码</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;mall_user&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;User&quot;</span> <span class="attr">enableCountByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableDeleteByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableSelectByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableUpdateByExample</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>建立IUserService接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IUserService</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">register</span><span class="params">(User user)</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 登陆</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>建立UserServiceImpl实现类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.dao.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.IUserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.DigestUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">IUserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="comment">//username不能重复</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">countByUsername</span> <span class="operator">=</span> userMapper.countByUsername(user.getUsername());</span><br><span class="line">        <span class="keyword">if</span> (countByUsername&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;该username已注册&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//email不能重复</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">countByEmail</span> <span class="operator">=</span> userMapper.countByEmail(user.getEmail());</span><br><span class="line">        <span class="keyword">if</span> (countByEmail&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;该email已注册&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//MD5摘要算法（Spring自带）</span></span><br><span class="line">        user.setPassword(DigestUtils.md5DigestAsHex(user.getPassword().getBytes(StandardCharsets.UTF_8)));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//写入数据库</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">resultCount</span> <span class="operator">=</span> userMapper.insertSelective(user);</span><br><span class="line">        <span class="keyword">if</span> (resultCount == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;注册失败&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>我们写两个UserMapper方法用来校验username和email</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">countByUsername</span><span class="params">(String username)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">countByEmail</span><span class="params">(String email)</span>;</span><br></pre></td></tr></table></figure><ol start="5"><li>对应的UserMapper.xml</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;countByUsername&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;java.lang.Integer&quot;</span>&gt;</span></span><br><span class="line">  select</span><br><span class="line">  count(1)</span><br><span class="line">  from mall_user</span><br><span class="line">  where username = #&#123;username,jdbcType=VARCHAR&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;countByEmail&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;java.lang.Integer&quot;</span>&gt;</span></span><br><span class="line">  select</span><br><span class="line">    count(1)</span><br><span class="line">  from mall_user</span><br><span class="line">  where email = #&#123;email,jdbcType=VARCHAR&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3、Service-注册功能单测"><a href="#3、Service-注册功能单测" class="headerlink" title="3、Service-注册功能单测"></a>3、Service-注册功能单测</h2><ol><li>右键点击UserServiceImpl的register方法，生成测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.MallApplicationTests;</span><br><span class="line"><span class="keyword">import</span> com.mall.enums.RoleEnum;</span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.IUserService;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImplTest</span> <span class="keyword">extends</span> <span class="title class_">MallApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IUserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(<span class="string">&quot;jack&quot;</span>,<span class="string">&quot;123456&quot;</span>,<span class="string">&quot;jack@qq.com&quot;</span>, RoleEnum.CUSTOMER.getCode());</span><br><span class="line">        userService.register(user);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>生成User构造函数</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">User</span><span class="params">(String username, String password, String email,Integer role)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.username = username;</span><br><span class="line">    <span class="built_in">this</span>.password = password;</span><br><span class="line">    <span class="built_in">this</span>.email = email;</span><br><span class="line">    <span class="built_in">this</span>.role = role;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>生成注册角色枚举</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.enums;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">RoleEnum</span> &#123;</span><br><span class="line">    ADMIN(<span class="number">0</span>),</span><br><span class="line"></span><br><span class="line">    CUSTOMER(<span class="number">1</span>),</span><br><span class="line"></span><br><span class="line">    ;</span><br><span class="line"></span><br><span class="line">    Integer code;</span><br><span class="line"></span><br><span class="line">    RoleEnum(Integer code) &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、Mybatis打印SQL"><a href="#4、Mybatis打印SQL" class="headerlink" title="4、Mybatis打印SQL"></a>4、Mybatis打印SQL</h2><ol><li>在application.yml中配置：控制台日志配置</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mybatis:</span></span><br><span class="line">  <span class="attr">configuration:</span></span><br><span class="line">    <span class="attr">map-underscore-to-camel-case:</span> <span class="literal">true</span></span><br><span class="line">    <span class="comment">#控制台日志配置</span></span><br><span class="line">    <span class="attr">log-impl:</span> <span class="string">org.apache.ibatis.logging.stdout.StdOutImpl</span></span><br><span class="line">  <span class="attr">mapper-locations:</span> <span class="string">classpath:mappers/*.xml</span></span><br></pre></td></tr></table></figure><h2 id="5、Controller接收参数"><a href="#5、Controller接收参数" class="headerlink" title="5、Controller接收参数"></a>5、Controller接收参数</h2><ol><li>创建UserController，以下有两种接收参数的形式一个是RequestParam</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@PostMapping(&quot;/register&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">(<span class="meta">@RequestParam</span> String username)</span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;username=&#123;&#125;&quot;</span>,username);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@PostMapping(&quot;/register&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">(<span class="meta">@RequestParam(value= &quot;username&quot;)</span> String userName)</span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;username=&#123;&#125;&quot;</span>,userName);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>使用@RequestBody</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.User;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@PostMapping(&quot;/register&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;username=&#123;&#125;&quot;</span>,user.getUsername());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6、Controller返回JSON"><a href="#6、Controller返回JSON" class="headerlink" title="6、Controller返回JSON"></a>6、Controller返回JSON</h2><ol><li>接下来让接收函数的格式一致，创建ResponseVo.java，规定格式</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.fasterxml.jackson.annotation.JsonInclude;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@JsonInclude(value = JsonInclude.Include.NON_NULL)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ResponseVo</span>&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String msg;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> T data;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">ResponseVo</span><span class="params">(Integer status, String msg)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.status = status;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ResponseVo&lt;T&gt; <span class="title function_">success</span><span class="params">(String msg)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ResponseVo</span>&lt;&gt;(<span class="number">0</span>,msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>UserController使用该格式返回</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> ResponseVo <span class="title function_">register</span><span class="params">(<span class="meta">@RequestBody</span> User user)</span>&#123;</span><br><span class="line">    log.info(<span class="string">&quot;username=&#123;&#125;&quot;</span>,user.getUsername());</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.success(<span class="string">&quot;注册成功&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306021127979.png"                      alt="image-20230602112725662"                ></p><h2 id="7、错误状态码使用枚举"><a href="#7、错误状态码使用枚举" class="headerlink" title="7、错误状态码使用枚举"></a>7、错误状态码使用枚举</h2><ol><li>写一个错误使用枚举ResponseEnum</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.enums;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">ResponseEnum</span> &#123;</span><br><span class="line"></span><br><span class="line">    ERROR(-<span class="number">1</span>,<span class="string">&quot;服务端错误&quot;</span>),</span><br><span class="line"></span><br><span class="line">    SUCCESS(<span class="number">0</span>,<span class="string">&quot;成功&quot;</span>),</span><br><span class="line"></span><br><span class="line">    PASSWORD_ERROR(<span class="number">1</span>,<span class="string">&quot;密码错误&quot;</span>),</span><br><span class="line"></span><br><span class="line">    USER_EXIST(<span class="number">2</span>,<span class="string">&quot;用户已存在&quot;</span>),</span><br><span class="line"></span><br><span class="line">    NEED_LOGIN(<span class="number">10</span>,<span class="string">&quot;用户未登录，请先登录&quot;</span>),</span><br><span class="line"></span><br><span class="line">    ;</span><br><span class="line"></span><br><span class="line">    Integer code;</span><br><span class="line"></span><br><span class="line">    String desc;</span><br><span class="line"></span><br><span class="line">    ResponseEnum(Integer code, String desc) &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.desc = desc;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在ResponseVo中使用</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ResponseVo&lt;T&gt; <span class="title function_">success</span><span class="params">(String msg)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ResponseVo</span>&lt;&gt;(ResponseEnum.SUCCESS.getCode(),msg);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ResponseVo&lt;T&gt; <span class="title function_">success</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ResponseVo</span>&lt;&gt;(ResponseEnum.SUCCESS.getCode(),ResponseEnum.SUCCESS.getDesc());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ResponseVo&lt;T&gt; <span class="title function_">error</span><span class="params">(ResponseEnum responseEnum)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ResponseVo</span>&lt;&gt;(responseEnum.getCode(),responseEnum.getDesc());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>在UserController中调用</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> ResponseVo.error(ResponseEnum.USER_EXIST);</span><br></pre></td></tr></table></figure><h2 id="8、表单验证"><a href="#8、表单验证" class="headerlink" title="8、表单验证"></a>8、表单验证</h2><ol><li>由于User里面的字段太多，不怎么需要，我们把需要的抽出来成form软件包的UserForm</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.form;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotBlank;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserForm</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//@NotBlank 用于String判断空格</span></span><br><span class="line">    <span class="comment">//@NotEmpty 用于集合</span></span><br><span class="line">    <span class="comment">//@NotNull</span></span><br><span class="line">    <span class="meta">@NotBlank</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotBlank</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotBlank</span></span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在ResponseEnum中再加一个错误类型</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PARAM_ERROR(<span class="number">3</span>,<span class="string">&quot;参数错误&quot;</span>),</span><br></pre></td></tr></table></figure><ol start="3"><li>在ResponseVo设置多个error方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ResponseVo&lt;T&gt; <span class="title function_">error</span><span class="params">(ResponseEnum responseEnum)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ResponseVo</span>&lt;&gt;(responseEnum.getCode(),responseEnum.getDesc());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ResponseVo&lt;T&gt; <span class="title function_">error</span><span class="params">(ResponseEnum responseEnum,String msg)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ResponseVo</span>&lt;&gt;(responseEnum.getCode(),msg);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ResponseVo&lt;T&gt; <span class="title function_">error</span><span class="params">(ResponseEnum responseEnum, BindingResult bindingResult)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ResponseVo</span>&lt;&gt;(responseEnum.getCode(), Objects.requireNonNull(bindingResult.getFieldError()).getField()+<span class="string">&quot; &quot;</span>+bindingResult.getFieldError().getDefaultMessage());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>在UserController中进行调用</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.enums.ResponseEnum;</span><br><span class="line"><span class="keyword">import</span> com.mall.form.UserForm;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.validation.BindingResult;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/user&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserController</span> &#123;</span><br><span class="line">    <span class="meta">@PostMapping(&quot;/register&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo <span class="title function_">register</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> UserForm userForm,</span></span><br><span class="line"><span class="params">                               BindingResult bindingResult)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (bindingResult.hasErrors())&#123;</span><br><span class="line">            log.error(<span class="string">&quot;注册提交的参数有误，&#123;&#125; &#123;&#125;&quot;</span>,</span><br><span class="line">                    bindingResult.getFieldError().getField(),</span><br><span class="line">                    bindingResult.getFieldError().getDefaultMessage());</span><br><span class="line">            <span class="keyword">return</span> ResponseVo.error(ResponseEnum.PARAM_ERROR,bindingResult);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        log.info(<span class="string">&quot;username=&#123;&#125;&quot;</span>,userForm.getUsername());</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ResponseEnum.NEED_LOGIN);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>@Valid 注解，表示我们对这个对象属性需要进行验证</li><li>Valid和BindingResult配套使用，@Valid用在参数前，BindingResult作为校验结果绑定返回</li></ul><h2 id="9、接入service完成注册功能"><a href="#9、接入service完成注册功能" class="headerlink" title="9、接入service完成注册功能"></a>9、接入service完成注册功能</h2><ol><li>我们在UserController中使用IUserService，代码如下：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> IUserService userService;</span><br><span class="line"></span><br><span class="line"><span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line">BeanUtils.copyProperties(userForm,user);</span><br><span class="line"><span class="keyword">return</span> userService.register(user);</span><br></pre></td></tr></table></figure><ol start="2"><li>我们给User生成一个无参的构造函数</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">User</span><span class="params">()</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>我们修改IUserService里register的返回值类型</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ResponseVo <span class="title function_">register</span><span class="params">(User user)</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li>同样的修改UserServiceImpl的register方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.dao.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.mall.enums.ResponseEnum;</span><br><span class="line"><span class="keyword">import</span> com.mall.enums.RoleEnum;</span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.IUserService;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.DigestUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.charset.StandardCharsets;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">IUserService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserMapper userMapper;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> user</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo <span class="title function_">register</span><span class="params">(User user)</span> &#123;</span><br><span class="line">        <span class="comment">//username不能重复</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">countByUsername</span> <span class="operator">=</span> userMapper.countByUsername(user.getUsername());</span><br><span class="line">        <span class="keyword">if</span> (countByUsername&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseVo.error(ResponseEnum.USERNAME_EXIST);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//email不能重复</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">countByEmail</span> <span class="operator">=</span> userMapper.countByEmail(user.getEmail());</span><br><span class="line">        <span class="keyword">if</span> (countByEmail&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseVo.error(ResponseEnum.EMAIL_EXIST);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        user.setRole(RoleEnum.CUSTOMER.getCode());</span><br><span class="line">        <span class="comment">//MD5摘要算法（Spring自带）</span></span><br><span class="line">        user.setPassword(DigestUtils.md5DigestAsHex(user.getPassword().getBytes(StandardCharsets.UTF_8)));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//写入数据库</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">resultCount</span> <span class="operator">=</span> userMapper.insertSelective(user);</span><br><span class="line">        <span class="keyword">if</span> (resultCount == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseVo.error(ResponseEnum.ERROR);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.success();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>修改下ResponseEnum的两个值，把用户已存在，改为以下两个</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">USERNAME_EXIST(<span class="number">2</span>,<span class="string">&quot;用户名已存在&quot;</span>),</span><br><span class="line"></span><br><span class="line">EMAIL_EXIST(<span class="number">4</span>,<span class="string">&quot;邮箱已存在&quot;</span>),</span><br></pre></td></tr></table></figure><ol start="6"><li>新建异常捕获，专门处理异常格式</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.http.HttpStatus;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ControllerAdvice;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ExceptionHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseStatus;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.mall.enums.ResponseEnum.ERROR;</span><br><span class="line"></span><br><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RuntimeExceptionHandler</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler(RuntimeException.class)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@ResponseStatus(HttpStatus.ACCEPTED)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo <span class="title function_">handle</span><span class="params">(RuntimeException e)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ERROR,e.getMessage());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10、登录功能的实现"><a href="#10、登录功能的实现" class="headerlink" title="10、登录功能的实现"></a>10、登录功能的实现</h2><ol><li>在IUserService创建login方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 登陆</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">ResponseVo&lt;User&gt; <span class="title function_">login</span><span class="params">(String username,String password)</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>在UserServiceImpl实现登陆</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo&lt;User&gt; <span class="title function_">login</span><span class="params">(String username, String password)</span> &#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> userMapper.selectByUsername(username);</span><br><span class="line">    <span class="keyword">if</span> (user == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="comment">//用户不存在</span></span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error((ResponseEnum.USERNAME_OR_PASSWORD_ERROR));</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (!user.getPassword().equalsIgnoreCase(DigestUtils.md5DigestAsHex(password.getBytes(StandardCharsets.UTF_8))))&#123;</span><br><span class="line">        <span class="comment">//密码错误</span></span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error((ResponseEnum.USERNAME_OR_PASSWORD_ERROR));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    user.setPassword(<span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.success(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>UserMapper.java和UserMapper.xml创建方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">User <span class="title function_">selectByUsername</span><span class="params">(String username)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByUsername&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.String&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">  select</span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;Base_Column_List&quot;</span> /&gt;</span></span><br><span class="line">  from mall_user</span><br><span class="line">  where username = #&#123;username,jdbcType=VARCHAR&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>在ResponseEnum加一个错误类型</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">USERNAME_OR_PASSWORD_ERROR(<span class="number">11</span>,<span class="string">&quot;用户名或密码错误&quot;</span>),</span><br></pre></td></tr></table></figure><ol start="5"><li>在UserController实现登陆</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo&lt;User&gt; <span class="title function_">login</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> UserLoginForm userLoginForm,</span></span><br><span class="line"><span class="params">                              BindingResult bindingResult,</span></span><br><span class="line"><span class="params">                              HttpSession session)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (bindingResult.hasErrors())&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ResponseEnum.PARAM_ERROR,bindingResult);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    ResponseVo&lt;User&gt; userResponseVo = userService.login(userLoginForm.getUsername(),userLoginForm.getPassword());</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//设置Session</span></span><br><span class="line">    session.setAttribute(MallConst.CURRENT_USER,userResponseVo.getData());</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> userResponseVo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>因为登陆只需要两个值，所以将这两个值也单独生成一个表单，并将注册的表单改名为UserRegisterForm</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.form;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotBlank;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserLoginForm</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//@NotBlank 用于String判断空格</span></span><br><span class="line">    <span class="comment">//@NotEmpty 用于集合</span></span><br><span class="line">    <span class="comment">//@NotNull</span></span><br><span class="line">    <span class="meta">@NotBlank</span></span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotBlank</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8"><li>因为设置session时，需要设置一个key为常量，所以我们在新建一个文件专门存常量</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.consts;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MallConst</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">CURRENT_USER</span> <span class="operator">=</span> <span class="string">&quot;currentUser&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>9、接下来就要在UserController获取session</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/info&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo&lt;User&gt; <span class="title function_">userInfo</span><span class="params">(HttpSession session)</span>&#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) session.getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">    <span class="keyword">if</span> (user == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ResponseEnum.NEED_LOGIN);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.success(user);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>10、ResponseVo里，创造一个仅有status和data的构造函数，与data数据的success</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">ResponseVo</span><span class="params">(Integer status, T data)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.status = status;</span><br><span class="line">    <span class="built_in">this</span>.data = data;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; ResponseVo&lt;T&gt; <span class="title function_">success</span><span class="params">(T data)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ResponseVo</span>&lt;&gt;(ResponseEnum.SUCCESS.getCode(),data);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="11、session和cookie"><a href="#11、session和cookie" class="headerlink" title="11、session和cookie"></a>11、session和cookie</h2><ol><li>session的id存在cookie里</li><li>跨域：127.0.0.1和localhost也算跨域</li></ol><h2 id="12、退出登录"><a href="#12、退出登录" class="headerlink" title="12、退出登录"></a>12、退出登录</h2><ol><li>在UserController写退出登录操作</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping(&quot;/logout&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo <span class="title function_">logout</span><span class="params">(HttpSession session)</span>&#123;</span><br><span class="line">    log.info(<span class="string">&quot;/logout sessionId=&#123;&#125;&quot;</span>,session.getId());</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) session.getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">    <span class="keyword">if</span> (user == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ResponseEnum.NEED_LOGIN);</span><br><span class="line">    &#125;</span><br><span class="line">    session.removeAttribute(MallConst.CURRENT_USER);</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.success();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在application.yml中设置设置session过期时间</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server:</span></span><br><span class="line">  <span class="attr">servlet:</span></span><br><span class="line">    <span class="attr">session:</span></span><br><span class="line">      <span class="attr">timeout:</span> <span class="number">100</span></span><br></pre></td></tr></table></figure><h2 id="13、统一判断登录状态-拦截器"><a href="#13、统一判断登录状态-拦截器" class="headerlink" title="13、统一判断登录状态-拦截器"></a>13、统一判断登录状态-拦截器</h2><ul><li>Interceptor-Url</li><li>AOP-包名</li></ul><hr><ol><li>就是把UserController中的userInfo和logout的判断用户是否存在部分提取出来到UserLoginInterceptor类中</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.consts.MallConst;</span><br><span class="line"><span class="keyword">import</span> com.mall.exception.UserLoginException;</span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.User;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.HandlerInterceptor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserLoginInterceptor</span> <span class="keyword">implements</span> <span class="title class_">HandlerInterceptor</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">preHandle</span><span class="params">(HttpServletRequest request, HttpServletResponse response, Object handler)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        log.info(<span class="string">&quot;preHandle....&quot;</span>);</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) request.getSession().getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">        <span class="keyword">if</span> (user == <span class="literal">null</span>)&#123;</span><br><span class="line">            log.info(<span class="string">&quot;user == null&quot;</span>);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">UserLoginException</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>要是想要拦截器生效，创建配置类InterceptorConfig</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.InterceptorRegistry;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.servlet.config.annotation.WebMvcConfigurer;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InterceptorConfig</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> &#123;</span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> <span class="title class_">UserLoginInterceptor</span>())</span><br><span class="line">                .addPathPatterns(<span class="string">&quot;/**&quot;</span>)</span><br><span class="line">                .excludePathPatterns(<span class="string">&quot;/user/login&quot;</span>,<span class="string">&quot;/user/register&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>因为UserLoginInterceptor类中使用了新的异常所以创建捕捉异常类UserLoginException</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.exception;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserLoginException</span> <span class="keyword">extends</span> <span class="title class_">RuntimeException</span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>UserLoginException在RuntimeExceptionHandler统一配置</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ExceptionHandler(UserLoginException.class)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo <span class="title function_">userLoginHandle</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.error(ResponseEnum.NEED_LOGIN);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="14、单元测试"><a href="#14、单元测试" class="headerlink" title="14、单元测试"></a>14、单元测试</h2><ol><li>在UserServiceImplTest中测试login方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Before</span>在执行之前先执行这个</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Before</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">register</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">User</span>(USERNAME,<span class="string">&quot;123456&quot;</span>,PASSWORD, RoleEnum.CUSTOMER.getCode());</span><br><span class="line">    userService.register(user);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">login</span><span class="params">()</span>&#123;</span><br><span class="line">    ResponseVo&lt;User&gt; responseVo = userService.login(USERNAME,PASSWORD);</span><br><span class="line">    Assert.assertEquals(ResponseEnum.SUCCESS.getCode(),responseVo.getStatus());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="五、全模块电商系统之分类模块"><a href="#五、全模块电商系统之分类模块" class="headerlink" title="五、全模块电商系统之分类模块"></a>五、全模块电商系统之分类模块</h1><p>本章将带大家完成分类管理模块功能的开发，并讲解递归分类，并且支持分类无限层级树状结构。按照dao-&gt;service-&gt;api的顺序开发。贯穿单元测试。</p><hr><h2 id="1、类目功能介绍与开发"><a href="#1、类目功能介绍与开发" class="headerlink" title="1、类目功能介绍与开发"></a>1、类目功能介绍与开发</h2><ol><li><p>两种方法：</p><ul><li>先查出1级目录-&gt;查其子目录，一致到查到是null</li><li>查出目录-&gt;查父目录，一致查到parent_id&#x3D;0</li></ul></li><li><p>新建一个返回的数据格式CategoryVo</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CategoryVo</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer parentId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer sortOrder;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;CategoryVo&gt; subCategories;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>创建接口ICategoryService</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.vo.CategoryVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ICategoryService</span> &#123;</span><br><span class="line"></span><br><span class="line">    ResponseVo&lt;List&lt;CategoryVo&gt;&gt; <span class="title function_">selectAll</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>创建实现类CategoryServiceImpl之前记得用代码生成器，给CategoryMapper增加方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Category&gt; <span class="title function_">selectAll</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectAll&quot;</span>  <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">  select</span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;Base_Column_List&quot;</span> /&gt;</span></span><br><span class="line">  from mall_category</span><br><span class="line">  where status = 1</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>写CategoryServiceImpl</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.dao.CategoryMapper;</span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.Category;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.ICategoryService;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.CategoryVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.mall.consts.MallConst.ROOT_PARENT_ID;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CategoryServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">ICategoryService</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CategoryMapper categoryMapper;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;List&lt;CategoryVo&gt;&gt; <span class="title function_">selectAll</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;CategoryVo&gt; categoryVoList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;Category&gt; categories = categoryMapper.selectAll();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//查出parent_id=0</span></span><br><span class="line">        <span class="keyword">for</span>(Category category : categories)&#123;</span><br><span class="line">            <span class="keyword">if</span> (category.getParentId().equals(ROOT_PARENT_ID))&#123;</span><br><span class="line">                <span class="type">CategoryVo</span> <span class="variable">categoryVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CategoryVo</span>();</span><br><span class="line">                BeanUtils.copyProperties(category,categoryVo);</span><br><span class="line">                categoryVoList.add(categoryVo);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.success(categoryVoList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>因为这需要一个常量，所以在MallConst定义</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Integer ROOT_PARENT_ID=<span class="number">0</span>;</span><br></pre></td></tr></table></figure><ol start="6"><li>写一个CategoryController调用方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.service.ICategoryService;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.CategoryVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CategoryController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ICategoryService categoryService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/categories&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;List&lt;CategoryVo&gt;&gt; <span class="title function_">selectAll</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> categoryService.selectAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、商品分类之类目查询功能"><a href="#2、商品分类之类目查询功能" class="headerlink" title="2、商品分类之类目查询功能"></a>2、商品分类之类目查询功能</h2><ol><li>将子目录也设置进去</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.dao.CategoryMapper;</span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.Category;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.ICategoryService;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.CategoryVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> com.mall.consts.MallConst.ROOT_PARENT_ID;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CategoryServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">ICategoryService</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> CategoryMapper categoryMapper;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;List&lt;CategoryVo&gt;&gt; <span class="title function_">selectAll</span><span class="params">()</span> &#123;</span><br><span class="line">        List&lt;CategoryVo&gt; categoryVoList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        List&lt;Category&gt; categories = categoryMapper.selectAll();</span><br><span class="line">        <span class="comment">//查出parent_id=0</span></span><br><span class="line">        <span class="keyword">for</span>(Category category : categories)&#123;</span><br><span class="line">            <span class="keyword">if</span> (category.getParentId().equals(ROOT_PARENT_ID))&#123;</span><br><span class="line">                categoryVoList.add(category2CategoryVo(category));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        categoryVoList.sort(Comparator.comparing(CategoryVo::getSortOrder).reversed());</span><br><span class="line">        <span class="comment">//查询子目录</span></span><br><span class="line">        findSubCategory(categoryVoList,categories);</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.success(categoryVoList);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findSubCategoryId</span><span class="params">(Integer id, Set&lt;Integer&gt; resultSet)</span> &#123;</span><br><span class="line">        List&lt;Category&gt; categories = categoryMapper.selectAll();</span><br><span class="line">        findSubCategoryId(id,resultSet,categories);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span>  <span class="keyword">void</span> <span class="title function_">findSubCategoryId</span><span class="params">(Integer id,Set&lt;Integer&gt; resultSet,List&lt;Category&gt; categories)</span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Category category : categories)&#123;</span><br><span class="line">            <span class="keyword">if</span> (category.getParentId().equals(id))&#123;</span><br><span class="line">                resultSet.add(category.getId());</span><br><span class="line">                findSubCategoryId(category.getId(),resultSet,categories);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> <span class="title function_">findSubCategory</span><span class="params">(List&lt;CategoryVo&gt; categoryVoList,List&lt;Category&gt; categories)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (CategoryVo categoryVo : categoryVoList)&#123;</span><br><span class="line">            List&lt;CategoryVo&gt; subCategoryVoList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (Category category : categories)&#123;</span><br><span class="line">                <span class="comment">//如果查到内同，设置subCategoryVo，继续往下查</span></span><br><span class="line">                <span class="keyword">if</span>(categoryVo.getId().equals(category.getParentId()))&#123;</span><br><span class="line">                    <span class="type">CategoryVo</span> <span class="variable">subCategoryVo</span> <span class="operator">=</span> category2CategoryVo(category);</span><br><span class="line">                    subCategoryVoList.add(subCategoryVo);</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                subCategoryVoList.sort(Comparator.comparing(CategoryVo::getSortOrder).reversed());</span><br><span class="line">                categoryVo.setSubCategories(subCategoryVoList);</span><br><span class="line"></span><br><span class="line">                findSubCategory(subCategoryVoList,categories);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> CategoryVo <span class="title function_">category2CategoryVo</span><span class="params">(Category category)</span>&#123;</span><br><span class="line">        <span class="type">CategoryVo</span> <span class="variable">categoryVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CategoryVo</span>();</span><br><span class="line">        BeanUtils.copyProperties(category,categoryVo);</span><br><span class="line">        <span class="keyword">return</span> categoryVo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="3、商品类目之子类目"><a href="#3、商品类目之子类目" class="headerlink" title="3、商品类目之子类目"></a>3、商品类目之子类目</h2><ol><li>根据sortOrder这个值的大小进行从大到小的排列</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//父类排序</span></span><br><span class="line">categoryVoList.sort(Comparator.comparing(CategoryVo::getSortOrder).reversed());</span><br><span class="line"><span class="comment">//子目录排序</span></span><br><span class="line">subCategoryVoList.sort(Comparator.comparing(CategoryVo::getSortOrder).reversed());</span><br></pre></td></tr></table></figure><ol start="2"><li>写一个CategoryServiceImplTest单元测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.MallApplicationTests;</span><br><span class="line"><span class="keyword">import</span> com.mall.enums.ResponseEnum;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.ICategoryService;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.CategoryVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> org.junit.Assert;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CategoryServiceImplTest</span> <span class="keyword">extends</span> <span class="title class_">MallApplicationTests</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ICategoryService categoryService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectAll</span><span class="params">()</span>&#123;</span><br><span class="line">        ResponseVo&lt;List&lt;CategoryVo&gt;&gt; listResponseVo = categoryService.selectAll();</span><br><span class="line">        Assert.assertEquals(ResponseEnum.SUCCESS.getCode(),listResponseVo.getStatus());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="六、全模块电商系统之商品模块"><a href="#六、全模块电商系统之商品模块" class="headerlink" title="六、全模块电商系统之商品模块"></a>六、全模块电商系统之商品模块</h1><p>本章实践商品模块开发，核心是完成商品列表、详情页、分页的开发。Get新技能是：基于SpringBoot集成的mybatis-pagehelper进行分页实践。</p><hr><h2 id="1、-商品列表"><a href="#1、-商品列表" class="headerlink" title="1、 商品列表"></a>1、 商品列表</h2><ol><li>通过查询就将其本身及其他的子类都查询到，因为id是不重复的所以直接就是用Set集合就行，先定义接口ICategoryService</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">findSubCategoryId</span><span class="params">(Integer id, Set&lt;Integer&gt; resultSet)</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>实现接口方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findSubCategoryId</span><span class="params">(Integer id, Set&lt;Integer&gt; resultSet)</span> &#123;</span><br><span class="line">    List&lt;Category&gt; categories = categoryMapper.selectAll();</span><br><span class="line">    findSubCategoryId(id,resultSet,categories);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span>  <span class="keyword">void</span> <span class="title function_">findSubCategoryId</span><span class="params">(Integer id,Set&lt;Integer&gt; resultSet,List&lt;Category&gt; categories)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (Category category : categories)&#123;</span><br><span class="line">        <span class="keyword">if</span> (category.getParentId().equals(id))&#123;</span><br><span class="line">            resultSet.add(category.getId());</span><br><span class="line">            findSubCategoryId(category.getParentId(),resultSet,categories);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>代码生成器生成Product</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;mall_product&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;Product&quot;</span> <span class="attr">enableCountByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableDeleteByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableSelectByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableUpdateByExample</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>创建ProductVo</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductVo</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer categoryId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String subtitle;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String mainImage;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>创建接口IProductService</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ProductVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IProductService</span> &#123;</span><br><span class="line"></span><br><span class="line">    ResponseVo&lt;List&lt;ProductVo&gt;&gt; <span class="title function_">list</span><span class="params">(Integer categoryId,Integer pageNum,Integer pageSize)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>给ProductMapper编写方法selectByCategoryIdSet</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Product&gt; <span class="title function_">selectByCategoryIdSet</span><span class="params">(<span class="meta">@Param(&quot;categoryIdSet&quot;)</span> Set&lt;Integer&gt; categoryIdSet)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByCategoryIdSet&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">  select</span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;Base_Column_List&quot;</span> /&gt;</span></span><br><span class="line">  from mall_product</span><br><span class="line">  where status = 1</span><br><span class="line">  <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;categoryIdSet.size() &gt; 0&quot;</span>&gt;</span></span><br><span class="line">    and category_id in</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;categoryIdSet&quot;</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">index</span>=<span class="string">&quot;index&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">      #&#123;item&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="7"><li>创建实现类ProductServiceImpl</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.dao.ProductMapper;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.ICategoryService;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.IProductService;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ProductVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">IProductService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ICategoryService categoryService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductMapper productMapper;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;List&lt;ProductVo&gt;&gt; <span class="title function_">list</span><span class="params">(Integer categoryId, Integer pageNum, Integer pageSize)</span> &#123;</span><br><span class="line"></span><br><span class="line">        Set&lt;Integer&gt; categoryIdSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (categoryId != <span class="literal">null</span>)&#123;</span><br><span class="line">            categoryService.findSubCategoryId(categoryId,categoryIdSet);</span><br><span class="line">            categoryIdSet.add(categoryId);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        List&lt;ProductVo&gt; productVoList = productMapper.selectByCategoryIdSet(categoryIdSet).stream()</span><br><span class="line">                .map(e-&gt;&#123;</span><br><span class="line">                    <span class="type">ProductVo</span> <span class="variable">productVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProductVo</span>();</span><br><span class="line">                    BeanUtils.copyProperties(e,productVo);</span><br><span class="line">                    <span class="keyword">return</span> productVo;</span><br><span class="line">                &#125;)</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> ResponseVo.success(productVoList);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="2、商品列表分页"><a href="#2、商品列表分页" class="headerlink" title="2、商品列表分页"></a>2、商品列表分页</h2><ol><li>使用分页插件，引入依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.github.pagehelper<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>pagehelper-spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.13<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>在ProductServiceImpl中使用插件，一个是startPage，一个是pageInfo</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageHelper;</span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> com.mall.dao.ProductMapper;</span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.ICategoryService;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.IProductService;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ProductVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Set;</span><br><span class="line"><span class="keyword">import</span> java.util.stream.Collectors;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">IProductService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ICategoryService categoryService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductMapper productMapper;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;PageInfo&gt; <span class="title function_">list</span><span class="params">(Integer categoryId, Integer pageNum, Integer pageSize)</span> &#123;</span><br><span class="line"></span><br><span class="line">        Set&lt;Integer&gt; categoryIdSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (categoryId != <span class="literal">null</span>)&#123;</span><br><span class="line">            categoryService.findSubCategoryId(categoryId,categoryIdSet);</span><br><span class="line">            categoryIdSet.add(categoryId);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        PageHelper.startPage(pageNum,pageSize);</span><br><span class="line">        List&lt;Product&gt; productList = productMapper.selectByCategoryIdSet(categoryIdSet);</span><br><span class="line">        List&lt;ProductVo&gt; productVoList = productList.stream()</span><br><span class="line">                .map(e-&gt;&#123;</span><br><span class="line">                    <span class="type">ProductVo</span> <span class="variable">productVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProductVo</span>();</span><br><span class="line">                    BeanUtils.copyProperties(e,productVo);</span><br><span class="line">                    <span class="keyword">return</span> productVo;</span><br><span class="line">                &#125;)</span><br><span class="line">                .collect(Collectors.toList());</span><br><span class="line"></span><br><span class="line">        <span class="type">PageInfo</span> <span class="variable">pageInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageInfo</span>&lt;&gt;(productList);</span><br><span class="line">        pageInfo.setList(productVoList);</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.success(pageInfo);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>对应的IProductService的返回值也进行修改</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ResponseVo&lt;PageInfo&gt; <span class="title function_">list</span><span class="params">(Integer categoryId, Integer pageNum, Integer pageSize)</span>;</span><br></pre></td></tr></table></figure><p>4.实现接口ProductController</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.IProductService;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IProductService productService;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/products&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;PageInfo&gt; <span class="title function_">list</span><span class="params">(<span class="meta">@RequestParam(required = false)</span> Integer categoryId,</span></span><br><span class="line"><span class="params">                                     <span class="meta">@RequestParam(required = false,defaultValue = &quot;1&quot;)</span> Integer pageNum,</span></span><br><span class="line"><span class="params">                                     <span class="meta">@RequestParam(required = false,defaultValue = &quot;10&quot;)</span> Integer pageSize)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> productService.list(categoryId,pageNum,pageSize);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、商品详情"><a href="#3、商品详情" class="headerlink" title="3、商品详情"></a>3、商品详情</h2><ol><li>首先创建商品详情需要的字段ProductDetailVo</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ProductDetailVo</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer categoryId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String subtitle;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String mainImage;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BigDecimal price;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer stock;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date updateTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String subImages;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String detail;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在IProductService中创建详情方法接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ResponseVo&lt;ProductDetailVo&gt; <span class="title function_">detail</span><span class="params">(Integer productId)</span>;</span><br></pre></td></tr></table></figure><ol start="3"><li>ProductServiceImpl实现接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo&lt;ProductDetailVo&gt; <span class="title function_">detail</span><span class="params">(Integer productId)</span> &#123;</span><br><span class="line">    <span class="type">Product</span> <span class="variable">product</span> <span class="operator">=</span> productMapper.selectByPrimaryKey(productId);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//只对确定性条件判断</span></span><br><span class="line">    <span class="keyword">if</span> (product.getStatus().equals(OFF_SALE.getCode())</span><br><span class="line">            || product.getStatus().equals(DELETE.getCode()))&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ResponseEnum.PRODUCT_OFF_SALE_OR_DELETE);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">ProductDetailVo</span> <span class="variable">productDetailVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ProductDetailVo</span>();</span><br><span class="line">    BeanUtils.copyProperties(product,productDetailVo);</span><br><span class="line">    <span class="comment">//敏感数据处理</span></span><br><span class="line">    productDetailVo.setStock(product.getStock()&gt;<span class="number">100</span>?<span class="number">100</span>:product.getStock());</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.success(productDetailVo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>上面用到了两个枚举，这里定义枚举ProductStatusEnum，以及ResponseEnum里面的一个</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.enums;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Getter;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> <span class="title class_">ProductStatusEnum</span> &#123;</span><br><span class="line"></span><br><span class="line">    ON_SALE(<span class="number">1</span>),</span><br><span class="line"></span><br><span class="line">    OFF_SALE(<span class="number">2</span>),</span><br><span class="line"></span><br><span class="line">    DELETE(<span class="number">3</span>),</span><br><span class="line"></span><br><span class="line">    ;</span><br><span class="line"></span><br><span class="line">    Integer code;</span><br><span class="line"></span><br><span class="line">    ProductStatusEnum(Integer code)&#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PRODUCT_OFF_SALE_OR_DELETE(<span class="number">12</span>,<span class="string">&quot;商品下架或删除&quot;</span>),</span><br></pre></td></tr></table></figure><ol start="5"><li>ProductController进行接口调用</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@GetMapping(&quot;/products/&#123;productId&#125;&quot;)</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo&lt;ProductDetailVo&gt; <span class="title function_">detail</span><span class="params">(<span class="meta">@PathVariable</span> Integer productId)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> productService.detail(productId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>记得InterceptorConfig拦截器排除那个接口</li></ol><h1 id="七、全模块电商系统之订单模块"><a href="#七、全模块电商系统之订单模块" class="headerlink" title="七、全模块电商系统之订单模块"></a>七、全模块电商系统之订单模块</h1><p>本章精讲订单模块，干货满满，相信能让新手学的懂，老手有收获，高手有启发。对于新手必须学懂订单模块开发，对于老手相信订单生单过程让你清楚事务的应用场景；对于高手订单模块接收支付发送的MQ消息</p><hr><h2 id="1、Redis和可视化管理软件的安装"><a href="#1、Redis和可视化管理软件的安装" class="headerlink" title="1、Redis和可视化管理软件的安装"></a>1、Redis和可视化管理软件的安装</h2><ol><li>下载redis和其可视化界面</li></ol><p><a class="link"   href="https://imcfile.oss-cn-beijing.aliyuncs.com/shizhan/file/liaoshixiong/redis-5.0.5-bin.zip" >redis-5.0.5-bin.zip（Win）<i class="fas fa-external-link-alt"></i></a></p><p><a class="link"   href="https://imcfile.oss-cn-beijing.aliyuncs.com/shizhan/file/liaoshixiong/Another.Redis.Desktop.Manager.1.2.5.exe" >Another.Redis.Desktop.Manager.1.2.5.exe（Win）<i class="fas fa-external-link-alt"></i></a></p><h2 id="2、表单统一验证处理"><a href="#2、表单统一验证处理" class="headerlink" title="2、表单统一验证处理"></a>2、表单统一验证处理</h2><p>根据购物车的返回数据格式来定义一系列Vo</p><ol><li>CartVo</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CartVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;CartProductVo&gt; cartProductVoList;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Boolean selectedAll;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BigDecimal cartTotalPrice;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer cartTotalQuantity;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>CartProductVo</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CartProductVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer productId;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 购买的数量</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Integer quantity;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String productName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String productSubtitle;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String productMainImage;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BigDecimal productPrice;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer productStatus;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 等于quantity*productPrice</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> BigDecimal productTotalPrice;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer productStock;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 商品是否选中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> Boolean productSelected;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>设置一个入参表单CartAddForm</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.form;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotNull;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 添加商品</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CartAddForm</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="keyword">private</span> Integer productId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Boolean</span> <span class="variable">selected</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>写一个CartController，来验证一下，记得在拦截器excludePathPatterns排除</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.form.CartAddForm;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.CartVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.PostMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestBody;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CartController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/carts&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;CartVo&gt; <span class="title function_">add</span> <span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> CartAddForm cartAddForm)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>运行的时候还是显示用户未登录，请先登陆，说明是没有拦截成功，接下来打断点调试下发现</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306070945520.png"                      alt="image-20230607094502186"                ></p><ol start="6"><li>这时将&#x2F;error也添加到拦截器中，重新测试发现还是出错，并且终端处报异常错误</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306070957239.png"                      alt="image-20230607095710031"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306070958853.png"                      alt="image-20230607095820720"                ></p><ol start="7"><li>这时我们在RuntimeExceptionHandler中添加该异常处理</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ExceptionHandler(MethodArgumentNotValidException.class)</span></span><br><span class="line"><span class="meta">@ResponseBody</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo <span class="title function_">notValidExceptionHandle</span><span class="params">(MethodArgumentNotValidException e)</span>&#123;</span><br><span class="line">    <span class="type">BindingResult</span> <span class="variable">bindingResult</span> <span class="operator">=</span> e.getBindingResult();</span><br><span class="line">    Objects.requireNonNull(bindingResult.getFieldError());</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.error(ResponseEnum.PARAM_ERROR,</span><br><span class="line">            bindingResult.getFieldError().getField()+<span class="string">&quot;&quot;</span>+bindingResult.getFieldError().getDefaultMessage());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8"><li>既然做了统一异常拦截处理，所以就可以将UserController中关于BindingResult的就可以删除了</li></ol><h2 id="3、-购物车-添加商品"><a href="#3、-购物车-添加商品" class="headerlink" title="3、 购物车-添加商品"></a>3、 购物车-添加商品</h2><ol><li>创建接口ICartService实现添加商品功能</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.form.CartAddForm;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.CartVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ICartService</span> &#123;</span><br><span class="line">    ResponseVo&lt;CartVo&gt; <span class="title function_">add</span><span class="params">(CartAddForm form)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>CartServiceImpl实现接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.dao.ProductMapper;</span><br><span class="line"><span class="keyword">import</span> com.mall.enums.ProductStatusEnum;</span><br><span class="line"><span class="keyword">import</span> com.mall.enums.ResponseEnum;</span><br><span class="line"><span class="keyword">import</span> com.mall.form.CartAddForm;</span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.ICartService;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.CartVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CartServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">ICartService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductMapper productMapper;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;CartVo&gt; <span class="title function_">add</span><span class="params">(CartAddForm form)</span> &#123;</span><br><span class="line">        <span class="type">Product</span> <span class="variable">product</span> <span class="operator">=</span> productMapper.selectByPrimaryKey(form.getProductId());</span><br><span class="line">        <span class="comment">//商品是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (product == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseVo.error(ResponseEnum.PRODUCT_NOT_EXIST);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//商品是否正常在售</span></span><br><span class="line">        <span class="keyword">if</span> (!product.getStatus().equals(ProductStatusEnum.ON_SALE.getCode()))&#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseVo.error(ResponseEnum.PRODUCT_OFF_SALE_OR_DELETE);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//商品库存是否充足</span></span><br><span class="line">        <span class="keyword">if</span> (product.getStock()&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseVo.error(ResponseEnum.PRODUCT_STOCK_ERROR);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">//写入redis</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>将CartServiceImpl中需要的枚举写入ResponseEnum</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PRODUCT_NOT_EXIST(<span class="number">13</span>,<span class="string">&quot;商品不存在&quot;</span>),</span><br><span class="line"></span><br><span class="line">PRODUCT_STOCK_ERROR(<span class="number">14</span>,<span class="string">&quot;库存不正确&quot;</span>);</span><br></pre></td></tr></table></figure><hr><p>接下来要完成写入redis的部分</p><ol><li>写入插件pom.xml</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>配置application.yml</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">redis:</span></span><br><span class="line">  <span class="attr">host:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">6379</span></span><br></pre></td></tr></table></figure><ol start="3"><li>修改CartServiceImpl，写入redis</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.mall.dao.ProductMapper;</span><br><span class="line"><span class="keyword">import</span> com.mall.enums.ProductStatusEnum;</span><br><span class="line"><span class="keyword">import</span> com.mall.enums.ResponseEnum;</span><br><span class="line"><span class="keyword">import</span> com.mall.form.CartAddForm;</span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.Cart;</span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.Product;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.ICartService;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.CartVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.StringRedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CartServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">ICartService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> <span class="type">String</span> <span class="variable">CART_REDIS_KEY_TEMP</span> <span class="operator">=</span><span class="string">&quot;cart_%d&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ProductMapper productMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> StringRedisTemplate redisTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;CartVo&gt; <span class="title function_">add</span><span class="params">(Integer uid,CartAddForm form)</span> &#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">quantity</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">Product</span> <span class="variable">product</span> <span class="operator">=</span> productMapper.selectByPrimaryKey(form.getProductId());</span><br><span class="line">        <span class="comment">//商品是否存在</span></span><br><span class="line">        <span class="keyword">if</span> (product == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseVo.error(ResponseEnum.PRODUCT_NOT_EXIST);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//商品是否正常在售</span></span><br><span class="line">        <span class="keyword">if</span> (!product.getStatus().equals(ProductStatusEnum.ON_SALE.getCode()))&#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseVo.error(ResponseEnum.PRODUCT_OFF_SALE_OR_DELETE);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//商品库存是否充足</span></span><br><span class="line">        <span class="keyword">if</span> (product.getStock()&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseVo.error(ResponseEnum.PRODUCT_STOCK_ERROR);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//写入redis</span></span><br><span class="line">        <span class="comment">//key: cart_1</span></span><br><span class="line">        redisTemplate.opsForValue().set(String.format(CART_REDIS_KEY_TEMP,uid),</span><br><span class="line">                gson.toJson(<span class="keyword">new</span> <span class="title class_">Cart</span>(product.getId(),quantity,form.getSelected())));</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>ICartService也得加一个参数uid</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">ICartService</span> &#123;</span><br><span class="line">    ResponseVo&lt;CartVo&gt; <span class="title function_">add</span><span class="params">(Integer uid,CartAddForm form)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>在pom.xml中引入对象转json的插件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.google.code.gson<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="6"><li>创建Cart对象存入redis需要的字段</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.pojo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Cart</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer productId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span>  Integer quantity;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Boolean productSelected;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Cart</span><span class="params">(Integer productId, Integer quantity, Boolean productSelected)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.productId = productId;</span><br><span class="line">        <span class="built_in">this</span>.quantity = quantity;</span><br><span class="line">        <span class="built_in">this</span>.productSelected = productSelected;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>测试一下</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.MallApplicationTests;</span><br><span class="line"><span class="keyword">import</span> com.mall.form.CartAddForm;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ICartServiceTest</span> <span class="keyword">extends</span> <span class="title class_">MallApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ICartService cartService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">CartAddForm</span> <span class="variable">form</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CartAddForm</span>();</span><br><span class="line">        form.setProductId(<span class="number">26</span>);</span><br><span class="line">        form.setSelected(<span class="literal">true</span>);</span><br><span class="line">        cartService.add(<span class="number">1</span>,form);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><ul><li>因为上面用的是List，要是商品加1，就需要在List中遍历找到productId&#x3D;26</li><li>用Map的话，就可以Map.get（26），不需要遍历就能实现高性能购物车</li></ul><ol><li>使用map进行存储数据</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//写入redis</span></span><br><span class="line">HashOperations&lt;String,String,String&gt; opsForHash = redisTemplate.opsForHash();</span><br><span class="line">opsForHash.put(String.format(CART_REDIS_KEY_TEMP,uid),</span><br><span class="line">        String.valueOf(product.getId()),</span><br><span class="line">        gson.toJson(<span class="keyword">new</span> <span class="title class_">Cart</span>(product.getId(),quantity,form.getSelected())));</span><br></pre></td></tr></table></figure><ol start="2"><li>数据存储可以进行叠加修改，每次存都可以使数量+1</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">  <span class="comment">//写入redis</span></span><br><span class="line">    HashOperations&lt;String, String, String&gt; opsForHash = redisTemplate.opsForHash();</span><br><span class="line">    <span class="type">String</span> <span class="variable">redisKey</span> <span class="operator">=</span> String.format(CART_REDIS_KEY_TEMP, uid);</span><br><span class="line">    Cart cart;</span><br><span class="line">    <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> opsForHash.get(redisKey, String.valueOf(product.getId()));</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isEmpty(value)) &#123;</span><br><span class="line">        <span class="comment">//没有该商品，新增</span></span><br><span class="line">        cart = <span class="keyword">new</span> <span class="title class_">Cart</span>(product.getId(), quantity, form.getSelected());</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">//已经有了，数量+1</span></span><br><span class="line">        cart = gson.fromJson(value, Cart.class);</span><br><span class="line">        cart.setQuantity(cart.getQuantity() + quantity);</span><br><span class="line">    &#125;</span><br><span class="line">    opsForHash.put(redisKey,</span><br><span class="line">            String.valueOf(product.getId()),</span><br><span class="line">            gson.toJson(cart));</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、购物车-列表"><a href="#4、购物车-列表" class="headerlink" title="4、购物车-列表"></a>4、购物车-列表</h2><ol><li>ICartService中添加列表方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ResponseVo&lt;CartVo&gt; <span class="title function_">list</span><span class="params">(Integer uid)</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>实现接口方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo&lt;CartVo&gt; <span class="title function_">list</span><span class="params">(Integer uid)</span> &#123;</span><br><span class="line">    HashOperations&lt;String, String, String&gt; opsForHash = redisTemplate.opsForHash();</span><br><span class="line">    <span class="type">String</span> <span class="variable">redisKey</span> <span class="operator">=</span> String.format(CART_REDIS_KEY_TEMP, uid);</span><br><span class="line">    <span class="comment">//获取键对</span></span><br><span class="line">    Map&lt;String,String&gt; entries = opsForHash.entries(redisKey);</span><br><span class="line"></span><br><span class="line">    <span class="type">boolean</span> <span class="variable">selectAll</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">cartTotalQuantity</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">    <span class="type">BigDecimal</span> <span class="variable">cartTotalPrice</span> <span class="operator">=</span> BigDecimal.ZERO;</span><br><span class="line">    <span class="type">CartVo</span> <span class="variable">cartVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CartVo</span>();</span><br><span class="line">    List&lt;CartProductVo&gt; cartProductVoList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (Map.Entry&lt;String,String&gt; entry :entries.entrySet())&#123;</span><br><span class="line">        <span class="type">Integer</span> <span class="variable">productId</span> <span class="operator">=</span> Integer.valueOf(entry.getKey());</span><br><span class="line">        <span class="type">Cart</span> <span class="variable">cart</span> <span class="operator">=</span> gson.fromJson(entry.getValue(),Cart.class);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//TODO需要优化，使用mysql里的in</span></span><br><span class="line">        <span class="type">Product</span> <span class="variable">product</span> <span class="operator">=</span> productMapper.selectByPrimaryKey(productId);</span><br><span class="line">        <span class="keyword">if</span> (product != <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="type">CartProductVo</span> <span class="variable">cartProductVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CartProductVo</span>(productId,</span><br><span class="line">                    cart.getQuantity(),</span><br><span class="line">                    product.getName(),</span><br><span class="line">                    product.getSubtitle(),</span><br><span class="line">                    product.getMainImage(),</span><br><span class="line">                    product.getPrice(),</span><br><span class="line">                    product.getStatus(),</span><br><span class="line">                    product.getPrice().multiply(BigDecimal.valueOf(cart.getQuantity())),</span><br><span class="line">                    product.getStock(),</span><br><span class="line">                    cart.getProductSelected()</span><br><span class="line">            );</span><br><span class="line">            cartProductVoList.add(cartProductVo);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (!cart.getProductSelected())&#123;</span><br><span class="line">                selectAll =<span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//计算总价（只计算选中的）</span></span><br><span class="line">            <span class="keyword">if</span> (cart.getProductSelected())&#123;</span><br><span class="line">                cartTotalPrice = cartTotalPrice.add(cartProductVo.getProductTotalPrice());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        cartTotalQuantity +=cart.getQuantity();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//有一个没有选中，就不叫全选</span></span><br><span class="line">    cartVo.setSelectedAll(selectAll);</span><br><span class="line">    cartVo.setCartTotalQuantity(cartTotalQuantity);</span><br><span class="line">    cartVo.setCartTotalPrice(cartTotalPrice);</span><br><span class="line">    cartVo.setCartProductVoList(cartProductVoList);</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.success(cartVo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>给CartProductVo构建一个构造函数</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="title function_">CartProductVo</span><span class="params">(Integer productId, Integer quantity, String productName, String productSubtitle, String productMainImage, BigDecimal productPrice, Integer productStatus, BigDecimal productTotalPrice, Integer productStock, Boolean productSelected)</span> &#123;</span><br><span class="line">    <span class="built_in">this</span>.productId = productId;</span><br><span class="line">    <span class="built_in">this</span>.quantity = quantity;</span><br><span class="line">    <span class="built_in">this</span>.productName = productName;</span><br><span class="line">    <span class="built_in">this</span>.productSubtitle = productSubtitle;</span><br><span class="line">    <span class="built_in">this</span>.productMainImage = productMainImage;</span><br><span class="line">    <span class="built_in">this</span>.productPrice = productPrice;</span><br><span class="line">    <span class="built_in">this</span>.productStatus = productStatus;</span><br><span class="line">    <span class="built_in">this</span>.productTotalPrice = productTotalPrice;</span><br><span class="line">    <span class="built_in">this</span>.productStock = productStock;</span><br><span class="line">    <span class="built_in">this</span>.productSelected = productSelected;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>CartServiceImpl的add方法的返回值也修改为</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> list(uid);</span><br></pre></td></tr></table></figure><ol start="5"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">list</span><span class="params">()</span>&#123;</span><br><span class="line">    ResponseVo&lt;CartVo&gt; list = cartService.list(<span class="number">1</span>);</span><br><span class="line">    log.info(<span class="string">&quot;list=&#123;&#125;&quot;</span>,gson.toJson(list));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5、购物车-更新-amp-删除"><a href="#5、购物车-更新-amp-删除" class="headerlink" title="5、购物车-更新&amp;删除"></a>5、购物车-更新&amp;删除</h2><ol><li>在ICartService中定义更新接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ResponseVo&lt;CartVo&gt; <span class="title function_">update</span><span class="params">(Integer uid, Integer productId, CartUpdateForm form)</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>定义CartUpdateForm的字段</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.form;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CartUpdateForm</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer quantity;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Boolean selected;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>实现ICartService接口的更新</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo&lt;CartVo&gt; <span class="title function_">update</span><span class="params">(Integer uid, Integer productId, CartUpdateForm form)</span> &#123;</span><br><span class="line">    <span class="comment">//写入redis</span></span><br><span class="line">    HashOperations&lt;String, String, String&gt; opsForHash = redisTemplate.opsForHash();</span><br><span class="line">    <span class="type">String</span> <span class="variable">redisKey</span> <span class="operator">=</span> String.format(CART_REDIS_KEY_TEMP, uid);</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> opsForHash.get(redisKey, String.valueOf(productId));</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isEmpty(value)) &#123;</span><br><span class="line">        <span class="comment">//没有该商品，新增</span></span><br><span class="line">       <span class="keyword">return</span> ResponseVo.error(ResponseEnum.CART_PRODUCT_NOT_EXIST);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//已经有了，修改内容</span></span><br><span class="line">    <span class="type">Cart</span> <span class="variable">cart</span> <span class="operator">=</span> gson.fromJson(value, Cart.class);</span><br><span class="line">    <span class="keyword">if</span> (form.getQuantity() != <span class="literal">null</span> &amp;&amp; form.getQuantity()&gt;=<span class="number">0</span>)&#123;</span><br><span class="line">        cart.setQuantity(form.getQuantity());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (form.getSelected() != <span class="literal">null</span>)&#123;</span><br><span class="line">        cart.setProductSelected(form.getSelected());</span><br><span class="line">    &#125;</span><br><span class="line">    opsForHash.put(redisKey,</span><br><span class="line">            String.valueOf(productId),</span><br><span class="line">            gson.toJson(cart));</span><br><span class="line">    <span class="keyword">return</span> list(uid);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>在ResponseEnum中定义枚举</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CART_PRODUCT_NOT_EXIST(<span class="number">15</span>,<span class="string">&quot;购物车里无此商品&quot;</span>);</span><br></pre></td></tr></table></figure><ol start="5"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="type">CartUpdateForm</span> <span class="variable">form</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CartUpdateForm</span>();</span><br><span class="line">    form.setQuantity(<span class="number">10</span>);</span><br><span class="line">    form.setSelected(<span class="literal">false</span>);</span><br><span class="line">    ResponseVo&lt;CartVo&gt; responseVo = cartService.update(<span class="number">1</span>,<span class="number">26</span>,form);</span><br><span class="line">    log.info(<span class="string">&quot;list=&#123;&#125;&quot;</span>,gson.toJson(responseVo));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>在ICartService中定义删除接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ResponseVo&lt;CartVo&gt; <span class="title function_">dele</span><span class="params">(Integer uid, Integer productId)</span>;</span><br></pre></td></tr></table></figure><ol start="7"><li>实现ICartService接口的删除</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo&lt;CartVo&gt; <span class="title function_">dele</span><span class="params">(Integer uid, Integer productId)</span> &#123;</span><br><span class="line">    <span class="comment">//写入redis</span></span><br><span class="line">    HashOperations&lt;String, String, String&gt; opsForHash = redisTemplate.opsForHash();</span><br><span class="line">    <span class="type">String</span> <span class="variable">redisKey</span> <span class="operator">=</span> String.format(CART_REDIS_KEY_TEMP, uid);</span><br><span class="line"></span><br><span class="line">    <span class="type">String</span> <span class="variable">value</span> <span class="operator">=</span> opsForHash.get(redisKey, String.valueOf(productId));</span><br><span class="line">    <span class="keyword">if</span> (StringUtils.isEmpty(value)) &#123;</span><br><span class="line">        <span class="comment">//没有该商品，新增</span></span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ResponseEnum.CART_PRODUCT_NOT_EXIST);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    opsForHash.delete(redisKey, String.valueOf(productId));</span><br><span class="line">    <span class="keyword">return</span> list(uid);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">()</span>&#123;</span><br><span class="line">    ResponseVo&lt;CartVo&gt; responseVo = cartService.dele(<span class="number">1</span>,<span class="number">26</span>);</span><br><span class="line">    log.info(<span class="string">&quot;list=&#123;&#125;&quot;</span>,gson.toJson(responseVo));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6、购物车-全选-amp-全不选-amp-总数量"><a href="#6、购物车-全选-amp-全不选-amp-总数量" class="headerlink" title="6、购物车-全选&amp;全不选&amp;总数量"></a>6、购物车-全选&amp;全不选&amp;总数量</h2><ol><li>在ICartService接口定义方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ResponseVo&lt;CartVo&gt; <span class="title function_">selectAll</span><span class="params">(Integer uid)</span>;</span><br><span class="line"></span><br><span class="line">ResponseVo&lt;CartVo&gt; <span class="title function_">unSelectAll</span><span class="params">(Integer uid)</span>;</span><br><span class="line"></span><br><span class="line">ResponseVo&lt;Integer&gt; <span class="title function_">sum</span><span class="params">(Integer uid)</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>实现接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo&lt;CartVo&gt; <span class="title function_">selectAll</span><span class="params">(Integer uid)</span> &#123;</span><br><span class="line">    HashOperations&lt;String, String, String&gt; opsForHash = redisTemplate.opsForHash();</span><br><span class="line">    <span class="type">String</span> <span class="variable">redisKey</span> <span class="operator">=</span> String.format(CART_REDIS_KEY_TEMP, uid);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Cart cart : listForCart(uid))&#123;</span><br><span class="line">        cart.setProductSelected(<span class="literal">true</span>);</span><br><span class="line">        opsForHash.put(redisKey,</span><br><span class="line">                String.valueOf(cart.getProductId()),</span><br><span class="line">                gson.toJson(cart));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> list(uid);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo&lt;CartVo&gt; <span class="title function_">unSelectAll</span><span class="params">(Integer uid)</span> &#123;</span><br><span class="line">    HashOperations&lt;String, String, String&gt; opsForHash = redisTemplate.opsForHash();</span><br><span class="line">    <span class="type">String</span> <span class="variable">redisKey</span> <span class="operator">=</span> String.format(CART_REDIS_KEY_TEMP, uid);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (Cart cart : listForCart(uid))&#123;</span><br><span class="line">        cart.setProductSelected(<span class="literal">false</span>);</span><br><span class="line">        opsForHash.put(redisKey,</span><br><span class="line">                String.valueOf(cart.getProductId()),</span><br><span class="line">                gson.toJson(cart));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> list(uid);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo&lt;Integer&gt; <span class="title function_">sum</span><span class="params">(Integer uid)</span> &#123;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">sum</span> <span class="operator">=</span> listForCart(uid).stream()</span><br><span class="line">            .map(Cart::getQuantity)</span><br><span class="line">            .reduce(<span class="number">0</span>,Integer::sum);</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.success(sum);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> List&lt;Cart&gt; <span class="title function_">listForCart</span><span class="params">(Integer uid)</span>&#123;</span><br><span class="line">    HashOperations&lt;String, String, String&gt; opsForHash = redisTemplate.opsForHash();</span><br><span class="line">    <span class="type">String</span> <span class="variable">redisKey</span> <span class="operator">=</span> String.format(CART_REDIS_KEY_TEMP, uid);</span><br><span class="line">    <span class="comment">//获取键对</span></span><br><span class="line">    Map&lt;String,String&gt; entries = opsForHash.entries(redisKey);</span><br><span class="line"></span><br><span class="line">    List&lt;Cart&gt; cartList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (Map.Entry&lt;String,String&gt; entry : entries.entrySet())&#123;</span><br><span class="line">        cartList.add(gson.fromJson(entry.getValue(),Cart.class));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cartList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">selectAll</span><span class="params">()</span>&#123;</span><br><span class="line">    ResponseVo&lt;CartVo&gt; responseVo = cartService.selectAll(<span class="number">1</span>);</span><br><span class="line">    log.info(<span class="string">&quot;result=&#123;&#125;&quot;</span>,gson.toJson(responseVo));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">unSelectAll</span><span class="params">()</span>&#123;</span><br><span class="line">    ResponseVo&lt;CartVo&gt; responseVo = cartService.unSelectAll(<span class="number">1</span>);</span><br><span class="line">    log.info(<span class="string">&quot;result=&#123;&#125;&quot;</span>,gson.toJson(responseVo));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">sum</span><span class="params">()</span>&#123;</span><br><span class="line">    ResponseVo&lt;Integer&gt; responseVo = cartService.sum(<span class="number">1</span>);</span><br><span class="line">    log.info(<span class="string">&quot;result=&#123;&#125;&quot;</span>,gson.toJson(responseVo));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7、购物车-联通controller"><a href="#7、购物车-联通controller" class="headerlink" title="7、购物车-联通controller"></a>7、购物车-联通controller</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.consts.MallConst;</span><br><span class="line"><span class="keyword">import</span> com.mall.form.CartAddForm;</span><br><span class="line"><span class="keyword">import</span> com.mall.form.CartUpdateForm;</span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.ICartService;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.CartVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CartController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ICartService cartService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/carts&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;CartVo&gt; <span class="title function_">add</span> <span class="params">(HttpSession session)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) session.getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">        <span class="keyword">return</span> cartService.list(user.getId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/carts&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;CartVo&gt; <span class="title function_">add</span> <span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> CartAddForm cartAddForm, HttpSession session)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) session.getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">        <span class="keyword">return</span> cartService.add(user.getId(), cartAddForm);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@PutMapping(&quot;/carts/&#123;productId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;CartVo&gt; <span class="title function_">update</span> <span class="params">(<span class="meta">@PathVariable</span> Integer productId,</span></span><br><span class="line"><span class="params">                                      <span class="meta">@Valid</span> <span class="meta">@RequestBody</span> CartUpdateForm form,</span></span><br><span class="line"><span class="params">                                      HttpSession session)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) session.getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">        <span class="keyword">return</span> cartService.update(user.getId(), productId,form);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;/carts/&#123;productId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;CartVo&gt; <span class="title function_">dele</span> <span class="params">(<span class="meta">@PathVariable</span> Integer productId,</span></span><br><span class="line"><span class="params">                                      HttpSession session)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) session.getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">        <span class="keyword">return</span> cartService.dele(user.getId(), productId);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PutMapping(&quot;/carts/selectAll&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;CartVo&gt; <span class="title function_">selectAll</span> <span class="params">(HttpSession session)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) session.getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">        <span class="keyword">return</span> cartService.selectAll(user.getId());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@PutMapping(&quot;/carts/unSelectAll&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;CartVo&gt; <span class="title function_">unSelectAll</span> <span class="params">(HttpSession session)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) session.getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">        <span class="keyword">return</span> cartService.unSelectAll(user.getId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/carts/products/sum&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;Integer&gt; <span class="title function_">sum</span> <span class="params">(HttpSession session)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User) session.getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">        <span class="keyword">return</span> cartService.sum(user.getId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="八、全模块电商系统之收货地址模块"><a href="#八、全模块电商系统之收货地址模块" class="headerlink" title="八、全模块电商系统之收货地址模块"></a>八、全模块电商系统之收货地址模块</h1><p>Spring数据绑定中的对象绑定</p><hr><h2 id="1、新增收货地址"><a href="#1、新增收货地址" class="headerlink" title="1、新增收货地址"></a>1、新增收货地址</h2><ol><li>首先用生成器生成代码</li><li>根据入参的表单和生成的不一致，所以我们把单独的字段提取出来到ShippingForm</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.form;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShippingForm</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String receiverName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String receiverPhone;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String receiverMobile;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String receiverProvince;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String receiverCity;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String receiverDistrict;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String receiverAddress;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String receiverZip;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>创建操作接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> com.mall.form.ShippingForm;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IShippingService</span> &#123;</span><br><span class="line"></span><br><span class="line">    ResponseVo&lt;Map&lt;String,Integer&gt;&gt; <span class="title function_">add</span><span class="params">(Integer uid, ShippingForm form)</span>;</span><br><span class="line"></span><br><span class="line">    ResponseVo <span class="title function_">delete</span><span class="params">(Integer uid, Integer shippingId)</span>;</span><br><span class="line"></span><br><span class="line">    ResponseVo <span class="title function_">update</span><span class="params">(Integer uid, Integer shippingId,ShippingForm form)</span>;</span><br><span class="line"></span><br><span class="line">    ResponseVo&lt;PageInfo&gt; <span class="title function_">list</span><span class="params">(Integer uid, Integer pageNum, Integer pageSize)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>实现接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> com.mall.dao.ShippingMapper;</span><br><span class="line"><span class="keyword">import</span> com.mall.enums.ResponseEnum;</span><br><span class="line"><span class="keyword">import</span> com.mall.form.ShippingForm;</span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.Shipping;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.IShippingService;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeanUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShippingServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">IShippingService</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ShippingMapper shippingMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;Map&lt;String, Integer&gt;&gt; <span class="title function_">add</span><span class="params">(Integer uid, ShippingForm form)</span> &#123;</span><br><span class="line">        <span class="type">Shipping</span> <span class="variable">shipping</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Shipping</span>();</span><br><span class="line">        BeanUtils.copyProperties(form,shipping);</span><br><span class="line">        shipping.setUserId(uid);</span><br><span class="line">        <span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> shippingMapper.insertSelective(shipping);</span><br><span class="line">        <span class="keyword">if</span> (row == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> ResponseVo.error(ResponseEnum.ERROR);</span><br><span class="line">        &#125;</span><br><span class="line">        Map&lt;String,Integer&gt; map = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        map.put(<span class="string">&quot;shippingId&quot;</span>,shipping.getId());</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.success(map);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo <span class="title function_">delete</span><span class="params">(Integer uid, Integer shippingId)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo <span class="title function_">update</span><span class="params">(Integer uid, Integer shippingId, ShippingForm form)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;PageInfo&gt; <span class="title function_">list</span><span class="params">(Integer uid, Integer pageNum, Integer pageSize)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.MallApplicationTests;</span><br><span class="line"><span class="keyword">import</span> com.mall.enums.ResponseEnum;</span><br><span class="line"><span class="keyword">import</span> com.mall.form.ShippingForm;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.junit.Assert;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IShippingServiceTest</span> <span class="keyword">extends</span> <span class="title class_">MallApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IShippingService shippingService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">uid</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ShippingForm</span> <span class="variable">form</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ShippingForm</span>();</span><br><span class="line">        form.setReceiverName(<span class="string">&quot;小方&quot;</span>);</span><br><span class="line">        form.setReceiverAddress(<span class="string">&quot;天理&quot;</span>);</span><br><span class="line">        form.setReceiverCity(<span class="string">&quot;天津&quot;</span>);</span><br><span class="line">        form.setReceiverMobile(<span class="string">&quot;13246465&quot;</span>);</span><br><span class="line">        form.setReceiverPhone(<span class="string">&quot;156465&quot;</span>);</span><br><span class="line">        form.setReceiverProvince(<span class="string">&quot;天津&quot;</span>);</span><br><span class="line">        form.setReceiverDistrict(<span class="string">&quot;西青区&quot;</span>);</span><br><span class="line">        form.setReceiverZip(<span class="string">&quot;00000&quot;</span>);</span><br><span class="line">        ResponseVo&lt;Map&lt;String, Integer&gt;&gt; responseVo = shippingService.add(uid, form);</span><br><span class="line">        log.info(<span class="string">&quot;result=&#123;&#125;&quot;</span>,responseVo);</span><br><span class="line">        Assert.assertEquals(ResponseEnum.SUCCESS.getCode(),responseVo.getStatus());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">list</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>发现一个问题，就是shippingId没有值</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202306081010516.png"                      alt="image-20230608101005152"                ></p><ol start="7"><li>在ShippingMapper使用insert方法直接返回自增id的操作，就可以解决</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;insertSelective&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.mall.pojo.Shipping&quot;</span> <span class="attr">useGeneratedKeys</span>=<span class="string">&quot;true&quot;</span> <span class="attr">keyProperty</span>=<span class="string">&quot;id&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2、删除-amp-更新收货地址"><a href="#2、删除-amp-更新收货地址" class="headerlink" title="2、删除&amp;更新收货地址"></a>2、删除&amp;更新收货地址</h2><ol><li>由于ShippingMapper中没有对应的删除方法，我们给添加一个</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">deleteByIdAndUid</span><span class="params">(<span class="meta">@Param(&quot;uid&quot;)</span> Integer uid,</span></span><br><span class="line"><span class="params">                     <span class="meta">@Param(&quot;shippingId&quot;)</span> Integer shippingId)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteByIdAndUid&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;map&quot;</span>&gt;</span></span><br><span class="line">  delete from mall_shipping</span><br><span class="line">  where id = #&#123;shippingId,jdbcType=INTEGER&#125;</span><br><span class="line">  and user_id = #&#123;uid,jdbcType=INTEGER&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>实现删除接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo <span class="title function_">delete</span><span class="params">(Integer uid, Integer shippingId)</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> shippingMapper.deleteByIdAndUid(uid,shippingId);</span><br><span class="line">    <span class="keyword">if</span> (row == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ResponseEnum.DELETE_SHIPPING_FAIL);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.success();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>测试一下</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="type">Integer</span> <span class="variable">shippingId</span> <span class="operator">=</span> <span class="number">7</span>;</span><br><span class="line">    ResponseVo&lt;Map&lt;String, Integer&gt;&gt; responseVo = shippingService.delete(uid, shippingId);</span><br><span class="line">    log.info(<span class="string">&quot;result=&#123;&#125;&quot;</span>,responseVo);</span><br><span class="line">    Assert.assertEquals(ResponseEnum.SUCCESS.getCode(),responseVo.getStatus());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>实现更新接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo <span class="title function_">update</span><span class="params">(Integer uid, Integer shippingId, ShippingForm form)</span> &#123;</span><br><span class="line">    <span class="type">Shipping</span> <span class="variable">shipping</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Shipping</span>();</span><br><span class="line">    BeanUtils.copyProperties(form,shipping);</span><br><span class="line">    shipping.setUserId(uid);</span><br><span class="line">    shipping.setId(shippingId);</span><br><span class="line">    <span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> shippingMapper.updateByPrimaryKeySelective(shipping);</span><br><span class="line">    <span class="keyword">if</span> (row == <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ResponseEnum.ERROR);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.success();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.MallApplicationTests;</span><br><span class="line"><span class="keyword">import</span> com.mall.enums.ResponseEnum;</span><br><span class="line"><span class="keyword">import</span> com.mall.form.ShippingForm;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.junit.Assert;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IShippingServiceTest</span> <span class="keyword">extends</span> <span class="title class_">MallApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IShippingService shippingService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">uid</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ShippingForm form;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">shippingId</span> <span class="operator">=</span> <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">ShippingForm</span> <span class="variable">form</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ShippingForm</span>();</span><br><span class="line">        form.setReceiverName(<span class="string">&quot;小方&quot;</span>);</span><br><span class="line">        form.setReceiverAddress(<span class="string">&quot;天理&quot;</span>);</span><br><span class="line">        form.setReceiverCity(<span class="string">&quot;天津&quot;</span>);</span><br><span class="line">        form.setReceiverMobile(<span class="string">&quot;13246465&quot;</span>);</span><br><span class="line">        form.setReceiverPhone(<span class="string">&quot;156465&quot;</span>);</span><br><span class="line">        form.setReceiverProvince(<span class="string">&quot;天津&quot;</span>);</span><br><span class="line">        form.setReceiverDistrict(<span class="string">&quot;西青区&quot;</span>);</span><br><span class="line">        form.setReceiverZip(<span class="string">&quot;00000&quot;</span>);</span><br><span class="line">        <span class="built_in">this</span>.form = form;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">()</span> &#123;</span><br><span class="line">        ResponseVo&lt;Map&lt;String, Integer&gt;&gt; responseVo = shippingService.add(uid, form);</span><br><span class="line">        log.info(<span class="string">&quot;result=&#123;&#125;&quot;</span>,responseVo);</span><br><span class="line">        Assert.assertEquals(ResponseEnum.SUCCESS.getCode(),responseVo.getStatus());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">ResponseVo</span> <span class="variable">responseVo</span> <span class="operator">=</span> shippingService.delete(uid, shippingId);</span><br><span class="line">        log.info(<span class="string">&quot;result=&#123;&#125;&quot;</span>,responseVo);</span><br><span class="line">        Assert.assertEquals(ResponseEnum.SUCCESS.getCode(),responseVo.getStatus());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">()</span> &#123;</span><br><span class="line">        form.setReceiverCity(<span class="string">&quot;杭州&quot;</span>);</span><br><span class="line">        <span class="type">ResponseVo</span> <span class="variable">responseVo</span> <span class="operator">=</span> shippingService.update(uid, shippingId,form);</span><br><span class="line">        log.info(<span class="string">&quot;result=&#123;&#125;&quot;</span>,responseVo);</span><br><span class="line">        Assert.assertEquals(ResponseEnum.SUCCESS.getCode(),responseVo.getStatus());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">list</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、收货地址列表"><a href="#3、收货地址列表" class="headerlink" title="3、收货地址列表"></a>3、收货地址列表</h2><ol><li>在ShippingMapper中写一个查询方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Shipping&gt; <span class="title function_">selectByUid</span><span class="params">(Integer uid)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=<span class="string">&quot;selectByUid&quot;</span> parameterType=<span class="string">&quot;java.lang.Integer&quot;</span> resultMap=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span><br><span class="line">  select</span><br><span class="line">  &lt;include refid=<span class="string">&quot;Base_Column_List&quot;</span> /&gt;</span><br><span class="line">  from mall_shipping</span><br><span class="line">  <span class="type">where</span> <span class="variable">user_id</span> <span class="operator">=</span> #&#123;uid,jdbcType=INTEGER&#125;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>实现列表接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo&lt;PageInfo&gt; <span class="title function_">list</span><span class="params">(Integer uid, Integer pageNum, Integer pageSize)</span> &#123;</span><br><span class="line">    PageHelper.startPage(pageNum,pageSize);</span><br><span class="line">    List&lt;Shipping&gt; shippings =shippingMapper.selectByUid(uid);</span><br><span class="line">    <span class="type">PageInfo</span> <span class="variable">pageInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageInfo</span>(shippings);</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.success(pageInfo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>接下来让Service和Controller联通</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.consts.MallConst;</span><br><span class="line"><span class="keyword">import</span> com.mall.form.ShippingForm;</span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.IShippingService;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ShippingController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IShippingService shippingService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/shippings&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo <span class="title function_">add</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> ShippingForm form,</span></span><br><span class="line"><span class="params">                            HttpSession session)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User)session.getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">        <span class="keyword">return</span> shippingService.add(user.getId(),form);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@DeleteMapping(&quot;/shippings/&#123;shippingId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo <span class="title function_">delete</span><span class="params">(<span class="meta">@PathVariable</span> Integer shippingId,</span></span><br><span class="line"><span class="params">                            HttpSession session)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User)session.getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">        <span class="keyword">return</span> shippingService.delete(user.getId(),shippingId);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@PutMapping(&quot;/shippings/&#123;shippingId&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo <span class="title function_">update</span><span class="params">(<span class="meta">@PathVariable</span> Integer shippingId,</span></span><br><span class="line"><span class="params">                             <span class="meta">@Valid</span> <span class="meta">@RequestBody</span> ShippingForm form,</span></span><br><span class="line"><span class="params">                             HttpSession session)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User)session.getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">        <span class="keyword">return</span> shippingService.update(user.getId(),shippingId,form);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/shippings&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo <span class="title function_">list</span><span class="params">(<span class="meta">@RequestParam(required = false,defaultValue = &quot;1&quot;)</span>Integer pageNum,</span></span><br><span class="line"><span class="params">                           <span class="meta">@RequestParam(required = false,defaultValue = &quot;1&quot;)</span>Integer pageSize,</span></span><br><span class="line"><span class="params">                             <span class="meta">@Valid</span> <span class="meta">@RequestBody</span> ShippingForm form,</span></span><br><span class="line"><span class="params">                             HttpSession session)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User)session.getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">        <span class="keyword">return</span> shippingService.list(user.getId(),pageNum,pageSize);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="九、全模块电商系统之订单模块"><a href="#九、全模块电商系统之订单模块" class="headerlink" title="九、全模块电商系统之订单模块"></a>九、全模块电商系统之订单模块</h1><h2 id="1、创建订单-流程分析"><a href="#1、创建订单-流程分析" class="headerlink" title="1、创建订单-流程分析"></a>1、创建订单-流程分析</h2><ol><li>代码生成器生成相关的OrderItem</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">&quot;mall_order_item&quot;</span> <span class="attr">domainObjectName</span>=<span class="string">&quot;OrderItem&quot;</span> <span class="attr">enableCountByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableDeleteByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableSelectByExample</span>=<span class="string">&quot;false&quot;</span> <span class="attr">enableUpdateByExample</span>=<span class="string">&quot;false&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>根据返回格式创建OrderVo</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.Shipping;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long orderNo;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BigDecimal payment;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer paymentType;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer postage;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer status;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date paymentTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date sendTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date endTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date closeTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;OrderItemVo&gt; orderItemVoList;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer shippingId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Shipping shippingVo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>创建OrderItemVo</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.vo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderItemVo</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long orderNo;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer productId;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String productName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String productImage;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BigDecimal currentUnitPrice;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer quantity;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> BigDecimal totalPrice;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Date createTime;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>定义接口中创建订单方法IOrderService</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.vo.OrderVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">IOrderService</span> &#123;</span><br><span class="line"></span><br><span class="line">    ResponseVo&lt;OrderVo&gt; <span class="title function_">create</span><span class="params">(Integer uid,Integer shippingId)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>实现类OrderServiceImpl大体流程</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mall.service.IOrderService;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.OrderVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">IOrderService</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;OrderVo&gt; <span class="title function_">create</span><span class="params">(Integer uid, Integer shippingId)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//收获地址校验（总之要查出来的）</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取购物车，校验（是否有商品、库存）</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//计算总价，只计算选中的商品</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//生成订单，入库：order和order_item，事务操作</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//减库存</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//更新购物车</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//构造orderVo对象</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、创建订单-购物车"><a href="#2、创建订单-购物车" class="headerlink" title="2、创建订单-购物车"></a>2、创建订单-购物车</h2><ol><li>实现OrderServiceImpl里面的收获地址校验（总之要查出来的）功能</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//收获地址校验（总之要查出来的）</span></span><br><span class="line"><span class="type">Shipping</span> <span class="variable">shipping</span> <span class="operator">=</span> shippingMapper.selectByUidAndShippingId(uid, shippingId);</span><br><span class="line"><span class="keyword">if</span> (shipping == <span class="literal">null</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.error(ResponseEnum.SHIPPING_NOT_EXIST);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在ShippingMapper中创建通过uid和购物车id查询语句</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Shipping <span class="title function_">selectByUidAndShippingId</span><span class="params">(<span class="meta">@Param(&quot;uid&quot;)</span> Integer uid,</span></span><br><span class="line"><span class="params">                                  <span class="meta">@Param(&quot;shippingId&quot;)</span> Integer shippingId)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByUidAndShippingId&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.Integer&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">  select</span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;Base_Column_List&quot;</span> /&gt;</span></span><br><span class="line">  from mall_shipping</span><br><span class="line">  where id = #&#123;shippingId,jdbcType=INTEGER&#125;</span><br><span class="line">  and user_id = #&#123;uid,jdbcType=INTEGER&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>在ResponseEnum增加一个枚举</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SHIPPING_NOT_EXIST(<span class="number">17</span>,<span class="string">&quot;收货地址不存在&quot;</span>),</span><br></pre></td></tr></table></figure><ol start="4"><li>实现OrderServiceImpl里面的获取购物车，校验（是否有商品、库存）功能</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取购物车，校验（是否有商品、库存）</span></span><br><span class="line">List&lt;Cart&gt; cartList= cartService.listForCart(uid).stream()</span><br><span class="line">        .filter(Cart::getProductSelected)</span><br><span class="line">        .collect(Collectors.toList());</span><br><span class="line"><span class="keyword">if</span> (CollectionUtils.isEmpty(cartList))&#123;</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.error(ResponseEnum.CART_SELECTED_IS_EMPTY);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取cartList里面的productIds</span></span><br><span class="line">Set&lt;Integer&gt; productIdSet = cartList.stream()</span><br><span class="line">        .map(Cart::getProductId)</span><br><span class="line">        .collect(Collectors.toSet());</span><br><span class="line">List&lt;Product&gt; productList = productMapper.selectByProductIdSet(productIdSet);</span><br><span class="line">Map&lt;Integer,Product&gt; map = productList.stream()</span><br><span class="line">        .collect(Collectors.toMap(Product::getId,product-&gt;product));</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (Cart cart : cartList)&#123;</span><br><span class="line">    <span class="comment">//根据productId查询数据库</span></span><br><span class="line">    <span class="type">Product</span> <span class="variable">product</span> <span class="operator">=</span> map.get(cart.getProductId());</span><br><span class="line">    <span class="comment">//是否有商品</span></span><br><span class="line">    <span class="keyword">if</span> (product == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ResponseEnum.PRODUCT_NOT_EXIST,<span class="string">&quot;商品不存在。productId =&quot;</span>+cart.getProductId());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//库存是否充足</span></span><br><span class="line">    <span class="keyword">if</span> (product.getStock()&lt;cart.getQuantity())&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ResponseEnum.PRODUCT_STOCK_ERROR,</span><br><span class="line">                <span class="string">&quot;库存不正确.&quot;</span>+ product.getName());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>获取购物车列表这个方法在CartServiceImpl中写过，现在把这个方法改成public的，并且在ICartService接口中重新声明该方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;Cart&gt; <span class="title function_">listForCart</span><span class="params">(Integer uid)</span>&#123;</span><br><span class="line">    HashOperations&lt;String, String, String&gt; opsForHash = redisTemplate.opsForHash();</span><br><span class="line">    <span class="type">String</span> <span class="variable">redisKey</span> <span class="operator">=</span> String.format(CART_REDIS_KEY_TEMP, uid);</span><br><span class="line">    <span class="comment">//获取键对</span></span><br><span class="line">    Map&lt;String,String&gt; entries = opsForHash.entries(redisKey);</span><br><span class="line"></span><br><span class="line">    List&lt;Cart&gt; cartList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (Map.Entry&lt;String,String&gt; entry : entries.entrySet())&#123;</span><br><span class="line">        cartList.add(gson.fromJson(entry.getValue(),Cart.class));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cartList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Cart&gt; <span class="title function_">listForCart</span><span class="params">(Integer uid)</span>;</span><br></pre></td></tr></table></figure><ol start="6"><li>在ResponseEnum增加一个枚举</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CART_SELECTED_IS_EMPTY(<span class="number">18</span>,<span class="string">&quot;购物车里没有选中的商品&quot;</span>),</span><br></pre></td></tr></table></figure><ol start="7"><li>在ProductMapper中添加通过productId来查询</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Product&gt; <span class="title function_">selectByProductIdSet</span><span class="params">(<span class="meta">@Param(&quot;productIdSet&quot;)</span> Set&lt;Integer&gt; productIdSet)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByProductIdSet&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">  select</span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;Base_Column_List&quot;</span> /&gt;</span></span><br><span class="line">  from mall_product</span><br><span class="line">  where status = 1</span><br><span class="line">  <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;productIdSet.size() &gt; 0&quot;</span>&gt;</span></span><br><span class="line">    and id in</span><br><span class="line">    <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;productIdSet&quot;</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">index</span>=<span class="string">&quot;index&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">      #&#123;item&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3、创建订单-构造OrderItem"><a href="#3、创建订单-构造OrderItem" class="headerlink" title="3、创建订单-构造OrderItem"></a>3、创建订单-构造OrderItem</h2><ol><li>想了想还是得根据商品得上架状态进行判断，修改下ProductMapper得查询方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;select id=<span class="string">&quot;selectByProductIdSet&quot;</span> resultMap=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span><br><span class="line">  select</span><br><span class="line">  &lt;include refid=<span class="string">&quot;Base_Column_List&quot;</span> /&gt;</span><br><span class="line">  from mall_product</span><br><span class="line">  &lt;where&gt;</span><br><span class="line">  &lt;<span class="keyword">if</span> test=<span class="string">&quot;productIdSet.size() &gt; 0&quot;</span>&gt;</span><br><span class="line">    id in</span><br><span class="line">    &lt;foreach collection=<span class="string">&quot;productIdSet&quot;</span> item=<span class="string">&quot;item&quot;</span> index=<span class="string">&quot;index&quot;</span> open=<span class="string">&quot;(&quot;</span> separator=<span class="string">&quot;,&quot;</span> close=<span class="string">&quot;)&quot;</span>&gt;</span><br><span class="line">      #&#123;item&#125;</span><br><span class="line">    &lt;/foreach&gt;</span><br><span class="line">  &lt;/<span class="keyword">if</span>&gt;</span><br><span class="line">  &lt;/where&gt;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>接下来再OrderServiceImpl中判断是否有商品和库存是否充足中间加上</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//商品上下架状态</span></span><br><span class="line"><span class="keyword">if</span>(!ProductStatusEnum.ON_SALE.getCode().equals(product.getStatus()))&#123;</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.error(ResponseEnum.PRODUCT_OFF_SALE_OR_DELETE,</span><br><span class="line">            <span class="string">&quot;商品不是在售状态&quot;</span>+ product.getName());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>完成生成订单操作，还是在那个循环里得库存是否充足后添加方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">buildOrderItem(uid,orderNo,cart.getQuantity(),product);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> OrderItem <span class="title function_">buildOrderItem</span><span class="params">(Integer uid,Long orderNo,Integer quantity,Product product)</span> &#123;</span><br><span class="line">    <span class="type">OrderItem</span> <span class="variable">item</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderItem</span>();</span><br><span class="line">    item.setUserId(uid);</span><br><span class="line">    item.setOrderNo(orderNo);</span><br><span class="line">    item.setProductId(product.getId());</span><br><span class="line">    item.setProductName(product.getName());</span><br><span class="line">    item.setProductImage(product.getMainImage());</span><br><span class="line">    item.setCurrentUnitPrice(product.getPrice());</span><br><span class="line">    item.setQuantity(quantity);</span><br><span class="line">    item.setTotalPrice(product.getPrice().multiply(BigDecimal.valueOf(quantity)));</span><br><span class="line">    <span class="keyword">return</span> item;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>没有订单号自己生成一个，在buildOrderItem上一行</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Long</span> <span class="variable">orderNo</span> <span class="operator">=</span> generateOrderNo();</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 企业级：分布式唯一id</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> Long <span class="title function_">generateOrderNo</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> System.currentTimeMillis() + <span class="keyword">new</span> <span class="title class_">Random</span>().nextInt(<span class="number">999</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、创建订单-Order数据写入数据库"><a href="#4、创建订单-Order数据写入数据库" class="headerlink" title="4、创建订单-Order数据写入数据库"></a>4、创建订单-Order数据写入数据库</h2><p>Order和OrderItem是一对多得关系</p><hr><ol><li>我们生成订单号提取到for循环之外，并构造一个小定单列表，将每个小项目都添加到小定单列表中，接着将orderItemList传入到buildOrder方法中</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">List&lt;OrderItem&gt; orderItemList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line"><span class="type">Long</span> <span class="variable">orderNo</span> <span class="operator">=</span> generateOrderNo();</span><br><span class="line"><span class="keyword">for</span> (Cart cart : cartList)&#123;</span><br><span class="line">    <span class="comment">//根据productId查询数据库</span></span><br><span class="line">    <span class="type">Product</span> <span class="variable">product</span> <span class="operator">=</span> map.get(cart.getProductId());</span><br><span class="line">    <span class="comment">//是否有商品</span></span><br><span class="line">    <span class="keyword">if</span> (product == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ResponseEnum.PRODUCT_NOT_EXIST,<span class="string">&quot;商品不存在。productId =&quot;</span>+cart.getProductId());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//商品上下架状态</span></span><br><span class="line">    <span class="keyword">if</span>(!ProductStatusEnum.ON_SALE.getCode().equals(product.getStatus()))&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ResponseEnum.PRODUCT_OFF_SALE_OR_DELETE,</span><br><span class="line">                <span class="string">&quot;商品不是在售状态&quot;</span>+ product.getName());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//库存是否充足</span></span><br><span class="line">    <span class="keyword">if</span> (product.getStock()&lt;cart.getQuantity())&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ResponseEnum.PRODUCT_STOCK_ERROR,</span><br><span class="line">                <span class="string">&quot;库存不正确.&quot;</span>+ product.getName());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">OrderItem</span> <span class="variable">orderItem</span> <span class="operator">=</span> buildOrderItem(uid,orderNo,cart.getQuantity(),product);</span><br><span class="line">    orderItemList.add(orderItem);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//计算总价，只计算选中的商品并生成订单</span></span><br><span class="line">buildOrder(uid,orderNo,shippingId,orderItemList);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Order <span class="title function_">buildOrder</span><span class="params">(Integer uid,</span></span><br><span class="line"><span class="params">                         Long orderNo,</span></span><br><span class="line"><span class="params">                         Integer shippingId,</span></span><br><span class="line"><span class="params">                         List&lt;OrderItem&gt; orderItemList)</span> &#123;</span><br><span class="line">    <span class="type">BigDecimal</span> <span class="variable">payment</span> <span class="operator">=</span> orderItemList.stream()</span><br><span class="line">            .map(OrderItem::getTotalPrice)</span><br><span class="line">            .reduce(BigDecimal.ZERO,BigDecimal::add);</span><br><span class="line"></span><br><span class="line">    <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Order</span>();</span><br><span class="line">    order.setOrderNo(orderNo);</span><br><span class="line">    order.setUserId(uid);</span><br><span class="line">    order.setShippingId(shippingId);</span><br><span class="line">    order.setPayment(payment);</span><br><span class="line">    order.setPaymentType(PaymentTypeEnum.PAY_ONLINE.getCode());</span><br><span class="line">    order.setPostage(<span class="number">0</span>);</span><br><span class="line">    order.setStatus(OrderStatusEnum.NO_PAY.getCode());</span><br><span class="line">    <span class="keyword">return</span> order;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>将Order数据写入数据库</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//入库：order和order_item，事务操作</span></span><br><span class="line"><span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> orderMapper.insertSelective(order);</span><br><span class="line"><span class="keyword">if</span> (row&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.error(ResponseEnum.ERROR);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5、创建订单-完成数据库的写入"><a href="#5、创建订单-完成数据库的写入" class="headerlink" title="5、创建订单-完成数据库的写入"></a>5、创建订单-完成数据库的写入</h2><ol><li>OrderItem的写入不一样，因为他是批量写入，在OrderItemMapper增加批量插入的方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">batchInsert</span><span class="params">(<span class="meta">@Param(&quot;orderItemList&quot;)</span>List&lt;OrderItem&gt; orderItemList)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;batchInsert&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">  insert into mall_order_item (user_id, order_no,</span><br><span class="line">    product_id, product_name, product_image,</span><br><span class="line">    current_unit_price, quantity, total_price)</span><br><span class="line">  values</span><br><span class="line">  <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;orderItemList&quot;</span> <span class="attr">index</span>=<span class="string">&quot;index&quot;</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span>&gt;</span></span><br><span class="line">    (</span><br><span class="line">    #&#123;item.userId&#125;,</span><br><span class="line">    #&#123;item.orderNo&#125;,</span><br><span class="line">    #&#123;item.productId&#125;,</span><br><span class="line">    #&#123;item.productName&#125;,</span><br><span class="line">    #&#123;item.productImage&#125;,</span><br><span class="line">    #&#123;item.currentUnitPrice&#125;,</span><br><span class="line">    #&#123;item.quantity&#125;,</span><br><span class="line">    #&#123;item.totalPrice&#125;</span><br><span class="line">    )</span><br><span class="line">  <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>插入orderItem数据</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">rowForOrderItem</span> <span class="operator">=</span> orderItemMapper.batchInsert(orderItemList);</span><br><span class="line"><span class="keyword">if</span> (rowForOrderItem&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.error(ResponseEnum.ERROR);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>要是想这两个表要不全部写入，要不全部不写入就要在OrderServiceImpl的create()方法上加一个注解@Transactional</li></ol><h2 id="6、创建订单-扣库存-amp-更新购物车"><a href="#6、创建订单-扣库存-amp-更新购物车" class="headerlink" title="6、创建订单-扣库存&amp;更新购物车"></a>6、创建订单-扣库存&amp;更新购物车</h2><ol><li>扣库存的操作在create（）的for循环里面执行</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//减库存</span></span><br><span class="line">product.setStock(product.getStock()-cart.getQuantity());</span><br><span class="line"><span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> productMapper.updateByPrimaryKeySelective(product);</span><br><span class="line"><span class="keyword">if</span> (row&lt;=<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.error(ResponseEnum.ERROR);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>更新购物车的操作不能再create（）方法的for循环中执行，因为Redis有事务（打包命令），是不能回滚的。写在入库：order和order_item，后</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//更新购物车(选中的商品)</span></span><br><span class="line"><span class="keyword">for</span> (Cart cart : cartList) &#123;</span><br><span class="line">    cartService.dele(uid, cart.getProductId());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>接下来实现构造orderVo对象</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造orderVo对象</span></span><br><span class="line">buildOrderVo(order,orderItemList,shipping);</span><br><span class="line"><span class="keyword">return</span> ResponseVo.success();</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> OrderVo <span class="title function_">buildOrderVo</span><span class="params">(Order order, List&lt;OrderItem&gt; orderItemList, Shipping shipping)</span> &#123;</span><br><span class="line">    <span class="type">OrderVo</span> <span class="variable">orderVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderVo</span>();</span><br><span class="line">    BeanUtils.copyProperties(order,orderVo);</span><br><span class="line"></span><br><span class="line">    List&lt;OrderItemVo&gt; OrderItemVoList = orderItemList.stream().map(e-&gt;&#123;</span><br><span class="line">        <span class="type">OrderItemVo</span> <span class="variable">orderItemVo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">OrderItemVo</span>();</span><br><span class="line">        BeanUtils.copyProperties(e,orderItemVo);</span><br><span class="line">        <span class="keyword">return</span> orderItemVo;</span><br><span class="line">    &#125;).collect(Collectors.toList());</span><br><span class="line">    orderVo.setOrderItemVoList(OrderItemVoList);</span><br><span class="line">   <span class="keyword">if</span> (shipping !=<span class="literal">null</span>)&#123;</span><br><span class="line">            orderVo.setShippingId(shipping.getId());</span><br><span class="line">            orderVo.setShippingVo(shipping);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> orderVo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7、创建订单-单测"><a href="#7、创建订单-单测" class="headerlink" title="7、创建订单-单测"></a>7、创建订单-单测</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.google.gson.GsonBuilder;</span><br><span class="line"><span class="keyword">import</span> com.mall.MallApplicationTests;</span><br><span class="line"><span class="keyword">import</span> com.mall.enums.ResponseEnum;</span><br><span class="line"><span class="keyword">import</span> com.mall.form.CartAddForm;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.CartVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.OrderVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.junit.Assert;</span><br><span class="line"><span class="keyword">import</span> org.junit.Before;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IOrderServiceTest</span> <span class="keyword">extends</span> <span class="title class_">MallApplicationTests</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IOrderService orderService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> ICartService cartService;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">uid</span> <span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">shippingId</span> <span class="operator">=</span> <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Integer</span> <span class="variable">productId</span> <span class="operator">=</span> <span class="number">26</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">Gson</span> <span class="variable">gson</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">GsonBuilder</span>().setPrettyPrinting().create();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">CartAddForm</span> <span class="variable">form</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">CartAddForm</span>();</span><br><span class="line">        form.setProductId(productId);</span><br><span class="line">        form.setSelected(<span class="literal">true</span>);</span><br><span class="line">        ResponseVo&lt;CartVo&gt; responseVo = cartService.add(uid,form);</span><br><span class="line">        Assert.assertEquals(ResponseEnum.SUCCESS.getCode(),responseVo.getStatus());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">create</span><span class="params">()</span>&#123;</span><br><span class="line">        ResponseVo&lt;OrderVo&gt; responseVo = orderService.create(uid,shippingId);</span><br><span class="line">        log.info(<span class="string">&quot;result=&#123;&#125;&quot;</span>,gson.toJson(responseVo));</span><br><span class="line">        Assert.assertEquals(ResponseEnum.SUCCESS.getCode(),responseVo.getStatus());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8、订单列表"><a href="#8、订单列表" class="headerlink" title="8、订单列表"></a>8、订单列表</h2><ol><li>在IOrderService写一个列表接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ResponseVo&lt;PageInfo&gt; <span class="title function_">list</span><span class="params">(Integer uid,Integer pageNum,Integer pageSize)</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>实现该接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo&lt;PageInfo&gt; <span class="title function_">list</span><span class="params">(Integer uid, Integer pageNum, Integer pageSize)</span> &#123;</span><br><span class="line">    PageHelper.startPage(pageNum,pageSize);</span><br><span class="line">    List&lt;Order&gt; orderList = orderMapper.selectByUid(uid);</span><br><span class="line"></span><br><span class="line">    Set&lt;Long&gt; orderNoSet = orderList.stream()</span><br><span class="line">            .map(Order::getOrderNo)</span><br><span class="line">            .collect(Collectors.toSet());</span><br><span class="line">    List&lt;OrderItem&gt; orderItemList = orderItemMapper.selectByOrderNoSet(orderNoSet);</span><br><span class="line">    Map&lt;Long,List&lt;OrderItem&gt;&gt; orderItemMap =orderItemList.stream()</span><br><span class="line">            .collect(Collectors.groupingBy(OrderItem::getOrderNo));</span><br><span class="line"></span><br><span class="line">    Set&lt;Integer&gt; shippingIdSet = orderList.stream()</span><br><span class="line">            .map(Order::getShippingId)</span><br><span class="line">            .collect(Collectors.toSet());</span><br><span class="line">    List&lt;Shipping&gt; shippingList = shippingMapper.selectByIdSet(shippingIdSet);</span><br><span class="line">    Map&lt;Integer,Shipping&gt; shippingMap = shippingList.stream()</span><br><span class="line">            .collect(Collectors.toMap(Shipping::getId,shipping-&gt;shipping));</span><br><span class="line"></span><br><span class="line">    List&lt;OrderVo&gt; orderVoList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (Order order : orderList) &#123;</span><br><span class="line">        <span class="type">OrderVo</span> <span class="variable">orderVo</span> <span class="operator">=</span> buildOrderVo(order,</span><br><span class="line">                orderItemMap.get(order.getOrderNo()),</span><br><span class="line">                shippingMap.get(order.getShippingId()));</span><br><span class="line">        orderVoList.add(orderVo);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">PageInfo</span> <span class="variable">pageInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PageInfo</span>(orderList);</span><br><span class="line">    pageInfo.setList(orderVoList);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ResponseVo.success(pageInfo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>在OrderMapper中写方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Order&gt; <span class="title function_">selectByUid</span><span class="params">(Integer uid)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByUid&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.Integer&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">  select</span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;Base_Column_List&quot;</span> /&gt;</span></span><br><span class="line">  from mall_order</span><br><span class="line">  where user_id = #&#123;uid,jdbcType=INTEGER&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>在OrderItemMapper中写方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;OrderItem&gt; <span class="title function_">selectByOrderNoSet</span><span class="params">(<span class="meta">@Param(&quot;orderNoSet&quot;)</span>Set orderNoSet)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByOrderNoSet&quot;</span>  <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">  select</span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;Base_Column_List&quot;</span> /&gt;</span></span><br><span class="line">  from mall_order_item</span><br><span class="line">  <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;orderNoSet.size() &gt; 0&quot;</span>&gt;</span></span><br><span class="line">      order_no in</span><br><span class="line">      <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;orderNoSet&quot;</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">index</span>=<span class="string">&quot;index&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">        #&#123;item&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="5"><li>在ShippingMapper中写方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Shipping&gt; <span class="title function_">selectByIdSet</span><span class="params">(<span class="meta">@Param(&quot;idSet&quot;)</span>Set idSet)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByIdSet&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">  select</span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;Base_Column_List&quot;</span> /&gt;</span></span><br><span class="line">  from mall_shipping</span><br><span class="line">  <span class="tag">&lt;<span class="name">where</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">&quot;idSet.size() &gt; 0&quot;</span>&gt;</span></span><br><span class="line">      id in</span><br><span class="line">      <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">collection</span>=<span class="string">&quot;idSet&quot;</span> <span class="attr">item</span>=<span class="string">&quot;item&quot;</span> <span class="attr">index</span>=<span class="string">&quot;index&quot;</span> <span class="attr">open</span>=<span class="string">&quot;(&quot;</span> <span class="attr">separator</span>=<span class="string">&quot;,&quot;</span> <span class="attr">close</span>=<span class="string">&quot;)&quot;</span>&gt;</span></span><br><span class="line">        #&#123;item&#125;</span><br><span class="line">      <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">where</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="9、订单详情"><a href="#9、订单详情" class="headerlink" title="9、订单详情"></a>9、订单详情</h2><ol><li>实现方法detail</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo&lt;OrderVo&gt; <span class="title function_">detail</span><span class="params">(Integer uid, Long orderNo)</span> &#123;</span><br><span class="line">    <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> orderMapper.selectByOrderNo(orderNo);</span><br><span class="line">    <span class="keyword">if</span> (order == <span class="literal">null</span> || !order.getUserId().equals(uid))&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ResponseEnum.ORDER_NOT_EXIST);</span><br><span class="line">    &#125;</span><br><span class="line">    Set&lt;Long&gt; orderNoSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">    orderNoSet.add(order.getOrderNo());</span><br><span class="line">    List&lt;OrderItem&gt; orderItemList = orderItemMapper.selectByOrderNoSet(orderNoSet);</span><br><span class="line"></span><br><span class="line">    <span class="type">Shipping</span> <span class="variable">shipping</span> <span class="operator">=</span> shippingMapper.selectByPrimaryKey(order.getShippingId());</span><br><span class="line">    <span class="type">OrderVo</span> <span class="variable">orderVo</span> <span class="operator">=</span> buildOrderVo(order,orderItemList,shipping);</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.success(orderVo);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>OrderMapper新建查询方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Order <span class="title function_">selectByOrderNo</span><span class="params">(Long orderNo)</span>;</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectByOrderNo&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;java.lang.Long&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">  select</span><br><span class="line">  <span class="tag">&lt;<span class="name">include</span> <span class="attr">refid</span>=<span class="string">&quot;Base_Column_List&quot;</span> /&gt;</span></span><br><span class="line">  from mall_order</span><br><span class="line">  where order_no = #&#123;orderNo,jdbcType=INTEGER&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>在ResponseEnum定义枚举</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ORDER_NOT_EXIST(<span class="number">19</span>,<span class="string">&quot;订单不存在&quot;</span>),</span><br></pre></td></tr></table></figure><h2 id="10、取消订单"><a href="#10、取消订单" class="headerlink" title="10、取消订单"></a>10、取消订单</h2><ol><li>在IOrderService中定义取消接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ResponseVo <span class="title function_">cancel</span><span class="params">(Integer uid,Long orderNo)</span>;</span><br></pre></td></tr></table></figure><ol start="2"><li>实现取消接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> ResponseVo <span class="title function_">cancel</span><span class="params">(Integer uid, Long orderNo)</span> &#123;</span><br><span class="line">    <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> orderMapper.selectByOrderNo(orderNo);</span><br><span class="line">    <span class="keyword">if</span> (order == <span class="literal">null</span> || !order.getUserId().equals(uid))&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ResponseEnum.ORDER_NOT_EXIST);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//只有【未付款】订单可以取消，看自己公司业务</span></span><br><span class="line">    <span class="keyword">if</span> (!order.getStatus().equals(OrderStatusEnum.NO_PAY.getCode()))&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ResponseEnum.ORDER_STATUS_ERROR);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    order.setStatus(OrderStatusEnum.CANCELED.getCode());</span><br><span class="line">    order.setCloseTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    <span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> orderMapper.updateByPrimaryKeySelective(order);</span><br><span class="line">    <span class="keyword">if</span> (row &lt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> ResponseVo.error(ResponseEnum.ERROR)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ResponseVo.success();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>在ResponseEnum定义枚举</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ORDER_STATUS_ERROR(<span class="number">20</span>,<span class="string">&quot;订单状态有误&quot;</span>),</span><br></pre></td></tr></table></figure><h2 id="11、OrderController"><a href="#11、OrderController" class="headerlink" title="11、OrderController"></a>11、OrderController</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.github.pagehelper.PageInfo;</span><br><span class="line"><span class="keyword">import</span> com.mall.consts.MallConst;</span><br><span class="line"><span class="keyword">import</span> com.mall.form.OrderCreateForm;</span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.User;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.IOrderService;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.OrderVo;</span><br><span class="line"><span class="keyword">import</span> com.mall.vo.ResponseVo;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IOrderService orderService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping(&quot;/orders&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;OrderVo&gt; <span class="title function_">create</span><span class="params">(<span class="meta">@Valid</span> <span class="meta">@RequestBody</span> OrderCreateForm form,</span></span><br><span class="line"><span class="params">                                      HttpSession session)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User)session.getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">        <span class="keyword">return</span> orderService.create(user.getId(),form.getShippingId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(&quot;/orders&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;PageInfo&gt; <span class="title function_">list</span><span class="params">(<span class="meta">@RequestParam</span> Integer pageNum,</span></span><br><span class="line"><span class="params">                                     <span class="meta">@RequestParam</span> Integer pageSize,</span></span><br><span class="line"><span class="params">                                     HttpSession session)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User)session.getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">        <span class="keyword">return</span> orderService.list(user.getId(),pageNum,pageSize);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@GetMapping(&quot;/orders/&#123;orderNo&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo&lt;OrderVo&gt; <span class="title function_">list</span><span class="params">(<span class="meta">@PathVariable</span> Long orderNo,</span></span><br><span class="line"><span class="params">                                     HttpSession session)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User)session.getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">        <span class="keyword">return</span> orderService.detail(user.getId(),orderNo);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@PutMapping(&quot;/orders/&#123;orderNo&#125;&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> ResponseVo <span class="title function_">cancel</span><span class="params">(<span class="meta">@PathVariable</span> Long orderNo,</span></span><br><span class="line"><span class="params">                                     HttpSession session)</span>&#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> (User)session.getAttribute(MallConst.CURRENT_USER);</span><br><span class="line">        <span class="keyword">return</span> orderService.cancel(user.getId(),orderNo);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>因为create有一个入参，所以定义一个OrderCreateForm</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.form;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotNull;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">OrderCreateForm</span> &#123;</span><br><span class="line">    <span class="meta">@NotNull</span></span><br><span class="line">    <span class="keyword">private</span> Integer shippingId;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="12、RabbitMQ的安装"><a href="#12、RabbitMQ的安装" class="headerlink" title="12、RabbitMQ的安装"></a>12、RabbitMQ的安装</h2><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p <span class="number">5672</span>:<span class="number">5672</span> -p <span class="number">15672</span>:<span class="number">15672</span> registry.cn-shanghai.aliyuncs.com/springcloud-imooc/rabbitmq:<span class="number">3</span>.<span class="number">8</span>.<span class="number">2</span>-management</span><br></pre></td></tr></table></figure><h2 id="13、mq消息-发送-amp-接受"><a href="#13、mq消息-发送-amp-接受" class="headerlink" title="13、mq消息-发送&amp;接受"></a>13、mq消息-发送&amp;接受</h2><ol><li>首先说发送端pay，先在pom.xml中导入依赖</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-amqp<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>在application.yml中进行配置</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rabbitmq:</span></span><br><span class="line">  <span class="attr">addresses:</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">  <span class="attr">port:</span> <span class="number">5672</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">guest</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">guest</span></span><br></pre></td></tr></table></figure><ol start="3"><li>测试发送</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pay;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.junit.runner.RunWith;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.AmqpTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.test.context.SpringBootTest;</span><br><span class="line"><span class="keyword">import</span> org.springframework.test.context.junit4.SpringRunner;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RunWith(SpringRunner.class)</span></span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PayApplicationTests</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AmqpTemplate amqpTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">sendMQMsg</span><span class="params">()</span> &#123;</span><br><span class="line">        amqpTemplate.convertAndSend(<span class="string">&quot;payNotify&quot;</span>,<span class="string">&quot;hello&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>接收端前两步骤一样，创建PayMsgListener类专门接收参数</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.listener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.annotation.RabbitHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@RabbitListener(queues = &quot;payNotify&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PayMsgListener</span> &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@RabbitHandler</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">process</span><span class="params">(String msg)</span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;[接收到消息]=&gt;&#123;&#125;&quot;</span>,msg);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="14、完成支付和订单对接"><a href="#14、完成支付和订单对接" class="headerlink" title="14、完成支付和订单对接"></a>14、完成支付和订单对接</h2><ol><li>首先在pay系统的PayServiceImpl的asyncNotify方法里倒数第二部添加TODO</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.pay.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.config.WxPayConfig;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.enums.BestPayPlatformEnum;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.enums.BestPayTypeEnum;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.enums.OrderStatusEnum;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.model.PayRequest;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.model.PayResponse;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.service.BestPayService;</span><br><span class="line"><span class="keyword">import</span> com.lly835.bestpay.service.impl.BestPayServiceImpl;</span><br><span class="line"><span class="keyword">import</span> com.pay.dao.PayInfoMapper;</span><br><span class="line"><span class="keyword">import</span> com.pay.enums.PayPlatformEnum;</span><br><span class="line"><span class="keyword">import</span> com.pay.pojo.PayInfo;</span><br><span class="line"><span class="keyword">import</span> com.pay.service.IPayService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.core.AmqpTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.math.BigDecimal;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PayServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">IPayService</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BestPayService bestPayService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> PayInfoMapper payInfoMapper;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AmqpTemplate amqpTemplate;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> PayResponse <span class="title function_">create</span><span class="params">(String orderId, BigDecimal amount,BestPayTypeEnum bestPayTypeEnum)</span> &#123;</span><br><span class="line">        <span class="comment">//写入数据库</span></span><br><span class="line">        <span class="type">PayInfo</span> <span class="variable">payInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PayInfo</span>(Long.parseLong(orderId),</span><br><span class="line">                PayPlatformEnum.getByBestPayTypeEnum(bestPayTypeEnum).getCode(),</span><br><span class="line">                OrderStatusEnum.NOTPAY.name(),</span><br><span class="line">                amount);</span><br><span class="line">        payInfoMapper.insertSelective(payInfo);</span><br><span class="line"></span><br><span class="line">        <span class="type">PayRequest</span> <span class="variable">request</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">PayRequest</span>();</span><br><span class="line">        request.setOrderName(<span class="string">&quot;asdasd&quot;</span>);</span><br><span class="line">        request.setOrderId(<span class="string">&quot;orderId&quot;</span>);</span><br><span class="line">        request.setOrderAmount(amount.doubleValue());</span><br><span class="line">        request.setPayTypeEnum(bestPayTypeEnum);</span><br><span class="line">        <span class="type">PayResponse</span> <span class="variable">response</span> <span class="operator">=</span> bestPayService.pay(request);</span><br><span class="line">        log.info(<span class="string">&quot;发起支付response=&#123;&#125;&quot;</span>,response);</span><br><span class="line">        <span class="keyword">return</span> response;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">asyncNotify</span><span class="params">(String notifyData)</span> &#123;</span><br><span class="line">        <span class="comment">//1.签名校验</span></span><br><span class="line">        <span class="type">PayResponse</span> <span class="variable">payResponse</span> <span class="operator">=</span> bestPayService.asyncNotify(notifyData);</span><br><span class="line">        log.info(<span class="string">&quot;异步通知payResponse=&#123;&#125;&quot;</span>,payResponse);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//2.金额校验（从数据库查订单）</span></span><br><span class="line">        <span class="comment">//比较严重（正常情况下是不会发生的）发出警告：钉钉、短信</span></span><br><span class="line">        <span class="type">PayInfo</span> <span class="variable">payInfo</span> <span class="operator">=</span> payInfoMapper.selectByOrderNo(Long.parseLong(payResponse.getOrderId()));</span><br><span class="line">        <span class="keyword">if</span> (payInfo == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;通过orderNo查询到的结果是null&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果订单支付状态不是“已支付”</span></span><br><span class="line">        <span class="keyword">if</span> (!payInfo.getPlatformStatus().equals(OrderStatusEnum.SUCCESS.name()))&#123;</span><br><span class="line">            <span class="keyword">if</span> (payInfo.getPayAmount().compareTo(BigDecimal.valueOf(payResponse.getOrderAmount()))!=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;异步通知中的金额和数据库里的不一致，orderNo=&quot;</span>+ payResponse.getOrderId());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//3.修改订单支付状态</span></span><br><span class="line">            payInfo.setPlatformStatus(OrderStatusEnum.SUCCESS.name());</span><br><span class="line">            payInfo.setPlatformNumber(payResponse.getOutTradeNo());</span><br><span class="line">            payInfo.setUpdateTime(<span class="literal">null</span>);</span><br><span class="line">            payInfoMapper.updateByPrimaryKeySelective(payInfo);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//TODO pay发送MQ消息,Mall接收MQ消息</span></span><br><span class="line">        amqpTemplate.convertAndSend(<span class="string">&quot;payNotify&quot;</span>,<span class="keyword">new</span> <span class="title class_">Gson</span>().toJson(payInfo));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (payResponse.getPayPlatformEnum() == BestPayPlatformEnum.WX)&#123;</span><br><span class="line">            <span class="comment">//4.告诉微信不要在通知了</span></span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&lt;xml&gt;\n&quot;</span>+</span><br><span class="line">                    <span class="string">&quot;&lt;return_code&gt;&lt;![CDATA[SUCCESS]]&lt;/return_code&gt;\n&quot;</span>+</span><br><span class="line">                    <span class="string">&quot;&lt;return_msg&gt;&lt;![CDATA[OK]]&lt;/return_msg&gt;\n&quot;</span>+</span><br><span class="line">                    <span class="string">&quot;&lt;/xml&gt;&quot;</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (payResponse.getPayPlatformEnum() == BestPayPlatformEnum.ALIPAY)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;success&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;异步通知中错误的支付平台&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> PayInfo <span class="title function_">queryByOrderId</span><span class="params">(String orderId)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span>  payInfoMapper.selectByOrderNo(Long.parseLong(orderId));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在接收端PayMsgListener进行修改</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.mall.listener;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.google.gson.Gson;</span><br><span class="line"><span class="keyword">import</span> com.mall.pojo.PayInfo;</span><br><span class="line"><span class="keyword">import</span> com.mall.service.IOrderService;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.annotation.RabbitHandler;</span><br><span class="line"><span class="keyword">import</span> org.springframework.amqp.rabbit.annotation.RabbitListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 关于PayInfo，正确姿势：pay项目提供client.jar，mall项目引入jar包</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@RabbitListener(queues = &quot;payNotify&quot;)</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PayMsgListener</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> IOrderService orderService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RabbitHandler</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">process</span><span class="params">(String msg)</span>&#123;</span><br><span class="line">        log.info(<span class="string">&quot;[接收到消息]=&gt;&#123;&#125;&quot;</span>,msg);</span><br><span class="line">        <span class="type">PayInfo</span> <span class="variable">payInfo</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Gson</span>().fromJson(msg,PayInfo.class);</span><br><span class="line">        <span class="keyword">if</span> (payInfo.getPlatformStatus().equals(<span class="string">&quot;SUCCESS&quot;</span>))&#123;</span><br><span class="line">            <span class="comment">//修改订单里的状态</span></span><br><span class="line">            orderService.paid(payInfo.getOrderNo());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>在IOrderService定义更改订单状态的方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">void</span> <span class="title function_">paid</span><span class="params">(Long orderNo)</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li>实现方法</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">paid</span><span class="params">(Long orderNo)</span> &#123;</span><br><span class="line">    <span class="type">Order</span> <span class="variable">order</span> <span class="operator">=</span> orderMapper.selectByOrderNo(orderNo);</span><br><span class="line">    <span class="keyword">if</span> (order == <span class="literal">null</span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(ResponseEnum.ORDER_NOT_EXIST.getDesc()+<span class="string">&quot;订单id&quot;</span>+ orderNo);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//只有【未付款】订单可以变成【已付款】，看自己公司业务</span></span><br><span class="line">    <span class="keyword">if</span> (!order.getStatus().equals(OrderStatusEnum.NO_PAY.getCode()))&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(ResponseEnum.ORDER_STATUS_ERROR.getDesc()+<span class="string">&quot;订单id&quot;</span>+ orderNo);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    order.setStatus(OrderStatusEnum.PAID.getCode());</span><br><span class="line">    order.setPaymentTime(<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">    <span class="type">int</span> <span class="variable">row</span> <span class="operator">=</span> orderMapper.updateByPrimaryKeySelective(order);</span><br><span class="line">    <span class="keyword">if</span> (row &lt;=<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(<span class="string">&quot;将订单更新成已支付状态失败，订单id:&quot;</span>+ orderNo);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="十、部署发布交付成果"><a href="#十、部署发布交付成果" class="headerlink" title="十、部署发布交付成果"></a>十、部署发布交付成果</h1><ul><li>按量购买</li><li>MAC终端连接远程：ssh root@ip号</li><li>将前端代码部署到Nginx</li></ul><h1 id="十一、对应的api"><a href="#十一、对应的api" class="headerlink" title="十一、对应的api"></a>十一、对应的api</h1><h2 id="1、用户"><a href="#1、用户" class="headerlink" title="1、用户"></a>1、用户</h2><h4 id="1-登录"><a href="#1-登录" class="headerlink" title="1.登录"></a>1.登录</h4><p><strong>POST &#x2F;user&#x2F;login</strong></p><blockquote><p>request</p></blockquote><p>Content-Type: application&#x2F;json</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;username&quot;:&quot;admin&quot;,</span><br><span class="line">&quot;password&quot;:&quot;admin&quot;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>fail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 1,</span><br><span class="line">    &quot;msg&quot;: &quot;密码错误&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 0,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;id&quot;: 12,</span><br><span class="line">        &quot;username&quot;: &quot;aaa&quot;,</span><br><span class="line">        &quot;email&quot;: &quot;aaa@163.com&quot;,</span><br><span class="line">        &quot;phone&quot;: null,</span><br><span class="line">        &quot;role&quot;: 0,</span><br><span class="line">        &quot;createTime&quot;: 1479048325000,</span><br><span class="line">        &quot;updateTime&quot;: 1479048325000</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="2-注册"><a href="#2-注册" class="headerlink" title="2.注册"></a>2.注册</h4><p><strong>POST &#x2F;user&#x2F;register</strong></p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;username&quot;:&quot;admin&quot;,</span><br><span class="line">&quot;password&quot;:&quot;admin&quot;,</span><br><span class="line">&quot;email&quot;:&quot;admin@qq.com&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 0,</span><br><span class="line">    &quot;msg&quot;: &quot;校验成功&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 2,</span><br><span class="line">    &quot;msg&quot;: &quot;用户已存在&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-获取登录用户信息"><a href="#3-获取登录用户信息" class="headerlink" title="3.获取登录用户信息"></a>3.获取登录用户信息</h4><p><strong>GET &#x2F;user</strong></p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无参数</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 0,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;id&quot;: 12,</span><br><span class="line">        &quot;username&quot;: &quot;aaa&quot;,</span><br><span class="line">        &quot;email&quot;: &quot;aaa@163.com&quot;,</span><br><span class="line">        &quot;phone&quot;: null,</span><br><span class="line">        &quot;role&quot;: 0,</span><br><span class="line">        &quot;createTime&quot;: 1479048325000,</span><br><span class="line">        &quot;updateTime&quot;: 1479048325000</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 10,</span><br><span class="line">    &quot;msg&quot;: &quot;用户未登录,无法获取当前用户信息&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h4 id="4-退出登录"><a href="#4-退出登录" class="headerlink" title="4.退出登录"></a>4.退出登录</h4><p>**POST &#x2F;user&#x2F;logout</p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 0,</span><br><span class="line">    &quot;msg&quot;: &quot;退出成功&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: -1,</span><br><span class="line">    &quot;msg&quot;: &quot;服务端异常&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2、收货地址"><a href="#2、收货地址" class="headerlink" title="2、收货地址"></a>2、收货地址</h2><h4 id="1-添加地址"><a href="#1-添加地址" class="headerlink" title="1.添加地址"></a>1.添加地址</h4><p>** POST &#x2F;shippings</p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">receiverName=廖师兄</span><br><span class="line">receiverPhone=010</span><br><span class="line">receiverMobile=18688888888</span><br><span class="line">receiverProvince=北京</span><br><span class="line">receiverCity=北京市</span><br><span class="line">receiverDistrict=海淀区</span><br><span class="line">receiverAddress=中关村</span><br><span class="line">receiverZip=100000</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 0,</span><br><span class="line">    &quot;msg&quot;: &quot;新建地址成功&quot;,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;shippingId&quot;: 28</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 1,</span><br><span class="line">    &quot;msg&quot;: &quot;新建地址失败&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="2-删除地址"><a href="#2-删除地址" class="headerlink" title="2.删除地址"></a>2.删除地址</h4><p>**DELETE &#x2F;shippings&#x2F;{shippingId}</p><p>DELETE &#x2F;shippings&#x2F;28</p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shippingId</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 0,</span><br><span class="line">    &quot;msg&quot;: &quot;删除地址成功&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 1,</span><br><span class="line">    &quot;msg&quot;: &quot;删除地址失败&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="3-更新地址"><a href="#3-更新地址" class="headerlink" title="3.更新地址"></a>3.更新地址</h4><p>**PUT &#x2F;shippings&#x2F;{shippingId}</p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">receiverName=廖师兄</span><br><span class="line">receiverPhone=010</span><br><span class="line">receiverMobile=18688888888</span><br><span class="line">receiverProvince=北京</span><br><span class="line">receiverCity=北京市</span><br><span class="line">receiverDistrict=海淀区</span><br><span class="line">receiverAddress=中关村</span><br><span class="line">receiverZip=100000</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 0,</span><br><span class="line">    &quot;msg&quot;: &quot;更新地址成功&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 1,</span><br><span class="line">    &quot;msg&quot;: &quot;更新地址失败&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p>####4.地址列表</p><p><strong>GET &#x2F;shippings</strong></p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pageNum(默认1),pageSize(默认10)</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 0,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;pageNum&quot;: 1,</span><br><span class="line">        &quot;pageSize&quot;: 10,</span><br><span class="line">        &quot;size&quot;: 2,</span><br><span class="line">        &quot;orderBy&quot;: null,</span><br><span class="line">        &quot;startRow&quot;: 1,</span><br><span class="line">        &quot;endRow&quot;: 2,</span><br><span class="line">        &quot;total&quot;: 2,</span><br><span class="line">        &quot;pages&quot;: 1,</span><br><span class="line">        &quot;list&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 4,</span><br><span class="line">                &quot;userId&quot;: 13,</span><br><span class="line">                &quot;receiverName&quot;: &quot;廖师兄&quot;,</span><br><span class="line">                &quot;receiverPhone&quot;: &quot;010&quot;,</span><br><span class="line">                &quot;receiverMobile&quot;: &quot;18688888888&quot;,</span><br><span class="line">                &quot;receiverProvince&quot;: &quot;北京&quot;,</span><br><span class="line">                &quot;receiverCity&quot;: &quot;北京市&quot;,</span><br><span class="line">                &quot;receiverDistrict&quot;: &quot;海淀区&quot;,</span><br><span class="line">                &quot;receiverAddress&quot;: &quot;中关村&quot;,</span><br><span class="line">                &quot;receiverZip&quot;: &quot;100000&quot;,</span><br><span class="line">                &quot;createTime&quot;: 1485066385000,</span><br><span class="line">                &quot;updateTime&quot;: 1485066385000</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 5,</span><br><span class="line">                &quot;userId&quot;: 13,</span><br><span class="line">                &quot;receiverName&quot;: &quot;廖师兄&quot;,</span><br><span class="line">                &quot;receiverPhone&quot;: &quot;010&quot;,</span><br><span class="line">                &quot;receiverMobile&quot;: &quot;18688888888&quot;,</span><br><span class="line">                &quot;receiverProvince&quot;: &quot;北京&quot;,</span><br><span class="line">                &quot;receiverCity&quot;: &quot;北京市&quot;,</span><br><span class="line">                &quot;receiverDistrict&quot;: &quot;海淀区&quot;,</span><br><span class="line">                &quot;receiverAddress&quot;: &quot;中关村&quot;,</span><br><span class="line">                &quot;receiverZip&quot;: &quot;100000&quot;,</span><br><span class="line">                &quot;createTime&quot;: 1485066392000,</span><br><span class="line">                &quot;updateTime&quot;: 1485075875000</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;firstPage&quot;: 1,</span><br><span class="line">        &quot;prePage&quot;: 0,</span><br><span class="line">        &quot;nextPage&quot;: 0,</span><br><span class="line">        &quot;lastPage&quot;: 1,</span><br><span class="line">        &quot;isFirstPage&quot;: true,</span><br><span class="line">        &quot;isLastPage&quot;: true,</span><br><span class="line">        &quot;hasPreviousPage&quot;: false,</span><br><span class="line">        &quot;hasNextPage&quot;: false,</span><br><span class="line">        &quot;navigatePages&quot;: 8,</span><br><span class="line">        &quot;navigatepageNums&quot;: [</span><br><span class="line">            1</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 1,</span><br><span class="line">    &quot;msg&quot;: &quot;请登录之后查询&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3、商品"><a href="#3、商品" class="headerlink" title="3、商品"></a>3、商品</h2><h4 id="1-商品列表"><a href="#1-商品列表" class="headerlink" title="1.商品列表"></a>1.商品列表</h4><p>**GET &#x2F;products</p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">categoryId(非必传，子类目的商品也要查出来)</span><br><span class="line">pageNum(default=1)</span><br><span class="line">pageSize(default=10)</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 0,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;pageNum&quot;: 1,</span><br><span class="line">        &quot;pageSize&quot;: 10,</span><br><span class="line">        &quot;size&quot;: 2,</span><br><span class="line">        &quot;orderBy&quot;: null,</span><br><span class="line">        &quot;startRow&quot;: 1,</span><br><span class="line">        &quot;endRow&quot;: 2,</span><br><span class="line">        &quot;total&quot;: 2,</span><br><span class="line">        &quot;pages&quot;: 1,</span><br><span class="line">        &quot;list&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 1,</span><br><span class="line">                &quot;categoryId&quot;: 3,</span><br><span class="line">                &quot;name&quot;: &quot;iphone7&quot;,</span><br><span class="line">                &quot;subtitle&quot;: &quot;双十一促销&quot;,</span><br><span class="line">                &quot;mainImage&quot;: &quot;mainimage.jpg&quot;,</span><br><span class="line">                &quot;status&quot;:1,</span><br><span class="line">                &quot;price&quot;: 7199.22</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;id&quot;: 2,</span><br><span class="line">                &quot;categoryId&quot;: 2,</span><br><span class="line">                &quot;name&quot;: &quot;oppo R8&quot;,</span><br><span class="line">                &quot;subtitle&quot;: &quot;oppo促销进行中&quot;,</span><br><span class="line">                &quot;mainImage&quot;: &quot;mainimage.jpg&quot;,</span><br><span class="line">                &quot;status&quot;:1,</span><br><span class="line">                &quot;price&quot;: 2999.11</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;firstPage&quot;: 1,</span><br><span class="line">        &quot;prePage&quot;: 0,</span><br><span class="line">        &quot;nextPage&quot;: 0,</span><br><span class="line">        &quot;lastPage&quot;: 1,</span><br><span class="line">        &quot;isFirstPage&quot;: true,</span><br><span class="line">        &quot;isLastPage&quot;: true,</span><br><span class="line">        &quot;hasPreviousPage&quot;: false,</span><br><span class="line">        &quot;hasNextPage&quot;: false,</span><br><span class="line">        &quot;navigatePages&quot;: 8,</span><br><span class="line">        &quot;navigatepageNums&quot;: [</span><br><span class="line">            1</span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="2-商品详情"><a href="#2-商品详情" class="headerlink" title="2.商品详情"></a>2.商品详情</h4><p>**GET &#x2F;products&#x2F;{productId}</p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">productId</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: 0,</span><br><span class="line">  &quot;data&quot;: &#123;</span><br><span class="line">    &quot;id&quot;: 2,</span><br><span class="line">    &quot;categoryId&quot;: 2,</span><br><span class="line">    &quot;name&quot;: &quot;oppo R8&quot;,</span><br><span class="line">    &quot;subtitle&quot;: &quot;oppo促销进行中&quot;,</span><br><span class="line">    &quot;mainImage&quot;: &quot;mainimage.jpg&quot;,</span><br><span class="line">    &quot;subImages&quot;: &quot;[\&quot;mmall/aa.jpg\&quot;,\&quot;mmall/bb.jpg\&quot;,\&quot;mmall/cc.jpg\&quot;,\&quot;mmall/dd.jpg\&quot;,\&quot;mmall/ee.jpg\&quot;]&quot;,</span><br><span class="line">    &quot;detail&quot;: &quot;richtext&quot;,</span><br><span class="line">    &quot;price&quot;: 2999.11,</span><br><span class="line">    &quot;stock&quot;: 71,</span><br><span class="line">    &quot;status&quot;: 1,</span><br><span class="line">    &quot;createTime&quot;: &quot;2016-11-20 14:21:53&quot;,</span><br><span class="line">    &quot;updateTime&quot;: &quot;2016-11-20 14:21:53&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>fail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 1,</span><br><span class="line">    &quot;msg&quot;: &quot;该商品已下架或删除&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4、类目"><a href="#4、类目" class="headerlink" title="4、类目"></a>4、类目</h2><h4 id="1-所有类目"><a href="#1-所有类目" class="headerlink" title="1.所有类目"></a>1.所有类目</h4><p><strong>GET &#x2F;categories</strong></p><blockquote><p>request</p></blockquote><p>无需登录</p><blockquote><p>response</p></blockquote><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 0,</span><br><span class="line">    &quot;data&quot;: [&#123;</span><br><span class="line">        &quot;id&quot;: 100001,</span><br><span class="line">        &quot;parentId&quot;: 0,</span><br><span class="line">        &quot;name&quot;: &quot;家用电器&quot;,</span><br><span class="line">        &quot;sortOrder&quot;: 1,</span><br><span class="line">        &quot;subCategories&quot;: [&#123;</span><br><span class="line">            &quot;id&quot;: 100006,</span><br><span class="line">            &quot;parentId&quot;: 100001,</span><br><span class="line">            &quot;name&quot;: &quot;冰箱&quot;,</span><br><span class="line">            &quot;sortOrder&quot;: 2,</span><br><span class="line">            &quot;subCategories&quot;: [&#123;</span><br><span class="line">                &quot;id&quot;: 100040,</span><br><span class="line">                &quot;parentId&quot;: 100006,</span><br><span class="line">                &quot;name&quot;: &quot;进口冰箱&quot;,</span><br><span class="line">                &quot;sortOrder&quot;: 1,</span><br><span class="line">                &quot;subCategories&quot;: []</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;,  &#123;</span><br><span class="line">        &quot;id&quot;: 100005,</span><br><span class="line">        &quot;parentId&quot;: 0,</span><br><span class="line">        &quot;name&quot;: &quot;酒水饮料&quot;,</span><br><span class="line">        &quot;sortOrder&quot;: 1,</span><br><span class="line">        &quot;subCategories&quot;: [&#123;</span><br><span class="line">            &quot;id&quot;: 100026,</span><br><span class="line">            &quot;parentId&quot;: 100005,</span><br><span class="line">            &quot;name&quot;: &quot;白酒&quot;,</span><br><span class="line">            &quot;sortOrder&quot;: 1,</span><br><span class="line">            &quot;subCategories&quot;: []</span><br><span class="line">        &#125;, &#123;</span><br><span class="line">            &quot;id&quot;: 100027,</span><br><span class="line">            &quot;parentId&quot;: 100005,</span><br><span class="line">            &quot;name&quot;: &quot;红酒&quot;,</span><br><span class="line">            &quot;sortOrder&quot;: 1,</span><br><span class="line">            &quot;subCategories&quot;: []</span><br><span class="line">        &#125;]</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5、购物车"><a href="#5、购物车" class="headerlink" title="5、购物车"></a>5、购物车</h2><h4 id="1-购物车List列表"><a href="#1-购物车List列表" class="headerlink" title="1.购物车List列表"></a>1.购物车List列表</h4><p>** GET &#x2F;carts</p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无参数,需要登录状态</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 0,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;cartProductVoList&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;productId&quot;: 1,</span><br><span class="line">                &quot;quantity&quot;: 1,</span><br><span class="line">                &quot;productName&quot;: &quot;iphone7&quot;,</span><br><span class="line">                &quot;productSubtitle&quot;: &quot;双十一促销&quot;,</span><br><span class="line">                &quot;productMainImage&quot;: &quot;mainimage.jpg&quot;,</span><br><span class="line">                &quot;productPrice&quot;: 7199.22,</span><br><span class="line">                &quot;productStatus&quot;: 1,</span><br><span class="line">                &quot;productTotalPrice&quot;: 7199.22,</span><br><span class="line">                &quot;productStock&quot;: 86,</span><br><span class="line">                &quot;productSelected&quot;: true,</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;productId&quot;: 2,</span><br><span class="line">                &quot;quantity&quot;: 1,</span><br><span class="line">                &quot;productName&quot;: &quot;oppo R8&quot;,</span><br><span class="line">                &quot;productSubtitle&quot;: &quot;oppo促销进行中&quot;,</span><br><span class="line">                &quot;productMainImage&quot;: &quot;mainimage.jpg&quot;,</span><br><span class="line">                &quot;productPrice&quot;: 2999.11,</span><br><span class="line">                &quot;productStatus&quot;: 1,</span><br><span class="line">                &quot;productTotalPrice&quot;: 2999.11,</span><br><span class="line">                &quot;productStock&quot;: 86,</span><br><span class="line">                &quot;productSelected&quot;: false,</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;selectedAll&quot;: false,</span><br><span class="line">        &quot;cartTotalPrice&quot;: 10198.33,</span><br><span class="line">        &quot;cartTotalQuantity&quot;: 2</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>fail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 10,</span><br><span class="line">    &quot;msg&quot;: &quot;用户未登录,请登录&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="2-购物车添加商品"><a href="#2-购物车添加商品" class="headerlink" title="2.购物车添加商品"></a>2.购物车添加商品</h4><p>** POST &#x2F;carts</p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">productId</span><br><span class="line">selected: true</span><br></pre></td></tr></table></figure><p><code>注意</code>数量不用传，添加商品永远是以1累加</p><blockquote><p>response</p></blockquote><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 0,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;cartProductVoList&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;productId&quot;: 1,</span><br><span class="line">                &quot;quantity&quot;: 12,</span><br><span class="line">                &quot;productName&quot;: &quot;iphone7&quot;,</span><br><span class="line">                &quot;productSubtitle&quot;: &quot;双十一促销&quot;,</span><br><span class="line">                &quot;productMainImage&quot;: &quot;mainimage.jpg&quot;,</span><br><span class="line">                &quot;productPrice&quot;: 7199.22,</span><br><span class="line">                &quot;productStatus&quot;: 1,</span><br><span class="line">                &quot;productTotalPrice&quot;: 86390.64,</span><br><span class="line">                &quot;productStock&quot;: 86,</span><br><span class="line">                &quot;productSelected&quot;: true</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;productId&quot;: 2,</span><br><span class="line">                &quot;quantity&quot;: 1,</span><br><span class="line">                &quot;productName&quot;: &quot;oppo R8&quot;,</span><br><span class="line">                &quot;productSubtitle&quot;: &quot;oppo促销进行中&quot;,</span><br><span class="line">                &quot;productMainImage&quot;: &quot;mainimage.jpg&quot;,</span><br><span class="line">                &quot;productPrice&quot;: 2999.11,</span><br><span class="line">                &quot;productStatus&quot;: 1,</span><br><span class="line">                &quot;productTotalPrice&quot;: 2999.11,</span><br><span class="line">                &quot;productStock&quot;: 86,</span><br><span class="line">                &quot;productSelected&quot;: true</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;selectedAll&quot;: true,</span><br><span class="line">        &quot;cartTotalPrice&quot;: 89389.75,</span><br><span class="line">        &quot;cartTotalQuantity&quot;: 13</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 10,</span><br><span class="line">    &quot;msg&quot;: &quot;用户未登录,请登录&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="3-更新购物车"><a href="#3-更新购物车" class="headerlink" title="3.更新购物车"></a>3.更新购物车</h4><p>** PUT &#x2F;carts&#x2F;{productId}</p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">quantity //非必填</span><br><span class="line">selected: true //非必填</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>响应同2</p><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 0,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;cartProductVoList&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;productId&quot;: 1,</span><br><span class="line">                &quot;quantity&quot;: 12,</span><br><span class="line">                &quot;productName&quot;: &quot;iphone7&quot;,</span><br><span class="line">                &quot;productSubtitle&quot;: &quot;双十一促销&quot;,</span><br><span class="line">                &quot;productMainImage&quot;: &quot;mainimage.jpg&quot;,</span><br><span class="line">                &quot;productPrice&quot;: 7199.22,</span><br><span class="line">                &quot;productStatus&quot;: 1,</span><br><span class="line">                &quot;productTotalPrice&quot;: 86390.64,</span><br><span class="line">                &quot;productStock&quot;: 86,</span><br><span class="line">                &quot;productSelected&quot;: true</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;productId&quot;: 2,</span><br><span class="line">                &quot;quantity&quot;: 1,</span><br><span class="line">                &quot;productName&quot;: &quot;oppo R8&quot;,</span><br><span class="line">                &quot;productSubtitle&quot;: &quot;oppo促销进行中&quot;,</span><br><span class="line">                &quot;productMainImage&quot;: &quot;mainimage.jpg&quot;,</span><br><span class="line">                &quot;productPrice&quot;: 2999.11,</span><br><span class="line">                &quot;productStatus&quot;: 1,</span><br><span class="line">                &quot;productTotalPrice&quot;: 2999.11,</span><br><span class="line">                &quot;productStock&quot;: 86,</span><br><span class="line">                &quot;productSelected&quot;: true,</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;selectedAll&quot;: true,</span><br><span class="line">        &quot;cartTotalPrice&quot;: 89389.75,</span><br><span class="line">        &quot;cartTotalQuantity&quot;: 13</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 10,</span><br><span class="line">    &quot;msg&quot;: &quot;用户未登录,请登录&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="4-移除购物车某个产品"><a href="#4-移除购物车某个产品" class="headerlink" title="4.移除购物车某个产品"></a>4.移除购物车某个产品</h4><p>** DELETE &#x2F;carts&#x2F;{productId}</p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">productId</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 0,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;cartProductVoList&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;productId&quot;: 2,</span><br><span class="line">                &quot;quantity&quot;: 1,</span><br><span class="line">                &quot;productName&quot;: &quot;oppo R8&quot;,</span><br><span class="line">                &quot;productSubtitle&quot;: &quot;oppo促销进行中&quot;,</span><br><span class="line">                &quot;productMainImage&quot;: &quot;mainimage.jpg&quot;,</span><br><span class="line">                &quot;productPrice&quot;: 2999.11,</span><br><span class="line">                &quot;productStatus&quot;: 1,</span><br><span class="line">                &quot;productTotalPrice&quot;: 2999.11,</span><br><span class="line">                &quot;productStock&quot;: 86,</span><br><span class="line">                &quot;productSelected&quot;: true</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;selectedAll&quot;: true,</span><br><span class="line">        &quot;cartTotalPrice&quot;: 2999.11,</span><br><span class="line">        &quot;cartTotalQuantity&quot;: 1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 10,</span><br><span class="line">    &quot;msg&quot;: &quot;用户未登录,请登录&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="5-全选中"><a href="#5-全选中" class="headerlink" title="5.全选中"></a>5.全选中</h4><p>** PUT &#x2F;carts&#x2F;selectAll</p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无参数,需要登录状态</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>success</p><p>同接口 获取购物车列表</p><hr><h4 id="6-全不选中"><a href="#6-全不选中" class="headerlink" title="6.全不选中"></a>6.全不选中</h4><p>** PUT &#x2F;carts&#x2F;unSelectAll</p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无参数,需要登录状态</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>success</p><p>同接口 获取购物车列表</p><hr><h4 id="7-获取购物中所有商品数量总和"><a href="#7-获取购物中所有商品数量总和" class="headerlink" title="7.获取购物中所有商品数量总和"></a>7.获取购物中所有商品数量总和</h4><p>** GET &#x2F;carts&#x2F;products&#x2F;sum</p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">无参数,需要登录状态</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 0,</span><br><span class="line">    &quot;data&quot;: 2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6、订单"><a href="#6、订单" class="headerlink" title="6、订单"></a>6、订单</h2><h4 id="1-创建订单"><a href="#1-创建订单" class="headerlink" title="1.创建订单"></a>1.创建订单</h4><p>** POST &#x2F;orders</p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shippingId</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 0,</span><br><span class="line">    &quot;data&quot;: &#123;</span><br><span class="line">        &quot;orderNo&quot;: 1291136461000,</span><br><span class="line">        &quot;payment&quot;: 2999.11,</span><br><span class="line">        &quot;paymentType&quot;: 1,</span><br><span class="line">        &quot;postage&quot;: 0,</span><br><span class="line">        &quot;status&quot;: 10,</span><br><span class="line">        &quot;paymentTime&quot;: null,</span><br><span class="line">        &quot;sendTime&quot;: null,</span><br><span class="line">        &quot;endTime&quot;: null,</span><br><span class="line">        &quot;closeTime&quot;: null,</span><br><span class="line">        &quot;createTime&quot;: 1291136461000,</span><br><span class="line">        &quot;orderItemVoList&quot;: [</span><br><span class="line">            &#123;</span><br><span class="line">                &quot;orderNo&quot;: 1291136461000,</span><br><span class="line">                &quot;productId&quot;: 2,</span><br><span class="line">                &quot;productName&quot;: &quot;oppo R8&quot;,</span><br><span class="line">                &quot;productImage&quot;: &quot;mainimage.jpg&quot;,</span><br><span class="line">                &quot;currentUnitPrice&quot;: 2999.11,</span><br><span class="line">                &quot;quantity&quot;: 1,</span><br><span class="line">                &quot;totalPrice&quot;: 2999.11,</span><br><span class="line">                &quot;createTime&quot;: null</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;shippingId&quot;: 5,</span><br><span class="line">        &quot;shippingVo&quot;: &#123;</span><br><span class="line">                &quot;id&quot;: 4,</span><br><span class="line">                &quot;userId&quot;: 13,</span><br><span class="line">                &quot;receiverName&quot;: &quot;廖师兄&quot;,</span><br><span class="line">                &quot;receiverPhone&quot;: &quot;010&quot;,</span><br><span class="line">                &quot;receiverMobile&quot;: &quot;18688888888&quot;,</span><br><span class="line">                &quot;receiverProvince&quot;: &quot;北京&quot;,</span><br><span class="line">                &quot;receiverCity&quot;: &quot;北京市&quot;,</span><br><span class="line">                &quot;receiverDistrict&quot;: &quot;海淀区&quot;,</span><br><span class="line">                &quot;receiverAddress&quot;: &quot;中关村&quot;,</span><br><span class="line">                &quot;receiverZip&quot;: &quot;100000&quot;,</span><br><span class="line">                &quot;createTime&quot;: 1485066385000,</span><br><span class="line">                &quot;updateTime&quot;: 1485066385000</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;status&quot;: 1,</span><br><span class="line">    &quot;msg&quot;: &quot;创建订单失败&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="2-订单List"><a href="#2-订单List" class="headerlink" title="2.订单List"></a>2.订单List</h4><p>** GET &#x2F;orders</p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pageSize(default=10)</span><br><span class="line">pageNum(default=1)</span><br></pre></td></tr></table></figure><p>订单状态:0-已取消-10-未付款，20-已付款，40-已发货，50-交易成功，60-交易关闭</p><blockquote><p>response</p></blockquote><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: 0,</span><br><span class="line">  &quot;data&quot;: &#123;</span><br><span class="line">    &quot;pageNum&quot;: 1,</span><br><span class="line">    &quot;pageSize&quot;: 3,</span><br><span class="line">    &quot;size&quot;: 3,</span><br><span class="line">    &quot;orderBy&quot;: null,</span><br><span class="line">    &quot;startRow&quot;: 1,</span><br><span class="line">    &quot;endRow&quot;: 3,</span><br><span class="line">    &quot;total&quot;: 16,</span><br><span class="line">    &quot;pages&quot;: 6,</span><br><span class="line">    &quot;list&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;orderNo&quot;: 1291136461000,</span><br><span class="line">        &quot;payment&quot;: 2999.11,</span><br><span class="line">        &quot;paymentType&quot;: 1,</span><br><span class="line">        &quot;paymentTypeDesc&quot;: &quot;在线支付&quot;,</span><br><span class="line">        &quot;postage&quot;: 0,</span><br><span class="line">        &quot;status&quot;: 10,</span><br><span class="line">        &quot;statusDesc&quot;: &quot;未支付&quot;,</span><br><span class="line">        &quot;paymentTime&quot;: &quot;2010-02-11 12:27:18&quot;,</span><br><span class="line">        &quot;sendTime&quot;: &quot;2010-02-11 12:27:18&quot;,</span><br><span class="line">        &quot;endTime&quot;: &quot;2010-02-11 12:27:18&quot;,</span><br><span class="line">        &quot;closeTime&quot;: &quot;2010-02-11 12:27:18&quot;,</span><br><span class="line">        &quot;createTime&quot;: &quot;2010-01-23 16:04:36&quot;,</span><br><span class="line">        &quot;orderItemVoList&quot;: [</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;orderNo&quot;: 1291136461000,</span><br><span class="line">            &quot;productId&quot;: 2,</span><br><span class="line">            &quot;productName&quot;: &quot;oppo R8&quot;,</span><br><span class="line">            &quot;productImage&quot;: &quot;mainimage.jpg&quot;,</span><br><span class="line">            &quot;currentUnitPrice&quot;: 2999.11,</span><br><span class="line">            &quot;quantity&quot;: 1,</span><br><span class="line">            &quot;totalPrice&quot;: 2999.11,</span><br><span class="line">            &quot;createTime&quot;: &quot;2010-01-23 16:04:36&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;shippingId&quot;: 5,</span><br><span class="line">        &quot;receiverName&quot;: &quot;廖师兄&quot;,</span><br><span class="line">        &quot;shippingVo&quot;: null</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;orderNo&quot;: 1291136461001,</span><br><span class="line">        &quot;payment&quot;: 2999.11,</span><br><span class="line">        &quot;paymentType&quot;: 1,</span><br><span class="line">        &quot;paymentTypeDesc&quot;: &quot;在线支付&quot;,</span><br><span class="line">        &quot;postage&quot;: 0,</span><br><span class="line">        &quot;status&quot;: 10,</span><br><span class="line">        &quot;statusDesc&quot;: &quot;未支付&quot;,</span><br><span class="line">        &quot;paymentTime&quot;: &quot;2010-02-11 12:27:18&quot;,</span><br><span class="line">        &quot;sendTime&quot;: &quot;2010-02-11 12:27:18&quot;,</span><br><span class="line">        &quot;endTime&quot;: &quot;2010-02-11 12:27:18&quot;,</span><br><span class="line">        &quot;closeTime&quot;: &quot;2010-02-11 12:27:18&quot;,</span><br><span class="line">        &quot;createTime&quot;: &quot;2010-01-23 16:04:35&quot;,</span><br><span class="line">        &quot;orderItemVoList&quot;: [</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;orderNo&quot;: 1291136461001,</span><br><span class="line">            &quot;productId&quot;: 2,</span><br><span class="line">            &quot;productName&quot;: &quot;oppo R8&quot;,</span><br><span class="line">            &quot;productImage&quot;: &quot;mainimage.jpg&quot;,</span><br><span class="line">            &quot;currentUnitPrice&quot;: 2999.11,</span><br><span class="line">            &quot;quantity&quot;: 1,</span><br><span class="line">            &quot;totalPrice&quot;: 2999.11,</span><br><span class="line">            &quot;createTime&quot;: &quot;2010-01-23 16:04:35&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;shippingId&quot;: 5,</span><br><span class="line">        &quot;receiverName&quot;: &quot;廖师兄&quot;,</span><br><span class="line">        &quot;shippingVo&quot;: null</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;orderNo&quot;: 1291136461002,</span><br><span class="line">        &quot;payment&quot;: 2999.11,</span><br><span class="line">        &quot;paymentType&quot;: 1,</span><br><span class="line">        &quot;paymentTypeDesc&quot;: &quot;在线支付&quot;,</span><br><span class="line">        &quot;postage&quot;: 0,</span><br><span class="line">        &quot;status&quot;: 10,</span><br><span class="line">        &quot;statusDesc&quot;: &quot;未支付&quot;,</span><br><span class="line">        &quot;paymentTime&quot;: &quot;2010-02-11 12:27:18&quot;,</span><br><span class="line">        &quot;sendTime&quot;: &quot;2010-02-11 12:27:18&quot;,</span><br><span class="line">        &quot;endTime&quot;: &quot;2010-02-11 12:27:18&quot;,</span><br><span class="line">        &quot;closeTime&quot;: &quot;2010-02-11 12:27:18&quot;,</span><br><span class="line">        &quot;createTime&quot;: &quot;2010-01-23 16:04:35&quot;,</span><br><span class="line">        &quot;orderItemVoList&quot;: [</span><br><span class="line">          &#123;</span><br><span class="line">            &quot;orderNo&quot;: 1291136461002,</span><br><span class="line">            &quot;productId&quot;: 2,</span><br><span class="line">            &quot;productName&quot;: &quot;oppo R8&quot;,</span><br><span class="line">            &quot;productImage&quot;: &quot;mainimage.jpg&quot;,</span><br><span class="line">            &quot;currentUnitPrice&quot;: 2999.11,</span><br><span class="line">            &quot;quantity&quot;: 1,</span><br><span class="line">            &quot;totalPrice&quot;: 2999.11,</span><br><span class="line">            &quot;createTime&quot;: &quot;2010-01-23 16:04:35&quot;</span><br><span class="line">          &#125;</span><br><span class="line">        ],</span><br><span class="line">        &quot;shippingId&quot;: 5,</span><br><span class="line">        &quot;receiverName&quot;: &quot;廖师兄&quot;,</span><br><span class="line">        &quot;shippingVo&quot;: null</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;firstPage&quot;: 1,</span><br><span class="line">    &quot;prePage&quot;: 0,</span><br><span class="line">    &quot;nextPage&quot;: 2,</span><br><span class="line">    &quot;lastPage&quot;: 6,</span><br><span class="line">    &quot;isFirstPage&quot;: true,</span><br><span class="line">    &quot;isLastPage&quot;: false,</span><br><span class="line">    &quot;hasPreviousPage&quot;: false,</span><br><span class="line">    &quot;hasNextPage&quot;: true,</span><br><span class="line">    &quot;navigatePages&quot;: 8,</span><br><span class="line">    &quot;navigatepageNums&quot;: [</span><br><span class="line">      1,</span><br><span class="line">      2,</span><br><span class="line">      3,</span><br><span class="line">      4,</span><br><span class="line">      5,</span><br><span class="line">      6</span><br><span class="line">    ]</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: 10,</span><br><span class="line">  &quot;msg&quot;: &quot;用户未登录,请登录&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: 1,</span><br><span class="line">  &quot;msg&quot;: &quot;没有权限&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><h4 id="3-订单详情"><a href="#3-订单详情" class="headerlink" title="3.订单详情"></a>3.订单详情</h4><p>** GET &#x2F;orders&#x2F;{orderNo}</p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">orderNo</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: 0,</span><br><span class="line">  &quot;data&quot;: &#123;</span><br><span class="line">    &quot;orderNo&quot;: 1291136461000,</span><br><span class="line">    &quot;payment&quot;: 30000.00,</span><br><span class="line">    &quot;paymentType&quot;: 1,</span><br><span class="line">    &quot;paymentTypeDesc&quot;: &quot;在线支付&quot;,</span><br><span class="line">    &quot;postage&quot;: 0,</span><br><span class="line">    &quot;status&quot;: 10,</span><br><span class="line">    &quot;statusDesc&quot;: &quot;未支付&quot;,</span><br><span class="line">    &quot;paymentTime&quot;: &quot;&quot;,</span><br><span class="line">    &quot;sendTime&quot;: &quot;&quot;,</span><br><span class="line">    &quot;endTime&quot;: &quot;&quot;,</span><br><span class="line">    &quot;closeTime&quot;: &quot;&quot;,</span><br><span class="line">    &quot;createTime&quot;: &quot;2010-11-30 22:23:49&quot;,</span><br><span class="line">    &quot;orderItemVoList&quot;: [</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;orderNo&quot;: 1291136461000,</span><br><span class="line">        &quot;productId&quot;: 1,</span><br><span class="line">        &quot;productName&quot;: &quot;iphone7&quot;,</span><br><span class="line">        &quot;productImage&quot;: &quot;mainimage.jpg&quot;,</span><br><span class="line">        &quot;currentUnitPrice&quot;: 10000.00,</span><br><span class="line">        &quot;quantity&quot;: 1,</span><br><span class="line">        &quot;totalPrice&quot;: 10000.00,</span><br><span class="line">        &quot;createTime&quot;: &quot;2010-11-30 22:23:49&quot;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#123;</span><br><span class="line">        &quot;orderNo&quot;: 1291136461000,</span><br><span class="line">        &quot;productId&quot;: 2,</span><br><span class="line">        &quot;productName&quot;: &quot;oppo R8&quot;,</span><br><span class="line">        &quot;productImage&quot;: &quot;mainimage.jpg&quot;,</span><br><span class="line">        &quot;currentUnitPrice&quot;: 20000.00,</span><br><span class="line">        &quot;quantity&quot;: 1,</span><br><span class="line">        &quot;totalPrice&quot;: 20000.00,</span><br><span class="line">        &quot;createTime&quot;: &quot;2010-11-30 22:23:49&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    ],</span><br><span class="line">    &quot;shippingId&quot;: 3,</span><br><span class="line">    &quot;receiverName&quot;: &quot;廖师兄&quot;,</span><br><span class="line">    &quot;shippingVo&quot;: &#123;</span><br><span class="line">      &quot;receiverName&quot;: &quot;廖师兄&quot;,</span><br><span class="line">      &quot;receiverPhone&quot;: &quot;0100&quot;,</span><br><span class="line">      &quot;receiverMobile&quot;: &quot;186&quot;,</span><br><span class="line">      &quot;receiverProvince&quot;: &quot;北京&quot;,</span><br><span class="line">      &quot;receiverCity&quot;: &quot;北京&quot;,</span><br><span class="line">      &quot;receiverDistrict&quot;: &quot;昌平区&quot;,</span><br><span class="line">      &quot;receiverAddress&quot;: &quot;慕课网&quot;,</span><br><span class="line">      &quot;receiverZip&quot;: &quot;100000&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>fail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: 1,</span><br><span class="line">  &quot;msg&quot;: &quot;没有找到订单&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h4 id="4-取消订单"><a href="#4-取消订单" class="headerlink" title="4.取消订单"></a>4.取消订单</h4><p>** PUT &#x2F;orders&#x2F;{orderNo}</p><blockquote><p>request</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">orderNo</span><br></pre></td></tr></table></figure><blockquote><p>response</p></blockquote><p>success</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: 0</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>fail</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: 1,</span><br><span class="line">  &quot;msg&quot;: &quot;该用户没有此订单&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line">&#123;</span><br><span class="line">  &quot;status&quot;: 1,</span><br><span class="line">  &quot;msg&quot;: &quot;此订单已付款，无法被取消&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、数据库设计&quot;&gt;&lt;a href=&quot;#一、数据库设计&quot; class=&quot;headerlink&quot; title=&quot;一、数据库设计&quot;&gt;&lt;/a&gt;一、数据库设计&lt;/h1&gt;&lt;p&gt;&lt;img  
                     lazyload
             </summary>
      
    
    
    
    
    <category term="项目" scheme="http://example.com/tags/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title>合众未来实习笔试</title>
    <link href="http://example.com/2023/04/27/%E5%90%88%E4%BC%97%E6%9C%AA%E6%9D%A5%E5%AE%9E%E4%B9%A0%E7%AC%94%E8%AF%95/"/>
    <id>http://example.com/2023/04/27/%E5%90%88%E4%BC%97%E6%9C%AA%E6%9D%A5%E5%AE%9E%E4%B9%A0%E7%AC%94%E8%AF%95/</id>
    <published>2023-04-27T11:16:16.000Z</published>
    <updated>2023-05-30T07:47:26.140Z</updated>
    
    <content type="html"><![CDATA[<ol><li>从int到Integer的过程叫做：<strong>自动装箱</strong></li><li>初始化一个2行3列的二维数组：<strong>int [ ] [ ] arr &#x3D; new int[2] [3];</strong></li><li>一个类中同时存在多个同名函数，这种现象称为函数：<strong>方法重载</strong></li><li>开发与运行java程序需要经过的三个主要步骤为：<strong>编写、编译、运行</strong></li><li>在中断for循环中，结束最近的一个循环用<strong>break</strong>，结束当次循环进入下次循环用<strong>continue</strong></li><li>在一个长度为n的顺序表中删除第i个元素时，需要向前移动<strong>n-i</strong>个元素</li><li>对于线性表（7，34，55，25，64，46，20，10）进行散列存储时，若选用H（K）&#x3D;K%9作为散列函数，则散列地址为1的元素有<strong>55,64,46,10</strong></li><li>关系型数据库中的元组和属性分别对应二维表中的<strong>每一条记录</strong><br>和<strong>每个字段</strong></li><li>公司中有多个部门和多名职员，每个职员只能属于一个部门，一个部门可以有多名职员，从职员到部门的联系类型是：<strong>多对一</strong></li><li>逻辑运算符中具有短路效果的运算符是：<strong>对于&amp;&amp;运算符 ，当第一个操作数为false时，将不会判断第二个操作数，因为此时无论第二个操作数为何，最后的运算结果一定是false； 对于||运算符 ，当第一个操作数为true时，将不会判断第二个操作数，因为此时无论第二个操作数为何，最后的运算结果一定是true。</strong></li><li>简述java中String、StringBuffer，StringBuilder的区别和他们的使用场景<ul><li>String是final修饰的，不可变，每次操作都会产生新的String对象</li><li>StringBuffer和StringBuilder都是在原对象上操作：StringBuffer是线程安全的，StringBuilder线程不安全的 </li><li>StringBuffer方法都是synchronized修饰的 </li><li>性能：StringBuilder &gt; StringBuffer &gt; String </li><li>场景：经常需要改变字符串内容时使用后面两个</li><li>优先使用StringBuilder，多线程使用共享变量时使用StringBuffer</li></ul></li><li>怎样将GB2312编码的字符串转换为ISO-8859-1编码的字符串？<ul><li>在Java中，可以使用String类的getBytes()方法来实现将GB2312编码的字符串转换为ISO-8859-1编码的字符串。</li><li>首先定义一个GB2312编码的字符串gb2312Str。</li><li>使用getBytes()方法将GB2312编码的字符串转换为ISO-8859-1编码的字节数组isoBytes。</li><li>使用String类的构造方法将ISO-8859-1编码的字节数组转换为字符串isoStr。</li><li>最后输出isoStr，可以看到输出的是ISO-8859-1编码的字符串”中文”。</li></ul></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个GB2312编码的字符串</span></span><br><span class="line"><span class="type">String</span> <span class="variable">gb2312Str</span> <span class="operator">=</span> <span class="string">&quot;中文&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将GB2312编码的字符串转换为ISO-8859-1编码的字节数组</span></span><br><span class="line"><span class="type">byte</span>[] isoBytes = gb2312Str.getBytes(<span class="string">&quot;ISO-8859-1&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将ISO-8859-1编码的字节数组转换为字符串</span></span><br><span class="line"><span class="type">String</span> <span class="variable">isoStr</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(isoBytes, <span class="string">&quot;ISO-8859-1&quot;</span>);</span><br><span class="line"></span><br><span class="line">System.out.println(isoStr);  <span class="comment">// 输出中文</span></span><br></pre></td></tr></table></figure><ol start="13"><li><p>Error和Exception有什么区别？</p><ul><li>Error是指程序运行时的严重问题，通常是由于系统资源不足或者其他无法恢复的错误导致的，例如OutOfMemoryError、StackOverflowError等。这些错误通常无法被程序处理，只能通过修改程序或者增加系统资源来解决。</li><li>Exception是指程序运行时的可处理异常，通常是由于程序逻辑错误或者外部因素导致的，例如NullPointerException、ArrayIndexOutOfBoundsException等。这些异常可以通过程序处理，例如捕获异常并进行相应的处理或者抛出异常让调用者处理。</li></ul><p>总的来说，Error是无法处理的严重问题，而Exception是可以被处理的可预见问题</p></li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304280950312.png"                      alt="image-20230428095011078"                ></p><ul><li>try finally return</li><li>首先，执行test2()方法会调用test()方法，进入try语句块中，输出”try”，然后执行return语句，返回”return”字符串。在执行return语句之前，会先执行finally语句块中的代码，输出”finally”。最后，test2()方法会将test()方法返回的”return”字符串赋值给result变量，并输出该变量的值，即”return”。</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304280954713.png"                      alt="image-20230428095452581"                ></p><ul><li><p>输出结果为：</p><p>false true true true false</p><p>原因分析：</p><ol><li>原因是因为a和b虽然都表示数字3，但是它们是不同的对象。a是通过new关键字创建的一个新的Integer对象，而b是通过自动装箱（autoboxing）将int类型的3转换为Integer对象的过程中创建的。虽然它们的值相同，但是它们的引用地址不同，因此a&#x3D;&#x3D;b的比较结果为false。</li><li>a &#x3D;&#x3D; c，因为c是int类型，Java会自动将a进行拆箱，将其转换为int类型，然后比较a和c的值，因为它们的值都是3，所以返回true。</li><li>a.equals(b)，因为a和b都是Integer对象，所以会调用equals方法进行比较，因为它们的值都是3，所以返回true。</li><li>f1 &#x3D;&#x3D; f2，因为f1和f2的值都是100，所以它们指向的是同一个Integer对象，所以返回true。</li><li>f3 &#x3D;&#x3D; f4，因为f3和f4的值都是150，但是它们指向的不是同一个Integer对象，因为Java在自动装箱时会对-128到127之间的整数进行缓存，所以f3和f4指向的是不同的对象，所以返回false。</li></ol></li></ul><ol start="16"><li>有一个学生表SYXY_STUDENT，具有学生ID（ID）、姓名（NAME）、性别（SEX）、年龄（AGE）、成绩（S CORE）这几个字段，表中只有一个学期的数据。请用一条sql语句查询出这个班一个学期男生、女生的平均成绩。<ul><li>SELECT SEX, AVG(SCORE) AS AVG_SCORE FROM SYXY_STUDENT GROUP BY SEX</li></ul></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">java</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">PrintMatrixClockwise</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[][] matrix = &#123;&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">3</span>&#125;, &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>&#125;, &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">0</span>, <span class="number">3</span>, <span class="number">3</span>&#125;, &#123;<span class="number">0</span>, <span class="number">2</span>, <span class="number">2</span>&#125;, &#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>&#125;, &#123;<span class="number">3</span>, <span class="number">3</span>, <span class="number">3</span>&#125;, &#123;<span class="number">2</span>, <span class="number">2</span>, <span class="number">2</span>&#125;, &#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>&#125;&#125;;</span><br><span class="line">        printMatrixClockwise(matrix);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printMatrixClockwise</span><span class="params">(<span class="type">int</span>[][] matrix)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (matrix == <span class="literal">null</span> || matrix.length == <span class="number">0</span> || matrix[<span class="number">0</span>].length == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">int</span> <span class="variable">rows</span> <span class="operator">=</span> matrix.length;</span><br><span class="line">        <span class="type">int</span> <span class="variable">cols</span> <span class="operator">=</span> matrix[<span class="number">0</span>].length;</span><br><span class="line">        <span class="type">int</span> <span class="variable">start</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (rows &gt; start * <span class="number">2</span> &amp;&amp; cols &gt; start * <span class="number">2</span>) &#123;</span><br><span class="line">            printMatrixInCircle(matrix, rows, cols, start);</span><br><span class="line">            start++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">printMatrixInCircle</span><span class="params">(<span class="type">int</span>[][] matrix, <span class="type">int</span> rows, <span class="type">int</span> cols, <span class="type">int</span> start)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">endX</span> <span class="operator">=</span> cols - <span class="number">1</span> - start;</span><br><span class="line">        <span class="type">int</span> <span class="variable">endY</span> <span class="operator">=</span> rows - <span class="number">1</span> - start;</span><br><span class="line">        <span class="comment">// 从左到右打印一行</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> start; i &lt;= endX; i++) &#123;</span><br><span class="line">            System.out.print(matrix[start][i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 从上到下打印一列</span></span><br><span class="line">        <span class="keyword">if</span> (start &lt; endY) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> start + <span class="number">1</span>; i &lt;= endY; i++) &#123;</span><br><span class="line">                System.out.print(matrix[i][endX] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 从右到左打印一行</span></span><br><span class="line">        <span class="keyword">if</span> (start &lt; endX &amp;&amp; start &lt; endY) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> endX - <span class="number">1</span>; i &gt;= start; i--) &#123;</span><br><span class="line">                System.out.print(matrix[endY][i] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 从下到上打印一列</span></span><br><span class="line">        <span class="keyword">if</span> (start &lt; endX &amp;&amp; start &lt; endY - <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> endY - <span class="number">1</span>; i &gt;= start + <span class="number">1</span>; i--) &#123;</span><br><span class="line">                System.out.print(matrix[i][start] + <span class="string">&quot; &quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">输出结果为：<span class="number">0</span> <span class="number">0</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">3</span> <span class="number">2</span> <span class="number">1</span> <span class="number">1</span> <span class="number">1</span> <span class="number">2</span> <span class="number">2</span> <span class="number">3</span> <span class="number">3</span> <span class="number">3</span> <span class="number">2</span> <span class="number">2</span> <span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;ol&gt;
&lt;li&gt;从int到Integer的过程叫做：&lt;strong&gt;自动装箱&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;初始化一个2行3列的二维数组：&lt;strong&gt;int [ ] [ ] arr &amp;#x3D; new int[2] [3];&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;一个</summary>
      
    
    
    
    
    <category term="实习" scheme="http://example.com/tags/%E5%AE%9E%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>实习经历</title>
    <link href="http://example.com/2023/04/23/%E5%AE%9E%E4%B9%A0%E7%BB%8F%E5%8E%86/"/>
    <id>http://example.com/2023/04/23/%E5%AE%9E%E4%B9%A0%E7%BB%8F%E5%8E%86/</id>
    <published>2023-04-23T03:09:35.000Z</published>
    <updated>2023-04-28T01:34:30.007Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、实习前了解"><a href="#一、实习前了解" class="headerlink" title="一、实习前了解"></a>一、实习前了解</h1><h2 id="1、springboot之SpringBootServletInitializer"><a href="#1、springboot之SpringBootServletInitializer" class="headerlink" title="1、springboot之SpringBootServletInitializer"></a>1、springboot之SpringBootServletInitializer</h2><ol><li>对于Spring Boot应用，我们一般会打成jar包使用内置<a class="link"   href="https://cloud.tencent.com/product/tke?from=20065&from_column=20065" >容器<i class="fas fa-external-link-alt"></i></a>运行，但是有时候我们想要像使用传统springweb项目一样，将Spring Boot应用打成WAR包，然后部署到外部容器运行，那么我们传统的使用Main类启动的方式稍显蹩脚，因为外部容器无法识别到应用启动类，需要在应用中继承<strong>SpringBootServletInitializer</strong>类，然后重写config方法，将其指向应用启动类。</li><li>它是WebApplicationInitializer的扩展，从部署在Web容器上的传统WAR文件运行SpringApplication。 此类将Servlet，Filter和ServletContextInitializer bean从应用程序上下文绑定到<a class="link"   href="https://cloud.tencent.com/product/cvm?from=20065&from_column=20065" >服务器<i class="fas fa-external-link-alt"></i></a>。</li><li>扩展SpringBootServletInitializer类还允许我们通过覆盖configure()方法来配置servlet容器运行时的应用程序。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ruoyi;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.builder.SpringApplicationBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.web.servlet.support.SpringBootServletInitializer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * web容器中进行部署</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> ruoyi</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">RuoYiServletInitializer</span> <span class="keyword">extends</span> <span class="title class_">SpringBootServletInitializer</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> SpringApplicationBuilder <span class="title function_">configure</span><span class="params">(SpringApplicationBuilder application)</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> application.sources(RuoYiApplication.class);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>以前用的是springboot内嵌的tomcat跑的项目，而我做的这个项目是打成war的，用的外部的web容器跑的。</li></ol><h1 id="二、实习第一天"><a href="#二、实习第一天" class="headerlink" title="二、实习第一天"></a>二、实习第一天</h1><ol><li>熟悉理解数字标杆的需求</li><li>设计数字标杆的表结构</li></ol><h6 id=""><a href="#" class="headerlink" title=""></a><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304241936795.png"                      alt="首页"                ></h6><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `dt_company_base_info`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `dt_company_base_info` (</span><br><span class="line">                                        `company_id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;公司id&#x27;</span>,</span><br><span class="line">                                        `company_name` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;企业全称&#x27;</span>,</span><br><span class="line">                                        `registration_time` <span class="type">date</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;注册时间&#x27;</span>,</span><br><span class="line">                                        `office_address_province` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;办公地址所在省&#x27;</span>,</span><br><span class="line">                                        `office_address_city` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;办公地址所在市&#x27;</span>,</span><br><span class="line">                                        `office_address_area` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;办公地址所在区&#x27;</span>,</span><br><span class="line">                                        `office_address` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;办公详细地址&#x27;</span>,</span><br><span class="line">                                        `registration_address_province` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;注册地址所在省&#x27;</span>,</span><br><span class="line">                                        `registration_address_city` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;注册地址所在市&#x27;</span>,</span><br><span class="line">                                        `registration_address_area` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;注册地址所在区&#x27;</span>,</span><br><span class="line">                                        `registration_address` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;注册详细地址&#x27;</span>,</span><br><span class="line">                                        `registration_capital` <span class="type">decimal</span>(<span class="number">10</span>,<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;注册资本&#x27;</span>,</span><br><span class="line">                                        `registration_type` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;注册类型&#x27;</span>,</span><br><span class="line">                                        `first_industry` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;所属一级行业&#x27;</span>,</span><br><span class="line">                                        `second_industry` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;所属二级行业&#x27;</span>,</span><br><span class="line">                                        `contact_name` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;联系人姓名&#x27;</span>,</span><br><span class="line">                                        `contact_phone` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;联系人电话&#x27;</span>,</span><br><span class="line">                                        `contact_mobile` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;联系人手机&#x27;</span>,</span><br><span class="line">                                        `contact_email` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;联系人E-mail&#x27;</span>,</span><br><span class="line">                                        `project_introduction` text COMMENT <span class="string">&#x27;项目简介&#x27;</span>,</span><br><span class="line">                                        `intentional_benchmark` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;意向参评标杆类别&#x27;</span>,</span><br><span class="line">                                        `three_years_situation` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年整体状况&#x27;</span>,</span><br><span class="line">                                        `founder_team` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创始人团队及骨干人才情况&#x27;</span>,</span><br><span class="line">                                        `founder_team_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创始人团队及骨干人才有关证明&#x27;</span>,</span><br><span class="line">                                        `Standard_innovation` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;标准创新情况&#x27;</span>,</span><br><span class="line">                                        `Standard_innovation_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;主持或参与准创制的有关证明材料&#x27;</span>,</span><br><span class="line">                                        `patent_acquisition` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;专利获得情况&#x27;</span>,</span><br><span class="line">                                        `patent_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;专利授权证明文件&#x27;</span>,</span><br><span class="line">                                        `company_qualificatio` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;企业资质建设情况&#x27;</span>,</span><br><span class="line">                                        `qualification_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;企业资质建设有关证明文件&#x27;</span>,</span><br><span class="line">                                        `tournament_awards` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;赛事奖项获得情况&#x27;</span>,</span><br><span class="line">                                        `event_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;获奖赛事证明&#x27;</span>,</span><br><span class="line">                                        `technology_awards` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;科技奖项获得情况&#x27;</span>,</span><br><span class="line">                                        `tech_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;科技奖项证明材料&#x27;</span>,</span><br><span class="line">                                        `Innovation_platform` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创新平台建设情况&#x27;</span>,</span><br><span class="line">                                        `innovation_files` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创新平台证明文件&#x27;</span>,</span><br><span class="line">                                        `authoritative_list` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近两年入选权威榜单情况&#x27;</span>,</span><br><span class="line">                                        `authoritative_list_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近两年入选权威榜单有关证明文件&#x27;</span>,</span><br><span class="line">                                        `empowerment_list` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年入选赋能类权威榜单情况&#x27;</span>,</span><br><span class="line">                                        `empowerment_list_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年入选赋能类权威榜单有关证明文件&#x27;</span>,</span><br><span class="line">                                        `platforms_list` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年入选平台类权威榜单情况&#x27;</span>,</span><br><span class="line">                                        `platforms_list_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年入选平台类权威榜单有关证明文件&#x27;</span>,</span><br><span class="line">                                        `innovations_list` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年入选创新类权威榜单情况&#x27;</span>,</span><br><span class="line">                                        `innovations_list_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年入选创新类权威榜单有关证明文件&#x27;</span>,</span><br><span class="line">                                        `Industrial_agglomeration` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;产业集聚&#x27;</span>,</span><br><span class="line">                                        `Industry_chain_col` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;产业链协同&#x27;</span>,</span><br><span class="line">                                        `three_financing` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年融资情况&#x27;</span>,</span><br><span class="line">                                        `financing_list` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;入选融资类榜单情况&#x27;</span>,</span><br><span class="line">                                        `Com_social_responsibility` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;企业履行社会责任情况&#x27;</span>,</span><br><span class="line">                                        `duty_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创始人团队及骨干人才履行社会责任证明文件&#x27;</span>,</span><br><span class="line">                                        `green_technology` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年绿色节能情况&#x27;</span>,</span><br><span class="line">                                        `green_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年绿色节能情况证明文件&#x27;</span>,</span><br><span class="line">                                        `leading_products` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;产品创新水平，主导产品属于&#x27;</span>,</span><br><span class="line">                                        `core_products` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;产品认证情况，核心产品或服务属于：&#x27;</span>,</span><br><span class="line">                                        `basic_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;数字基础技术水平有关证明&#x27;</span>,</span><br><span class="line">                                        `DCMM` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;是否通过DCMM&#x27;</span>,</span><br><span class="line">                                        `CMMI` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;是否通过CMMI&#x27;</span>,</span><br><span class="line">                                        `important_area` <span class="type">varchar</span>(<span class="number">1024</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;重点领域贡献&#x27;</span>,</span><br><span class="line">                                        `empowerment_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;数字化赋能水平有关证明文件&#x27;</span>,</span><br><span class="line">                                        `platform_service_levels` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;数字化平台服务水平&#x27;</span>,</span><br><span class="line">                                        `platform_service_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;数字化平台服务水平有关证明文件&#x27;</span>,</span><br><span class="line">                                        `innovation_mode_application` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;模式应用创新水平&#x27;</span>,</span><br><span class="line">                                        `share_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;市场占有率有关证明文件&#x27;</span>,</span><br><span class="line">                                        `del_flag` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;是否删除标识：0-否，1-是&#x27;</span>,</span><br><span class="line">                                        `create_by` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者&#x27;</span>,</span><br><span class="line">                                        `create_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">                                        `update_by` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新者&#x27;</span>,</span><br><span class="line">                                        `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">                                        <span class="keyword">PRIMARY</span> KEY (`company_id`)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `company_base_info` */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `company_expert_score` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `dt_company_expert_score`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `dt_company_expert_score` (</span><br><span class="line">                                           `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">                                           `expert_id` <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;专家id&#x27;</span>,</span><br><span class="line">                                           `company_id` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;公司id&#x27;</span>,</span><br><span class="line">                                           `base_info` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;企业基本信息&#x27;</span>,</span><br><span class="line">                                           `base_remark` <span class="type">varchar</span>(<span class="number">512</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">                                           `benchmark_category` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;意向参评标杆类别&#x27;</span>,</span><br><span class="line">                                           `bechmark_remark` <span class="type">varchar</span>(<span class="number">512</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">                                           `three_situation` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年整体情况&#x27;</span>,</span><br><span class="line">                                           `three_remark` <span class="type">varchar</span>(<span class="number">512</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">                                           `creativity` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创新能力建设情况&#x27;</span>,</span><br><span class="line">                                           `creat_remark` <span class="type">varchar</span>(<span class="number">512</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">                                           `ecological_influence` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;产业生态影响力情况&#x27;</span>,</span><br><span class="line">                                           `eco_remark` <span class="type">varchar</span>(<span class="number">512</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">                                           `market_recognition` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;基本市场认可情况&#x27;</span>,</span><br><span class="line">                                           `markert_remark` <span class="type">varchar</span>(<span class="number">512</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">                                           `social_responsibility` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;社会责任情况&#x27;</span>,</span><br><span class="line">                                           `social_remark` <span class="type">varchar</span>(<span class="number">512</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">                                           `benchmarking` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;标杆类型建设情况&#x27;</span>,</span><br><span class="line">                                           `bench_remark` <span class="type">varchar</span>(<span class="number">512</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">                                           `comprehensive_score` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;综合打分&#x27;</span>,</span><br><span class="line">                                           `del_flag` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;是否删除标识：0-否，1-是&#x27;</span>,</span><br><span class="line">                                           `create_by` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者&#x27;</span>,</span><br><span class="line">                                           `create_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">                                           `update_by` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新者&#x27;</span>,</span><br><span class="line">                                           `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">                                           <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `company_expert_score` */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `company_user` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `dt_company_user`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `dt_company_user` (</span><br><span class="line">                                   `id` <span class="type">int</span>  <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">                                   `username` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;登录名&#x27;</span>,</span><br><span class="line">                                   `nickname` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;昵称&#x27;</span>,</span><br><span class="line">                                   `password` <span class="type">char</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">                                   `phone` <span class="type">char</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;手机号&#x27;</span>,</span><br><span class="line">                                   `del_flag` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;是否删除标识：0-否，1-是&#x27;</span>,</span><br><span class="line">                                   `create_by` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者&#x27;</span>,</span><br><span class="line">                                   `create_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">                                   `update_by` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新者&#x27;</span>,</span><br><span class="line">                                   `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">                                   <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> dt_company_user COMMENT <span class="string">&#x27;企业会员表&#x27;</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> dt_company_expert_score COMMENT <span class="string">&#x27;企业专家打分表&#x27;</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> dt_company_base_info COMMENT <span class="string">&#x27;企业基本信息表&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="三、实习第二天"><a href="#三、实习第二天" class="headerlink" title="三、实习第二天"></a>三、实习第二天</h1><ol><li><p>注册登录接口实现、API文档</p></li><li><p>短信验证码先随机生成一个</p></li><li><p>第一步就是写一个数据库</p></li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `dt_company_user`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `dt_company_user` (</span><br><span class="line">                                `id` <span class="type">char</span>(<span class="number">8</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_0900_ai_ci <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">                                `username` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;登录名&#x27;</span>,</span><br><span class="line">                                `nickname` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;昵称&#x27;</span>,</span><br><span class="line">                                `password` <span class="type">char</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">                                `phone` <span class="type">char</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;手机号&#x27;</span>,</span><br><span class="line">                                `del_flag` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;是否删除标识：0-否，1-是&#x27;</span>,</span><br><span class="line">                                `create_by` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者&#x27;</span>,</span><br><span class="line">                                `create_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">                                `update_by` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新者&#x27;</span>,</span><br><span class="line">                                `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">                                <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">) ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8mb4 <span class="keyword">COLLATE</span><span class="operator">=</span>utf8mb4_0900_ai_ci;</span><br></pre></td></tr></table></figure><ol start="2"><li>我们新建一个子模块ruanxie-digital，然后里面分别包括domain、service、mapper、controller的软件包及resources下的mapper.digital软件包。</li><li>先编写实体类User（其中继承的<strong>Serializable</strong>可以使用表示对象及其数据的类型信息和字节在内存中重新创建对象。）、新建 Response 类，用来返回接口调用信息描述（成功与否）</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ruanxie.digital.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.AllArgsConstructor;</span><br><span class="line"><span class="keyword">import</span> lombok.Builder;</span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"><span class="keyword">import</span> lombok.NoArgsConstructor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Data</span> 使用这个注解可以省去代码中大量的get()、 set()、 toString()等方法；</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Builder</span> 为你的类生成相对略微复杂的构建器API</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@NoArgsConstructor</span> 这个注解可以生成无参构造方法</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@AllArgsConstructor</span> 把里面的变量都生成全参数的构造器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Builder</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span> <span class="keyword">implements</span> <span class="title class_">Serializable</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> -<span class="number">2181194663243207550L</span>;</span><br><span class="line">    <span class="keyword">private</span> String username;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="keyword">private</span> String nickname;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ruanxie.digital.domain;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Response</span> &#123;</span><br><span class="line">    String msg;</span><br><span class="line">    <span class="type">int</span> code;</span><br><span class="line">    <span class="type">Boolean</span> <span class="variable">isSuc</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Response</span><span class="params">()</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Response</span><span class="params">(Boolean isSuc,String msg, <span class="type">int</span> code)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">        <span class="built_in">this</span>.isSuc = isSuc;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> Boolean <span class="title function_">getIsSuc</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> isSuc;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setIsSuc</span><span class="params">(Boolean isSuc)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.isSuc = isSuc;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getMsg</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> msg;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMsg</span><span class="params">(String msg)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.msg = msg;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> code;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setCode</span><span class="params">(<span class="type">int</span> code)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.code = code;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>编写UserService接口</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ruanxie.digital.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ruanxie.digital.domain.User;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用于注册时添加角色</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> password</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> nickname</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> phone</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="type">int</span> <span class="title function_">addUser</span><span class="params">(String username, String password, String nickname, String phone)</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 用于登陆时严重用户</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> username</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    List&lt;User&gt; <span class="title function_">queryByUsername</span><span class="params">(String username)</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>编写service的实现类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ruanxie.digital.service.impl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ruanxie.digital.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.ruanxie.digital.mapper.UserMapper;</span><br><span class="line"><span class="keyword">import</span> com.ruanxie.digital.service.UserService;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Service;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Service</span>把当前类自动注入的spring容器中</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span>  <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@Autowired</span>可以标注在属性上、方法上和构造器上，来完成自动装配。默认是根据属性类型</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserMapper userMapper;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">addUser</span><span class="params">(String username, String password, String nickname, String phone)</span> &#123;</span><br><span class="line">        <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">User</span>(username,password,nickname,phone);</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> userMapper.addUser(user);</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;User&gt; <span class="title function_">queryByUsername</span><span class="params">(String username)</span> &#123;</span><br><span class="line">        List&lt;User&gt; userList = userMapper.queryByUsername(username);</span><br><span class="line">        <span class="keyword">return</span> userList;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>根据 service 服务类创建对应的 mapper 类。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ruanxie.digital.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ruanxie.digital.domain.User;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Repository;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Repository</span>用在持久层的接口上，把对象交给spring管理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserMapper</span> &#123;</span><br><span class="line">    <span class="type">int</span> <span class="title function_">addUser</span><span class="params">(User user)</span>;</span><br><span class="line">    List&lt;User&gt; <span class="title function_">queryByUsername</span><span class="params">(String username)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>接着在resources创建对应的xml文件</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.ruanxie.digital.mapper.UserMapper&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">type</span>=<span class="string">&quot;com.ruanxie.digital.domain.User&quot;</span> <span class="attr">id</span>=<span class="string">&quot;BaseResultMap&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;username&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> <span class="attr">property</span>=<span class="string">&quot;username&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;password&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;CHAR&quot;</span> <span class="attr">property</span>=<span class="string">&quot;password&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;nickname&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;VARCHAR&quot;</span> <span class="attr">property</span>=<span class="string">&quot;nickname&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;phone&quot;</span> <span class="attr">jdbcType</span>=<span class="string">&quot;=CHAR&quot;</span> <span class="attr">property</span>=<span class="string">&quot;phone&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addUser&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;com.ruanxie.digital.domain.User&quot;</span>&gt;</span></span><br><span class="line">        insert into `dt_company_user` values(#&#123;username&#125;,#&#123;password&#125;,#&#123;nickname&#125;,#&#123;phone&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;queryByUsername&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.ruanxie.digital.domain.User&quot;</span>&gt;</span></span><br><span class="line">        select * from `dt_company_user` where username = #&#123;username&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>使用resultType ：主要针对于从数据库中提取相应的数据出来；使用parameterType ：主要针对于将信息存入到数据库中</li></ul><ol start="8"><li>编写controller</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ruanxie.digital.controller;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ruanxie.digital.domain.Response;</span><br><span class="line"><span class="keyword">import</span> com.ruanxie.digital.domain.User;</span><br><span class="line"><span class="keyword">import</span> com.ruanxie.digital.service.UserService;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> io.swagger.annotations.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.Resource;</span><br><span class="line"><span class="keyword">import</span> javax.validation.Valid;</span><br><span class="line"><span class="keyword">import</span> javax.validation.constraints.NotNull;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Api(&quot;用户注册登陆相关接口&quot;)</span></span><br><span class="line"><span class="meta">@RequestMapping(&quot;/fzx&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">FzxRegisterUserController</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService service;</span><br><span class="line">    <span class="meta">@PostMapping(&quot;/register&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;注册逻辑&quot;)</span></span><br><span class="line">    <span class="meta">@ApiImplicitParams(&#123;</span></span><br><span class="line"><span class="meta">            @ApiImplicitParam(name = &quot;person&quot;, required = true, value = &quot;注册的人&quot;),</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> Response <span class="title function_">register</span><span class="params">(<span class="meta">@RequestBody</span> Map&lt;String, String&gt; person)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> person.get(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">password</span> <span class="operator">=</span> person.get(<span class="string">&quot;password&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">nickname</span> <span class="operator">=</span> person.get(<span class="string">&quot;nickname&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">phone</span> <span class="operator">=</span> person.get(<span class="string">&quot;phone&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(username != <span class="literal">null</span> &amp;&amp; password != <span class="literal">null</span> &amp;&amp; nickname != <span class="literal">null</span> &amp;&amp; phone != <span class="literal">null</span>)&#123;</span><br><span class="line">            List&lt;User&gt; users =  service.queryByUsername(username);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(users!=<span class="literal">null</span> &amp;&amp; users.size()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="literal">true</span>,<span class="string">&quot;注册失败，用户名重复,请更换&quot;</span>,-<span class="number">1</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> service.addUser(username,password,nickname,phone);</span><br><span class="line">                <span class="keyword">if</span>(count&gt;<span class="number">0</span>)&#123;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="literal">true</span>,<span class="string">&quot;注册成功&quot;</span>,<span class="number">1</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="literal">true</span>,<span class="string">&quot;注册失败&quot;</span>,-<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="literal">true</span>,<span class="string">&quot;注册失败，请检查用户名、密码、手机号是否为空&quot;</span>,-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@PostMapping(&quot;/login&quot;)</span></span><br><span class="line">    <span class="meta">@ApiOperation(&quot;登陆逻辑&quot;)</span></span><br><span class="line">    <span class="meta">@ApiImplicitParams(&#123;</span></span><br><span class="line"><span class="meta">            @ApiImplicitParam(name = &quot;person&quot;, required = true, value = &quot;登陆的人&quot;),</span></span><br><span class="line"><span class="meta">    &#125;)</span></span><br><span class="line">    <span class="keyword">public</span> Response <span class="title function_">login</span><span class="params">(<span class="meta">@RequestBody</span> Map&lt;String, String&gt; person)</span>&#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">username</span> <span class="operator">=</span> person.get(<span class="string">&quot;username&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">password</span> <span class="operator">=</span>Integer.parseInt(person.get(<span class="string">&quot;password&quot;</span>));</span><br><span class="line">        <span class="comment">//1. 判断用户名、密码是否为空</span></span><br><span class="line">        <span class="keyword">if</span>(username != <span class="literal">null</span> &amp;&amp; password != <span class="number">0</span> )&#123;</span><br><span class="line">            List&lt;User&gt; users =  service.queryByUsername(username);</span><br><span class="line">            <span class="comment">//2. 判断用户名是否存在</span></span><br><span class="line">            <span class="keyword">if</span>(users!=<span class="literal">null</span> &amp;&amp; users.size()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="type">User</span> <span class="variable">user</span> <span class="operator">=</span> users.get(<span class="number">0</span>);</span><br><span class="line">                <span class="comment">//3. 判断密码是否正确</span></span><br><span class="line">                <span class="keyword">if</span>(user.getPassword().equals(password))&#123;</span><br><span class="line">                    <span class="comment">//4. 密码正确，登陆成功</span></span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="literal">true</span>,<span class="string">&quot;登陆成功&quot;</span>,<span class="number">1</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="literal">false</span>,<span class="string">&quot;登陆失败，密码错误&quot;</span>,-<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="literal">true</span>,<span class="string">&quot;登陆失败，用户名不存在&quot;</span>,-<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="literal">true</span>,<span class="string">&quot;登陆失败，请检查用户名、密码是否为空&quot;</span>,-<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>但是有问题：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304262020127.png"                      alt="image-20230426202002760"                ></p><p>而且最开始请求不来接口，需要修改下，这个类里有拦截器  把接口加进去不用拦截就好了</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304262022302.png"                      alt="image-20230426202226086"                ></p><hr><h1 id="四、实习第三天"><a href="#四、实习第三天" class="headerlink" title="四、实习第三天"></a>四、实习第三天</h1><p>用git提交代码遇到了问题：</p><ul><li>公司的git当时没有配置SSH，所以一直配不了远程仓库</li><li>应先本地commit，然后再pull对应的版本，pull下来之后再执行push</li></ul><p>在测试数据库中上传表并生成代码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `dt_company_base_info`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `dt_company_base_info` (</span><br><span class="line">                                        `company_id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;公司id&#x27;</span>,</span><br><span class="line">                                        `company_name` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;企业全称&#x27;</span>,</span><br><span class="line">                                        `registration_time` <span class="type">date</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;注册时间&#x27;</span>,</span><br><span class="line">                                        `office_address_province` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;办公地址所在省&#x27;</span>,</span><br><span class="line">                                        `office_address_city` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;办公地址所在市&#x27;</span>,</span><br><span class="line">                                        `office_address_area` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;办公地址所在区&#x27;</span>,</span><br><span class="line">                                        `office_address` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;办公详细地址&#x27;</span>,</span><br><span class="line">                                        `registration_address_province` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;注册地址所在省&#x27;</span>,</span><br><span class="line">                                        `registration_address_city` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;注册地址所在市&#x27;</span>,</span><br><span class="line">                                        `registration_address_area` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;注册地址所在区&#x27;</span>,</span><br><span class="line">                                        `registration_address` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;注册详细地址&#x27;</span>,</span><br><span class="line">                                        `registration_capital` <span class="type">decimal</span>(<span class="number">10</span>,<span class="number">4</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;注册资本&#x27;</span>,</span><br><span class="line">                                        `registration_type` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;注册类型&#x27;</span>,</span><br><span class="line">                                        `first_industry` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;所属一级行业&#x27;</span>,</span><br><span class="line">                                        `second_industry` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;所属二级行业&#x27;</span>,</span><br><span class="line">                                        `contact_name` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;联系人姓名&#x27;</span>,</span><br><span class="line">                                        `contact_phone` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;联系人电话&#x27;</span>,</span><br><span class="line">                                        `contact_mobile` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;联系人手机&#x27;</span>,</span><br><span class="line">                                        `contact_email` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;联系人E-mail&#x27;</span>,</span><br><span class="line">                                        `project_introduction` text COMMENT <span class="string">&#x27;项目简介&#x27;</span>,</span><br><span class="line">                                        `intentional_benchmark` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;意向参评标杆类别&#x27;</span>,</span><br><span class="line">                                        `three_years_situation` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年整体状况&#x27;</span>,</span><br><span class="line">                                        `founder_team` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创始人团队及骨干人才情况&#x27;</span>,</span><br><span class="line">                                        `founder_team_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创始人团队及骨干人才有关证明&#x27;</span>,</span><br><span class="line">                                        `Standard_innovation` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;标准创新情况&#x27;</span>,</span><br><span class="line">                                        `Standard_innovation_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;主持或参与准创制的有关证明材料&#x27;</span>,</span><br><span class="line">                                        `patent_acquisition` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;专利获得情况&#x27;</span>,</span><br><span class="line">                                        `patent_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;专利授权证明文件&#x27;</span>,</span><br><span class="line">                                        `company_qualificatio` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;企业资质建设情况&#x27;</span>,</span><br><span class="line">                                        `qualification_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;企业资质建设有关证明文件&#x27;</span>,</span><br><span class="line">                                        `tournament_awards` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;赛事奖项获得情况&#x27;</span>,</span><br><span class="line">                                        `event_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;获奖赛事证明&#x27;</span>,</span><br><span class="line">                                        `technology_awards` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;科技奖项获得情况&#x27;</span>,</span><br><span class="line">                                        `tech_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;科技奖项证明材料&#x27;</span>,</span><br><span class="line">                                        `Innovation_platform` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创新平台建设情况&#x27;</span>,</span><br><span class="line">                                        `innovation_files` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创新平台证明文件&#x27;</span>,</span><br><span class="line">                                        `authoritative_list` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近两年入选权威榜单情况&#x27;</span>,</span><br><span class="line">                                        `authoritative_list_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近两年入选权威榜单有关证明文件&#x27;</span>,</span><br><span class="line">                                        `empowerment_list` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年入选赋能类权威榜单情况&#x27;</span>,</span><br><span class="line">                                        `empowerment_list_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年入选赋能类权威榜单有关证明文件&#x27;</span>,</span><br><span class="line">                                        `platforms_list` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年入选平台类权威榜单情况&#x27;</span>,</span><br><span class="line">                                        `platforms_list_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年入选平台类权威榜单有关证明文件&#x27;</span>,</span><br><span class="line">                                        `innovations_list` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年入选创新类权威榜单情况&#x27;</span>,</span><br><span class="line">                                        `innovations_list_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年入选创新类权威榜单有关证明文件&#x27;</span>,</span><br><span class="line">                                        `Industrial_agglomeration` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;产业集聚&#x27;</span>,</span><br><span class="line">                                        `Industry_chain_col` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;产业链协同&#x27;</span>,</span><br><span class="line">                                        `three_financing` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年融资情况&#x27;</span>,</span><br><span class="line">                                        `financing_list` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;入选融资类榜单情况&#x27;</span>,</span><br><span class="line">                                        `Com_social_responsibility` <span class="type">varchar</span>(<span class="number">20</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;企业履行社会责任情况&#x27;</span>,</span><br><span class="line">                                        `duty_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创始人团队及骨干人才履行社会责任证明文件&#x27;</span>,</span><br><span class="line">                                        `green_technology` <span class="type">varchar</span>(<span class="number">50</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年绿色节能情况&#x27;</span>,</span><br><span class="line">                                        `green_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年绿色节能情况证明文件&#x27;</span>,</span><br><span class="line">                                        `leading_products` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;产品创新水平，主导产品属于&#x27;</span>,</span><br><span class="line">                                        `core_products` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;产品认证情况，核心产品或服务属于：&#x27;</span>,</span><br><span class="line">                                        `basic_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;数字基础技术水平有关证明&#x27;</span>,</span><br><span class="line">                                        `DCMM` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;是否通过DCMM&#x27;</span>,</span><br><span class="line">                                        `CMMI` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;是否通过CMMI&#x27;</span>,</span><br><span class="line">                                        `important_area` <span class="type">varchar</span>(<span class="number">1024</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;重点领域贡献&#x27;</span>,</span><br><span class="line">                                        `empowerment_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;数字化赋能水平有关证明文件&#x27;</span>,</span><br><span class="line">                                        `platform_service_levels` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;数字化平台服务水平&#x27;</span>,</span><br><span class="line">                                        `platform_service_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;数字化平台服务水平有关证明文件&#x27;</span>,</span><br><span class="line">                                        `innovation_mode_application` json <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;模式应用创新水平&#x27;</span>,</span><br><span class="line">                                        `share_file` <span class="type">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;市场占有率有关证明文件&#x27;</span>,</span><br><span class="line">                                        `del_flag` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;是否删除标识：0-否，1-是&#x27;</span>,</span><br><span class="line">                                        `create_by` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者&#x27;</span>,</span><br><span class="line">                                        `create_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">                                        `update_by` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新者&#x27;</span>,</span><br><span class="line">                                        `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">                                        <span class="keyword">PRIMARY</span> KEY (`company_id`)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `company_base_info` */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `company_expert_score` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `dt_company_expert_score`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `dt_company_expert_score` (</span><br><span class="line">                                           `id` <span class="type">int</span> <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">                                           `expert_id` <span class="type">varchar</span>(<span class="number">20</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;专家id&#x27;</span>,</span><br><span class="line">                                           `company_id` <span class="type">int</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;公司id&#x27;</span>,</span><br><span class="line">                                           `base_info` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;企业基本信息&#x27;</span>,</span><br><span class="line">                                           `base_remark` <span class="type">varchar</span>(<span class="number">512</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">                                           `benchmark_category` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;意向参评标杆类别&#x27;</span>,</span><br><span class="line">                                           `bechmark_remark` <span class="type">varchar</span>(<span class="number">512</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">                                           `three_situation` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;近三年整体情况&#x27;</span>,</span><br><span class="line">                                           `three_remark` <span class="type">varchar</span>(<span class="number">512</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">                                           `creativity` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创新能力建设情况&#x27;</span>,</span><br><span class="line">                                           `creat_remark` <span class="type">varchar</span>(<span class="number">512</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">                                           `ecological_influence` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;产业生态影响力情况&#x27;</span>,</span><br><span class="line">                                           `eco_remark` <span class="type">varchar</span>(<span class="number">512</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">                                           `market_recognition` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;基本市场认可情况&#x27;</span>,</span><br><span class="line">                                           `markert_remark` <span class="type">varchar</span>(<span class="number">512</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">                                           `social_responsibility` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;社会责任情况&#x27;</span>,</span><br><span class="line">                                           `social_remark` <span class="type">varchar</span>(<span class="number">512</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">                                           `benchmarking` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;标杆类型建设情况&#x27;</span>,</span><br><span class="line">                                           `bench_remark` <span class="type">varchar</span>(<span class="number">512</span>) <span class="type">CHARACTER</span> <span class="keyword">SET</span> utf8mb4   <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;备注&#x27;</span>,</span><br><span class="line">                                           `comprehensive_score` <span class="keyword">double</span> <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;综合打分&#x27;</span>,</span><br><span class="line">                                           `del_flag` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;是否删除标识：0-否，1-是&#x27;</span>,</span><br><span class="line">                                           `create_by` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者&#x27;</span>,</span><br><span class="line">                                           `create_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">                                           `update_by` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新者&#x27;</span>,</span><br><span class="line">                                           `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">                                           <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Data for the table `company_expert_score` */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*Table structure for table `company_user` */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF <span class="keyword">EXISTS</span> `dt_company_user`;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> `dt_company_user` (</span><br><span class="line">                                   `id` <span class="type">int</span>  <span class="keyword">NOT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;id&#x27;</span>,</span><br><span class="line">                                   `username` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;登录名&#x27;</span>,</span><br><span class="line">                                   `nickname` <span class="type">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;昵称&#x27;</span>,</span><br><span class="line">                                   `password` <span class="type">char</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;密码&#x27;</span>,</span><br><span class="line">                                   `phone` <span class="type">char</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;手机号&#x27;</span>,</span><br><span class="line">                                   `del_flag` tinyint(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;是否删除标识：0-否，1-是&#x27;</span>,</span><br><span class="line">                                   `create_by` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建者&#x27;</span>,</span><br><span class="line">                                   `create_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;创建时间&#x27;</span>,</span><br><span class="line">                                   `update_by` <span class="type">varchar</span>(<span class="number">32</span>) <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新者&#x27;</span>,</span><br><span class="line">                                   `update_time` datetime <span class="keyword">DEFAULT</span> <span class="keyword">NULL</span> COMMENT <span class="string">&#x27;更新时间&#x27;</span>,</span><br><span class="line">                                   <span class="keyword">PRIMARY</span> KEY (`id`)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> dt_company_user COMMENT <span class="string">&#x27;企业会员表&#x27;</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> dt_company_expert_score COMMENT <span class="string">&#x27;企业专家打分表&#x27;</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> dt_company_base_info COMMENT <span class="string">&#x27;企业基本信息表&#x27;</span>;</span><br></pre></td></tr></table></figure><p>账号密码：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304280931220.png"                      alt="image-20230428093117865"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304280933176.png"                      alt="image-20230428093335885"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304280934138.png"                      alt="image-20230428093415857"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、实习前了解&quot;&gt;&lt;a href=&quot;#一、实习前了解&quot; class=&quot;headerlink&quot; title=&quot;一、实习前了解&quot;&gt;&lt;/a&gt;一、实习前了解&lt;/h1&gt;&lt;h2 id=&quot;1、springboot之SpringBootServletInitializer&quot;&gt;&lt;a</summary>
      
    
    
    
    
    <category term="实习" scheme="http://example.com/tags/%E5%AE%9E%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>行测之数量关系</title>
    <link href="http://example.com/2023/04/19/%E8%A1%8C%E6%B5%8B%E4%B9%8B%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB/"/>
    <id>http://example.com/2023/04/19/%E8%A1%8C%E6%B5%8B%E4%B9%8B%E6%95%B0%E9%87%8F%E5%85%B3%E7%B3%BB/</id>
    <published>2023-04-19T00:51:25.000Z</published>
    <updated>2023-04-19T13:06:14.240Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、代入排除法"><a href="#1、代入排除法" class="headerlink" title="1、代入排除法"></a>1、代入排除法</h1><ol><li><strong>题型特征</strong>：····分别是····；·····各是·····；····和·····之比是·····</li><li><strong>常用题型</strong>：年龄问题、多位数问题、不定方程问题、和差倍比问题、复杂方程问题</li><li><strong>具体用法</strong>：将各选项直接代入题目，检验是否符合条件</li><li><strong>质数</strong>：约数只有1和它本身的自然数叫做质数，注意1不是</li></ol><h1 id="2、数字特性法"><a href="#2、数字特性法" class="headerlink" title="2、数字特性法"></a>2、数字特性法</h1><h2 id="1、奇偶特性"><a href="#1、奇偶特性" class="headerlink" title="1、奇偶特性"></a>1、奇偶特性</h2><ol><li><strong>题型特征</strong>：···和····的和是····；···和····的差是····；···和····一共···；···比···多&#x2F;少····</li><li><strong>常用题型</strong>：不定方程问题、平均数问题、和差倍比问题、余数问题、2倍类、知差求和、知和求差</li><li><strong>如果两数相加为奇&#x2F;偶，则两数相减为奇&#x2F;偶</strong></li><li><strong>基础知识：</strong><ul><li>奇数±奇数&#x3D;偶数；偶数±偶数&#x3D;偶数；偶数±奇数&#x3D;奇数；奇数±偶数&#x3D;奇数（同奇同偶才为偶，一奇一偶则为奇）</li><li>奇数×奇数&#x3D;奇数；奇数×偶数&#x3D;偶数；偶数×奇数&#x3D;偶数；偶数×偶数&#x3D;偶数（一个为偶则为偶，全部为奇才为奇）</li></ul></li></ol><h2 id="2、倍数特性"><a href="#2、倍数特性" class="headerlink" title="2、倍数特性"></a>2、倍数特性</h2><ol><li><p><strong>题型特征</strong>：百分数、倍数、比例、分组</p></li><li><p><strong>整除判定法则</strong>：</p><ul><li>一个数能被2（或者5）整除，当且仅当末一位数字能被2（或者5）整除</li><li>一个数能被4（或者25）整除，当且仅当末两位数字能被4（或者25）整除</li><li>一个数能被8（或者125）整除，当且仅当末三位数字能被8（或者125）整除</li><li>一个数能被3整除，当且仅当其各位数字之和能被3整除（另外一种就是将3的倍数划掉即可12 3 <strong>7</strong> 42 15 894）</li><li>一个数能被9整除，当且仅当其各位数字之和能被9整除</li></ul></li><li><p>0.125&#x3D;1&#x2F;8；0.375&#x3D;3&#x2F;8；0.625&#x3D;5&#x2F;8；0.875&#x3D;7&#x2F;8</p></li><li><p>例：班级男女比例为7：4</p><ul><li>男生人数一定是7的倍数</li><li>女生人数一定是4的倍数</li><li>总人数一定是11的倍数</li><li>男女之差一定是3的倍数</li><li>男生是总人数的7&#x2F;11</li></ul></li><li><p><strong>上例的通用公式：</strong>若a：b&#x3D;m：n（m，n互质，m：n不能继续约分）</p><ul><li><p>a是m的倍数</p></li><li><p>b是n的倍数</p></li><li><p>a+b是m+n的倍数</p></li><li><p>a-b是m-n的倍数</p></li><li><p>a&#x2F;a+b&#x3D;m&#x2F;m+n</p></li></ul></li><li><p>若题目已知A占其他数总和的1&#x2F;N，则A占所有数总和的1&#x2F;N+1</p></li></ol><h1 id="3、方程法"><a href="#3、方程法" class="headerlink" title="3、方程法"></a>3、方程法</h1><h2 id="1、常规方程"><a href="#1、常规方程" class="headerlink" title="1、常规方程"></a>1、常规方程</h2><ol><li><strong>题型特征</strong>：共有·····；多&#x2F;少·····；刚好相等；提高&#x2F;降低了；比重是；····倍；</li><li><strong>常用题型</strong>：和差倍比、浓度问题、牛吃草问题、利润问题、行程问题、工程问题</li><li><strong>三条原则：</strong>优先设所求量，设小不设大，设中间变量</li><li>当题目中有倍数、比例、分数、百分数时，<strong>一般将“份”设为未知数</strong>以较少计算量。当题目中出现部分量之间的比例关系，要对整体进行求解时，可利用连比将部分量的比例关系转化为整体之间的比例关系。</li><li>当将两个比例转化为连比时，<strong>对共有的部分量的两个比例值取最小公倍数</strong>，其余量按本来比例缩放即可</li></ol><h2 id="2、不定方程"><a href="#2、不定方程" class="headerlink" title="2、不定方程"></a>2、不定方程</h2><ol><li><strong>a&#x2F;b&#x3D;c&#x2F;d&#x3D;(a+c)&#x2F;(b+d)&#x3D;(a-c)&#x2F;(a-d)</strong></li><li>求解限定性不定方程的常用方法：首先根据<strong>奇偶特性（3x+4y&#x3D;20；其中20和4y为偶数，则3x也一定为偶）、倍数特性（11a+7b&#x3D;121，其中121和11a都为11的倍数，则7b也一定为11的倍数）、尾数特性（5，10，15，20···出现这些）</strong>等数字特性缩小未知数的范围，然后结合代入法判断。</li><li><strong>代入顺序是</strong>：尾数特性-&gt;倍数特性-&gt;奇偶特性</li><li>求解非限定性不定方程的常用方法：多项式的<strong>整体替换（比如式子同时×2）或者赋零法</strong></li><li>当不定方程中出现系数5的时候，其尾数只能是0或者5，所以可以考虑从尾数特性的角度快速解题</li><li><strong>逢质必2</strong>，当一个数<strong>既是质数又是偶数</strong>时，它<strong>一定是2</strong>。题目中有质数的限制条件时，往往可以直接代入2，达到快速求解的目的</li><li><strong>赋零法中，尽量选取两式都有的量赋值为0</strong>，从而加快做题速度</li></ol><h1 id="4、工程问题"><a href="#4、工程问题" class="headerlink" title="4、工程问题"></a>4、工程问题</h1><ol><li><strong>必备公式：</strong><ul><li>工程量&#x3D;工作效率×时间</li><li>工作效率&#x3D;工程量÷工作时间</li><li>工作时间&#x3D;工程量÷工作效率</li></ul></li></ol><hr><h2 id="1、赋值总量"><a href="#1、赋值总量" class="headerlink" title="1、赋值总量"></a>1、赋值总量</h2><ol><li><strong>解题思路：</strong><ul><li>给<strong>总量赋值</strong>，一般将总量赋值<strong>为各时间的公倍数</strong>，从而<strong>计算出所给出的条件的效率</strong></li><li>根据题目给定的工作过程，使用公式或列方程进行求解</li></ul></li><li>赋值总量时，<strong>不一定非要算出最小公倍数</strong>，只要找到一个<strong>易于做除法的总量即可</strong></li></ol><h2 id="2、赋值效率"><a href="#2、赋值效率" class="headerlink" title="2、赋值效率"></a>2、赋值效率</h2><ol><li><strong>题型：</strong><ul><li>甲：乙&#x3D;2：3</li><li>效率提高20%，1：1.2&#x3D;5：6</li><li>42台收割机，甲：乙&#x3D;3：5</li><li>某一部分工程：甲5天，乙3天，甲：乙&#x3D;3：5</li></ul></li><li><strong>解题思路：</strong><ul><li>给<strong>效率赋值</strong>，一般按照给定的比例关系进行赋值，尽量赋值为整数</li><li>根据题目给的其他条件，算出工程总量或其他所需的数据</li></ul></li></ol><h2 id="3、给具体值"><a href="#3、给具体值" class="headerlink" title="3、给具体值"></a>3、给具体值</h2><ol><li>题干有效率、时间、总量三个量中的<strong>至少两个量</strong>的具体值</li><li>方法：代公式一列方程求解</li></ol><h1 id="5、行程问题"><a href="#5、行程问题" class="headerlink" title="5、行程问题"></a>5、行程问题</h1><h2 id="1、普通行程"><a href="#1、普通行程" class="headerlink" title="1、普通行程"></a>1、普通行程</h2><ol><li><strong>基础知识：</strong><ul><li>路程&#x3D;速度×时间（s&#x3D;vt）</li><li>等距离平均速度&#x3D;2v<del>1</del>v<del>2</del>&#x2F;v<del>1</del>+v<del>2</del>（上下坡、往返、前半程v<del>1</del>，后半程v<del>2</del>）</li></ul></li><li>在例题中，<strong>有平路有上下坡，&#x3D;&#x3D;往往&#x3D;&#x3D;全程的平均速度和平路的平均速度相同</strong></li></ol><h2 id="2、相对行程"><a href="#2、相对行程" class="headerlink" title="2、相对行程"></a>2、相对行程</h2><ol><li><strong>相遇问题：</strong>路程和&#x3D;（大速度+小速度）×时间<ul><li><strong>多次相遇，两头分别出发：</strong>（2n-1）s&#x3D;（大速度+小速度）×时间（n代表相遇次数，s代表两地距离）</li><li><strong>多次相遇，一头同时出发：</strong>2n×s&#x3D;（大速度+小速度）×时间（n代表相遇次数，s代表两地距离）</li></ul></li><li><strong>追及问题：</strong>路程差&#x3D;（大速度-小速度）×时间</li><li><strong>顺水行船：</strong>路程&#x3D;（船速+水速）×时间</li><li><strong>逆水行船：</strong>路程&#x3D;（船速-水速）×时间</li><li><strong>在行程问题中，一定要明确研究对象</strong></li><li>在解方程时，可以把（v<del>甲</del>+v<del>乙</del>）看成一个整体去计算，因为结果要求s，与甲、乙两人的速度没有直接关系</li></ol><h2 id="3、比例行程"><a href="#3、比例行程" class="headerlink" title="3、比例行程"></a>3、比例行程</h2><ol><li>路程一定，速度和时间成<strong>反比</strong>；时间一定，路程和速度成<strong>正比</strong>；速度一定，路程和时间成<strong>正比</strong></li><li>当某个量为定值时，可以考虑使用比例。将比例转化为份数或<strong>通过比例列方程</strong></li><li>72km&#x2F;h&#x3D;20m&#x2F;s；108km&#x2F;h&#x3D;30m&#x2F;s</li></ol><h1 id="6、经济利润问题"><a href="#6、经济利润问题" class="headerlink" title="6、经济利润问题"></a>6、经济利润问题</h1><h2 id="1、基础公式"><a href="#1、基础公式" class="headerlink" title="1、基础公式"></a>1、基础公式</h2><ol><li>利润&#x3D;售价-进价</li><li>利润率&#x3D;利润÷进价</li><li>售价&#x3D;进价×（1+利润率）</li><li>折扣&#x3D;售价÷定价</li></ol><h2 id="2、分段计算"><a href="#2、分段计算" class="headerlink" title="2、分段计算"></a>2、分段计算</h2><ol><li><strong>已知a+b&#x3D;10，求ab最大，则a&#x3D;b&#x3D;5时，ab最大为25</strong></li><li>题型特征：表述中有<strong>超出部分按照某个计算标准计算</strong></li></ol><h1 id="7、溶液问题"><a href="#7、溶液问题" class="headerlink" title="7、溶液问题"></a>7、溶液问题</h1><h2 id="1、混合溶液"><a href="#1、混合溶液" class="headerlink" title="1、混合溶液"></a>1、混合溶液</h2><ol><li>浓度&#x3D;盐&#x2F;盐水总量&#x3D;糖&#x2F;糖水总量</li><li><strong>题型特征</strong>：题干中给出溶液或溶质的实际量，经过混合，溶液量和溶质量都发生了变化</li><li><strong>解题思路</strong>：公式法、方程法、线段法</li></ol><h2 id="2、溶质不变"><a href="#2、溶质不变" class="headerlink" title="2、溶质不变"></a>2、溶质不变</h2><ol><li><strong>解题思路</strong>：以溶质质量不变，溶液质量变化为突破口。采用赋值法、公式法</li></ol><h2 id="3、溶液不变"><a href="#3、溶液不变" class="headerlink" title="3、溶液不变"></a>3、溶液不变</h2><ol><li>溶质质量&#x3D;溶液质量×浓度</li><li><strong>题型特征</strong>：溶液之间进行多次混合，其中一溶液的溶液量或两溶液的溶液量之和不变</li><li><strong>解题思路</strong>：以溶质质量变化，溶液质量不变为突破口，采用赋值法和公式法</li></ol><h1 id="8、排列组合与概率"><a href="#8、排列组合与概率" class="headerlink" title="8、排列组合与概率"></a>8、排列组合与概率</h1><h2 id="1、基础概念"><a href="#1、基础概念" class="headerlink" title="1、基础概念"></a>1、基础概念</h2><ol><li>排列：与顺序有关A^m^<del>n</del>&#x3D;n(n-1)(n-2)·····(n-m+1)；组合：与顺序无关C^m^<del>n</del>&#x3D;n(n-1)(n-2)·····(n-m+1)&#x2F;m(m-1)····2×1</li><li>分类：加法；分步：乘法</li></ol><h2 id="2、常用方法"><a href="#2、常用方法" class="headerlink" title="2、常用方法"></a>2、常用方法</h2><h3 id="1、捆绑法"><a href="#1、捆绑法" class="headerlink" title="1、捆绑法"></a>1、捆绑法</h3><ol><li>当题目中出现<strong>相邻、在一起、连续</strong>等要求时，考虑捆绑法</li><li><strong>用法：</strong>把相邻的元素捆绑起来，注意内部有无顺序；将捆绑后的元素看成一个元素，与其他元素进行后续排列</li></ol><h3 id="2、插空法"><a href="#2、插空法" class="headerlink" title="2、插空法"></a>2、插空法</h3><ol><li>当题目中出现<strong>间隔、不相邻、不连续</strong>等要求时，考虑插空法</li><li><strong>用法：</strong>可以将相邻元素进行排列，排列后形成若干空位；将不相邻的元素插入形成的空位中</li></ol><h3 id="3、插板法"><a href="#3、插板法" class="headerlink" title="3、插板法"></a>3、插板法</h3><ol><li><strong>题型特征</strong>：把<strong>n个相同的物品</strong>分给多个主体时，要求<strong>每个主体至少分m个</strong>，用插板法</li><li>n个相同物品-&gt;（n-1）空；m个人分-&gt;插(m-1)个板；最后公式为C^m-1^<del>n-1</del></li></ol><h3 id="4、全错位排列"><a href="#4、全错位排列" class="headerlink" title="4、全错位排列"></a>4、全错位排列</h3><ol><li><strong>n把钥匙对应n把锁，要求每个锁和一把不能打开他的钥匙放进一个信封，这就是全错位排列</strong></li><li>D<del>1</del>&#x3D;0,D<del>2</del>&#x3D;1,D<del>3</del>&#x3D;2,<strong>D<del>4</del>&#x3D;9,D<del>5</del>&#x3D;44</strong></li></ol><h2 id="3、概率相关"><a href="#3、概率相关" class="headerlink" title="3、概率相关"></a>3、概率相关</h2><ol><li>概率&#x3D;满足条件的个数&#x2F;总个数</li><li>概率&#x3D;各步概率的乘积</li><li>概率&#x3D;各类概率的和</li><li>概率&#x3D;1-不满足条件的概率（正面太难就从反面想）</li></ol><h1 id="9、容斥原理问题"><a href="#9、容斥原理问题" class="headerlink" title="9、容斥原理问题"></a>9、容斥原理问题</h1><h2 id="1、公式法"><a href="#1、公式法" class="headerlink" title="1、公式法"></a>1、公式法</h2><h3 id="1、两集合容斥原理"><a href="#1、两集合容斥原理" class="headerlink" title="1、两集合容斥原理"></a>1、两集合容斥原理</h3><ol><li>A+B-A∩B&#x3D;总数-A、B均不满足个数</li></ol><h3 id="2、三集合容斥原理"><a href="#2、三集合容斥原理" class="headerlink" title="2、三集合容斥原理"></a>2、三集合容斥原理</h3><ol><li>标准型公式：A+B+C-A∩B-A∩C-B∩C+A∩B∩C&#x3D;总数-A、B、C均不满足个数</li><li><strong>非标准型公式：</strong><ul><li>A+B+C-b-2c&#x3D;总数-A、B、C均不满足个数</li><li>A+B+C&#x3D;a+2b+3c</li><li>其中a、b、c分别代表满足一个条件的数量、满足两个条件的数量与三个条件均满足的数量</li></ul></li></ol><h2 id="2、图示法"><a href="#2、图示法" class="headerlink" title="2、图示法"></a>2、图示法</h2><ol><li>根据题意画图，一般从最中间开始标起，逐层向外。</li><li>每个封闭区域只标记一个数</li><li>公式不行、只满足一个条件时优先使用</li></ol><h1 id="10、最值问题"><a href="#10、最值问题" class="headerlink" title="10、最值问题"></a>10、最值问题</h1><h2 id="1、最不利构造"><a href="#1、最不利构造" class="headerlink" title="1、最不利构造"></a>1、最不利构造</h2><ol><li>问法中出现“<strong>至少····保证····</strong>”或类似表述</li><li>在<strong>最不利的情况上加1</strong>，就是正确答案</li></ol><h2 id="2、构造数列类"><a href="#2、构造数列类" class="headerlink" title="2、构造数列类"></a>2、构造数列类</h2><ol><li><strong>题型特征：</strong>题目中的总量一定，问法为<strong>“最多&#x2F;少的····至多&#x2F;少······”“排名第N的至多&#x2F;少······”</strong></li><li><strong>解题思路：</strong><ul><li><strong>排序定位：</strong>根据主体个数进行排列，锁定要求的主体</li><li><strong>反向构造数列：</strong>若使其中一个数尽可能大，则其他数就应该尽可能小；反之亦然</li><li><strong>加和求解：</strong>总数一定，加和求所求个数</li></ul></li><li><strong>注意：</strong>计算结果为非整数时，问至多则向下取整，问至少则向上取整</li></ol><h2 id="3、多集合反向构造"><a href="#3、多集合反向构造" class="headerlink" title="3、多集合反向构造"></a>3、多集合反向构造</h2><ol><li>问法：<strong>这些条件都满足的至少有多少</strong></li><li>解题思路：<strong>反向、求和、做差</strong></li></ol><h1 id="11、几何问题"><a href="#11、几何问题" class="headerlink" title="11、几何问题"></a>11、几何问题</h1><h2 id="1、平面几何"><a href="#1、平面几何" class="headerlink" title="1、平面几何"></a>1、平面几何</h2><ol><li><p>n边形的内角和&#x3D;<strong>（n-2）×180°</strong>，外角和恒等于<strong>360°</strong></p></li><li><p><strong>常见周长公式：</strong></p><ul><li>C<del>正方形</del>&#x3D;4a；</li><li>C<del>长方形</del>&#x3D;2（a+b）；</li><li>C<del>圆</del>&#x3D;2Πr</li></ul></li><li><p><strong>常见面积公式：</strong></p><ul><li><p>S<del>正方形</del>&#x3D;a^2^</p></li><li><p>S<del>长方形</del>&#x3D;ab</p></li><li><p>S<del>圆</del>&#x3D;Πr^2^</p></li><li><p>S<del>三角形</del>&#x3D;1&#x2F;2（ah）</p></li><li><p>S<del>平行四边形</del>&#x3D;ah</p></li><li><p>S<del>梯形</del>&#x3D;1&#x2F;2（a+b）h</p></li><li><p>S<del>扇形</del>&#x3D;n&#x2F;360（Πr^2^）</p></li></ul></li><li><p><strong>假设长度一定</strong>：面积大-&gt;圆，围成的方形一定是正方形</p></li></ol><h2 id="2、立体几何"><a href="#2、立体几何" class="headerlink" title="2、立体几何"></a>2、立体几何</h2><ol><li><strong>常见的表面积公式：</strong><ul><li>S<del>球表面积</del>&#x3D;4Πr^2^</li><li>S<del>长方体表面积</del>&#x3D;2ab+2bc+2ac</li><li>S<del>正方体表面积</del>&#x3D;6a^2^</li><li>S<del>圆柱的表面积</del>&#x3D;2Πrh+2Πr^2^</li><li>S<del>圆柱侧面积</del>&#x3D;2Πrh</li></ul></li><li><strong>常见体积公式：</strong><ul><li>正方体体积：a^3^</li><li>长方体体积：abc</li><li>球的体积：4&#x2F;3（ΠR^3^）</li><li>圆柱的体积：Πr^2^h&#x3D;sh</li><li>圆锥的体积：1&#x2F;3Πr^2^h</li><li>棱柱体积：sh</li><li>棱锥体积：1&#x2F;3sh</li></ul></li></ol><h2 id="3、几何特性"><a href="#3、几何特性" class="headerlink" title="3、几何特性"></a>3、几何特性</h2><ol><li>若将一个图形尺寸扩大为原来的n倍，则：<ul><li>对应角度不变</li><li>周长为原来的n倍</li><li>面积和表面积为原来的n^2^倍</li><li>体积为原来的n^3^倍</li></ul></li><li>几何最值理论：<ul><li>平面几何中，若周长一定，越接近于圆，面积越大</li><li>平面几何中，若面积一定，越接近于圆，周长越小</li><li>立体几何中，若表面积一定，越接近于球，体积越大</li><li>立体几何中，若体积一定，越接近于球，表面积越小</li></ul></li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304192004183.jpg"                      alt="1e69797a4ac39382b2f6f2cf4376a3e"                ></p><h1 id="12、时间问题"><a href="#12、时间问题" class="headerlink" title="12、时间问题"></a>12、时间问题</h1><h2 id="1、年龄问题"><a href="#1、年龄问题" class="headerlink" title="1、年龄问题"></a>1、年龄问题</h2><ol><li>年龄&#x3D;现在年份-出生年份</li><li>两人年龄之差始终不变</li><li>没过n年，每个人都长了n岁</li><li>两个人的年龄倍数随着时间推移而变小</li><li><strong>常用方法：</strong>代入排除法和方程法</li><li><strong>常识：</strong>属相生日相同即年龄差为12的倍数、父母年龄相仿、父母与孩子年龄差差不多为20~30岁</li></ol><h2 id="2、周期问题"><a href="#2、周期问题" class="headerlink" title="2、周期问题"></a>2、周期问<strong>题</strong></h2><ol><li><p><strong>平年与闰年：</strong></p><ul><li>年份除以4，除尽为闰年，除不尽为平年</li><li>若年份后两位为零，则除以400，除尽为闰年，除不尽为平年</li><li>平年：365天；闰年：366天</li><li>四年一闰，百年不闰，四百年在闰</li><li>2月来说，闰年为29天，平年为28天</li></ul><hr><h3 id="1、周期余数"><a href="#1、周期余数" class="headerlink" title="1、周期余数"></a>1、周期余数</h3><ol><li>若一串事务以T为周期，且A÷T&#x3D;N余a，那么第A项等同于第a项；如果可以整除，那么第A项就等于周期中最后一项，即为T项</li></ol><h3 id="2、周期相遇"><a href="#2、周期相遇" class="headerlink" title="2、周期相遇"></a>2、周期相遇</h3><ol><li>已知每个主体的小周期，则相遇的大周期为各个小周期的最小公倍数</li><li>每隔n天，周期为（n+1）天</li></ol></li></ol><h3 id="3、星期计算与推断"><a href="#3、星期计算与推断" class="headerlink" title="3、星期计算与推断"></a>3、星期计算与推断</h3><ol><li><strong>题型特征：</strong>一段时间内有若干个周几，推算某一天为周几</li><li><strong>常用结论：</strong><ul><li>连续七天内，周一至周日均出现1次</li><li>连续28天内，周一至周日均出现4次</li><li>连续7n天内，周一至周日均出现n次</li></ul></li><li><strong>如果过一整年问今天时周几：</strong>闰年是当前星期+2；平年是当前星期+1</li></ol><h2 id="3、钟表问题（就是追及问题）"><a href="#3、钟表问题（就是追及问题）" class="headerlink" title="3、钟表问题（就是追及问题）"></a>3、钟表问题（就是追及问题）</h2><ol><li>时针每分钟走0.5°，分针每分钟走6°，速度差为5.5°&#x2F;分，速度之比是1：12</li><li>直角：每小时2次，每昼夜44次</li><li>重合：每小时1次，每昼夜22次</li><li>180°角：每小时1次，每昼夜22次</li></ol><h1 id="13、计算问题"><a href="#13、计算问题" class="headerlink" title="13、计算问题"></a>13、计算问题</h1><ol><li>等差数列：S<del>n</del>&#x3D;平均数×项数&#x3D;中位数×项数</li><li>等差数列通项公式：a<del>n</del>&#x3D;a<del>1</del>+（n-1）d</li></ol><h1 id="14、计算杂题"><a href="#14、计算杂题" class="headerlink" title="14、计算杂题"></a>14、计算杂题</h1><h2 id="1、植树问题"><a href="#1、植树问题" class="headerlink" title="1、植树问题"></a>1、植树问题</h2><ol><li>单边线性植树公式（两端都植）：棵树&#x3D;总长÷间隔+1</li><li>单边楼间植树公式（两端都不植）：棵树&#x3D;总长÷间隔-1</li><li>环形植树公式：棵树&#x3D;总长÷间隔</li></ol><h2 id="2、方阵问题"><a href="#2、方阵问题" class="headerlink" title="2、方阵问题"></a>2、方阵问题</h2><ol><li><strong>若正方形方阵一边人数为N，长方形方阵两边人数分别为M、N，则：</strong><ul><li>正方形实心方阵的总人数为N^2^，长方形实心方阵总人数为MN</li><li>正方形方阵最外层人数为4N-4，长方形方阵最外层人数为2（M+N）-4</li><li>方阵相邻两层人数相差为8人</li></ul></li></ol><h2 id="3、牛吃草问题"><a href="#3、牛吃草问题" class="headerlink" title="3、牛吃草问题"></a>3、牛吃草问题</h2><ol><li>草地原有草量&#x3D;（牛吃草的效率-每天长草的效率）×天数</li></ol><h2 id="4、空瓶换酒问题"><a href="#4、空瓶换酒问题" class="headerlink" title="4、空瓶换酒问题"></a>4、空瓶换酒问题</h2><ol><li>（N-1）个空瓶还1酒（只有酒无瓶）。因此X个空瓶最多可以换到X&#x2F;（N-1）酒</li></ol><h2 id="5、比赛问题"><a href="#5、比赛问题" class="headerlink" title="5、比赛问题"></a>5、比赛问题</h2><ol><li>N支队伍进行淘汰赛：两两比赛，输一局就淘汰出局。每一轮淘汰一般选手，直至产生最后的冠军<ul><li>决出冠军亚军，需要比赛（N-1）场</li><li>决出1、2、3、4名，需要比赛N场</li><li>若总数为奇数，则此轮比赛由一支队伍轮空</li></ul></li><li>N支队伍进行循环赛：每支队伍都能和其他队伍比赛<strong>一次或两次</strong><ul><li>进行单循环赛，需要比赛C^2^<del>N</del></li><li>进行双循环赛，需要比赛A^2^<del>N</del></li></ul></li></ol><h2 id="6、拿牌问题"><a href="#6、拿牌问题" class="headerlink" title="6、拿牌问题"></a>6、拿牌问题</h2><ol><li>第一次拿完牌后，恰好凑成最大最小数之和的倍数</li></ol><h2 id="7、天平称量问题"><a href="#7、天平称量问题" class="headerlink" title="7、天平称量问题"></a>7、天平称量问题</h2><ol><li>直接选最小</li><li>N次称量可以从3^N^个物品中，选出具有差异的残次品</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1、代入排除法&quot;&gt;&lt;a href=&quot;#1、代入排除法&quot; class=&quot;headerlink&quot; title=&quot;1、代入排除法&quot;&gt;&lt;/a&gt;1、代入排除法&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;题型特征&lt;/strong&gt;：····分别是····；·····各是···</summary>
      
    
    
    
    
    <category term="行测" scheme="http://example.com/tags/%E8%A1%8C%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>实习之第一次笔试</title>
    <link href="http://example.com/2023/04/13/%E5%AE%9E%E4%B9%A0%E4%B9%8B%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%AC%94%E8%AF%95/"/>
    <id>http://example.com/2023/04/13/%E5%AE%9E%E4%B9%A0%E4%B9%8B%E7%AC%AC%E4%B8%80%E6%AC%A1%E7%AC%94%E8%AF%95/</id>
    <published>2023-04-13T06:24:15.000Z</published>
    <updated>2023-04-13T07:37:44.324Z</updated>
    
    <content type="html"><![CDATA[<p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131426637.png"                      alt="image-20230413142624390"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131526006.png"                      alt="image-20230413152630847"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131526713.png"                      alt="image-20230413152639571"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131526589.png"                      alt="image-20230413152656475"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131527658.png"                      alt="image-20230413152707535"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131527715.png"                      alt="image-20230413152721583"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131527817.png"                      alt="image-20230413152732676"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131527087.png"                      alt="image-20230413152741951"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131527986.png"                      alt="image-20230413152750865"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131527351.png"                      alt="image-20230413152759235"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131528227.png"                      alt="image-20230413152807106"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131528433.png"                      alt="image-20230413152815341"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131528223.png"                      alt="image-20230413152831105"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131528288.png"                      alt="image-20230413152849156"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131529713.png"                      alt="image-20230413152916602"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131529465.png"                      alt="image-20230413152940310"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131529598.png"                      alt="image-20230413152953441"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131530026.png"                      alt="image-20230413153009888"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131530407.png"                      alt="image-20230413153030283"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131536195.png"                      alt="image-20230413153650983"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131537483.png"                      alt="image-20230413153714261"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304131537715.png"                      alt="image-20230413153728528"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img  
                     lazyload
                     src=&quot;/images/loading.svg&quot;
                     data-src=&quot;https://raw.githubuser</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>面试之常见的算法</title>
    <link href="http://example.com/2023/04/12/%E9%9D%A2%E8%AF%95%E4%B9%8B%E5%B8%B8%E8%A7%81%E7%9A%84%E7%AE%97%E6%B3%95/"/>
    <id>http://example.com/2023/04/12/%E9%9D%A2%E8%AF%95%E4%B9%8B%E5%B8%B8%E8%A7%81%E7%9A%84%E7%AE%97%E6%B3%95/</id>
    <published>2023-04-12T08:44:32.000Z</published>
    <updated>2023-04-12T09:07:52.269Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>行测之言语理解</title>
    <link href="http://example.com/2023/04/06/%E8%A1%8C%E6%B5%8B%E4%B9%8B%E8%A8%80%E8%AF%AD%E7%90%86%E8%A7%A3/"/>
    <id>http://example.com/2023/04/06/%E8%A1%8C%E6%B5%8B%E4%B9%8B%E8%A8%80%E8%AF%AD%E7%90%86%E8%A7%A3/</id>
    <published>2023-04-06T02:33:07.000Z</published>
    <updated>2023-04-19T13:05:36.246Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、片段阅读"><a href="#一、片段阅读" class="headerlink" title="一、片段阅读"></a>一、片段阅读</h1><h2 id="1、中心理解题"><a href="#1、中心理解题" class="headerlink" title="1、中心理解题"></a>1、中心理解题</h2><ol><li><strong>题型特征：</strong>题干中出现“主要&#x2F;旨在&#x2F;重在&#x2F;意在&#x2F;想要说明（论述、强调）&#x2F;主旨&#x2F;主题&#x2F;观点&#x2F;概括”等标志词。</li><li><strong>解题思路：</strong>寻找中心句或整体把握文段中心<ul><li>看提问方式，辨别题型</li><li>边读边勾画，明确中心句式话题</li><li>中心句或话题，匹配选项，对比择优</li></ul></li><li><strong>对比择优：</strong>优先匹配话题，再去对比细节（差中选优、优中选优）</li><li><strong>干扰选项特征：</strong><ul><li>非文段重点，非文段核心话题</li><li>无中生有</li></ul></li></ol><hr><h3 id="1、转折关系"><a href="#1、转折关系" class="headerlink" title="1、转折关系"></a>1、转折关系</h3><ol><li><strong>答题要点：</strong><ul><li>转折之后为重点</li><li>巧用“引用+转折”验证答案，加强理解</li></ul></li><li>典型关联词：虽然····但是···、尽管·····可是····、不过、然而、却、其实&#x2F;事实上&#x2F;实际上</li><li>转折文段中，除了单纯的考察一个转折关联词，<strong>还会出现多个关联词情况</strong>，所以要根据实际情况，结合行文脉络判定文段的重点</li><li><strong>错误选项特征：</strong><ul><li>转折前的内容</li><li>围绕例子的表述</li><li>围绕原因的表述</li><li>无中生有</li></ul></li></ol><h3 id="2、因果关系"><a href="#2、因果关系" class="headerlink" title="2、因果关系"></a>2、因果关系</h3><ol><li><strong>答题要点：</strong><ul><li>结论是重点</li><li>注重选项设置：·····的原因，匹配结论话题即可</li><li>宏观的代词（一个词可以指代上文所有内容）可以引导结论</li></ul></li><li><strong>标志词：</strong><ul><li>最常考：因此、因而、故而、所以、从而</li><li>易忽略：可见、看来</li><li>文段选项均可能出现：导致、致使、使得、造成</li></ul></li><li>主体、话题法：<ul><li>主体：文段着重论述的，所围绕论述的对象（人、事物、概念）</li><li>话题：与主体相关的事件</li></ul></li><li>结论之后有其他关联词：当结论之后出现转折等关联词时，需要结合整个文段的行文脉络进行把握</li></ol><h3 id="3、必要条件关系"><a href="#3、必要条件关系" class="headerlink" title="3、必要条件关系"></a>3、必要条件关系</h3><ol><li><strong>标志词：</strong>只有····才·····</li><li><strong>理论要点：</strong>必要条件时重点，即只有和才之间的内容为重点</li><li><strong>同义替换：</strong>只有A才B&#x3D;A是B的必要条件&#x3D;不A则不B&#x3D;A是B的前提、基础、保障、方法</li><li><strong>解决问题的对策</strong>是重点</li><li><strong>对策的标志词：</strong><ul><li>应该、应当、应、需要、要</li><li>通过&#x2F;采取···手段&#x2F;途经&#x2F;措施&#x2F;方法&#x2F;方式&#x2F;渠道，才能····</li><li>前提、基础、保障</li><li>负有···的义务&#x2F;····必由之路&#x2F;势在必行&#x2F;要领在于·····</li></ul></li><li>如果遇到“提出问题+分析问题“结构的文段，那么要优先能解决问题的对策</li><li><strong>反面论证：</strong><ul><li>典型格式;如果、一旦、倘若····+不好的结果，除非····否则</li><li>使用方法：将【如果】、【倘若】之后的内容反过来，即为正确的做法，有【否则】的句子，直接看【否则】之前</li></ul></li><li><strong>行文结构给对策：</strong><ul><li>提出问题-分析问题-解决问题</li><li>提出问题-解决问题</li><li>问题+精准原因+严重后果（对策要基于话题）</li></ul></li><li>如果文段有明确的对策，直接抓住对策即可快速把握文段中心</li><li>文段<strong>只</strong>出现问题时，解决问题可能出现在选项中作为正确答案</li></ol><h3 id="4、并列关系"><a href="#4、并列关系" class="headerlink" title="4、并列关系"></a>4、并列关系</h3><ol><li><strong>答题要点：</strong>不分主次、不可偏颇、全面概括（并列加和，归纳共性）</li><li><strong>文段标志：</strong>出现“此外、同时、另外、；”等标志词、标点，或文段中无明显关联词，或句式相近。</li><li><strong>隐形并列：</strong>并列层次（判断标准：谁跟谁一伙）</li><li><strong>错误选项特征：</strong>表述片面</li><li>除了典型的标志词外，针对<strong>同一主体在不同领域或者不同方面</strong>的论述，也属于并列结构</li><li>如果文段的中心句为并列结构，需概括全面完整</li><li>并列文段通常包括多方面的情况，要全面概括，选项中会出现“许多、一系列、各种”等标志词，<strong>一定要注意</strong>。</li><li>除了典型的标志词外，时间顺序也可以引导并列结构，而解题的关键依旧是全面概括</li><li><strong>文段中的总与分句子关系决定文段结构：</strong><ul><li><strong>总：</strong>观点、结论、对策</li><li>分：铺垫背景、举例子、解释原因、解释概念、解释过程、找证据（实验、报告、调查、研究、数据）</li></ul></li><li>如果文段中有<strong>两个主题词</strong>，正确答案必须同时包括这<strong>两个主题词</strong></li></ol><h3 id="5、程度词"><a href="#5、程度词" class="headerlink" title="5、程度词"></a>5、程度词</h3><ol><li>程度词所在的语句通常为文段<strong>重点</strong>，特别是程度词引导的名词往往是文段主题词</li><li><strong>标志词：</strong><ul><li><strong>典型程度词：</strong>更、最、尤其、根本、正是、真正等</li><li><strong>非典型程度词：</strong>致命、无疑是、罪魁祸首、首要方式</li></ul></li></ol><h3 id="6、行文脉络"><a href="#6、行文脉络" class="headerlink" title="6、行文脉络"></a>6、行文脉络</h3><ol><li><strong>中心句特征：</strong>形式（重点词特征）、内容（观点，一般情况下是明确的）</li><li>脉络相对简单的，是典型“提出观点+举例论证”的题目，<strong>首句观点即为文段中心</strong></li><li>分总结构：代词（这、此）出现在末尾，起到总结前文的作用</li><li><strong>分述句的作用</strong>是对文段重点内容进行解释说明或加强论证（举例子、数据资料、正反论证、原因解释、并列分述）</li><li>当文段中出现由“比如、例如、譬如”等词引导的例子时，可快速阅读，且围绕例子设置的选项不是文段重点，应当排除</li></ol><h2 id="2、标题填入题"><a href="#2、标题填入题" class="headerlink" title="2、标题填入题"></a>2、标题填入题</h2><ol><li><strong>标题填入题：</strong>给文段选择恰当的标题（体现文段重点）</li><li><strong>逆向思维：</strong>警惕范围过大的选项</li><li>文段中出现并列结构时，出题人常常将其中的一部分内容，即片面的表达，<strong>设置为干扰选项</strong>。</li><li><strong>标题的选择</strong>应首先匹配文段的中心</li><li>故事类的文段通常会采用“开端-发展-高潮-结局”的结构，一般而言，<strong>高潮和结局</strong>部分比较重要</li></ol><h2 id="3、细节判断题"><a href="#3、细节判断题" class="headerlink" title="3、细节判断题"></a>3、细节判断题</h2><ol><li><strong>题型特征：</strong>题干中出现“理解正确&#x2F;不正确”“符合&#x2F;不符合”等标志词</li><li>警惕细节判断题选项设置的<strong>四大陷阱：</strong><ul><li>无中生有：文中没有，选项偏说有（比较关系、因果关系）</li><li>偷换概念：替换、混搭、数量、时态、概念范围扩大、语气</li><li>偷换逻辑：强加因果、因果倒置</li><li>偷换时态：过去（已经、了、完成）、现在（正在、在···中、着）和将来（将要、立刻、以后、趋势）</li></ul></li><li>选项中出现绝对化表述要警惕 </li><li><strong>相对绝对法：</strong>迅速搞定细节题的重要法宝<ul><li><strong>绝对标志词：</strong>一定、全部、完全、所有、均、永远、任何、取代、主导、唯一、只要····就····、无论···都···等</li><li><strong>相对标志词：</strong>可能、也许、大概、一般、尽量</li><li>如需选择“<strong>正确&#x2F;相符的</strong>”，包括<strong>相对标志词</strong>的选项作为正确答案，或可优先验证</li><li>如需选择“<strong>错误&#x2F;不相符的</strong>”，包括<strong>绝对标志词</strong>的选项作为正确答案，或可优先验证</li></ul></li><li><strong>细节查找：</strong><ul><li>查找原因（要素）类：根据文意，影响····的因素是&#x2F;····的关键是····，</li><li>定位查找对象，就近查找，直接确定</li><li>查找目的&#x2F;意义：文段中提到···是为了证明</li><li>查找例子，引用所论证的观点&#x2F;结论</li></ul></li><li><strong>解题思路：</strong>根据选项长短<ul><li>选项短：先浏览选项，后阅读文段，排除+确定</li><li>选项长：扫一眼选项（选项有明确的定位功能-摇摆式、定位、排除+确定；选项中无明确的定位功能-读完文段后再作答（划分话题群））</li></ul></li></ol><h2 id="4、词句理解题"><a href="#4、词句理解题" class="headerlink" title="4、词句理解题"></a>4、词句理解题</h2><ol><li><strong>题型特征：</strong>这段文字中“某某”指的&#x2F;含义&#x2F;意思是·····</li><li>若词句出现在文段首位，则需整体把握文段内容</li><li>如果词句前出现“：”“——”等表示解释说明的标点符号，则重要理解<strong>其前面</strong>的内容。</li><li>若所需理解的词语为代词，则主要理解代词之前的内容</li></ol><h1 id="二、语句表达"><a href="#二、语句表达" class="headerlink" title="二、语句表达"></a>二、语句表达</h1><h2 id="1、语句排序题"><a href="#1、语句排序题" class="headerlink" title="1、语句排序题"></a>1、语句排序题</h2><ol><li><strong>考察目的：</strong>语句排序题即按正确顺序重新排列文段给出的语句</li><li>充分利用选项提示，排除法解题</li><li><strong>认知逻辑：</strong>由整体到细节<ul><li>介绍概念，整体描述</li><li>详说过程&#x2F;细节（事情发展的顺序）</li><li>前提（语句基于同一话题）</li></ul></li></ol><hr><h3 id="1、首句特征"><a href="#1、首句特征" class="headerlink" title="1、首句特征"></a>1、首句特征</h3><ol><li><strong>常见首句特征：</strong><ul><li>背景引入（随着、近年来、在····大背景&#x2F;环境下）</li><li>下定义（····就是&#x2F;是指）</li><li>提出观点（有人说、人们普遍认为）</li></ul></li><li><strong>非首句特征：</strong><ul><li>指代词单独出现（结论类、补充类表述）</li><li>关联词后半部分</li></ul></li></ol><h3 id="2、确定捆绑集团"><a href="#2、确定捆绑集团" class="headerlink" title="2、确定捆绑集团"></a>2、确定捆绑集团</h3><ol><li><strong>关联词使用方法：</strong><ul><li><strong>配套出现：</strong>根据配套出现的关联词可直接将两句话捆绑</li><li><strong>单独出现：</strong>根据关联词的作用寻找另一半，转折找相反句式，并列则找相同句式</li><li><strong>话题捆绑</strong></li><li><strong>逻辑关系捆绑：</strong>因果关系、转折关系、递进关系</li></ul></li><li><strong>指代词：</strong><ul><li><strong>标志词：</strong>它、他、他们、这、那</li><li><strong>使用方法：</strong>找准指代词指代的内容，将两句话进行捆绑</li><li>当时，也是一种代词，可以用来指代时间</li></ul></li></ol><h3 id="3、确定顺序"><a href="#3、确定顺序" class="headerlink" title="3、确定顺序"></a>3、确定顺序</h3><ol><li><strong>时间顺序：</strong>语句中出现多个时间，按照时间发展脉络排列先后顺序</li><li><strong>逻辑顺序：</strong><ul><li>前文出现A和B，后文基本会按照先A后B的顺序展开讨论</li><li>A和B即可能出现在首句，同样也可能出现在尾句</li><li>不同概念之间会有内在联系，如从宏观到微观、从整体到局部、从大到小、从前提到结果，层层深入，层层递进</li></ul></li></ol><h3 id="4、确定尾句"><a href="#4、确定尾句" class="headerlink" title="4、确定尾句"></a>4、确定尾句</h3><ol><li>引用<strong>结论</strong>和提出<strong>对策</strong>的语句通常适合作为尾句</li><li><strong>典型标志词：</strong>因此、所以、看来、这+应该、需要</li><li><strong>“这些”</strong>除了可以作为指代词寻找绑定集团外，在文段结尾可以起到引导结论、总结全文的作用。</li></ol><h2 id="2、语句填空题"><a href="#2、语句填空题" class="headerlink" title="2、语句填空题"></a>2、语句填空题</h2><ol><li><strong>题型特征：</strong>填入画横线部分最恰当的一项是····（所填入的句子是对上下文原有信息的重复）</li><li><strong>解题思路：</strong>捋顺文段话题，根据上下文限定作答</li><li><strong>最忌讳：</strong>想当然、无中生有、新信息</li><li><strong>做题技巧：</strong><ul><li>对比择优–和上下文衔接紧密程度、具体话题、倾向等</li><li>没有心仪选项–考虑同义替换、表达、倾向等，排除法择优</li><li>选项长，文段短–抓大放小，精选话题</li><li>内容特殊、选项多为诗歌、名言、谚语–提炼主题、话题</li><li>形式特殊–换汤不换药，从容排除，确定答案</li></ul></li></ol><hr><h3 id="1、横线在首尾"><a href="#1、横线在首尾" class="headerlink" title="1、横线在首尾"></a>1、横线在首尾</h3><ol><li>横线位置：文段结尾，且为完整语句</li><li>句子作用：往往都是中心句</li><li>解题原则：需要对整个文段的内容进行全面概括和总结</li><li>横线在结尾（总结前文、提出对策；保证前后主语或话题一致）</li></ol><h3 id="2、横线在中间"><a href="#2、横线在中间" class="headerlink" title="2、横线在中间"></a>2、横线在中间</h3><ol><li>横线位置：位于文段中间</li><li>句子作用：衔接上下文、<strong>注意引出下文新话题</strong></li><li>横线位于文段中间时，用<strong>代入排除法解题速度</strong>更快</li><li>除了要注意上下文衔接，还要注意横线前后出现的关联词</li></ol><h3 id="3、接语选择题"><a href="#3、接语选择题" class="headerlink" title="3、接语选择题"></a>3、接语选择题</h3><ol><li>接语选择题，就是给出一段文字，要求考生在此基础上推测出下文，注意<strong>审题</strong>、注意<strong>表达倾向</strong>、根据<strong>新话题预测下文</strong></li><li>文段结构为“提出问题+分析问题”，而<strong>解决问题</strong>往往出现在选项中</li><li>尾句为解决问题的对策时，后文往往会围绕<strong>对策</strong>部分展开具体论述</li><li>根据<strong>行文脉络，预测下文：</strong><ul><li>上文有问题，下文要解决</li><li>上文提出观点+解释说明，下文围绕观点继续说；如果没有围绕观点表达的，则排除无关项旧话题</li></ul></li></ol><h1 id="三、逻辑填空"><a href="#三、逻辑填空" class="headerlink" title="三、逻辑填空"></a>三、逻辑填空</h1><ol><li>考察实质：所填词语和语境信息的匹配程度（对比择优&#x2F;组团择优）</li><li>词语加双引号的情况：<ul><li>引用其字面指代含义，扩大搭配范围，使表达更形象</li><li>反讽（不常见）</li></ul></li></ol><hr><h2 id="1、词的辨析"><a href="#1、词的辨析" class="headerlink" title="1、词的辨析"></a>1、词的辨析</h2><h3 id="1、词义侧重"><a href="#1、词义侧重" class="headerlink" title="1、词义侧重"></a>1、词义侧重</h3><ol><li>角度一：<strong>语素差异、构词拆分</strong><ul><li>长相相近拆语素，拆分语素，拆分构词—明确词语差异、侧重点</li><li>理解语境，明确需求</li><li>拆分构词，对比择优</li></ul></li><li>角度二：<strong>程度轻重</strong><ul><li>意思相近看程度：依托选项提示，辨别考点</li><li>依据选项提示，明确考点</li><li>根据语境的轻重程度，对比择优</li></ul></li><li><strong>面对长得特别像、发音也相似的词语</strong>，考生要重点区分两个词语中的不同部分，<strong>辨别方法有：</strong><ul><li><strong>拆字组词：</strong>用不一样的字单独组词（推脱：脱可以组词摆脱）</li><li><strong>整词搭配：</strong>用整个词进行组词搭配（推脱责任）</li></ul></li></ol><h3 id="2、固定搭配"><a href="#2、固定搭配" class="headerlink" title="2、固定搭配"></a>2、固定搭配</h3><ol><li><strong>根据词性找搭配：</strong><ul><li>若选项都是<strong>动词</strong>，回到文段找<strong>名词</strong>或<strong>副词</strong></li><li>若选项都是<strong>名词</strong>，回到文段找<strong>动词</strong>或<strong>形容词</strong></li></ul></li><li>修饰成分：<ul><li>__ 的 __</li><li>__ 地 __</li><li>保持一致形成搭配</li></ul></li><li>一个词语同时搭配多个词语<ul><li><strong>提示标志：</strong>多由并列关联词引导</li><li><strong>使用方法：</strong>所填词语要与多个词语均能搭配</li></ul></li><li>找准搭配对象</li></ol><h3 id="3、程度轻重"><a href="#3、程度轻重" class="headerlink" title="3、程度轻重"></a>3、程度轻重</h3><ol><li>词义程度轻重是指意义相近的词语在辨析程度和性质上有轻重的差别</li><li><strong>象征</strong>一般指用具体事务表现<strong>抽象</strong>含义：玫瑰象征爱情、鸽子象征和平</li></ol><h3 id="4、感情色彩"><a href="#4、感情色彩" class="headerlink" title="4、感情色彩"></a>4、感情色彩</h3><ol><li>感情色彩是指词语所反映出来的人对某事某物的<strong>情感倾向、态度、评价</strong>等，分为<strong>褒义（成果）、中性（结果）、贬义（后果）</strong>三种类型</li><li>所填词语的感情色彩与文段的感情色彩保持一致</li></ol><h2 id="2、语境分析"><a href="#2、语境分析" class="headerlink" title="2、语境分析"></a>2、语境分析</h2><h3 id="1、关联关系"><a href="#1、关联关系" class="headerlink" title="1、关联关系"></a>1、关联关系</h3><ol><li><strong>转折关系：</strong>__ 但&#x2F;然而&#x2F;却 __<ul><li><strong>理论要点：</strong>转折关联词前后<strong>语义相反、感情色彩</strong>相反</li><li><strong>标志词：</strong>但是、可是、然而、却</li></ul></li><li><strong>因果关系：</strong>__ 所以&#x2F;因而 __<ul><li><strong>理论要点：</strong>横线前后构成因果关系</li><li><strong>标志词：</strong>因为····所以····、由于·····因此等</li></ul></li><li><strong>并列关系：</strong><ul><li><strong>标志词：</strong>同义并列（“、”“，”），反义并列（”不是····而是···“”是·····不是····“”相反“”反之“）</li><li><strong>理论要点：</strong>同义并列（语义相近），反义并列（前后语义相反或相对）</li><li>句式<strong>相同或相近</strong>，要结合前后语境来分析</li><li><strong>特别注意：</strong>三个句子，句式一致：服从整体语境的前提下，根据其他两个考虑是否形成<strong>差异化</strong></li><li>并、并且（优先充当递进关系）</li></ul></li></ol><h3 id="2、对应关系"><a href="#2、对应关系" class="headerlink" title="2、对应关系"></a>2、对应关系</h3><ol><li><strong>解释类对应：</strong><ul><li><strong>题干特点：</strong>分句，______，分句，即文段中有分句对横线处所填词语进行解释说明</li><li><strong>标志词：</strong>即、就是、无异于、比如、例如、冒号（:）、破折号（——）等。</li><li><strong>使用方法：</strong>准确找到与横线处所填词语想对应的句子，理解句意，对应选项</li></ul></li><li>要对<strong>“无异于”“无疑是”</strong>等解释类对应的标志词保持敏感，当这一类标志词出现时，大家可以<strong>从前文中找到对应内容</strong></li><li><strong>限定照应：</strong><ul><li>背景—-&gt;结论（因果）</li><li>讨论前提—–&gt;讨论内容（两头都要顾）</li><li>条件—–&gt;结果（只有·····才能······）</li></ul></li><li>形象性照样</li><li><strong>重点词句对应：</strong><ul><li>形象化表达，如拟人、类比等形象表达</li><li>指代词</li><li>主题词，即文段主要围绕论述的核心名词</li></ul></li></ol><h1 id="三、篇章阅读"><a href="#三、篇章阅读" class="headerlink" title="三、篇章阅读"></a>三、篇章阅读</h1><ol><li><strong>答题策略：</strong><ul><li>标注段落号</li><li>看问题，边读边做</li><li><strong>顺序后置的题型</strong>：针对全文的(中心理解题，细节题)</li><li>如果第一题时针对全文的细节理解，则可<strong>先看选项</strong></li><li>观看<strong>没有用到的</strong>段落，也许会出现所需的信息点</li></ul></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、片段阅读&quot;&gt;&lt;a href=&quot;#一、片段阅读&quot; class=&quot;headerlink&quot; title=&quot;一、片段阅读&quot;&gt;&lt;/a&gt;一、片段阅读&lt;/h1&gt;&lt;h2 id=&quot;1、中心理解题&quot;&gt;&lt;a href=&quot;#1、中心理解题&quot; class=&quot;headerlink&quot; ti</summary>
      
    
    
    
    
    <category term="行测" scheme="http://example.com/tags/%E8%A1%8C%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>行测之判断推理</title>
    <link href="http://example.com/2023/03/31/%E8%A1%8C%E6%B5%8B%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/"/>
    <id>http://example.com/2023/03/31/%E8%A1%8C%E6%B5%8B%E4%B9%8B%E5%88%A4%E6%96%AD%E6%8E%A8%E7%90%86/</id>
    <published>2023-03-31T01:20:14.000Z</published>
    <updated>2023-04-01T13:43:45.715Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、图形推理"><a href="#一、图形推理" class="headerlink" title="一、图形推理"></a>一、图形推理</h1><h2 id="1、位置规律"><a href="#1、位置规律" class="headerlink" title="1、位置规律"></a>1、位置规律</h2><p><strong>题型特征</strong>：图形元素组成<strong>完全相同</strong>或者<strong>基本相同</strong></p><h3 id="1、平移"><a href="#1、平移" class="headerlink" title="1、平移"></a>1、平移</h3><ol><li>平移的方向<ul><li>直线方向：上下左右平移</li><li>时针方向：顺时针和逆时针平移</li><li>元素位置互换</li></ul></li><li>平移几格<ul><li>恒定</li><li>递增（递减）</li></ul></li><li>宫格型黑块平移：<ul><li><strong>题型特征</strong>：题干和选项大部分元素组成完全一致，个别图少一个黑块（个别黑块重合了）</li><li>外层是双胞胎（两个黑块）不好区分，可以先标号，再就近假设</li><li>16宫格，中间黑块数量相当，优先考虑内外圈分开看</li></ul></li><li>重难点：<ul><li>元素组成相同，优先考虑位置规律</li><li>个别元素可能重合</li><li>空白也可以作为平移的小元素</li><li>还剩2-3个选项，对比选项找差异</li><li>多个相同平移元素，就近假设</li></ul></li></ol><h3 id="2、旋转与翻转"><a href="#2、旋转与翻转" class="headerlink" title="2、旋转与翻转"></a>2、旋转与翻转</h3><ol><li><strong>重难点</strong>：两组图或者九宫格考旋转或翻转–&gt;看对称（看谁跟图三是对称的）</li><li><strong>命题思路</strong>：<ul><li>旋转方向：顺时针或者逆时针旋转</li><li>旋转角度：30、45、60、90°</li><li>以某条直线为轴进行翻转（x轴或者y轴）</li><li>翻转后再旋转</li></ul></li></ol><h2 id="2、样式规律"><a href="#2、样式规律" class="headerlink" title="2、样式规律"></a>2、样式规律</h2><h3 id="1、加减异同"><a href="#1、加减异同" class="headerlink" title="1、加减异同"></a>1、加减异同</h3><p><strong>特征</strong>：相同线条重复出现</p><ol><li>相加：将所有线条进行拼合（不常考）</li><li>相减：用其中一个图形的元素减去另一个图形的元素（不常考）</li><li>求同：将两图形中所有不同的元素去掉（不常考）</li><li><strong>求异</strong>：将两图形中所有相同元素去掉（重中之重）</li><li><strong>针对上面的小技巧</strong>：对比选项找差异</li></ol><p><strong>先样式还是先位置？</strong></p><ol><li>前两幅图有明显一样的线条，可以优先样式</li><li>前两幅图没有明显一样的线条，可以优先位置</li><li>当样式运算特征明显，但单纯考虑加减同异做不出来时，考虑样式规律和位置规律结合</li></ol><h3 id="2、黑白运算"><a href="#2、黑白运算" class="headerlink" title="2、黑白运算"></a>2、黑白运算</h3><p>这种题目通常以黑白块叠加之后颜色发生变化的形式出题</p><hr><ol><li>重难点：<ul><li>对比选项找差异</li><li>大块面积一起看</li></ul></li><li>方法：相同位置运算<ul><li>黑+白和白加黑不一定相同（陷阱）</li></ul></li><li>图形间轮廓相同，但是内在的颜色或图案不同<ul><li>各图黑块数量相同，优先考虑位置规律</li><li>各图黑块数量不同，优先考虑黑白运算</li></ul></li></ol><h2 id="3、属性规律"><a href="#3、属性规律" class="headerlink" title="3、属性规律"></a>3、属性规律</h2><p><strong>题型特征</strong>：元素组成不同</p><h3 id="1、对称性"><a href="#1、对称性" class="headerlink" title="1、对称性"></a>1、对称性</h3><ol><li>对称的类型<ul><li>轴对称图形：<strong>等腰元素</strong>的出现</li><li>中心对称图形：正着看和倒着看一模一样，比如<strong>S、Z、N和平行四边形</strong></li><li>既是轴对称又是中心对称图形：<strong>存在相互垂直的对称轴</strong></li></ul></li><li>对称轴的数量和方向：<ul><li>当题干图形和两个及以上的选项图形都是轴对称图形时，可能考数量</li><li>对称轴方向分为：横、竖、斜对称轴</li></ul></li><li>当题干均为轴对称图形，且出现了类似<strong>三角的图形即“三足鼎立”的图形</strong>时，可能要考<strong>对称轴的数量</strong>了</li><li>当题干均为轴对称图形，且均只有一条对称轴，一定要注意对称轴的<strong>方向</strong>。（看清楚旋转角度）</li><li><strong>最火的考法</strong>：对称轴经过点线面</li><li>2-3个面挨在一起，分开看对称轴的关系</li></ol><h3 id="2、曲直性"><a href="#2、曲直性" class="headerlink" title="2、曲直性"></a>2、曲直性</h3><p>曲直性分为以下三种：</p><ol><li>曲：图形只由曲线构成</li><li>直：图形只由直线构成</li><li>曲+直：图形由曲线和直线共同构成</li></ol><h3 id="3、开闭性"><a href="#3、开闭性" class="headerlink" title="3、开闭性"></a>3、开闭性</h3><p>开闭性分为以下两种：</p><ol><li>开放图形：不包含任何封闭空间，即没有窟窿，比如C</li><li>封闭图形：包含封闭空间，有窟窿，比如D</li></ol><h2 id="4、数量关系"><a href="#4、数量关系" class="headerlink" title="4、数量关系"></a>4、数量关系</h2><p><strong>题型特征</strong>：图形组成不同，且无明显属性规律</p><p><strong>注意</strong>：面是白的，黑的不是面</p><hr><h3 id="1、点"><a href="#1、点" class="headerlink" title="1、点"></a>1、点</h3><ol><li>只考虑交点，不考虑端点</li><li>交点中特殊的点-<strong>切点</strong></li><li>当题干图形中出现多次线条与线条<strong>相交叉</strong>的情况时，可以优先考虑<strong>数交点</strong>。当出现<strong>相切</strong>关系时，可能会考查<strong>切点或者直线与曲线的交点。</strong></li><li><strong>点的细化：</strong><ul><li>切点：出现较多相切的时候考虑</li><li>曲直交点：曲直交叉明显</li></ul></li></ol><h3 id="2、线"><a href="#2、线" class="headerlink" title="2、线"></a>2、线</h3><ol><li>当图形中出现多边形或单独一条直线时，<strong>优先考虑数直线</strong>；当图形中出现较多曲线时，<strong>优先考虑数曲线</strong></li><li>当有<strong>多端点，圆相交</strong>，则优先考虑<strong>数笔画</strong></li><li>如何确定图形最少可以通过几笔画出来？<ul><li>连通图的笔画数&#x3D;奇数点÷2。特例：<strong>奇数点为0的连通图可一笔画成。</strong></li><li><strong>连通图：</strong>图形中任意两点都是连通的</li><li><strong>奇点：</strong>若以一个点为起点，延伸出的线条数为奇数，则该点为奇点。（包括端点）</li><li><strong>偶点：</strong>若以一个点为起点，延伸出的线条数为偶数，则该点为偶点。</li></ul></li><li><strong>常考笔画规律的特征图形</strong>：五角星、月亮、日、田、日和田的变形图形、与圆有关的相交和相切图形、多端点图形。</li><li>内部是一笔画，外加一个连着的框还是一笔画</li></ol><h3 id="3、面"><a href="#3、面" class="headerlink" title="3、面"></a>3、面</h3><p>面：也称封闭空间、封闭区域、更形象的来说是<strong>窟窿</strong></p><hr><ol><li>窟窿居多，则优先数面</li><li><strong>什么时候数面？</strong><ul><li>图形被分割封闭面</li><li>生活化图形，粗线条图形</li></ul></li><li><strong>面的细化考法</strong><ul><li>所有面的形状（三角形、四边形）</li><li>相同面的数量（双胞胎）</li><li>最大&#x2F;最小面的形状、属性与外框的关系</li></ul></li></ol><h3 id="4、素"><a href="#4、素" class="headerlink" title="4、素"></a>4、素</h3><p>素：即元素，可细分为个数、种类数和部份数3中情况</p><p>当图形由很多独立的小元素构成时，可以优先考虑数素（出现黑色粗线条图形，优先数<strong>部分数</strong>），部分数：连载&#x3D;在一起就是一个部分数。</p><hr><ol><li>颜色不同，一般分为两种；大小不同，一般为一种</li><li>题干中出现字母，比如“i”“j”，通常按1种元素来计算。在数元素部分数的时候，均有2部分构成</li><li><strong>生活化的图形</strong>往往比较直观，希望大家牢记此时<strong>优先考虑部分数</strong></li><li><strong>考生活化粗线条类的考法：</strong><ul><li>属性（对称性、开闭）</li><li>部分数</li><li>面</li></ul></li><li><strong>更加细化的命题规律：</strong>当图形中出现独立的小元素，而元素的个数和种类数均无规律时，可以尝试<strong>数同种元素的个数</strong>。</li></ol><h3 id="5、角"><a href="#5、角" class="headerlink" title="5、角"></a>5、角</h3><p>角：一般考察图形内部包含的角，即0°~180°之间的角。角还分为锐角、直角和钝角。</p><hr><ol><li>折线图时，优先考虑数角；图形中出现直角时，可以优先关注<strong>直角</strong>。</li><li><strong>锐角特征图：</strong>折线、扇形、改造图</li><li><strong>直角特征图：</strong>十字交叉、T字形、直角三角形、明显改造图形</li><li><strong>细化考法：</strong>只数直角、锐角数</li></ol><h2 id="5、特殊规律"><a href="#5、特殊规律" class="headerlink" title="5、特殊规律"></a>5、特殊规律</h2><h3 id="1、功能元素"><a href="#1、功能元素" class="headerlink" title="1、功能元素"></a>1、功能元素</h3><p>常见的功能元素：黑点、白点、箭头等</p><hr><ol><li>常见的命题思路：<ul><li>点：曲直&#x2F;直直&#x2F;曲曲交点</li><li>线：最长&#x2F;最短、直&#x2F;曲线</li><li>角：直&#x2F;锐&#x2F;钝&#x2F;最大&#x2F;最小角</li><li>面：单独&#x2F;相交&#x2F;最大&#x2F;最小面、形状、属性</li><li>箭头：观察箭头之间的关系（垂直&#x2F;平行）</li></ul></li></ol><h3 id="2、图形间关系"><a href="#2、图形间关系" class="headerlink" title="2、图形间关系"></a>2、图形间关系</h3><p>题型特征：题干中每幅图都出现两个元素或当几个封闭空间连在一起</p><hr><ol><li>图形间关系主要分为三种：<ul><li>相离</li><li>相压：两图形上下覆盖，被压图形有部分线条被遮盖</li><li>相交：相交于面、相交于点、相交于边</li></ul></li><li>相交于面：考察相交面的形状、面积、属性（对称、曲&#x2F;直）</li><li>相交于点：可考察相交点的位置（上下、左右、内外）</li><li>相交于边：<ul><li>可考察相交边的数量</li><li>可考察相交边的样式：长&#x2F;短、整体&#x2F;部分、曲&#x2F;直等</li></ul></li><li>多个面连在一起：优先分开看对称，再看公共边</li></ol><h2 id="6、空间重构"><a href="#6、空间重构" class="headerlink" title="6、空间重构"></a>6、空间重构</h2><p><strong>排除思维</strong>非常重要！！！</p><hr><h3 id="1、六面体-相对面"><a href="#1、六面体-相对面" class="headerlink" title="1、六面体-相对面"></a>1、六面体-相对面</h3><ol><li>相对面判定法则：<ul><li>在平面展开图中，如果两个面在同一行或同一列，且中间隔了一个面，那么这两个面是相对面</li><li>在平面展开图中，如果两个面在Z字形两端，且紧靠着Z字形中间那条线，那么这两个面也是相对面</li></ul></li></ol><h3 id="2、六面体-公共边"><a href="#2、六面体-公共边" class="headerlink" title="2、六面体-公共边"></a>2、六面体-公共边</h3><ol><li>公共边判定法则：<ul><li>两个相邻面的相交线为公共边</li><li>在展开图上呈直角的两条边为同一条边</li><li>一列&#x2F;行连着4个面，两头的两条边是同一条边</li></ul></li><li>公共边延伸出的万能大法-<strong>画边法</strong><ul><li>找到一个确定面中的起点（唯一边或者唯一点）</li><li>在展开图和立体图中，从起点触发，分别按照顺时针方式标号</li><li>将展开图和立体图进行匹配，依据公共边不变的思维排除不符合的选项</li></ul></li></ol><h3 id="3、六面体-公共点"><a href="#3、六面体-公共点" class="headerlink" title="3、六面体-公共点"></a>3、六面体-公共点</h3><ol><li>三个面相邻，公共点不变</li><li>三个面挨在一起—优先考虑公共点</li><li>三个面没挨在一起—优先考虑公共边</li></ol><h1 id="二、定义判断"><a href="#二、定义判断" class="headerlink" title="二、定义判断"></a>二、定义判断</h1><ul><li>看清提问：看清楚问题是<strong>属于</strong>还是<strong>不属于</strong></li><li>抓准信息：抓住定义中的有效信息，终点信息做<strong>画圈</strong></li><li>比较选项：运用比较思维，择优选择</li></ul><hr><h2 id="1、关键词-主客体"><a href="#1、关键词-主客体" class="headerlink" title="1、关键词-主客体"></a>1、关键词-主客体</h2><ol><li>主体是指一个动作或事件的发起者或执行者；客体是指一个动作或行为指向的对象</li><li>在定义判断题中，如果选项主题和题干要求不符，那么这个选项一定是不符合定义的</li><li>出现范围越小约明确的主客体尤为重要</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304012142180.png"                      alt="image-20230328104414823"                ></p><h2 id="2、关键词-原因-x2F-条件-结果"><a href="#2、关键词-原因-x2F-条件-结果" class="headerlink" title="2、关键词-原因&#x2F;条件+结果"></a>2、关键词-原因&#x2F;条件+结果</h2><ol><li>重点条件提前看，<strong>结果</strong>出现<strong>积极、消极</strong>大概率会考</li><li><strong>原理效应类</strong>，重点看实际应用，结果好坏很重要</li><li><strong>表示结果的引导词</strong>：所以、因而、从而、带来、引发、导致、使得等表示结论的词汇</li><li><strong>表示条件的引导词</strong>：如果、只有、在···情况下、在····作用下、在····时</li></ol><h2 id="3、关键词-方式-目的"><a href="#3、关键词-方式-目的" class="headerlink" title="3、关键词-方式+目的"></a>3、关键词-方式+目的</h2><ol><li><strong>方式引导词</strong>：以（按照&#x2F;通过&#x2F;采用&#x2F;利用）····的方式（方法&#x2F;办法&#x2F;依据&#x2F;手段）等</li><li><strong>目的引导词</strong>：以····为目的（目标）、达到（实现）···的目的（目标&#x2F;结果&#x2F;效果）、为了····等</li></ol><h2 id="4、包含定义的句子优先看"><a href="#4、包含定义的句子优先看" class="headerlink" title="4、包含定义的句子优先看"></a>4、包含定义的句子优先看</h2><ol><li>如果此句已经能够清晰地表述含义，文段其他内容先略读。</li></ol><h2 id="5、补充说明"><a href="#5、补充说明" class="headerlink" title="5、补充说明"></a>5、补充说明</h2><ol><li>补充说明地提示词有三种形式：<ul><li>即、也就是说、意思是、包括等</li><li>标签符号：括号、破折号、冒号</li><li>分类说明</li></ul></li></ol><h2 id="6、多定义"><a href="#6、多定义" class="headerlink" title="6、多定义"></a>6、多定义</h2><p>多定义就是指题干中给出多个概念地定义。</p><hr><ol><li>多定义问谁优先看谁。遇到令人纠结地选项时，先找到选项间的区别，再针对性的回看其他定义。</li></ol><h2 id="7、同构选项排除法"><a href="#7、同构选项排除法" class="headerlink" title="7、同构选项排除法"></a>7、同构选项排除法</h2><p>同构选项，指的是选项之间结构类似或者表达的意思相近。单选题，只能选一个，所以看到同构选项就直接排除了</p><hr><ol><li><strong>小技巧：</strong>拆词：（定义词汇本身就是关键词，比如绿色观念）</li></ol><h2 id="8、汇总"><a href="#8、汇总" class="headerlink" title="8、汇总"></a>8、汇总</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304012142181.png"                      alt="image-20230328112109412"                ></p><h1 id="三、类比推理"><a href="#三、类比推理" class="headerlink" title="三、类比推理"></a>三、类比推理</h1><ol><li>常考的类型：<ul><li>两词型–A:B</li><li>三词型–A:B:C</li><li>填空型–A对于（）相当于（）对于B</li></ul></li><li>侧重于考察两点：<ul><li>词语间的逻辑关系</li><li>选择一致或类似的选项</li></ul></li></ol><hr><h2 id="1、语义关系"><a href="#1、语义关系" class="headerlink" title="1、语义关系"></a>1、语义关系</h2><ol><li>常考的语义关系主要分为以下三种<ul><li>近义关系：词语含义相近，例如水滴石穿、绳锯木断</li><li>反义关系：词语含义相反，例如见异思迁、忠贞不贰</li><li>比喻义、象征义：通过某些具体事物比喻或象征某些抽象意义，例如玫瑰象征爱情</li></ul></li><li>常搭配考察的二级辨析主要有感情色彩、词语结构、词性</li><li>词语结构考察方式有两种：<ul><li>一种是和题干词汇结构一，比如锦上添花与雪中送炭</li><li>另一个考察词语本身的结构：并列关系（经史子集）、偏正关系（珠圆玉润）</li></ul></li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304012142182.png"                      alt="image-20230328085051238"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304012142183.png"                      alt="image-20230328085121456"                ></p><h2 id="2、逻辑关系"><a href="#2、逻辑关系" class="headerlink" title="2、逻辑关系"></a>2、逻辑关系</h2><h3 id="1、全同关系"><a href="#1、全同关系" class="headerlink" title="1、全同关系"></a>1、全同关系</h3><ol><li><strong>全同关系</strong>指两个表达含义完全相同的词语</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304012142184.png"                      alt="image-20230328085308756"                ></p><h3 id="2、包容关系"><a href="#2、包容关系" class="headerlink" title="2、包容关系"></a>2、包容关系</h3><ol><li><strong>包容关系</strong>是指两个词语概念之间一个范围大，一个范围小，小概念完全被包含在大概念之中，如男人和人、桌面和桌子。</li><li>包容关系可以分为以下两类：<ul><li><strong>种属关系</strong>，即A是B的一种</li><li><strong>组成关系</strong>：即A是B的一个组成部分</li></ul></li><li>组成关系和种属关系的区别在于：A、B为种属关系，造句子可以造成A是B，比如柳树是树。但组成关系不可以，不能说轮胎是汽车。</li></ol><h3 id="3、并列关系"><a href="#3、并列关系" class="headerlink" title="3、并列关系"></a>3、并列关系</h3><ol><li>并列关系是指两个词语概念处于同一级别上，但又彼此不包括。如植物与动物、火星和地球</li><li>并列关系可以分为以下两种：<ul><li>矛盾关系。矛盾是指非A即B</li><li>反对关系。反对是指除了A和B，还有其他情况存在</li></ul></li><li><strong>注意：</strong>并列关系一般要求同级并列</li><li>二级辨析是看出现的顺序</li></ol><h3 id="4、交叉关系"><a href="#4、交叉关系" class="headerlink" title="4、交叉关系"></a>4、交叉关系</h3><ol><li>交叉关系是指词语概念间有重叠的地方，但不完全重合；公式如下：<strong>有的A是B，有的A不是B，有的B是A，有的B不是A</strong></li><li><strong>不同的角度一般都是交叉</strong></li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304012142185.png"                      alt="image-20230328091413402"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304012142186.png"                      alt="image-20230328091628856"                ></p><h3 id="5、对应关系"><a href="#5、对应关系" class="headerlink" title="5、对应关系"></a>5、对应关系</h3><ol><li>对应关系是指一定范围事件包括的<strong>各词语要素之间</strong>构成的相互对应。</li><li>对应关系有以下五种：<ul><li>物品与原材料、制作工艺，如家具与木材、手镯与打磨。（工艺二级辨析：物理、化学）</li><li>物品与功能，如手机与沟通、汽车与运输。–&gt;名+动（看主要功能还是次要功能）</li><li>属性关系，如盐与咸、叶与绿–&gt;名+形容词（二级辨析：必然、或然）</li><li>时间先后顺序，如起飞与着陆、生病与治疗–&gt;动词+动词（二级辨析：主体能否一致）</li><li>因果关系，如下雨与地湿、淋雨与感冒（二级辨析：原因自然&#x2F;人工、结果积极&#x2F;消极）</li></ul></li><li>对应关系中工艺制作过程涉及物理、化学变化的区分；<strong>区分标准是</strong>：有无新物质生成</li></ol><h2 id="3、语法关系"><a href="#3、语法关系" class="headerlink" title="3、语法关系"></a>3、语法关系</h2><p>主要分为主谓关系、动宾关系、主宾关系</p><hr><ol><li>题干中出现两个名词，且他们之间无明显逻辑关系时，可以<strong>考虑主宾关系</strong>，通过添加动词的形式造句子</li><li>造句子时，除注意<strong>顺序</strong>之外，还要注意动作发出者<strong>是否为同一主体</strong></li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304012142187.png"                      alt="image-20230328094006318"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304012142188.png"                      alt="image-20230328094347065"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304012142189.png"                      alt="image-20230328094407750"                ></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304012142190.png"                      alt="image-20230328095250385"                ></p><h1 id="四、逻辑判断"><a href="#四、逻辑判断" class="headerlink" title="四、逻辑判断"></a>四、逻辑判断</h1><h2 id="1、翻译推理"><a href="#1、翻译推理" class="headerlink" title="1、翻译推理"></a>1、翻译推理</h2><p>题型特征：题干或选项中出现多组”逻辑关联词“，如：如果····那么····；只要···就····；只有····才····；</p><p>先翻译后推理</p><hr><h3 id="1、翻译规则"><a href="#1、翻译规则" class="headerlink" title="1、翻译规则"></a>1、翻译规则</h3><ol><li>前推后（前半句-&gt;后半句）：<ul><li>如果······那么（就）······</li><li>只要·····就········（重中之重）</li><li>所有·······都····</li><li>······是····的充分条件</li><li>······就&#x2F;则&#x2F;都&#x2F;一定······</li></ul></li><li>后推前（后半句-&gt;前半句）<ul><li>只有······才·····（重中之重）</li><li>不······不······</li><li>·····才········</li><li>除非······否则不······（重中之重）—-除非A，否则B &#x3D;&gt;-B-&gt;A</li><li>·····是·····的必要条件</li></ul></li><li>注意：<strong>必要条件</strong>可以替换为：先决条件、基础、前提、必要假设、必不可少（谁必不可少，谁在箭头后面）</li><li><strong>否前肯后无必然结论</strong></li></ol><h3 id="2、推挤规则-逆否等价"><a href="#2、推挤规则-逆否等价" class="headerlink" title="2、推挤规则-逆否等价"></a>2、推挤规则-逆否等价</h3><ol><li>A-&gt;B成立，可以推出来：否B-&gt;否A成立</li></ol><h3 id="3、推理规则-传递规则"><a href="#3、推理规则-传递规则" class="headerlink" title="3、推理规则-传递规则"></a>3、推理规则-传递规则</h3><ol><li>已知A-&gt;B,B-&gt;C成立，可以推出A-&gt;C成立</li><li>若两个条件的共有元素在同一端，例如：A-&gt;B和A-&gt;C同时成立，或B-&gt;A和C-&gt;A同时成立，那么BC之间不能进行任何推理</li></ol><h3 id="4、两个翻译易错点"><a href="#4、两个翻译易错点" class="headerlink" title="4、两个翻译易错点"></a>4、两个翻译易错点</h3><ol><li>必要条件的翻译陷阱：<strong>谁必不可少，谁在箭头后</strong></li><li>除非····否则·····的翻译为：否后推前</li><li>·<strong>····，除非···· &#x3D; 除非····否则·····</strong></li></ol><h3 id="5、且关系-与-或关系"><a href="#5、且关系-与-或关系" class="headerlink" title="5、且关系 与 或关系"></a>5、且关系 与 或关系</h3><p>且关系：</p><ol><li>逻辑内涵：且关系，也称和关系，当其成立时，表示由和连接的所有对象均成立</li><li>同义关联词：<ul><li>并列关系：并且&#x2F;且&#x2F;和&#x2F;都&#x2F;既···又···</li><li>递进关系：甚至&#x2F;而且&#x2F;还·····</li><li>转折关系：但是&#x2F;然而&#x2F;却····</li><li>标点符号：逗号、顿号、分号</li></ul></li></ol><hr><p>或关系：</p><ol><li>逻辑内涵：或关系成立，表示由或连接的所有对象至少有一个成立</li><li>常考：通过否定一个来确定另一个成立。否1-&gt;1</li><li>·····或·······推理规则：当或关系成立时，否定前句-&gt;后句成立，否定后句-&gt;前句成立</li></ol><hr><p>德·摩根定律：</p><ol><li>-（A且B）&#x3D;-A或-B</li><li>-（A或B）&#x3D;-A且-B</li></ol><h2 id="2、组合排列"><a href="#2、组合排列" class="headerlink" title="2、组合排列"></a>2、组合排列</h2><h3 id="1、排除法、代入法"><a href="#1、排除法、代入法" class="headerlink" title="1、排除法、代入法"></a>1、排除法、代入法</h3><ol><li>遇到组合排列类题目，优先考虑：<ul><li>题干条件确定，根据这些条件能够直接排除选项，考虑排除法</li><li>题干条件不确定（真假未知），考虑代入法</li></ul></li><li><strong>间隔信息</strong>，开始代入</li><li>特殊问法考虑代入：补充&#x2F;添加以下选项可以推出可能&#x2F;不可能</li><li><strong>性别信息出现</strong>，常用排除法</li></ol><h3 id="2、最大信息法"><a href="#2、最大信息法" class="headerlink" title="2、最大信息法"></a>2、最大信息法</h3><ol><li>如果不能用排除法、代入法，考虑最大信息法，即将最大信息（条件中出现次数最多的信息）作为推理的起点</li></ol><h3 id="3、排列-翻译"><a href="#3、排列-翻译" class="headerlink" title="3、排列+翻译"></a>3、排列+翻译</h3><p>排列+翻译：翻译是<strong>关键</strong>，涉及翻译句子的代入，优先从肯前或否后的选项开始</p><h3 id="4、假设法"><a href="#4、假设法" class="headerlink" title="4、假设法"></a>4、假设法</h3><ol><li>假设法使用环境：二选一或无确定信息和最大信息</li><li><strong>3+2+1</strong>的题型-&gt;看的顺序是<strong>3-&gt;1-&gt;2</strong></li></ol><h2 id="3、加强削弱综述"><a href="#3、加强削弱综述" class="headerlink" title="3、加强削弱综述"></a>3、加强削弱综述</h2><ol><li><p>题型特征：</p><ul><li><strong>削弱</strong>：提问方式中带有削弱、质疑、反驳、否定等关键词</li><li><strong>加强</strong>：提问方式中带有加强、支持、假设、前提等关键词</li></ul></li></ol><h3 id="1、论证三要素"><a href="#1、论证三要素" class="headerlink" title="1、论证三要素"></a>1、论证三要素</h3><ol><li>所谓论证，就是用论据来证明论点的逻辑过程和方式</li><li>典型提示词：<ul><li>论点：因此、表明、认为、显然、意味着、显示出、得出结论（一定有）</li><li>论据：由于、因为、鉴定、根据、其原因是····（不一定有）</li></ul></li><li>常见位置：<ul><li>论点出现在首尾句居多</li><li>数据、举例等内容一般作为论据出现</li><li>像背景或者下定义一般建议略读</li></ul></li></ol><h3 id="2、加强与削弱"><a href="#2、加强与削弱" class="headerlink" title="2、加强与削弱"></a>2、加强与削弱</h3><ol><li>一个论证要成立，应该满足以下条件：<ul><li>论点和论据具备真实性</li><li>论点和论据间存在联系。联系越紧密，越直接，论证成立的可能性越大</li><li><strong>加强论证</strong>：就是要支持整个论证的成立</li><li><strong>弱化论证</strong>：就是要破坏整个论证的成立</li></ul></li><li>论点、论据话题一致，优先–<strong>原因解释&#x2F;举例子</strong></li><li><strong>正确答案</strong>往往包括论点中的<strong>关键词</strong>或关键词的<strong>同义替换</strong></li><li>加强之补充论证<ul><li><strong>解释原因：</strong>说明论点成立的原因（优先）</li><li><strong>举例支持：</strong>证明论点成立的例子</li></ul></li></ol><h2 id="4、削弱题型"><a href="#4、削弱题型" class="headerlink" title="4、削弱题型"></a>4、削弱题型</h2><p><strong>题型特征</strong>：提问方式中带有削弱、质疑、反驳、否定等关键词</p><hr><h3 id="1、否定论点"><a href="#1、否定论点" class="headerlink" title="1、否定论点"></a>1、否定论点</h3><ol><li>否定论点是非常强的削弱方式</li></ol><h3 id="2、拆桥"><a href="#2、拆桥" class="headerlink" title="2、拆桥"></a>2、拆桥</h3><ol><li>拆桥指的是<strong>破坏论点和论据之间</strong>的关系</li><li>以下情况优先考虑拆桥：<ul><li>论点和论据中出现了两个<strong>没有明显</strong>相关性的概念，拆桥指出<strong>二者不相关</strong></li><li>论点和论据中出现了一个整体和一个部分的概念，拆桥指出<strong>部分不能代表整体</strong></li><li>论据是调查或实验数据，且没有直接否定论点的选项，拆桥指出<strong>调查或实验数据不具备代表性</strong></li><li>当出现以上三种特征之一，且提问方式是削弱论证或削弱论证方式时，考察的几率比较大</li></ul></li></ol><h3 id="3、否定论据"><a href="#3、否定论据" class="headerlink" title="3、否定论据"></a>3、否定论据</h3><ol><li>否定论据，一般有两种形式：<ul><li>论据有错误</li><li>论据没有用</li></ul></li><li>出现以下特征，优先考虑否定论据的削弱方式：<ul><li>题干中出现<strong>支持方、反对方相互掐架</strong>，经常采用否定论据的方式来进行削弱</li><li>结论是<strong>预测或者建议</strong>时，经常采用否定论据的方式进行削弱</li><li><strong>削谁</strong>优先看谁，这样更容易避开干扰选项，锁定正确选项</li></ul></li></ol><h3 id="4、因果倒置与另有他因"><a href="#4、因果倒置与另有他因" class="headerlink" title="4、因果倒置与另有他因"></a>4、因果倒置与另有他因</h3><ol><li>一般情况下，出现因果倒置（优选）</li><li>论点包括因果关系：····是···的原因；····导致····；···使得·····；···有助于·····</li><li>首先给出一个已知问题或现象，论点是这个问题或现象产生的原因</li><li><strong>因果倒置</strong>：因果找反了。如果论点为1是2成立的原因，用因果倒置来削弱，就应该说2是1的原因。</li><li><strong>另有他因</strong>：对现有因果不知可否，而且指出还存在另一个原因，同样可以导致相同的结果</li><li><strong>削弱方式总结如下：</strong><ul><li>支持方：一是二的原因；反对方：一不是二的原因，三是二的原因</li><li>削弱反对方：一是三的原因，故而推出一也是二的原因</li></ul></li><li>哪些选项一般不选：<ul><li>无关选项</li><li>不明确选项</li><li>对策类选择</li></ul></li></ol><h2 id="5、加强题型"><a href="#5、加强题型" class="headerlink" title="5、加强题型"></a>5、加强题型</h2><p>题型特征：提问方式中带有加强、支持、假设、前提等关键词</p><hr><h3 id="1、搭桥-去同存异"><a href="#1、搭桥-去同存异" class="headerlink" title="1、搭桥(去同存异)"></a>1、搭桥(去同存异)</h3><ol><li>加强论点的两种方式<ul><li>重复论点</li><li>举例加强</li></ul></li><li>加强题型出现以下特征，优先考虑搭桥的加强方式：<ul><li>论点和论据中出现了两个没有明显相关性的概念，搭桥指出<strong>二者相关</strong></li><li>论点和论据中分别出现了一个整体和一个部分的概念，搭桥指出<strong>部分可以代表整体</strong></li><li>当提问方式是<strong>前提、假设、必要条件、加强论证</strong>时，搭桥加强的可能性非常大</li></ul></li><li>论证题比力度，说的约绝对，力度越强</li><li>去同存异（找到论点和论据后，相同词去掉，不同留下）</li><li>正确答案往往包括<strong>论点中的关键词</strong>或做<strong>关键词的同义替换</strong>（同时存在不等于两者相关）</li><li><strong>加强题+多个选项需要翻译-</strong>&gt;考察搭桥方向（论据-&gt;论点）</li><li>搭桥的加强力度最大，而类比一般比较柔弱。</li><li>如果存在两个选项都是搭桥，但顺序不同，该怎么选择？<ul><li>论据A-&gt;B,论点A-&gt;C，搭桥选项为B-&gt;C</li><li>论据A-&gt;B,论点C-&gt;B，搭桥选项为C-&gt;A</li><li><strong>口诀</strong>：箭头前一致，不同部分的搭桥顺序为论据推论点；箭头后一致，不同部分的搭桥顺序为论点推论据</li></ul></li></ol><h3 id="2、必要条件"><a href="#2、必要条件" class="headerlink" title="2、必要条件"></a>2、必要条件</h3><ol><li>论点为<strong>方式+目的</strong>—–常考做法可行&#x2F;做法有效</li><li>必要条件，从逻辑来说，如果这个条件不成立，那么结论也一定不成立</li><li><strong>力度：</strong>搭桥&#x3D;必要条件&gt;解释说明&gt;举例子</li><li>当提问方式是前提、假设、必要条件、加强论证时，注意以下几点：<ul><li>优先考虑搭桥</li><li>如果没有搭桥选项，选择表达<strong>论点或论据可以实现，可以被利用</strong>这层意思的选项</li><li>若论据时两组对比实验，则两组实验中只能有唯一的<strong>不同点或者相同点</strong></li></ul></li></ol><h3 id="3、解释与举例（一般论点、论据一致）"><a href="#3、解释与举例（一般论点、论据一致）" class="headerlink" title="3、解释与举例（一般论点、论据一致）"></a>3、解释与举例（一般论点、论据一致）</h3><ol><li><strong>注</strong>：整体&gt;部分</li><li>与病相关的常见错误选项：<ul><li>其他病</li><li>副作用</li><li>防与治</li><li>混淆（预防的意思：患病率，不得病；治疗：得病+治好，治病率）</li></ul></li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304012142191.png"                      alt="image-20230330093438373"                ></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、图形推理&quot;&gt;&lt;a href=&quot;#一、图形推理&quot; class=&quot;headerlink&quot; title=&quot;一、图形推理&quot;&gt;&lt;/a&gt;一、图形推理&lt;/h1&gt;&lt;h2 id=&quot;1、位置规律&quot;&gt;&lt;a href=&quot;#1、位置规律&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    
    <category term="行测" scheme="http://example.com/tags/%E8%A1%8C%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>JAVA面试之八股文</title>
    <link href="http://example.com/2023/03/28/JAVA%E9%9D%A2%E8%AF%95%E4%B9%8B%E5%85%AB%E8%82%A1%E6%96%87/"/>
    <id>http://example.com/2023/03/28/JAVA%E9%9D%A2%E8%AF%95%E4%B9%8B%E5%85%AB%E8%82%A1%E6%96%87/</id>
    <published>2023-03-28T11:40:32.000Z</published>
    <updated>2023-05-05T11:02:17.719Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、Java基础"><a href="#一、Java基础" class="headerlink" title="一、Java基础"></a>一、Java基础</h1><h2 id="1、面向对象"><a href="#1、面向对象" class="headerlink" title="1、面向对象"></a>1、面向对象</h2><p>什么是面向对象？</p><p>对比面向过程，是两种不同的处理问题的角度 </p><ul><li>面向过程更注重事情的每一个步骤及顺序，</li><li>面向对象更注重事情有哪些参与者（对象）、及各自需要做什么</li><li>比如：洗衣机洗衣服 面向过程会将任务拆解成一系列的步骤（函数），1、打开洗衣机—–&gt;2、放衣服—–&gt;3、放洗衣粉—– &gt;4、清洗—–&gt;5、烘干 </li><li>面向对象会拆出人和洗衣机两个对象： 人：打开洗衣机 放衣服 放洗衣粉 洗衣机：清洗 烘干</li></ul><p> 从以上例子能看出，面向过程比较直接高效，而面向对象更易于复用、扩展和维护</p><p><strong>封装</strong>：封装的意义，在于明确标识出允许外部使用的所有成员函数和数据项 </p><p>内部细节对外部调用透明，外部调用无需修改或者关心内部实现</p><p>1、javabean的属性私有，提供get、set对外访问，因为属性的赋值或者获取逻辑只能由javabean本身决定。而不能由外部胡乱修改</p><p>2、orm框架 操作数据库，我们不需要关心链接是如何建立的、sql是如何执行的，只需要引入mybatis，调方法即可</p><p><strong>继承：</strong>继承基类的方法，并做出自己的改变和&#x2F;或扩展；子类共性的方法或者属性直接使用父类的，而不需要自己再定义，只需扩展自己个性化的</p><p><strong>多态：</strong>基于对象所属类的不同，外部对同一个方法的调用，实际执行的逻辑不同。 –&gt;继承，方法重写，父类引用指向子类对象,可以调用父类中共有的，但无法调用子类特有的功能、下面函数调用的是子类对象的方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">父类类型 变量名 = <span class="keyword">new</span> 子类对象 ; </span><br><span class="line">变量名.方法名();</span><br></pre></td></tr></table></figure><h2 id="2、JDK、JRE、JVM"><a href="#2、JDK、JRE、JVM" class="headerlink" title="2、JDK、JRE、JVM"></a>2、JDK、JRE、JVM</h2><p><strong>JDK</strong>：java开发工具</p><p><strong>JRE</strong>：java运行时环境</p><p><strong>JVM</strong>：java虚拟机</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304021019415.png"                      alt="image-20230329162932835"                ></p><h2 id="3、-x3D-x3D-和equals比较"><a href="#3、-x3D-x3D-和equals比较" class="headerlink" title="3、&#x3D;&#x3D;和equals比较"></a>3、&#x3D;&#x3D;和equals比较</h2><p><strong>&#x3D;&#x3D;：</strong>如果比较的对象是基本数据类型，则比较数值是否相等；如果比较的是引用数据类型，则比较的是对象的地址是否相等。</p><p><strong>equals()：</strong>equals() 定义在JDK的Object.java中。通过判断两个对象的地址是否相等(即，是否是同一个对象)来区分它们是否相等。</p><h2 id="4、hashCode与equals"><a href="#4、hashCode与equals" class="headerlink" title="4、hashCode与equals"></a>4、hashCode与equals</h2><p>hashCode介绍： <strong>hashCode() 的作用</strong>是获取哈希码，也称为散列码；它实际上是返回一个int整数。这个<strong>哈希码的作用</strong>是确定该对象在哈希表中的索引位置。hashCode() 定义在JDK的Object.java中，<strong>Java中的任何类都包含有 hashCode() 函数。</strong> </p><p><strong>散列表</strong>存储的是键值对(key-value)，<strong>它的特点是</strong>：能根据“键”快速的检索出对应的“值”。这其中就利用到了散列码！（可以快速找到所需要的对象） </p><p><strong>为什么要有hashCode：</strong></p><p><strong>以“HashSet如何检查重复”为例子来说明为什么要有hashCode：</strong> 对象加入HashSet时，HashSet会先计算对象的hashcode值来判断对象加入的位置，看该位置是否有值，如果没有、HashSet会假设对象没有重复出现。但是如果发现有值，这时会调用equals（）方法来检查两个对象是否真的相同。如果两者相同，HashSet就不会让其加入操作成功。如果不同的话，就会重新散列到其他位置。这样就大大减少了equals的次数，相应就大大提高了执行速度。</p><ul><li>如果两个对象相等，则hashcode一定也是相同的 </li><li>两个对象相等,对两个对象分别调用equals方法都返回true </li><li>两个对象有相同的hashcode值，它们也不一定是相等的 </li><li>因此，equals方法被覆盖过，则hashCode方法也必须被覆盖 </li><li>hashCode()的默认行为是对堆上的对象产生独特值。如果没有重写hashCode()，则该class的两个对象无论如何都不会相等（即使这两个对象指向相同的数据）</li></ul><h2 id="5、final"><a href="#5、final" class="headerlink" title="5、final"></a>5、final</h2><ul><li>修饰类：表示类不可被继承 </li><li>修饰方法：表示方法不可被子类覆盖，<strong>但是可以重载</strong> </li><li>修饰变量：表示变量一旦被赋值就不可以更改它的值。</li></ul><p>（1）修饰成员变量 </p><ul><li>如果final修饰的是类变量，只能在静态初始化块中指定初始值或者声明该类变量时指定初始值。 </li><li>如果final修饰的是成员变量，可以在非静态初始化块、声明该变量或者构造器中执行初始值。</li></ul><p>（2）修饰局部变量</p><p>系统不会为局部变量进行初始化，局部变量必须由程序员显示初始化。因此使用final修饰局部变量时， 即可以在定义时指定默认值（后面的代码不能对变量再赋值），也可以不指定默认值，而在后面的代码中对final变量赋初值（仅一次）</p><p>（3）修饰基本类型数据和引用类型数据</p><ul><li>如果是基本数据类型的变量，则其数值一旦在初始化之后便不能更改； </li><li>如果是引用类型的变量，则在对其初始化之后便不能再让其指向另一个对象。<strong>但是引用的值是可变的。</strong></li></ul><p><strong>为什么局部内部类和匿名内部类只能访问局部final变量？</strong></p><p>首先需要知道的一点是: 内部类和外部类是处于同一个级别的，内部类不会因为定义在方法中就会随着 方法的执行完毕就被销毁。 </p><p><strong>这里就会产生问题：</strong>当外部类的方法结束时，局部变量就会被销毁了，但是内部类对象可能还存在(只有没有人再引用它时，才会死亡)。这里就出现了一个矛盾：内部类对象访问了一个不存在的变量。为了解决这个问题，就将<strong>局部变量复制了一份作为内部类的成员变量</strong>，这样当局部变量死亡后，内部类仍可以访问它，实际访问的是局部变量的”copy”。这样就好像延长了局部变量的生命周期</p><p>将局部变量复制为内部类的成员变量时，必须保证这两个变量是一样的，也就是如果我们在内部类中修改了成员变量，方法中的局部变量也得跟着改变，怎么解决问题呢？ </p><p><strong>就将局部变量设置为final</strong>，对它初始化后，我就不让你再去修改这个变量，就保证了内部类的成员变量和方法的局部变量的一致性。这实际上也是一种妥协。使得局部变量与内部类内建立的拷贝保持一致。</p><h2 id="6、String、StringBuffer、StringBuilder"><a href="#6、String、StringBuffer、StringBuilder" class="headerlink" title="6、String、StringBuffer、StringBuilder"></a>6、String、StringBuffer、StringBuilder</h2><ul><li>String是final修饰的，不可变，每次操作都会产生新的String对象</li><li>StringBuffer和StringBuilder都是在原对象上操作：StringBuffer是线程安全的，StringBuilder线程不安全的 </li><li>StringBuffer方法都是synchronized修饰的 </li><li>性能：StringBuilder &gt; StringBuffer &gt; String </li><li>场景：经常需要改变字符串内容时使用后面两个</li><li>优先使用StringBuilder，多线程使用共享变量时使用StringBuffer</li></ul><h2 id="7、重载和重写的区别"><a href="#7、重载和重写的区别" class="headerlink" title="7、重载和重写的区别"></a>7、重载和重写的区别</h2><p><strong>重载：</strong> 发生在同一个类中，方法名必须相同，参数类型不同、个数不同、顺序不同，方法返回值和访问修饰符可以不同，发生在编译时。 </p><p><strong>重写：</strong> 发生在父子类中，方法名、参数列表必须相同，返回值范围小于等于父类，抛出的异常范围小于等于父类，访问修饰符范围大于等于父类；如果父类方法访问修饰符为private则子类就不能重写该方 法。</p><h2 id="8、接口和抽象类的区别"><a href="#8、接口和抽象类的区别" class="headerlink" title="8、接口和抽象类的区别"></a>8、接口和抽象类的区别</h2><ul><li>抽象类可以存在普通成员函数，而接口中只能存在public abstract 方法。 </li><li>抽象类中的成员变量可以是各种类型的，而接口中的成员变量只能是public static final类型的。 </li><li>抽象类只能继承一个，接口可以实现多个。</li></ul><ol><li><strong>接口的设计目的</strong>，是对类的行为进行约束（更准确的说是一种“有”约束，因为<strong>接口不能规定类不可以有什么行为</strong>），也就是提供一种机制，可以强制要求不同的类具有相同的行为。<strong>它只约束了行为的有无， 但不对如何实现行为进行限制。</strong> </li><li><strong>而抽象类的设计目的</strong>，<strong>是代码复用</strong>。当不同的类具有某些相同的行为(记为行为集合A)，且其中一部分行为的实现方式一致时（A的非真子集，记为B），可以让这些类都派生于一个抽象类。在这个抽象类中实现了B，避免让所有的子类来实现B，这就达到了代码复用的目的。而A减B的部分，留给各个子类自己实现。正是因为A-B在这里没有实现，所以抽象类不允许实例化出来（否则当调用到A-B时，无法执行）。 </li><li>抽象类是对类本质的抽象，表达的是 is a 的关系，比如： BMW is a Car 。抽象类包含并实现子类的通用特性，将子类存在差异化的特性进行抽象，交由子类去实现。 </li><li>而接口是对行为的抽象，表达的是 like a 的关系。比如： Bird like a Aircraft （像飞行器一样可以飞），但其本质上 is a Bird 。<strong>接口的核心是定义行为，即实现类可以做什么</strong>，至于实现类主体是谁、 是如何实现的，接口并不关心。 </li><li>使用场景：<strong>当你关注一个事物的本质的时候，用抽象类；当你关注一个操作的时候，用接口。</strong> </li><li><strong>抽象类的功能要远超过接口</strong>，但是，定义抽象类的代价高。因为高级语言来说（从实际设计上来说也是）每个类只能继承一个类。在这个类中，你必须继承或编写出其所有子类的所有共性。虽然接口在功能上会弱化许多，但是它只是针对一个动作的描述。而且你可以在一个类中同时实现多个接口。在设计阶段会降低难度</li></ol><h2 id="9、List和Set的区别"><a href="#9、List和Set的区别" class="headerlink" title="9、List和Set的区别"></a>9、List和Set的区别</h2><ul><li>List：有序，按对象进入的顺序保存对象，可重复，允许多个Null元素对象，可以使用Iterator取出所有元素，在逐一遍历，还可以使用get(int index)获取指定下标的元素 </li><li>Set：无序，不可重复，最多允许有一个Null元素对象，取元素时只能用Iterator接口取得所有元素，在逐一遍历各个元素</li></ul><h2 id="10、ArrayList和LinkedList区别"><a href="#10、ArrayList和LinkedList区别" class="headerlink" title="10、ArrayList和LinkedList区别"></a>10、ArrayList和LinkedList区别</h2><p>ArrayList：基于动态数组，<strong>连续内存存储</strong>，适合下标访问（随机访问），<strong>扩容机制</strong>：因为数组长度固定，超出长度存数据时需要新建数组，然后将老数组的数据拷贝到新数组，如果不是尾部插入数据还会涉及到元素的移动（往后复制一份，插入新元素），使用尾插法并指定初始容量可以极大提升性能、甚至超过linkedList（需要创建大量的node对象）</p><p>LinkedList：基于链表，可以存储在<strong>分散的内存</strong>中，适合做数据插入及删除操作，不适合查询：需要逐一遍历</p><p><strong>遍历LinkedList必须使用iterator不能使用for循环</strong>，因为每次for循环体内通过get(i)取得某一元素时都需要对list重新进行遍历，性能消耗极大。 </p><p><strong>另外不要试图使用indexOf等返回元素索引</strong>，并利用其进行遍历，使用indexOf对list进行了遍历，当结果为空时会遍历整个列表。</p><h2 id="11、HashMap和HashTable有什么区别？其底层实现是什-么？"><a href="#11、HashMap和HashTable有什么区别？其底层实现是什-么？" class="headerlink" title="11、HashMap和HashTable有什么区别？其底层实现是什 么？"></a>11、HashMap和HashTable有什么区别？其底层实现是什 么？</h2><ol><li>区别 ： <ul><li>HashMap方法没有synchronized修饰，线程非安全，HashTable线程安全； </li><li>HashMap允许key和value为null，而HashTable不允许</li></ul></li><li>底层实现：数组+链表实现 —&gt;jdk8开始链表高度到8、数组长度超过64，链表转变为红黑树，元素以内部类Node节点存在<ul><li>计算key的hash值，二次hash然后对数组长度取模，对应到数组下标， </li><li>如果没有产生hash冲突(下标位置没有元素)，则直接创建Node存入数组， </li><li>如果产生hash冲突，先进行equal比较，相同则取代该元素，不同，则判断链表高度插入链表，链 表高度达到8，并且数组长度到64则转变为红黑树，长度低于6则将红黑树转回链表 </li><li>key为null，存在下标0的位置</li></ul></li></ol><h2 id="12、什么是字节码？采用字节码的好处是什么？"><a href="#12、什么是字节码？采用字节码的好处是什么？" class="headerlink" title="12、什么是字节码？采用字节码的好处是什么？"></a>12、什么是字节码？采用字节码的好处是什么？</h2><ol><li>java中的编译器和解释器：<ul><li>Java中引入了虚拟机的概念，即在机器和编译程序之间加入了一层抽象的虚拟的机器。这台<strong>虚拟的机器</strong>在任何平台上都提供给<strong>编译程序一个的共同的接口</strong>。</li><li>编译程序只需要面向虚拟机，生成虚拟机能够理解的代码，然后由解释器来将虚拟机代码转换为特定系统的机器码执行。在Java中，<strong>这种供虚拟机理解的代码叫做字节码（即扩展名为 .class的文件）</strong>，它不面向任何特定的处理器，只面向虚拟机。 </li><li>每一种平台的解释器是不同的，但是实现的虚拟机是相同的。Java源程序经过编译器编译后变成字节码，字节码由虚拟机解释执行，虚拟机将每一条要执行的字节码送给解释器，解释器将其翻译成特定机器上的机器码，然后在特定的机器上运行。这也就是解释了Java的编译与解释并存的特点。 <strong>Java源代码—-&gt;编译器—-&gt;jvm可执行的Java字节码(即虚拟指令)—-&gt;jvm—-&gt;jvm中解释器—–&gt;机器可执行的二进制机器码—-&gt;程序运行</strong>。</li></ul></li><li>采用字节码的好处： <ul><li>Java语言通过字节码的方式，在一定程度上解决了<strong>传统解释型语言执行效率低的问题</strong>，同时又保留了解释型语言可移植的特点。所以Java程序运行时比较高效，而且，<strong>由于字节码并不专对一种特定的机器</strong>， 因此，<strong>Java程序无须重新编译便可在多种不同的计算机上运行。</strong></li></ul></li></ol><h2 id="13、Java中的异常体系"><a href="#13、Java中的异常体系" class="headerlink" title="13、Java中的异常体系"></a>13、Java中的异常体系</h2><ul><li>Java中的所有异常都来自顶级父类Throwable。 </li><li>Throwable下有两个子类Exception和Error。</li><li><strong>Error</strong>是程序无法处理的错误，一旦出现这个错误，则程序将被迫停止运行。 </li><li><strong>Exception</strong>不会导致程序停止，又分为两个部分RunTimeException运行时异常和CheckedException检查异常。 </li><li>RunTimeException常常发生在程序运行过程中，会导致程序当前线程执行失败。CheckedException常常发生在程序编译过程中，会导致程序编译不通过。</li></ul><h2 id="14、Java类加载器"><a href="#14、Java类加载器" class="headerlink" title="14、Java类加载器"></a>14、Java类加载器</h2><ul><li>JDK自带有三个类加载器：bootstrapClassLoader、ExtClassLoader、AppClassLoader。 </li><li>BootStrapClassLoader是ExtClassLoader的父类加载器，默认负责加载%JAVA_HOME%lib下的jar包和 class文件。</li><li>ExtClassLoader是AppClassLoader的父类加载器，负责加载%JAVA_HOME%&#x2F;lib&#x2F;ext文件夹下的jar包和 class类。</li><li>AppClassLoader是自定义类加载器的父类，负责加载classpath下的类文件。系统类加载器，线程上下文加载器 </li><li>继承ClassLoader实现自定义类加载器</li></ul><h2 id="15、双亲委托模型"><a href="#15、双亲委托模型" class="headerlink" title="15、双亲委托模型"></a>15、双亲委托模型</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304041128289.png"                      alt="image-20230404112832991"                ></p><p><strong>双亲委派模型的好处：</strong> </p><ul><li>主要是为了安全性，避免用户自己编写的类动态替换 Java的一些核心类，比如 String。 </li><li>同时也避免了<strong>类的重复加载</strong>，因为 JVM中<strong>区分不同类</strong>，不仅仅是<strong>根据类名</strong>，<strong>相同的 class文件被不同的 ClassLoader加载就是不同的两个类</strong></li></ul><h2 id="二、线程、并发相关"><a href="#二、线程、并发相关" class="headerlink" title="二、线程、并发相关"></a>二、线程、并发相关</h2><h2 id="1、线程的生命周期？线程有几种状态"><a href="#1、线程的生命周期？线程有几种状态" class="headerlink" title="1、线程的生命周期？线程有几种状态"></a>1、线程的生命周期？线程有几种状态</h2><ol><li>线程通常有五种状态，<strong>创建，就绪，运行、阻塞和死亡</strong>状态。 </li><li>阻塞的情况又分为三种： <ul><li><strong>等待阻塞</strong>：运行的线程执行<strong>wait</strong>方法，该线程会释放占用的所有资源，JVM会把该线程放入“等待 池”中。进入这个状态后，是不能自动唤醒的，<strong>必须依靠其他线程调用notify或notifyAll方法才能被唤醒</strong>，wait是object类的方法 </li><li><strong>同步阻塞：</strong>运行的线程在获取对象的同步锁时，若该同步锁被别的线程占用，则JVM会把该线程放入“锁池”中。</li><li><strong>其他阻塞：</strong>运行的线程执行<strong>sleep或join</strong>方法，或者发出了<strong>I&#x2F;O请求</strong>时，<strong>JVM会把该线程置为阻塞状态</strong>。当sleep状态超时、join等待线程终止或者超时、或者I&#x2F;O处理完毕时，线程重新转入就绪状态。 sleep是Thread类的方法</li></ul></li><li>新建状态（New）：新创建了一个线程对象。</li><li>就绪状态（Runnable）：线程对象创建后，其他线程调用了该对象的start方法。该状态的线程位于可运行线程池中，变得可运行，等待获取CPU的使用权。 </li><li>运行状态（Running）：就绪状态的线程获取了CPU，执行程序代码。</li><li>阻塞状态（Blocked）：阻塞状态是线程因为某种原因放弃CPU使用权，暂时停止运行。直到线程进入就绪状态，才有机会转到运行状态。</li><li>死亡状态（Dead）：线程执行完了或者因异常退出了run方法，该线程结束生命周期。</li></ol><h2 id="2、sleep-、wait-、join-、yield-的区别"><a href="#2、sleep-、wait-、join-、yield-的区别" class="headerlink" title="2、sleep()、wait()、join()、yield()的区别"></a>2、sleep()、wait()、join()、yield()的区别</h2><ol><li><strong>锁池：</strong>所有需要<strong>竞争同步锁的线程</strong>都会放在锁池当中，比如当前对象的锁已经被其中一个线程得到，则其他线程需要在这个锁池进行等待，当前面的线程释放同步锁后锁池中的线程去竞争同步锁，当某个线程得到后会进入就绪队列进行等待cpu资源分配。</li><li><strong>等待池：</strong>当我们调用wait（）方法后，线程会放到等待池当中，等待池的线程是不会去竞争同步锁。只有调用了 notify（）或notifyAll()后等待池的线程才会开始去竞争锁，notify（）是随机从等待池选出一个线程放到锁池，而notifyAll()是将等待池的所有线程放到锁池当中。</li><li>sleep 是 Thread 类的静态本地方法，wait 则是 Object 类的本地方法。</li><li>sleep方法不会释放lock，但是wait会释放，而且会加入到等待队列中。</li><li>sleep就是把cpu的执行资格和执行权释放出去，不再运行此线程，当定时时间结束再取回cpu资源，参与cpu的调度，获取到cpu资源后就可以继续运行了。而<strong>如果sleep时该线程有锁，那么sleep不会释放这个锁</strong>，而是把锁带着进入了冻结状态，也就是说其他需要这个锁的线程根本不可能获取到这个锁。也就是说无法执行程序。如果<strong>在睡眠期间</strong>其他线程调用了这个线程的interrupt方法，那么这个线程也会抛出interruptexception异常返回，这点和wait是一样的。</li><li>sleep方法不依赖于同步器synchronized，但是wait需要依赖synchronized关键字。</li><li>sleep不需要被唤醒（休眠之后推出阻塞），但是wait需要（不指定时间需要被别人中断）。</li><li>sleep 一般用于当前线程休眠，或者轮循暂停操作，<strong>wait 则多用于多线程之间的通信</strong>。</li><li>sleep 会让出 CPU 执行时间且强制上下文切换，而 wait 则不一定，wait 后可能还是有机会重新竞争到锁继续执行的。</li><li><strong>yield（）</strong>执行后线程直接进入<strong>就绪状态</strong>，马上释放了cpu的执行权，但是依然保留了cpu的执行资格， 所以有可能cpu下次进行线程调度还会让这个线程获取到执行权继续执行 </li><li><strong>join（）</strong>执行后线程进入<strong>阻塞状态</strong>，例如在线程B中调用线程A的join（），那线程B会进入到阻塞队列，直到线程A结束或中断线程</li></ol><h2 id="3、对线程安全的理解"><a href="#3、对线程安全的理解" class="headerlink" title="3、对线程安全的理解"></a>3、对线程安全的理解</h2><p>不是线程安全、应该是内存安全，堆是共享内存，可以被所有线程访问</p><blockquote><p>当多个线程访问一个对象时，如果不用进行额外的同步控制或其他的协调操作，调用这个对象的行为都可以获得正确的结果，我们就说这个对象是线程安全的</p></blockquote><ol><li><strong>堆</strong>是进程和线程共有的空间，分全局堆和局部堆。<strong>全局堆</strong>就是所有没有分配的空间，<strong>局部堆</strong>就是用户配的空间。堆在<strong>操作系统</strong>对进程初始化的时候分配，运行过程中也可以向系统要额外的堆，但是用完了要还给操作系统，要不然就是内存泄漏</li></ol><blockquote><p>在Java中，堆是Java虚拟机所管理的内存中最大的一块，是所有线程共享的一块内存区域，在虚拟机启动时创建。堆所存在的内存区域的唯一目的就是&#x3D;&#x3D;存放对象实例&#x3D;&#x3D;，几乎所有的对象实例以及数组都在这里分配内存。</p></blockquote><ol start="2"><li><strong>栈</strong>是每个线程独有的，保存其运行状态和局部自动变量的。栈在线程开始的时候初始化，每个线程的栈互相独立，因此，栈是线程安全的。操作系统在切换线程的时候会自动切换栈。栈空间不需要在高级语言里面显式的分配和释放。</li><li>目前主流操作系统都是多任务的，即多个进程同时运行。为了保证安全，<strong>每个进程只能访问分配给自己的内存空间</strong>，而不能访问别的进程的，这是由操作系统保障的。 </li><li>在每个进程的内存空间中都会有一块特殊的公共区域，通常称为堆（内存）。进程内的所有线程都可以访问到该区域，这就是造成问题的潜在原因。</li></ol><h2 id="4、Thread、Runable的区别"><a href="#4、Thread、Runable的区别" class="headerlink" title="4、Thread、Runable的区别"></a>4、Thread、Runable的区别</h2><p>Thread和Runnable的实质是继承关系，没有可比性。无论使用Runnable还是Thread，都会new Thread，然后执行run方法。用法上，如果有<strong>复杂的线程操作</strong>需求，那就选择继承<strong>Thread</strong>，如果只是<strong>简单</strong>的执行一个任务，那就实现<strong>runnable</strong>。</p><h2 id="5、对守护线程的理解"><a href="#5、对守护线程的理解" class="headerlink" title="5、对守护线程的理解"></a>5、对守护线程的理解</h2><ol><li><strong>守护线程：</strong>为所有非守护线程提供服务的线程；任何一个守护线程都是整个JVM中所有非守护线程的保姆； </li><li>守护线程类似于整个进程的一个默默无闻的小喽喽；它的生死无关重要，它却<strong>依赖整个进程而运行</strong>；哪天其他线程结束了，没有要执行的了，程序就结束了，理都没理守护线程，就把它中断了；</li><li>注意： 由于守护线程的终止是自身无法控制的，因此千万不要把IO、File等重要操作逻辑分配给它；因为它不靠谱； </li><li>守护线程的作用是什么？ <ul><li><strong>GC垃圾回收线程</strong>：就是一个经典的守护线程，当我们的程序中不再有任何运行的Thread,程序就不会再产生垃圾，垃圾回收器也就无事可做，所以当垃圾回收线程是JVM上仅剩的线程时，垃圾回收线程会自动离开。它始终在<strong>低级别</strong>的状态中运行，用于实时监控和管理系统中的可回收资源。 </li><li>应用场景：（1）来为其它线程提供服务支持的情况；（2） 或者在任何情况下，程序结束时，这个线程必须正常且立刻关闭，就可以作为守护线程来使用；<strong>反之</strong>，如果一个正在执行某个操作的线程必须要正确地关闭掉否则就会出现不好的后果的话，那么这个线程就不能是守护线程，而是<strong>用户线程</strong>。通常都是些关键的事务，比方说，数据库录入或者更新，这些操作都是不能中断的。</li><li>thread.setDaemon(true)必须在thread.start()之前设置，否则会跑出一个 IllegalThreadStateException异常。你不能把正在运行的常规线程设置为守护线程。 </li><li>在Daemon线程中产生的新线程也是Daemon的。 </li><li><strong>守护线程不能用于去访问固有资源</strong>，比如读写操作或者计算逻辑。因为它会在任何时候甚至在一个操作的中间发生中断。 Java自带的多线程框架，比如<strong>ExecutorService，会将守护线程转换为用户线程</strong>，所以如果要使用后台线程就不能用Java的线程池。</li></ul></li></ol><h2 id="6、ThreadLocal的原理和使用场景"><a href="#6、ThreadLocal的原理和使用场景" class="headerlink" title="6、ThreadLocal的原理和使用场景"></a>6、ThreadLocal的原理和使用场景</h2><ol><li>每一个 <strong>Thread</strong> 对象均含有一个 <strong>ThreadLocalMap</strong> 类型的成员变量 <strong>threadLocals</strong> ，它存储本线程中所有<strong>ThreadLocal</strong>对象及其对应的值</li><li><strong>ThreadLocalMap</strong> 由一个个 <strong>Entry</strong> 对象构成</li><li><strong>Entry</strong> 继承自  <strong>WeakReference&lt;ThreadLocal&lt; ? &gt;&gt;</strong> ，一个 <strong>Entry</strong> 由 <strong>ThreadLocal</strong> 对象和 <strong>Object</strong> 构成。由此可见， <strong>Entry</strong> 的key是ThreadLocal对象，并且是一个弱引用。<strong>当没指向key的强引用后，该 key就会被垃圾收集器回收</strong></li><li>当执行set方法时，<strong>ThreadLocal</strong>首先会获取当前线程对象，然后获取当前线程的<strong>ThreadLocalMap</strong>对象。再以当前ThreadLocal对象为key，将值存储进<strong>ThreadLocalMap</strong>对象中。</li><li>get方法执行过程类似。<strong>ThreadLocal</strong>首先会获取当前线程对象，然后获取当前线程的<strong>ThreadLocalMap</strong> 对象。再以当前<strong>ThreadLocal</strong>对象为key，获取对应的value。</li><li>由于每一条线程均含有各自私有的<strong>ThreadLocalMap</strong>容器，这些容器相互独立互不影响，因此<strong>不会存在线程安全性问题</strong>，从而也无需使用同步机制来保证多条线程访问容器的互斥性。</li></ol><p><strong>使用场景：</strong> </p><ol><li>在进行对象跨层传递的时候，使用ThreadLocal可以避免多次传递，打破层次间的约束。</li><li>线程间数据隔离 </li><li>进行事务操作，用于存储线程事务信息。 </li><li>数据库连接，Session会话管理。</li></ol><blockquote><p>Spring框架在事务开始时会给当前线程绑定一个Jdbc Connection,在整个事务过程都是使用该线程绑定的connection来执行数据库操作，实现了事务的<strong>隔离性</strong>。Spring框架里面就是用的<strong>ThreadLocal</strong>来实现这种隔离</p></blockquote><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304072117299.png"                      alt="image-20230407211707824"                ></p><h2 id="7、ThreadLocal内存泄露原因，如何避免"><a href="#7、ThreadLocal内存泄露原因，如何避免" class="headerlink" title="7、ThreadLocal内存泄露原因，如何避免"></a>7、ThreadLocal内存泄露原因，如何避免</h2><ol><li>内存泄露为<strong>程序在申请内存后，无法释放已申请的内存空间</strong>，一次内存泄露危害可以忽略，但内存泄露堆积后果很严重，无论多少内存，迟早会被占光。</li><li>不再会被使用的<strong>对象或者</strong>变量占用的内存不能被回收，就是内存泄露。</li><li><strong>强引用：</strong>使用最普遍的引用(new)，一个<strong>对象具有强引用，不会被垃圾回收器回收</strong>。当内存空间不足， Java虚拟机宁愿抛出OutOfMemoryError错误，使程序异常终止，也不回收这种对象。</li><li>如果想<strong>取消</strong>强引用和某个对象之间的<strong>关联</strong>，可以<strong>显式地将引用赋值为null</strong>，这样可以使JVM在合适的时间<strong>就会回收</strong>该对象。</li><li><strong>弱引用：</strong>JVM进行垃圾回收时，无论内存是否充足，都会回收被弱引用关联的对象。在java中，用 java.lang.ref.WeakReference类来表示。<strong>可以在缓存中使用弱引用。</strong></li><li><strong>ThreadLocal的实现原理</strong>，每一个Thread维护一个ThreadLocalMap，<strong>key为使用弱引用的ThreadLocal 实例，value为线程变量的副本</strong></li><li><strong>ThreadLocalMap</strong>使用<strong>ThreadLocal</strong>的弱引用作为<strong>key</strong>，如果一个<strong>ThreadLocal</strong>不存在外部强引用时， <strong>Key(ThreadLocal)<strong>势必会被GC回收，这样就会</strong>导致ThreadLocalMap中key为null</strong>， 而value还存在着强引用，只有<strong>thread</strong>线程退出以后,value的强引用链条才会断掉，<strong>但如果当前线程再迟迟不结束的话，这些key为null的Entry的value就会一直存在一条强引用链</strong>（红色链条）</li><li><strong>key使用强引用：</strong>当threadLocalMap的key为<strong>强引用</strong>回收ThreadLocal时，因为ThreadLocalMap还持有ThreadLocal的强引用，<strong>如果没有手动删除，ThreadLocal不会被回收，导致Entry内存泄漏。</strong></li><li><strong>key使用弱引用：</strong>当ThreadLocalMap的key为<strong>弱引用</strong>回收ThreadLocal时，由于ThreadLocalMap持有ThreadLocal的弱引用，<strong>即使没有手动删除，ThreadLocal也会被回收。</strong><strong><strong>当key为null</strong></strong>，在下一次ThreadLocalMap调用 set(),get()，remove()方法的时候会被**清除value值。</li><li>因此，<strong>ThreadLocal内存泄漏的根源是：</strong>由于ThreadLocalMap的生命周期跟Thread一样长，<strong>如果没有手动删除对应key就会导致内存泄漏</strong>，而不是因为弱引用。</li><li><strong>ThreadLocal正确的使用方法：</strong><ul><li>每次使用完<strong>ThreadLocal</strong>都调用它的<strong>remove()方法清除数据</strong> </li><li>将<strong>ThreadLocal</strong>变量定义成<strong>private static</strong>，这样就一直存在ThreadLocal的强引用，也就能保证任何时候都能通过ThreadLocal的弱引用访问到Entry的value值，进而清除掉 。</li></ul></li></ol><h2 id="8、并发、并行、串行的区别"><a href="#8、并发、并行、串行的区别" class="headerlink" title="8、并发、并行、串行的区别"></a>8、并发、并行、串行的区别</h2><ol><li><strong>串行</strong>在时间上不可能发生重叠，前一个任务没搞定，下一个任务就只能等着 </li><li><strong>并行</strong>在时间上是重叠的，两个任务在同一时刻互不干扰的同时执行。 </li><li><strong>并发</strong>允许两个任务彼此干扰。统一时间点、只有一个任务运行，交替执行</li></ol><h2 id="9、并发的三大特性"><a href="#9、并发的三大特性" class="headerlink" title="9、并发的三大特性"></a>9、并发的三大特性</h2><ol><li><strong>原子性</strong>是指在一个操作中cpu不可以在中途暂停然后再调度，<strong>即不被中断操作，要不全部执行完成，要不都不执行</strong>。就好比转账，从账户A向账户B转1000元，那么必然包括2个操作：从账户A减去1000元， 往账户B加上1000元。2个操作必须全部完成。</li><li>那<strong>程序中原子性</strong>指的是<strong>最小的操作单元</strong>，比如自增操作，它本身其实并不是原子性操作，分了3步的， 包括读取变量的原始值、进行加1操作、写入工作内存。所以在多线程中，有可能一个线程还没自增完，可能才执行到第二部，另一个线程就已经读取了值，导致结果错误。<strong>那如果我们能保证自增操作是一个原子性的操作，那么就能保证其他线程读取到的一定是自增后的数据。</strong></li><li><strong>可见性：</strong>当多个线程访问同一个变量时，一个线程修改了这个变量的值，其他线程能够立即看得到修改的值。 <strong>若两个线程在不同的cpu</strong>，那么线程1改变了i的值还没刷新到主存，线程2又使用了i，那么这个i值肯定还是之前的，线程1对变量的修改线程没看到<strong>这就是可见性问题。</strong></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//线程1</span></span><br><span class="line"><span class="type">boolean</span> <span class="variable">stop</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">while</span>(!stop)&#123;</span><br><span class="line">doSomething();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//线程2</span></span><br><span class="line">stop = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><blockquote><p>如果线程2改变了stop的值，线程1一定会停止吗？<strong>不一定。</strong>当线程2更改了stop变量的值之后，<strong>但</strong>是还没来得及写入主存当中，线程2转去做其他事情了，那么线程1由于不知道线程2对stop变量的更改，因此还会一直循环下去。</p></blockquote><ol start="4"><li><strong>有序性：</strong>虚拟机在进行代码编译时，对于那些改变顺序之后不会对最终结果造成影响的代码，虚拟机不一定会按照我们写的代码的顺序来执行，有可能将他们重排序。实际上，<strong>对于有些代码进行重排序之后</strong>，虽然对变量的值没有造成影响，但<strong>有可能会出现线程安全问题。</strong></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">bool</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">write</span><span class="params">()</span> &#123;</span><br><span class="line">    a = <span class="number">2</span>; <span class="comment">//1</span></span><br><span class="line">    flag = <span class="literal">true</span>; <span class="comment">//2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">multiply</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (flag) &#123; <span class="comment">//3</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">ret</span> <span class="operator">=</span> a * a;<span class="comment">//4</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>write方法里的1和2做了重排序，线程1先对flag赋值为true，随后执行到线程2，ret直接计算出结果， 再到线程1，这时候a才赋值为2,很明显迟了一步</p></blockquote><ol start="5"><li><strong>volatile</strong>本身就包含了禁止指令重排序的语义，而<strong>synchronized</strong>关键字是由“一个变量在同一时刻只允许一条线程对其进行lock操作”这条规则明确的。</li><li>synchronized关键字同时满足以上三种特性，但是volatile关键字不满足原子性。</li><li>在某些情况下，<strong>volatile的同步机制的性能确实要优于锁</strong>(使用synchronized关键字或 java.util.concurrent包里面的锁)，因为volatile的总开销要比锁低。 </li><li>我们<strong>判断使用volatile还是加锁的唯一依据</strong>就是volatile的语义能否满足使用的场景(原子性)</li></ol><h2 id="10、volatile"><a href="#10、volatile" class="headerlink" title="10、volatile"></a>10、volatile</h2><ol><li><strong>保证被volatile修饰的共享变量对所有线程总是可见的</strong>，也就是当一个线程修改了一个被volatile修饰共享变量的值，新值总是可以被其他线程立即得知。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//线程1</span></span><br><span class="line"><span class="type">boolean</span> <span class="variable">stop</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">while</span>(!stop)&#123;</span><br><span class="line">doSomething();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//线程2</span></span><br><span class="line">stop = <span class="literal">true</span>;</span><br></pre></td></tr></table></figure><blockquote><p>如果线程2改变了stop的值，线程1一定会停止吗？不一定。当线程2更改了stop变量的值之后，但 是还没来得及写入主存当中，线程2转去做其他事情了，那么线程1由于不知道线程2对stop变量的 更改，因此还会一直循环下去。</p></blockquote><ol start="2"><li>禁止指令重排序优化。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">bool</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">write</span><span class="params">()</span> &#123;</span><br><span class="line">    a = <span class="number">2</span>; <span class="comment">//1</span></span><br><span class="line">    flag = <span class="literal">true</span>; <span class="comment">//2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">multiply</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (flag) &#123; <span class="comment">//3</span></span><br><span class="line">    <span class="type">int</span> <span class="variable">ret</span> <span class="operator">=</span> a * a;<span class="comment">//4</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>write方法里的1和2做了重排序，线程1先对flag赋值为true，随后执行到线程2，ret直接计算出结果， 再到线程1，这时候a才赋值为2,很明显迟了一步。</p></blockquote><ol start="3"><li>但是用volatile修饰之后就变得不一样了<ul><li>使用volatile关键字会强制将修改的值立即写入主存； </li><li>使用volatile关键字的话，当线程2进行修改时，会导致线程1的工作内存中缓存变量stop的缓存行无效（反映到硬件层的话，就是CPU的L1或者L2缓存中对应的缓存行无效）；</li><li>由于线程1的工作内存中缓存变量stop的缓存行无效，所以线程1再次读取变量stop的值时会去主存读取。</li><li>inc++; 其实是两个步骤，先加加，然后再赋值。不是原子性操作，所以volatile不能保证线程安全。</li></ul></li></ol><h2 id="11、为什么用线程池？解释下线程池参数？"><a href="#11、为什么用线程池？解释下线程池参数？" class="headerlink" title="11、为什么用线程池？解释下线程池参数？"></a>11、为什么用线程池？解释下线程池参数？</h2><ol><li>降低资源消耗；提高线程利用率，降低创建和销毁线程的消耗。</li><li>提高响应速度；任务来了，直接有线程可用可执行，而不是先创建线程，再执行。</li><li>提高线程的可管理性；线程是稀缺资源，使用线程池可以统一分配调优监控。<ul><li><strong>corePoolSize</strong> 代表<strong>核心线程数</strong>，也就是正常情况下创建工作的线程数，这些线程创建后并不会消除，而是一种常驻线程 </li><li><strong>maxinumPoolSize</strong>代表的是<strong>最大线程数</strong>，它与核心线程数相对应，表示最大允许被创建的线程数，比如当前任务较多，<strong>将核心线程数都用完了，还无法满足需求时，此时就会创建新的线程，但是线程池内线程总数不会超过最大线程数</strong> </li><li><strong>keepAliveTime</strong> 、 <strong>unit</strong> 表示<strong>超出核心线程数之外的线程的空闲存活时间</strong>，也就是核心线程不会消除，但是超出核心线程数的部分线程如果空闲一定的时间则会被消除,我们可以通过 <strong>setKeepAliveTime</strong> 来设置空闲时间 </li><li><strong>workQueue</strong> <strong>用来存放待执行的任务</strong>，假设我们现在核心线程都已被使用，还有任务进来则全部放入队列，<strong>直到整个队列被放满但任务还再持续进入则会开始创建新的线程</strong> </li><li><strong>ThreadFactory</strong> 实际上是一个线程工厂，用来<strong>生产线程执行任务</strong>。我们可以选择使用默认的创建工厂，<strong>产生的线程都在同一个组内，拥有相同的优先级，且都不是守护线程</strong>。当然我们也可以选择自定义线程工厂，一般我们会根据业务来制定不同的线程工厂 </li><li><strong>Handler</strong> <strong>任务拒绝策略</strong>，有两种情况，第一种是当我们调用 <strong>shutdown</strong> 等方法关闭线程池后，这时候即使线程池内部还有没执行完的任务正在执行，但是由于线程池已经关闭，我们再继续想线程池提交任务就会遭到拒绝。另一种情况就是<strong>当达到最大线程数</strong>，线程池已经没有能力继续处理新提交的任务时，这是也就拒绝</li></ul></li></ol><h2 id="12、简述线程池处理流程"><a href="#12、简述线程池处理流程" class="headerlink" title="12、简述线程池处理流程"></a>12、简述线程池处理流程</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304101520546.png"                      alt="image-20230410151953274"                ></p><h2 id="13、线程池中阻塞队列的作用？为什么是先添加列队而不是先创建最大线程？"><a href="#13、线程池中阻塞队列的作用？为什么是先添加列队而不是先创建最大线程？" class="headerlink" title="13、线程池中阻塞队列的作用？为什么是先添加列队而不是先创建最大线程？"></a>13、线程池中阻塞队列的作用？为什么是先添加列队而不是先创建最大线程？</h2><ol><li>一般的队列只能保证作为一个有限长度的缓冲区，如果超出了缓冲长度，就无法保留当前的任务了，<strong>阻塞队列通过阻塞可以保留住当前想要继续入队的任务</strong>。</li><li>阻塞队列可以<strong>保证任务队列中没有任务时阻塞获取任务的线程，使得线程进入wait状态，释放cpu资源。</strong> </li><li>阻塞队列自带<strong>阻塞和唤醒</strong>的功能，不需要额外处理，无任务执行时,线程池利用阻塞队列的<strong>take</strong>方法挂起，从而<strong>维持核心线程的存活、不至于一直占用cpu资源</strong></li><li><strong>在创建新线程的时候，是要获取全局锁的</strong>，这个时候其它的就得阻塞，影响了整体效率。</li></ol><blockquote><p>就好比一个企业里面有10个（core）正式工的名额，最多招10个正式工，要是任务超过正式工人数 （task &gt; core）的情况下，工厂领导（线程池）不是首先扩招工人，还是这10人，但是任务可以稍微积压一下，即先放到队列去（代价低）。10个正式工慢慢干，迟早会干完的，要是任务还在继续增加，超过正式工的加班忍耐极限了（队列满了），就的招外包帮忙了（注意是临时工）要是正式工加上外包还是不能完成任务，那新来的任务就会被领导拒绝了（线程池的拒绝策略）。</p></blockquote><h2 id="14、线程池中线程复用原理"><a href="#14、线程池中线程复用原理" class="headerlink" title="14、线程池中线程复用原理"></a>14、线程池中线程复用原理</h2><ol><li><strong>线程池将线程和任务进行解耦</strong>，线程是线程，任务是任务，摆脱了之前通过 Thread 创建线程时的 一个线程必须对应一个任务的限制。</li><li>在线程池中，同一个线程可以从阻塞队列中不断获取新任务来执行，其<strong>核心原理</strong>在于线程池对 Thread 进行了封装，并不是每次执行任务都会调用 Thread.start() 来创建新线程，而是让每个线程去 执行一个“循环任务”，在这个“循环任务”中不停检查是否有任务需要被执行，如果有则直接执行，也就是调用任务中的 run 方法，将 run 方法当成一个普通的方法执行，<strong>通过这种方式只使用固定的线程就将所有任务的 run 方法串联起来</strong>。</li></ol><h1 id="三、spring"><a href="#三、spring" class="headerlink" title="三、spring"></a>三、spring</h1><h2 id="1、如何实现一个IOC容器"><a href="#1、如何实现一个IOC容器" class="headerlink" title="1、如何实现一个IOC容器"></a>1、如何实现一个IOC容器</h2><ol><li><strong>配置文件</strong>配置包扫描路径 </li><li><strong>递归包</strong>扫描获取.class文件 </li><li><strong>反射、确定</strong>需要交给IOC管理的类 </li><li>对需要注入的类进行<strong>依赖注入</strong><ul><li>配置文件中指定需要扫描的包路径 </li><li>定义一些注解，分别表示访问控制层、业务服务层、数据持久层、依赖注入注解、获取配置文件注解</li><li>从配置文件中获取需要扫描的包路径，获取到当前路径下的文件信息及文件夹信息，我们将当前路径下所有以.class结尾的文件添加到一个Set集合中进行存储</li><li>遍历这个set集合，获取在类上有指定注解的类，并将其交给IOC容器，定义一个安全的Map用来存储这些对象 </li><li>遍历这个IOC容器，获取到每一个类的实例，判断里面是有有依赖其他的类的实例，然后进行递归注入</li></ul></li></ol><h2 id="2、spring是什么？"><a href="#2、spring是什么？" class="headerlink" title="2、spring是什么？"></a>2、spring是什么？</h2><ol><li>轻量级的开源的J2EE框架。<strong>它是一个容器框架，用来装javabean</strong>（java对象），<strong>中间层框架（万能胶）可以起一个连接作用</strong>，比如说把Struts和hibernate粘合在一起运用，可以让我们的企业开发更快、更简洁</li><li>Spring是一个轻量级的<strong>控制反转（IoC)和面向切面（AOP）</strong>的容器框架<ul><li>从<strong>大小与开销</strong>两方面而言Spring都是轻量级的。</li><li>通过<strong>控制反转(IoC)<strong>的技术达到</strong>松耦合</strong>的目的</li><li>提供了<strong>面向切面</strong>编程的丰富支持，<strong>允许通过分离应用的业务逻辑与系统级服务进行内聚性的开发</strong></li><li><strong>包含并管理</strong>应用对象(Bean)的<strong>配置和生命周期</strong>，这个意义上是一个容器。</li><li>将简单的组件配置、<strong>组合</strong>成为复杂的应用，这个意义上是一个框架。</li></ul></li></ol><h2 id="3、谈谈你对AOP的理解"><a href="#3、谈谈你对AOP的理解" class="headerlink" title="3、谈谈你对AOP的理解"></a>3、谈谈你对AOP的理解</h2><ol><li>系统是由许多不同的组件所组成的<strong>，每一个组件各负责一块特定功能</strong>。除了实现自身核心功能之外，这些组件还经常承担着额外的职责。例如日志、事务管理和安全这样的核心服务经常融入到自身具有核心业务逻辑的组件中去。<strong>这些系统服务经常被称为横切关注点</strong>，因为它们会跨越系统的多个组件。 </li><li><strong>当我们需要为分散的对象引入公共行为的时候</strong>，OOP则显得无能为力。也就是说，OOP允许你定义从上到下的关系，但并不适合定义从左到右的关系。例如日志功能。 </li><li><strong>日志代码往往水平地散布在所有对象层次中，而与它所散布到的对象的核心功能毫无关系。</strong> 在OOP设计中，它导致了大量代码的重复，而不利于各个模块的重用。 </li><li>AOP：将程序中的<strong>交叉业务逻辑</strong>（比如安全，日志，事务等）<strong>，封装成一个切面，然后注入到目标对象</strong> （具体业务逻辑）中去。AOP可以对<strong>某个</strong>对象或<strong>某些</strong>对象<strong>的功能</strong>进行增强，比如对象中的方法进行增强，&#x3D;&#x3D;可以在执行某个方法之前额外的做一些事情，在某个方法执行之后额外的做一些事情&#x3D;&#x3D;</li></ol><h2 id="4、谈谈你对IOC的理解"><a href="#4、谈谈你对IOC的理解" class="headerlink" title="4、谈谈你对IOC的理解"></a>4、谈谈你对IOC的理解</h2><ol><li>容器概念、控制反转、依赖注入：<ul><li><strong>ioc容器</strong>：实际上就是个<strong>map（key，value）</strong>，<strong>里面存的是各种对象</strong>（在xml里配置的bean节点、 @repository、@service、@controller、@component），在项目启动的时候会读取配置文件里面的<strong>bean</strong>节点，根据<strong>全限定类名</strong>使用<strong>反射</strong>创建对象放到map里、扫描到打上上述注解的类还是通过反射创建对象放到map里。 </li><li>这个时候map里就有各种对象了，接下来我们在代码里需要用到里面的对象时，再<strong>通过DI注入</strong> （autowired、resource等注解，xml里bean节点内的ref属性，项目启动的时候会读取xml节点ref属性根据id注入，也会扫描这些注解，根据类型或id注入；id就是对象名）。</li></ul></li><li>控制反转：<ul><li>没有引入IOC容器之前，对象A依赖于对象B，那么对象A在初始化或者运行到某一点的时候，自己必须主动去创建对象B或者使用已经创建的对象B。无论是创建还是使用对象B，<strong>控制权都在自己手上。</strong> </li><li>引入IOC容器之后，对象A与对象B之间失去了直接联系，当对象A运行到需要对象B的时候，IOC容器会主动创建一个对象B<strong>注入</strong>到对象A需要的地方。</li><li>通过前后的对比，不难看出来：<strong>对象A获得依赖对象B的过程,由主动行为变为了被动行为，控制权颠倒过来了</strong>，这就是“控制反转”这个名称的由来。 </li><li>全部对象的控制权全部上缴给“第三方”IOC容器，所以，IOC容器成了整个系统的关键核心，<strong>它起到了一 种类似“粘合剂”的作用</strong>，把系统中的所有对象粘合在一起发挥作用，<strong>如果没有这个“粘合剂”，对象与对象之间会彼此失去联系</strong>，这就是有人把IOC容器比喻成“粘合剂”的由来。</li></ul></li><li>依赖注入<ul><li>“获得依赖对象的过程被反转了”。<strong>控制被反转之后，获得依赖对象的过程由自身管理变为了由IOC容器主动注入。</strong>&#x3D;&#x3D;依赖注入是实现IOC的方法，就是由IOC容器在运行期间，动态地将某种依赖关系注入到对象之中。&#x3D;&#x3D;</li></ul></li></ol><h2 id="5、BeanFactory和ApplicationContext有什么区别？"><a href="#5、BeanFactory和ApplicationContext有什么区别？" class="headerlink" title="5、BeanFactory和ApplicationContext有什么区别？"></a>5、BeanFactory和ApplicationContext有什么区别？</h2><ol><li><p>ApplicationContext是BeanFactory的子接口 </p></li><li><p>ApplicationContext提供了更完整的功能：</p><p>①继承MessageSource，因此<strong>支持国际化</strong>。 </p><p>②<strong>统一的资源文件访问方式</strong>。 </p><p>③<strong>提供在监听器中注册bean的事件。</strong> </p><p>④<strong>同时加载多个配置文件。</strong> </p><p>⑤<strong>载入多个（有继承关系）上下文</strong> ，使得每一个上下文都专注于一个特定的层次，比如应用的web层。</p><ul><li><strong>BeanFactroy</strong>采用的是<strong>延迟加载形式</strong>来注入Bean的，即只有在使用到某个Bean时(调用 getBean())，才对该Bean进行加载实例化。这样，我们就不能发现一些存在的Spring的配置问 题。如果Bean的某一个属性没有注入，BeanFacotry加载后，直至第一次使用调用getBean方法才会抛出异常。</li><li><strong>ApplicationContext</strong>，它是<strong>在容器启动</strong>时，<strong>一次性创建了所有的Bean</strong>。这样，在容器启动时，我 们就可以发现Spring中存在的配置错误，这样有利于检查所依赖属性是否注入。 <strong>ApplicationContext启动后</strong>预载入所有的<strong>单实例Bean</strong>，通过预载入单实例bean ,确保当你需要的时候，你就不用等待，因为它们已经创建好了。 </li><li>相对于基本的<strong>BeanFactory</strong>，<strong>ApplicationContext</strong> 唯一的<strong>不足</strong>是占用内存空间。当应用程序配置 Bean较多时，程序启动较慢。 </li><li>BeanFactory通常以编程的方式被创建，<strong>ApplicationContext还能以声明的方式创建</strong>，如使用 ContextLoader。 </li><li>BeanFactory和ApplicationContext都支持BeanPostProcessor、BeanFactoryPostProcessor的使用，但两者之间的区别是：<strong>BeanFactory需要手动注册，而ApplicationContext则是自动注册。</strong></li></ul></li></ol><h2 id="6、描述一下Spring-Bean的生命周期？"><a href="#6、描述一下Spring-Bean的生命周期？" class="headerlink" title="6、描述一下Spring Bean的生命周期？"></a>6、描述一下Spring Bean的生命周期？</h2><ol><li><strong>解析类</strong>得到BeanDefinition </li><li>如果有多个构造方法，则要<strong>推断构造方法</strong> </li><li>确定好构造方法后，<strong>进行实例化得到一个对象</strong></li><li>对对象中的加了**@Autowired注解<strong>的属性</strong>进行属性填充** </li><li><strong>回调Aware方法</strong>，比如BeanNameAware，BeanFactoryAware </li><li><strong>调用BeanPostProcessor的初始化前的方法</strong> </li><li><strong>调用初始化方法</strong> </li><li><strong>调用</strong>BeanPostProcessor的<strong>初始化后的方法</strong>，<strong>在这里会进行AOP</strong> </li><li><strong>如果当前创建的bean是单例的则会把bean放入单例池</strong> </li><li><strong>使用bean</strong> </li><li><strong>Spring容器关闭时调用DisposableBean中destory()方法</strong></li></ol><h2 id="7、解释下Spring支持的几种bean的作用域。"><a href="#7、解释下Spring支持的几种bean的作用域。" class="headerlink" title="7、解释下Spring支持的几种bean的作用域。"></a>7、解释下Spring支持的几种bean的作用域。</h2><ul><li><strong>singleton</strong>：默认，<strong>每个容器中只有一个bean的实例</strong>，单例的模式由BeanFactory自身来维护。该对象的生命周期是与Spring IOC容器一致的（但在第一次被注入时才会创建）。 </li><li><strong>prototype</strong>：为每一个bean请求提供一个实例。<strong>在每次注入时都会创建一个新的对象</strong> </li><li><strong>request</strong>：bean被定义为在每个HTTP请求中创建一个单例对象，也就是说在<strong>单个请求中都会复用这一个单例对象</strong>。 </li><li><strong>session</strong>：与request范围类似，<strong>确保每个session中有一个bean的实例</strong>，在session过期后，bean 会随之失效。 </li><li><strong>application</strong>：<strong>bean被定义为在ServletContext的生命周期中复用一个单例对象。</strong> </li><li><strong>websocket</strong>：bean被定义为在websocket的生命周期中复用一个单例对象。</li><li><strong>global-session</strong>：全局作用域，global-session和Portlet应用相关。当你的应用部署在Portlet容器中工作时，它包含很多portlet。如果你想要声明让所有的portlet共用全局的存储变量的话，那么 这全局变量需要存储在global-session中。<strong>全局作用域与Servlet中的session作用域效果相同。</strong></li></ul><h2 id="8、Spring框架中的单例Bean是线程安全的么？"><a href="#8、Spring框架中的单例Bean是线程安全的么？" class="headerlink" title="8、Spring框架中的单例Bean是线程安全的么？"></a>8、Spring框架中的单例Bean是线程安全的么？</h2><ol><li>Spring中的Bea<strong>n默认是单例模式</strong>的，<strong>框架并没有对bean进行多线程的封装处理。</strong> </li><li><strong>如果Bean是有状态的</strong>，那就需要<strong>开发人员自己</strong>来<strong>进行线程安全的保证</strong>，最简单的办法就是改变bean的作用域 <strong>把 “singleton”改为’‘protopyte’</strong> ，这样每次请求Bean就相当于是 new Bean()， 这样就可以保证线程的安全了。<ul><li><strong>有状态</strong>就是有数据存储功能 </li><li><strong>无状态</strong>就是不会保存数据，controller、service和dao层本身并不是线程安全的，只是如果只是调用里面的方法，而且多线程调用一个实例的方法，会在内存中复制变量，这是自己的线程的工作内存，是安全的。</li></ul></li><li><strong>Dao会操作数据库Connection</strong>，Connection是带有状态的，比如说数据库事务<strong>，Spring的事务管理器使用Threadlocal为不同线程维护了一套独立的connection副本</strong>，保证线程之间不会互相影响（Spring 是如何保证事务获取同一个Connection的）</li><li><strong>不要在bean中声明任何有状态的实例变量或类变量</strong>，如果必须如此，那么就<strong>使用ThreadLocal把变量变为线程私有的</strong>，如果bean的实例变量或类变量需要在多个线程之间<strong>共享</strong>，那么就<strong>只能使用 synchronized、lock、CAS等这些实现线程同步的方法了</strong>。</li></ol><h2 id="9、Spring-框架中都用到了哪些设计模式？"><a href="#9、Spring-框架中都用到了哪些设计模式？" class="headerlink" title="9、Spring 框架中都用到了哪些设计模式？"></a>9、Spring 框架中都用到了哪些设计模式？</h2><ol><li><strong>简单工厂：</strong>由一个工厂类根据传入的参数，动态决定应该创建哪一个产品类。</li></ol><blockquote><p>Spring中的BeanFactory就是简单工厂模式的体现，根据传入一个唯一的标识来获得Bean对象，但是否是在<strong>传入参数后创建还是传入参数前</strong>创建这个要根据具体情况来定。</p></blockquote><ol start="2"><li><strong>工厂方法：</strong></li></ol><blockquote><p><strong>实现了FactoryBean接口的bean是一类叫做factory的bean</strong>。其特点是，spring会在使用&#x3D;&#x3D;getBean()&#x3D;&#x3D;调用获得该bean时，会自动调用该bean的&#x3D;&#x3D;getObject()&#x3D;&#x3D;方法，<strong>所以返回的不是factory这个bean，而是这个 bean.getOjbect()方法的返回值。</strong></p></blockquote><ol start="3"><li><strong>单例模式：</strong>保证一个类仅有一个实例，并提供一个访问它的全局访问点BeanFactory</li></ol><blockquote><p><strong>spring对单例的实现：</strong> spring中的单例模式完成了后半句话，即提供了全局的访问点BeanFactory。但没有从构造器级别去控制单例，这是因为<strong>spring管理的是任意的java对象</strong>。</p></blockquote><ol start="4"><li><strong>适配器模式：</strong></li></ol><blockquote><p>Spring定义了一个适配接口，使得每一种<strong>Controller</strong>有一种对应的适配器实现类，&#x3D;&#x3D;让适配器代替controller执行相应的方法&#x3D;&#x3D;。这样在扩展Controller时，只需要增加一个适配器类就完成了SpringMVC 的扩展了。</p></blockquote><ol start="5"><li><strong>装饰器模式：</strong>动态地给一个对象<strong>添加一些额外的职责</strong>。就增加功能来说，Decorator模式相比生成子类更为灵活。</li></ol><blockquote><p>Spring中用到的包装器模式在类名上有两种表现：一种是类名中含有&#x3D;&#x3D;Wrapper&#x3D;&#x3D;，另一种是类名中含有&#x3D;&#x3D;Decorato&#x3D;&#x3D;</p></blockquote><ol start="6"><li><strong>动态代理：</strong></li></ol><blockquote><p>切面在应用运行的时刻被织入。一般情况下，在织入切面时，<strong>AOP容器会为目标对象创建动态的创建一个代理对象</strong>。SpringAOP就是以这种方式织入切面的。 </p><p><strong>织入：</strong>把切面应用到目标对象并创建新的代理对象的过程。</p></blockquote><ol start="7"><li><strong>观察者模式：</strong></li></ol><blockquote><p>spring的事件驱动模型使用的是观察者模式 ，<strong>Spring中Observer模式常用的地方是listener的实现。</strong></p></blockquote><ol start="8"><li><strong>策略模式：</strong></li></ol><blockquote><p><strong>Spring框架的资源访问Resource接口</strong>。该接口提供了更强的资源访问能力，Spring 框架本身大量使用了 Resource 接口来访问底层资源。</p></blockquote><ol start="9"><li>模板方法：父类定义了骨架（调用哪些方法及顺序），某些特定方法由子类实现。 <strong>最大的好处：</strong>代码复用，减少重复代码。除了子类要实现的特定方法，其他方法及方法调用顺序都在父类中预先写好了。</li></ol><h2 id="10、Spring事务的实现方式和原理以及隔离级别？"><a href="#10、Spring事务的实现方式和原理以及隔离级别？" class="headerlink" title="10、Spring事务的实现方式和原理以及隔离级别？"></a>10、Spring事务的实现方式和原理以及隔离级别？</h2><ol><li><p>在使用Spring框架时，可以有<strong>两种使用事务</strong>的方式，一种是编程式的，一种是申明式的， <strong>@Transactional</strong>注解就是申明式的。 </p></li><li><p>首先，事务这个概念是数据库层面的，<strong>Spring只是基于数据库中的事务进行了扩展</strong>，以及提供了一些能让程序员更加方便操作事务的方式。 </p></li><li><p>比如我们可以通过在某个方法上增加**@Transactional<strong>注解，就可以开启事务，</strong>这个方法中所有的sql都会在一个事务中执行，统一成功或失败。** </p></li><li><p>在一个方法上加了@Transactional注解后，Spring会基于这个类生成一个代理对象，会将这个代理对象作为bean，当在使用这个代理对象的方法时，如果这个方法上<strong>存在@Transactional注解</strong>，那么代理逻辑会先把事务的<strong>自动提交设置为false</strong>，然后再去执行原本的业务逻辑方法，如果执行业务逻辑方法没有出现异常，那么代理逻辑中就会将事务进行提交，如果执行业务逻辑方法出现了异常，那么则会将事务进行回滚。 </p></li><li><p>当然，<strong>针对哪些异常回滚事务是可以配置的</strong>，可以利用@Transactional注解中的<strong>rollbackFor</strong>属性进行配置，默认情况下会对RuntimeException和Error进行回滚。</p></li><li><p><strong>spring事务隔离级别</strong>就是数据库的隔离级别：外加一个默认级别 </p><ul><li><p>read uncommitted（未提交读） </p></li><li><p>read committed（提交读、不可重复读） </p></li><li><p>repeatable read（可重复读） </p></li><li><p>serializable（可串行化）</p></li><li><blockquote><p>数据库的配置隔离级别是Read Commited,而Spring配置的隔离级别是Repeatable Read，请问这时隔离 级别是以哪一个为准？ </p><p>&#x3D;&#x3D;以Spring配置的为准，如果spring设置的隔离级别数据库不支持，效果取决于数据库&#x3D;&#x3D;</p></blockquote></li></ul></li></ol><h2 id="11、spring事务传播机制"><a href="#11、spring事务传播机制" class="headerlink" title="11、spring事务传播机制"></a>11、spring事务传播机制</h2><ol><li>多个事务方法相互调用时,<strong>事务如何在这些方法间传播</strong></li></ol><blockquote><p>方法A是一个事务的方法，方法A执行过程中调用了方法B，那么方法B有无事务以及方法B对事务的要求不同都会对方法A的事务具体执行造成影响，同时方法A的事务对方法B的事务执行也有影响，<strong>这种影响具体是什么就由两个方法所定义的事务传播类型所决定。</strong></p></blockquote><ol start="2"><li><strong>REQUIRED</strong>(Spring默认的事务传播类型)：<strong>如果当前没有事务，则自己新建一个事务</strong>，如果当前存在事务，则加入这个事务</li><li><strong>SUPPORTS</strong>：当前存在事务，则加入当前事务，<strong>如果当前没有事务，就以非事务方法执行</strong></li><li><strong>MANDATORY</strong>：当前存在事务，则加入当前事务，<strong>如果当前事务不存在，则抛出异常</strong></li><li><strong>REQUIRES_NEW</strong>：创建一个新事务，如果<strong>存在当前事务，则挂起该事务。</strong> </li><li><strong>NOT_SUPPORTED</strong>：<strong>以非事务方式执行</strong>,如果当前存在事务，则挂起当前事务 </li><li><strong>NEVER</strong>：不使用事务，如果<strong>当前事务存在，则抛出异常</strong> </li><li><strong>NESTED</strong>：<strong>如果当前事务存在，则在嵌套事务中执行</strong>，否则REQUIRED的操作一样（开启一个事务）</li><li><strong>NESTED和REQUIRES_NEW的区别:</strong> <ul><li><strong>REQUIRES_NEW</strong>是新建一个事务并且新开启的这个事务与原有事务无关，而<strong>NESTED</strong>则是当前存在事务时（我们把当前事务称之为父事务）会开启一个嵌套事务（称之为一个子事务）。 <strong>在NESTED情况下父事务回滚时， 子事务也会回滚</strong>，而<strong>在REQUIRES_NEW情况下，原有事务回滚，不会影响新开启的事务</strong>。</li></ul></li><li><strong>NESTED和REQUIRED的区别:</strong> <ul><li><strong>REQUIRED</strong>情况下，调用方存在事务时，则<strong>被调用方和调用方使用同一事务</strong>，那么被调用方出现异常时，由于共用一个事务，所以无论调用方是否catch其异常，事务都会回滚，而在<strong>NESTED</strong>情况下，被调用方发生异常时，调用方可以<strong>catch</strong>其异常，这样<strong>只有子事务回滚</strong>，<strong>父事务不受影响</strong></li></ul></li></ol><h2 id="12、spring事务什么时候会失效"><a href="#12、spring事务什么时候会失效" class="headerlink" title="12、spring事务什么时候会失效?"></a>12、spring事务什么时候会失效?</h2><ol><li><strong>spring事务的原理是AOP</strong>，进行了切面增强，那么失效的根本原因是这个AOP不起作用了！常见情况有如下几种： <ul><li><strong>发生自调用</strong>，类里面使用this调用本类的方法（this通常省略），此时这个<strong>this对象不是代理类，而是UserService对象本身！</strong> 解决方法很简单，让那个this变成UserService的代理类即可！ </li><li><strong>方法不是public的</strong>：**@Transactional 只能用于 public 的方法上<strong>，否则事务不会失效，</strong>如果要用在非public方法上，可以开启 &#x3D;&#x3D;AspectJ&#x3D;&#x3D; 代理模式。**</li><li><strong>数据库不支持事务</strong> </li><li><strong>没有被spring管理</strong> </li><li><strong>异常被吃掉，事务不会回滚</strong>(或者抛出的异常没有被定义，默认为RuntimeException)</li></ul></li></ol><h2 id="13、什么是bean的自动装配，有哪些方式？"><a href="#13、什么是bean的自动装配，有哪些方式？" class="headerlink" title="13、什么是bean的自动装配，有哪些方式？"></a>13、什么是bean的自动装配，有哪些方式？</h2><ol><li>开启<strong>自动装配</strong>，只需要在<strong>xml</strong>配置文件中定义“<strong>autowire</strong>”属性</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">&quot;cutomer&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.xxx.xxx.Customer&quot;</span> <span class="attr">autowire</span>=<span class="string">&quot;&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>autowire属性有<strong>五种</strong>装配的方式：</li></ol><ul><li>no – 缺省情况下，自动配置是通过“ref”属性手动设定 。</li></ul><blockquote><p>&#x3D;&#x3D;手动装配&#x3D;&#x3D;：以value或ref的方式明确指定属性值都是手动装配。 </p><p>&#x3D;&#x3D;需要通过‘ref’属性来连接bean。&#x3D;&#x3D;</p></blockquote><ul><li>byName-<strong>根据bean的属性名称</strong>进行自动装配。</li></ul><blockquote><p>Cutomer的属性名称是person，Spring会将bean id为person的bean通过setter方法进行自动装配。</p><bean id="cutomer" class="com.xxx.xxx.Cutomer" autowire="byName"/><bean id="person" class="com.xxx.xxx.Person"/></blockquote><ul><li>byType-<strong>根据bean的类型</strong>进行自动装配。</li></ul><blockquote><p>Cutomer的属性person的类型为Person，Spirng会将Person类型通过setter方法进行自动装配。</p><bean id="cutomer" class="com.xxx.xxx.Cutomer" autowire="byType"/><bean id="person" class="com.xxx.xxx.Person"/></blockquote><ul><li>constructor-<strong>类似byType</strong>，不过是应用于构造器的参数。<strong>如果一个bean与构造器参数的类型形同，则进行自动装配</strong>，否则导致异常。</li></ul><blockquote><p>Cutomer构造函数的参数person的类型为Person，Spirng会将Person类型通过构造方法进行自动装配。</p><bean id="cutomer" class="com.xxx.xxx.Cutomer" autowire="construtor"/><bean id="person" class="com.xxx.xxx.Person"/></blockquote><ul><li><strong>autodetect</strong>-如果有默认的构造器，则通过constructor方式进行自动装配，否则使用byType方式 进行自动装配。</li></ul><blockquote><p>如果有默认的构造器，则通过constructor方式进行自动装配，否则使用byType方式进行自动装配。</p></blockquote><p>@Autowired自动装配bean，可以在字段、setter方法、构造函数上使用。</p><h1 id="四、springmvc"><a href="#四、springmvc" class="headerlink" title="四、springmvc"></a>四、springmvc</h1><h2 id="1、Spring-Boot、Spring-MVC-和-Spring-有什么区别"><a href="#1、Spring-Boot、Spring-MVC-和-Spring-有什么区别" class="headerlink" title="1、Spring Boot、Spring MVC 和 Spring 有什么区别"></a>1、Spring Boot、Spring MVC 和 Spring 有什么区别</h2><ol><li><strong>spring是一个IOC容器</strong>，用来管理Bean<strong>，使用依赖注入实现控制反转</strong>，可以很方便的整合各种框架，提供AOP机制弥补OOP的代码重复问题、更方便将不同类不同方法中的<strong>共同处理抽取成切面</strong>、自动注入给方法执行，比如日志、异常等 </li><li><strong>springmvc是spring对web框架的一个解决方案</strong>，提供了一个总的前端控制器Servlet，用来接收请求， 然后定义了一套<strong>路由策略</strong>（url到handle的映射）及<strong>适配执行handle</strong>，将handle结果使用视图解析技术生成视图展现给前端 </li><li><strong>springboot是spring提供的一个快速开发工具包</strong>，让程序员能更方便、更快速的开发spring+springmvc 应用，简化了配置（约定了默认配置），整合了一系列的解决方案（starter机制）、redis、 mongodb、es，可以开箱即用</li></ol><h2 id="2、SpringMVC-工作流程"><a href="#2、SpringMVC-工作流程" class="headerlink" title="2、SpringMVC 工作流程"></a>2、SpringMVC 工作流程</h2><ol><li>用户发送请求至前端控制器 <strong>DispatcherServlet</strong>。 </li><li>DispatcherServlet 收到请求调用 <strong>HandlerMapping</strong> 处理器映射器。 </li><li>处理器映射器<strong>找到具体的处理器</strong>(可以根据 xml 配置、注解进行查找)，<strong>生成处理器及处理器拦截器</strong> (如果有则生成)一并返回给 <strong>DispatcherServlet</strong>。</li><li><strong>DispatcherServlet</strong> 调用 <strong>HandlerAdapter</strong> 处理器适配器。</li><li><strong>HandlerAdapter</strong> 经过适配调用具体的处理器(<strong>Controller</strong>，也叫后端控制器) </li><li><strong>Controller</strong> 执行完成返回 <strong>ModelAndView</strong>。</li><li><strong>HandlerAdapter</strong> 将 <strong>controller</strong> 执行结果 <strong>ModelAndView</strong> 返回给 <strong>DispatcherServlet</strong>。</li><li><strong>DispatcherServlet</strong> 将 <strong>ModelAndView</strong> 传给 <strong>ViewReslover</strong> 视图解析器。</li><li><strong>ViewReslover</strong> 解析后返回具体 <strong>View</strong>。</li><li><strong>DispatcherServlet</strong> 根据 <strong>View</strong> 进行渲染视图（即将模型数据填充至视图中）。</li><li><strong>DispatcherServlet</strong> 响应用户。</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304111654953.png"                      alt="image-20230411165405637"                ></p><h2 id="3、Spring-MVC的主要组件？"><a href="#3、Spring-MVC的主要组件？" class="headerlink" title="3、Spring MVC的主要组件？"></a>3、Spring MVC的主要组件？</h2><p><strong>Handler</strong>：也就是处理器。它直接应对着MVC中的<strong>C也就是Controller层</strong>，它的具体表现形式有很多，可以是类，也可以是方法。<strong>在Controller层中@RequestMapping标注的所有方法都可以看成是一个 Handler</strong>，只要可以实际处理请求就可以是Handler</p><hr><ol><li><strong>HandlerMapping：</strong>initHandlerMappings(context)，处理器映射器，根据用户请求的资源uri来查找Handler的。在 SpringMVC中会有很多请求，<strong>每个请求都需要一个Handler处理</strong>，<strong>具体接收到一个请求之后使用哪个 Handler进行</strong>，这就是HandlerMapping需要做的事。</li><li><strong>HandlerAdapter：</strong>initHandlerAdapters(context)，适配器。因为<strong>SpringMVC中的Handler可以是任意的形式，只要能处理请求就ok</strong>，但是Servlet需要的处理方法的结构却是固定的，都是<strong>以request和response为参数</strong>的方法<strong>。如何让固定的Servlet处理方法调用灵活的Handler来进行处理呢？这就是HandlerAdapter要做的事情。</strong> Handler是用来干活的工具；<strong>HandlerMapping</strong>用于根据需要干的活找到相应的工具；<strong>HandlerAdapter</strong> 是使用工具干活的人。</li><li><strong>HandlerExceptionResolver：</strong>initHandlerExceptionResolvers(context)， 其它组件都是用来干活的。在干活的过程中难免会出现问题，出问题后怎么办呢？这就需要有一个专门的角色<strong>对异常情况进行处理</strong>，在SpringMVC中就是 HandlerExceptionResolver。具体来说，<strong>此组件的作用是根据异常设置ModelAndView，之后再交给 render方法进行渲染。</strong></li><li><strong>ViewResolver：</strong>initViewResolvers(context)，<strong>ViewResolver用来将String类型的视图名和Locale解析为View类型的视图。</strong>View是用来渲染页面的，也就是将程序返回的参数填入模板里，生成html（也可能是其它类型） 文件。这里就有两个关键问题：<strong>使用哪个模板？用什么技术（规则）填入参数？这其实是ViewResolver 主要要做的工作</strong>，ViewResolver需要找到渲染所用的模板和所用的技术（也就是视图的类型）进行渲染，具体的渲染过程则交由不同的视图自己完成。</li><li><strong>RequestToViewNameTranslator：</strong>initRequestToViewNameTranslator(context)，ViewResolver是根据ViewName查找View，但有的 Handler处理完后并没有设置View也没有设置ViewName，这时就需要从request获取ViewName了， <strong>如何从request中获取ViewName就是RequestToViewNameTranslator要做的事情了。</strong> RequestToViewNameTranslator在Spring MVC容器里<strong>只可以配置一个</strong>，所以所有request到 ViewName的转换规则都要在一个Translator里面全部实现。</li><li><strong>LocaleResolver：</strong>initLocaleResolver(context)， 解析视图需要两个参数：一是视图名，另一个是Locale。视图名是处理器返回的，<strong>Locale是从哪里来的？这就是LocaleResolver要做的事情。</strong>LocaleResolver用于从request 解析出Locale，<strong>Locale</strong>就是zh-cn之类，表示一个区域，<strong>有了这个就可以对不同区域的用户显示不同的结果</strong>。<strong>SpringMVC</strong>主要有<strong>两个地方</strong>用到了<strong>Locale</strong>：一是ViewResolver视图解析的时候；二是用到国际化资源或者主题的时候。</li><li><strong>ThemeResolver：</strong>initThemeResolver(context)，用于解析主题。<strong>SpringMVC中一个主题对应一个properties文件</strong>，里面存放着跟当前主题相关的所有资源、如图片、css样式等。SpringMVC的主题也支持国际化，同一个主题不同区域也可以显示不同的风格。SpringMVC中跟主题相关的类有 ThemeResolver、ThemeSource 和Theme。主题是通过一系列资源来具体体现的，<strong>要得到一个主题的资源，首先要得到资源的名称，这是ThemeResolver的工作</strong>。<strong>然后通过主题名称找到对应的主题（可以理解为一个配置）文件，这是 ThemeSource的工作</strong>。最后从主题中获取资源就可以了。</li><li><strong>MultipartResolver：</strong>initMultipartResolver(context)，<strong>用于处理上传请求</strong>。处理方法是将普通的request包装成 MultipartHttpServletRequest，后者可以直接调用getFile方法获取File，如果上传多个文件，还可以调用getFileMap得到FileName-&gt;File结构的Map<strong>。此组件中一共有三个方法</strong>，作用分别是判断是不是上传请求，将request包装成MultipartHttpServletRequest、处理完后清理上传过程中产生的临时资源。</li><li><strong>FlashMapManager：</strong>initFlashMapManager(context)，用来管理FlashMap的，<strong>FlashMap主要用在redirect中传递参数</strong>。</li></ol><h1 id="五、springBoot"><a href="#五、springBoot" class="headerlink" title="五、springBoot"></a>五、springBoot</h1><h2 id="1、什么是-Spring-Boot？"><a href="#1、什么是-Spring-Boot？" class="headerlink" title="1、什么是 Spring Boot？"></a>1、什么是 Spring Boot？</h2><ol><li>多年来，随着新功能的增加，spring变得越来越复杂。只需访问<a class="link"   href="https://spring.io/projects%E9%A1%B5%E9%9D%A2%EF%BC%8C%E6%88%91%E4%BB%AC%E5%B0%B1%E4%BC%9A%E7%9C%8B%E5%88%B0%E5%8F%AF%E4%BB%A5%E5%9C%A8%E6%88%91%E4%BB%AC%E7%9A%84%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E4%B8%AD%E4%BD%BF%E7%94%A8%E7%9A%84%E6%89%80%E6%9C%89Spring%E9%A1%B9%E7%9B%AE%E7%9A%84%E4%B8%8D%E5%90%8C%E5%8A%9F%E8%83%BD%E3%80%82%E5%A6%82%E6%9E%9C%E5%BF%85%E9%A1%BB%E5%90%AF%E5%8A%A8%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84Spring%E9%A1%B9%E7%9B%AE%EF%BC%8C%E6%88%91%E4%BB%AC%E5%BF%85%E9%A1%BB%E6%B7%BB%E5%8A%A0%E6%9E%84%E5%BB%BA%E8%B7%AF%E5%BE%84%E6%88%96%E6%B7%BB%E5%8A%A0Maven%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB%EF%BC%8C%E9%85%8D%E7%BD%AE%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%8C%E6%B7%BB%E5%8A%A0spring%E9%85%8D%E7%BD%AE%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C**%E5%BC%80%E5%A7%8B%E4%B8%80%E4%B8%AA%E6%96%B0%E7%9A%84spring%E9%A1%B9%E7%9B%AE%E9%9C%80%E8%A6%81%E5%BE%88%E5%A4%9A%E5%8A%AA%E5%8A%9B**%EF%BC%8C%E5%9B%A0%E4%B8%BA%E6%88%91%E4%BB%AC%E7%8E%B0%E5%9C%A8%E5%BF%85%E9%A1%BB%E4%BB%8E%E5%A4%B4%E5%BC%80%E5%A7%8B%E5%81%9A%E6%89%80%E6%9C%89%E4%BA%8B%E6%83%85%E3%80%82" >https://spring.io/projects页面，我们就会看到可以在我们的应用程序中使用的所有Spring项目的不同功能。如果必须启动一个新的Spring项目，我们必须添加构建路径或添加Maven依赖关系，配置应用程序服务器，添加spring配置。因此，**开始一个新的spring项目需要很多努力**，因为我们现在必须从头开始做所有事情。<i class="fas fa-external-link-alt"></i></a></li><li>Spring Boot是解决这个问题的方法。Spring Boot已经建立在现有spring框架之上。使用spring启动，我们避免了之前我们必须做的所有样板代码和配置。因此，<strong>Spring Boot可以帮助我们以最少的工作量，更加健壮地使用现有的Spring功能</strong></li></ol><h2 id="2、为什么要用SpringBoot"><a href="#2、为什么要用SpringBoot" class="headerlink" title="2、为什么要用SpringBoot"></a>2、为什么要用SpringBoot</h2><ol><li><strong>独立运行：</strong>Spring Boot而且内嵌了各种servlet容器，Tomcat、Jetty等，现在不再需要打成war包部署到容器中，<strong>Spring Boot只要打成一个可执行的 jar包就能独立运行</strong>，所有的依赖包都在一个jar包内。 </li><li><strong>简化配置：</strong> spring-boot-starter-web启动器自动依赖其他组件，<strong>简少了maven的配置</strong>。</li><li><strong>自动配置：</strong>Spring Boot能根据当前类路径下的类、jar包来<strong>自动配置bean</strong>，如添加一个spring-boot-starter-web启动器就能拥有web的功能，无需其他配置。 </li><li><strong>无代码生成和XML配置：</strong>Spring Boot配置过程中<strong>无代码生成，也无需XML配置文件就能完成所有配置工作</strong>，这一切都是借助于条件注解完成的，这也是Spring4.x的核心功能之一。</li><li><strong>应用监控：</strong>Spring Boot提供一系列端点可以监控服务及应用，做健康检测</li></ol><h2 id="3、Spring-Boot-有哪些优点？"><a href="#3、Spring-Boot-有哪些优点？" class="headerlink" title="3、Spring Boot 有哪些优点？"></a>3、Spring Boot 有哪些优点？</h2><ol><li>减少开发，测试时间和努力。</li><li>使用 JavaConfig 有助于避免使用 XML。</li><li>避免大量的 Maven 导入和各种版本冲突。</li><li>提供意见发展方法。 </li><li>通过提供默认值快速开始开发。</li><li><strong>没有单独的 Web 服务器需要</strong>。这意味着你不再需要启动 Tomcat，Glassfish或其他任何东西。</li><li><strong>需要更少的配置</strong> 因为没有 web.xml 文件。只需添加用@ Configuration 注释的类，然后添加用@Bean 注释的方法，Spring 将自动加载对象并像以前一样对其进行管理。您甚至可以将@Autowired 添加到 bean 方法中，以使 Spring 自动装入需要的依赖关系中。 </li><li>基于环境的配置使用这些属性，您可以将您正在使用的环境传递到应用程序：-Dspring.profiles.active &#x3D; {enviornment}。在加载主应 用程序属性文件后，Spring 将在（application{environment} .properties）中加载后续的应用程序属性文件。</li></ol><h2 id="4、Spring-Boot-自动配置原理？"><a href="#4、Spring-Boot-自动配置原理？" class="headerlink" title="4、Spring Boot 自动配置原理？"></a>4、Spring Boot 自动配置原理？</h2><ol><li>@Import + @Configuration + Spring spi</li><li>自动配置类由各个starter提供，<strong>使用@Configuration + @Bean定义配置类</strong>，放到METAINF&#x2F;spring.factories下</li><li>使用<strong>Spring spi****扫描</strong>META-INF&#x2F;spring.factories下的配置类 </li><li>使用**@Import导入**自动配置类</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304111736514.png"                      alt="image-20230411173651260"                ></p><h2 id="5、如何理解-Spring-Boot-中的-Starter"><a href="#5、如何理解-Spring-Boot-中的-Starter" class="headerlink" title="5、如何理解 Spring Boot 中的 Starter"></a>5、如何理解 Spring Boot 中的 Starter</h2><ol><li><strong>Starters是什么：</strong> Starters可以理解为<strong>启动器</strong>，它包含了一系列可以集成到应用里面的依赖包，你可以一站式集成Spring及其他技术，而不需要到处找示例代 码和依赖包。如你想使用Spring JPA访问数据库，只要加入springboot-starter-data-jpa启动器依赖就能使用了。Starters包含了许多项目中 需要用到的依赖，它们能快速持续的运行，都是一系列得到支持的管理传递性依赖。</li><li>使用spring + springmvc使用，如果需要引入mybatis等框架，需要到xml中定义mybatis需要的bean </li><li><strong>starter就是定义一个starter的jar包</strong>，写一个**@Configuration<strong>配置类、将这些</strong>bean<strong>定义在里面，然后在 <strong>starter</strong>包的</strong>META-INF&#x2F;spring.factories**中写入该配置类，springboot会按照约定来加载该配置类 </li><li>开发人员只需要将相应的starter包依赖进应用，进行相应的属性配置（使用默认配置时，不需要配置），就可以直接进行代码开发，使用对应的功能了，比如mybatis-spring-boot–starter，springboot-starter-redis</li></ol><h2 id="6、什么是嵌入式服务器？为什么要使用嵌入式服务器"><a href="#6、什么是嵌入式服务器？为什么要使用嵌入式服务器" class="headerlink" title="6、什么是嵌入式服务器？为什么要使用嵌入式服务器?"></a>6、什么是嵌入式服务器？为什么要使用嵌入式服务器?</h2><ol><li>节省了下载安装tomcat，应用也不需要再打war包，然后放到webapp目录下再运行 </li><li>只需要一个安装了 Java 的虚拟机，就可以直接在上面部署应用程序了 </li><li><strong>springboot已经内置了tomcat.jar，运行main方法时会去启动tomcat，并利用tomcat的spi机制加载springmvc</strong></li></ol><h2 id="7、Spring-Boot中常⽤注解及其底层实现"><a href="#7、Spring-Boot中常⽤注解及其底层实现" class="headerlink" title="7、Spring Boot中常⽤注解及其底层实现"></a>7、Spring Boot中常⽤注解及其底层实现</h2><ol><li><p><strong>@SpringBootApplication注解：</strong>这个注解标识了⼀个SpringBoot⼯程，它实际上是另外三个注解的组合，这三个注解是： </p><ul><li><strong>@SpringBootConfiguration：</strong>这个注解实际就是⼀个@Configuration，表示启动类也是⼀个配置类 </li><li><strong>@EnableAutoConfiguration：</strong>向Spring容器中导⼊了⼀个Selector，⽤来加载ClassPath下 SpringFactories中所定义的⾃动配置类，将这些⾃动加载为配置Bean</li><li><strong>@ComponentScan：</strong>标识扫描路径，因为默认是没有配置实际扫描路径，所以SpringBoot扫描的路径是启动类所在的当前⽬录</li></ul><ol start="2"><li><strong>@Bean注解：</strong>⽤来定义Bean，类似于XML中的标签，Spring在启动时，会对加了@Bean注解的⽅法进⾏解析，将⽅法的名字做为beanName，并通过执⾏⽅法得到bean对象 </li><li><strong>@Controller、@Service、@ResponseBody、@Autowired</strong></li></ol></li></ol><h2 id="8、Spring-Boot是如何启动Tomcat的"><a href="#8、Spring-Boot是如何启动Tomcat的" class="headerlink" title="8、Spring Boot是如何启动Tomcat的"></a>8、Spring Boot是如何启动Tomcat的</h2><ol><li>⾸先，SpringBoot在启动时会先创建⼀个Spring容器 </li><li>在创建Spring容器过程中，会利⽤**@ConditionalOnClass<strong>技术来判断当前</strong>classpath**中是否存在 Tomcat依赖，如果存在则会⽣成⼀个启动Tomcat的Bean</li><li>Spring容器创建完之后，就会获取启动Tomcat的Bean，并创建Tomcat对象，并绑定端⼝等，然后启动Tomcat</li></ol><h2 id="9、Spring-Boot中配置⽂件的加载顺序是怎样的？"><a href="#9、Spring-Boot中配置⽂件的加载顺序是怎样的？" class="headerlink" title="9、Spring Boot中配置⽂件的加载顺序是怎样的？"></a>9、Spring Boot中配置⽂件的加载顺序是怎样的？</h2><p>优先级从⾼到低，⾼优先级的配置覆盖低优先级的配置，所有配置会形成互补配置。 </p><ol><li><strong>命令行参数</strong>。所有的配置都可以在命令⾏上进⾏指定；</li><li><strong>Java系统属性</strong>（System.getProperties()）；</li><li><strong>操作系统环境变量</strong> ； </li><li><strong>jar包外部的</strong>application-{profile}.properties或application.yml(带spring.profile)配置⽂件 </li><li><strong>jar包内部</strong>的application-{profile}.properties或application.yml(带spring.profile)配置⽂件 再来加载不带profile </li><li>jar包外部的application.properties或application.yml(不带spring.profile)配置⽂件 </li><li>jar包内部的application.properties或application.yml(不带spring.profile)配置⽂件 </li><li><strong>@Configuration注解类上的@PropertySource</strong></li></ol><h2 id="10、Spring-Boot-的核心注解是哪个？它主要由哪几个注解组成的？"><a href="#10、Spring-Boot-的核心注解是哪个？它主要由哪几个注解组成的？" class="headerlink" title="10、Spring Boot 的核心注解是哪个？它主要由哪几个注解组成的？"></a>10、Spring Boot 的核心注解是哪个？它主要由哪几个注解组成的？</h2><p>启动类上面的注解是**@SpringBootApplication**，它也是 Spring Boot 的核心注解，主要组合包含了以下 3 个注解：  </p><ul><li>@SpringBootConfiguration：组合了 @Configuration 注解，实现配置文件的功能。 </li><li>@EnableAutoConfiguration：打开自动配置的功能，也可以关闭某个自动配置的选项，如关闭数据源自动配置功能： </li><li>@SpringBootApplication(exclude &#x3D; { DataSourceAutoConfiguration.class })。 </li><li>@ComponentScan：Spring组件扫描</li></ul><h2 id="11、运行Spring-Boot有哪几种方式"><a href="#11、运行Spring-Boot有哪几种方式" class="headerlink" title="11、运行Spring Boot有哪几种方式"></a>11、运行Spring Boot有哪几种方式</h2><ol><li><strong>打包</strong>用命令或者放到容器中运行 </li><li>用 <strong>Maven</strong>&#x2F;Gradle 插件运行 </li><li>直接执行 <strong>main</strong> 方法运行</li></ol><h2 id="12、如何在Spring-Boot启动的时候运行一些特定的代码？"><a href="#12、如何在Spring-Boot启动的时候运行一些特定的代码？" class="headerlink" title="12、如何在Spring Boot启动的时候运行一些特定的代码？"></a>12、如何在Spring Boot启动的时候运行一些特定的代码？</h2><ol><li>如果你想在Spring Boot启动的时候运行一些特定的代码</li><li>你可以实现接口<strong>ApplicationRunner</strong>或者<strong>CommandLineRunner</strong>，这两个接口实现方式一样，它们都只提供了一个run方法。</li><li><strong>CommandLineRunner</strong>：启动获取命令行参数</li></ol><h2 id="13、Spring-Boot-需要独立的容器运行吗？"><a href="#13、Spring-Boot-需要独立的容器运行吗？" class="headerlink" title="13、Spring Boot 需要独立的容器运行吗？"></a>13、Spring Boot 需要独立的容器运行吗？</h2><ol><li>可以不需要，内置了 Tomcat&#x2F; Jetty 等容器</li></ol><h2 id="14、Spring-Boot中的监视器是什么？"><a href="#14、Spring-Boot中的监视器是什么？" class="headerlink" title="14、Spring Boot中的监视器是什么？"></a>14、Spring Boot中的监视器是什么？</h2><ol><li><strong>Spring boot actuato</strong>r是spring启动框架中的重要功能之一。</li><li>Spring boot监视器可帮助您访问<strong>生产环境中正在运行的应用程序的当前状态。</strong> </li><li><strong>有几个指标必须在生产环境中进行检查和监控</strong>。即使一些外部应用程序可能正在使用这些服务来向相关人员触发警报消息。</li><li>监视器模块<strong>公开了一组可直接作为HTTP URL访问的REST端点</strong>来检查状态</li></ol><h2 id="15、如何使用Spring-Boot实现异常处理？"><a href="#15、如何使用Spring-Boot实现异常处理？" class="headerlink" title="15、如何使用Spring Boot实现异常处理？"></a>15、如何使用Spring Boot实现异常处理？</h2><ol><li>Spring提供了一种使用<strong>ControllerAdvice</strong>处理异常的非常有用的方法。 </li><li>我们通过实现一个<strong>ControlerAdvice</strong>类，来处理控制器类抛出的所有异常</li></ol><h2 id="16、springboot常用的starter有哪些"><a href="#16、springboot常用的starter有哪些" class="headerlink" title="16、springboot常用的starter有哪些"></a>16、springboot常用的starter有哪些</h2><ol><li>spring-boot-starter-web 嵌入tomcat和web开发需要servlet与jsp支持 </li><li>spring-boot-starter-data-jpa 数据库支持 </li><li>spring-boot-starter-data-redis redis数据库支持 </li><li>spring-boot-starter-data-solr solr支持 </li><li>mybatis-spring-boot-starter 第三方的mybatis集成starter</li></ol><h2 id="17、SpringBoot-实现热部署有哪几种方式"><a href="#17、SpringBoot-实现热部署有哪几种方式" class="headerlink" title="17、SpringBoot 实现热部署有哪几种方式"></a>17、SpringBoot 实现热部署有哪几种方式</h2><ol><li>Spring Loaded </li><li>Spring-boot-devtools</li></ol><h2 id="18、Spring-Boot-的核心配置文件有哪几个？它们的区别是什么？"><a href="#18、Spring-Boot-的核心配置文件有哪几个？它们的区别是什么？" class="headerlink" title="18、Spring Boot 的核心配置文件有哪几个？它们的区别是什么？"></a>18、Spring Boot 的核心配置文件有哪几个？它们的区别是什么？</h2><ol><li>Spring Boot 的核心配置文件是 application 和 bootstrap 配置文件。 </li><li>application 配置文件这个容易理解，主要用于 Spring Boot 项目的自动化配置。 </li><li>bootstrap 配置文件有以下几个应用场景。<ul><li>使用 Spring Cloud Config 配置中心时，这时需要在 bootstrap 配置文件中<strong>添加连接到配置中心的配置属性来加载外部配置中心的配置信息</strong>；</li><li>一些<strong>固定的不能被覆盖的属性</strong>；</li><li><strong>一些加密&#x2F;解密的场景</strong></li></ul></li></ol><h2 id="19、什么是-JavaConfig？"><a href="#19、什么是-JavaConfig？" class="headerlink" title="19、什么是 JavaConfig？"></a>19、什么是 JavaConfig？</h2><p>Spring <strong>JavaConfig</strong> 是 Spring 社区的产品，它<strong>提供了配置 Spring IoC 容器的纯Java方法</strong>。因此它有助于避免使用 XML 配置。使用 JavaConfig 的优点在于：</p><ol><li><strong>面向对象的配置</strong>。由于配置被定义为 JavaConfig 中的类，因此用户可以充分利用 Java 中的面向对象功能。<strong>一个配置类可以继承另一 个，重写它的@Bean 方法</strong>等。 </li><li><strong>减少或消除 XML 配置</strong>。基于依赖注入原则的外化配置的好处已被证明。但是，许多开发人员不希望在 XML 和 Java 之间来回切换。 <strong>JavaConfig 为开发人员提供了一种纯 Java 方法来配置与 XML 配置概念相似的 Spring 容器</strong>。从技术角度来讲，只使用 JavaConfig 配置类来 配置容器是可行的，但实际上很多人认为将JavaConfig 与 XML 混合匹配是理想的。</li><li><strong>类型安全和重构友好</strong>。JavaConfig 提供了一种类型安全的方法来配置 Spring容器。由于 Java 5.0 对泛型的支持，现在可以按类型而不是按名称检索 bean，不需要任何强制转换或基于字符串的查找。</li></ol><h2 id="20、如何重新加载-Spring-Boot-上的更改，而无需重新启动服务器？"><a href="#20、如何重新加载-Spring-Boot-上的更改，而无需重新启动服务器？" class="headerlink" title="20、如何重新加载 Spring Boot 上的更改，而无需重新启动服务器？"></a>20、如何重新加载 Spring Boot 上的更改，而无需重新启动服务器？</h2><p>这可以使用 DEV 工具来实现。通过这种依赖关系，您可以节省任何更改，嵌入式tomcat 将重新启动。Spring Boot 有一个开发工具 （DevTools）模块，它有助于提高开发人员的生产力。<strong>Java 开发人员面临的一个主要挑战是将文件更改自动部署到服务器并自动重启服务 器。</strong>开发人员可以重新加载 Spring Boot 上的更改，而无需重新启动服务器。这将消除每次手动部署更改的需要。Spring Boot 在发布它的第一个版本时没有这个功能。这是开发人员最需要的功能。DevTools 模块完全满足开发人员的需求。该模块将在生产环境中被禁用。它还 提供 H2 数据库控制台以更好地测试应用程序。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-devtools<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">optional</span>&gt;</span>true<span class="tag">&lt;/<span class="name">optional</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="21、如何在-Spring-Boot-中禁用-Actuator-端点安全性？"><a href="#21、如何在-Spring-Boot-中禁用-Actuator-端点安全性？" class="headerlink" title="21、如何在 Spring Boot 中禁用 Actuator 端点安全性？"></a>21、如何在 Spring Boot 中禁用 Actuator 端点安全性？</h2><p>默认情况下，所有敏感的 HTTP 端点都是安全的，只有具有 ACTUATOR 角色的用户才能访问它们。<strong>安全性是使用标准的 HttpServletRequest.isUserInRole 方法实施的</strong>。 我们可以使用来禁用安全性。<strong>只有在执行机构端点在防火墙后访问时，才建议禁用安全 性。</strong></p><h2 id="22、如何在自定义端口上运行-Spring-Boot-应用程序？"><a href="#22、如何在自定义端口上运行-Spring-Boot-应用程序？" class="headerlink" title="22、如何在自定义端口上运行 Spring Boot 应用程序？"></a>22、如何在自定义端口上运行 Spring Boot 应用程序？</h2><p>为了在自定义端口上运行 Spring Boot 应用程序，您可以在<strong>application.properties</strong> 中指定端口。 </p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">server.port</span> = <span class="string">8090</span></span><br></pre></td></tr></table></figure><h2 id="23、什么是-YAML？"><a href="#23、什么是-YAML？" class="headerlink" title="23、什么是 YAML？"></a>23、什么是 YAML？</h2><ol><li>YAML 是一种人类可读的<strong>数据序列化语言</strong>。它通常用于配置文件。 </li><li>与属性文件相比，如果我们想要在配置文件中添加复杂的属性，YAML 文件就更加结构化，而且更少混淆。可以看出 <strong>YAML 具有分层配置数据。</strong></li></ol><h2 id="24、如何实现-Spring-Boot-应用程序的安全性？"><a href="#24、如何实现-Spring-Boot-应用程序的安全性？" class="headerlink" title="24、如何实现 Spring Boot 应用程序的安全性？"></a>24、如何实现 Spring Boot 应用程序的安全性？</h2><p>为了实现 Spring Boot 的安全性，我们使用 <strong>spring-boot-starter-security</strong> 依赖项，并且必须添<strong>加安全配置</strong>。它只需要很少的代码。配置类将必须扩展<strong>WebSecurityConfigurerAdapter</strong> 并覆盖其方法。</p><h2 id="25、如何使用-Spring-Boot-实现分页和排序？"><a href="#25、如何使用-Spring-Boot-实现分页和排序？" class="headerlink" title="25、如何使用 Spring Boot 实现分页和排序？"></a>25、如何使用 Spring Boot 实现分页和排序？</h2><p>使用 Spring Boot 实现分页非常简单。<strong>使用 Spring Data-JPA 可以实现将可分页的传递给存储库方法。</strong></p><h2 id="26、什么是-Swagger？你用-Spring-Boot-实现了它吗？"><a href="#26、什么是-Swagger？你用-Spring-Boot-实现了它吗？" class="headerlink" title="26、什么是 Swagger？你用 Spring Boot 实现了它吗？"></a>26、什么是 Swagger？你用 Spring Boot 实现了它吗？</h2><ol><li>Swagger 广泛用于<strong>可视化 API</strong>，使用 Swagger UI 为前端开发人员提供在线沙箱。</li><li>Swagger 是用于<strong>生成 RESTful Web 服务的可视化</strong>表示的工具，规范和完整框架实现。</li><li><strong>Swagger 就是将项目中所有（想要暴露的）接口展现在页面上，并且可以进行接口调用和测试的服务。</strong></li><li><strong>它使文档能够以与服务器相同的速度更新</strong>。当通过 Swagger 正确定义时，消费者可以使用最少量的实现逻辑 来理解远程服务并与其进行交互。因此，<strong>Swagger 消除了调用服务时的猜测</strong>。</li></ol><h2 id="27、什么是-Spring-Profiles？"><a href="#27、什么是-Spring-Profiles？" class="headerlink" title="27、什么是 Spring Profiles？"></a>27、什么是 Spring Profiles？</h2><p><strong>Spring Profiles 允许用户根据配置文件（dev，test，prod 等）来注册 bean</strong>。因此，<strong>当应用程序在开发中运行时，只有某些 bean 可以加 载</strong>，而在 PRODUCTION中，某些其他 bean 可以加载。<strong>假设我们的要求是 Swagger 文档仅适用于 QA 环境，并且禁用所有其他文档。这可以使用配置文件来完成</strong>。Spring Boot 使得使用配置文件非常简单。 </p><h2 id="28、什么是-Spring-Batch？"><a href="#28、什么是-Spring-Batch？" class="headerlink" title="28、什么是 Spring Batch？"></a>28、什么是 Spring Batch？</h2><ol><li><strong>Spring Boot Batch</strong> <strong>提供可重用的函数</strong>，这些函数在处理大量记录时非常重要，包括日志&#x2F;跟踪，事务管理，作业处理统计信息，作业重新启动，跳过和资源管理。</li><li>还提供了更先进的技术服务和功能，<strong>通过优化和分区技术，可以实现极高批量和高性能批处理作业</strong>。简单以及复杂的大批量批处理作业可以高度可扩展的方式利用框架处理重要大量的信息。</li></ol><h2 id="29、什么是-FreeMarker-模板？"><a href="#29、什么是-FreeMarker-模板？" class="headerlink" title="29、什么是 FreeMarker 模板？"></a>29、什么是 FreeMarker 模板？</h2><p><strong>FreeMarker</strong> 是一个基于 Java 的模板引擎，最初专注于使用 MVC 软件架构<strong>进行动态网页生成</strong>。<strong>使用 Freemarker 的主要优点是表示层和业务层的完全分离</strong>。程序员可以处理应用程序代码，而设计人员可以处理 html 页面设计。最后使用freemarker 可以将这些结合起来，给出最终的输出页面。</p><h2 id="30、什么是-CSRF-攻击？"><a href="#30、什么是-CSRF-攻击？" class="headerlink" title="30、什么是 CSRF 攻击？"></a>30、什么是 CSRF 攻击？</h2><p><strong>CSRF 代表跨站请求伪造</strong>。这是一种攻击，迫使最终用户在当前通过身份验证的Web 应用程序上<strong>执行不需要的操作</strong>。<strong>CSRF 攻击专门针对状态改变请求，而不是数据窃取</strong>，因为攻击者无法查看对伪造请求的响应。 </p><h2 id="31、什么是-WebSockets？"><a href="#31、什么是-WebSockets？" class="headerlink" title="31、什么是 WebSockets？"></a>31、什么是 WebSockets？</h2><ol><li><strong>WebSocket 是一种计算机通信协议</strong>，通过单个 TCP 连接提供全双工通信信道。 </li><li><strong>WebSocket 是双向的</strong> -使用 WebSocket 客户端或服务器可以发起消息发送。 </li><li><strong>WebSocket 是全双工的</strong> -客户端和服务器通信是相互独立的。 </li><li><strong>单个TCP 连接</strong> -初始连接使用 HTTP，然后将此连接升级到基于套接字的连接。然后这个单一连接用于所有未来的通信</li><li>Light -与 http 相比，<strong>WebSocket 消息数据交换要轻得多</strong>。</li></ol><h2 id="32、什么是-AOP？"><a href="#32、什么是-AOP？" class="headerlink" title="32、什么是 AOP？"></a>32、什么是 AOP？</h2><p>在软件开发过程中，<strong>跨越应用程序多个点的功能</strong>称为<strong>交叉问题</strong>。这些交叉问题与应用程序的主要业务逻辑不同。因此，将这些横切关注与业务逻辑分开是<strong>面向方面编程</strong>（AOP）的地方。</p><h2 id="33、什么是-Apache-Kafka？"><a href="#33、什么是-Apache-Kafka？" class="headerlink" title="33、什么是 Apache Kafka？"></a>33、什么是 Apache Kafka？</h2><p>Apache Kafka 是一个<strong>分布式发布 - 订阅消息系统</strong>。它是一个可扩展的，容错的发布 - 订阅消息系统，它使我们能够构建分布式应用程序。 这是一个 Apache 顶级项目。<strong>Kafka 适合离线和在线消息消费。</strong></p><h2 id="34、我们如何监视所有-Spring-Boot-微服务？"><a href="#34、我们如何监视所有-Spring-Boot-微服务？" class="headerlink" title="34、我们如何监视所有 Spring Boot 微服务？"></a>34、我们如何监视所有 Spring Boot 微服务？</h2><ol><li>Spring Boot 提供<strong>监视器端点</strong>以<strong>监控各个微服务的度量</strong>。这些端点对于获取有关应用程序的信息（如它们是否已启动）以及它们的组件（如 数据库等）是否正常运行很有帮助。</li><li>但是，使用监视器的一个<strong>主要缺点或困难</strong>是，我们<strong>必须单独打开应用程序的知识点以了解其状态或健康状况</strong>。想象一下涉及 50 个应用程序的微服务，管理员将不得不击中所有 50 个应用程序的执行终端。为了帮助我们处理这种情况，<strong>我们将使用位于的开源项目。 它建立在 Spring Boot Actuator 之上，</strong>它提供了一个 Web UI，使我们能够可视化多个应用程序的度量。</li></ol><h2 id="35、Spring-Boot-的配置文件有哪几种格式？它们有什么区别？"><a href="#35、Spring-Boot-的配置文件有哪几种格式？它们有什么区别？" class="headerlink" title="35、Spring Boot 的配置文件有哪几种格式？它们有什么区别？"></a>35、Spring Boot 的配置文件有哪几种格式？它们有什么区别？</h2><p>properties 和 .yml，它们的区别主要是书写格式不同。</p><ol><li>.properties</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.user.name = javastack</span><br></pre></td></tr></table></figure><ol start="2"><li>.yml（另外，.yml 格式不支持 @PropertySource 注解导入配置）</li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">app:</span></span><br><span class="line"><span class="attr">user:</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">javastack</span></span><br></pre></td></tr></table></figure><h2 id="36、开启-Spring-Boot-特性有哪几种方式？"><a href="#36、开启-Spring-Boot-特性有哪几种方式？" class="headerlink" title="36、开启 Spring Boot 特性有哪几种方式？"></a>36、开启 Spring Boot 特性有哪几种方式？</h2><ol><li>继承spring-boot-starter-parent项目</li><li>导入spring-boot-dependencies项目依赖</li></ol><h2 id="37、Spring-Boot-有哪几种读取配置的方式？"><a href="#37、Spring-Boot-有哪几种读取配置的方式？" class="headerlink" title="37、Spring Boot 有哪几种读取配置的方式？"></a>37、Spring Boot 有哪几种读取配置的方式？</h2><p>Spring Boot 可以通过 <strong>@PropertySource,@Value,@Environment, @ConfigurationProperties</strong> 来绑定变量</p><h2 id="38、Spring-Boot-支持哪些日志框架？推荐和默认的日志框架是哪个？"><a href="#38、Spring-Boot-支持哪些日志框架？推荐和默认的日志框架是哪个？" class="headerlink" title="38、Spring Boot 支持哪些日志框架？推荐和默认的日志框架是哪个？"></a>38、Spring Boot 支持哪些日志框架？推荐和默认的日志框架是哪个？</h2><p>Spring Boot 支持 <strong>Java Util Logging, Log4j2, Lockback</strong> 作为日志框架，如果你使用 Starters 启动器，Spring Boot 将使用 <strong>Logback</strong> 作为<strong>默认日志框架</strong></p><h2 id="38、Spring-Boot-如何定义多套不同环境配置？"><a href="#38、Spring-Boot-如何定义多套不同环境配置？" class="headerlink" title="38、Spring Boot 如何定义多套不同环境配置？"></a>38、Spring Boot 如何定义多套不同环境配置？</h2><p>提供多套配置文件，如：</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">applcation.properties</span></span><br><span class="line"><span class="attr">application-dev.properties</span></span><br><span class="line"><span class="attr">application-test.properties</span></span><br><span class="line"><span class="attr">application-prod.properties</span></span><br></pre></td></tr></table></figure><h2 id="39、Spring-Boot-可以兼容老-Spring-项目吗，如何做？"><a href="#39、Spring-Boot-可以兼容老-Spring-项目吗，如何做？" class="headerlink" title="39、Spring Boot 可以兼容老 Spring 项目吗，如何做？"></a>39、Spring Boot 可以兼容老 Spring 项目吗，如何做？</h2><p>可以兼容，使用 <strong>@ImportResource</strong> 注解导入老 Spring 项目配置文件。</p><h2 id="40、保护-Spring-Boot-应用有哪些方法？"><a href="#40、保护-Spring-Boot-应用有哪些方法？" class="headerlink" title="40、保护 Spring Boot 应用有哪些方法？"></a>40、保护 Spring Boot 应用有哪些方法？</h2><ul><li>在生产中使用HTTPS </li><li>使用Snyk检查你的依赖关系 </li><li>升级到最新版本 </li><li>启用CSRF保护 </li><li>使用内容安全策略防止XSS攻击</li></ul><h2 id="41、Spring-Bean-生命周"><a href="#41、Spring-Bean-生命周" class="headerlink" title="41、Spring Bean 生命周"></a>41、Spring Bean 生命周</h2><ol><li>Spring 生命周期全过程大致分为五个阶段：<strong>创建前准备阶段、创建实例阶段、 依赖注入阶段、 容器缓存阶段和销毁实例阶段</strong></li><li><strong>创建前准备阶段</strong><ul><li>这个阶段主要的作用是，<strong>Bean</strong> 在开始加载之前，需要从上下文和相关配置中解析并查找 Bean 有关的扩展实现</li><li>比如像 <strong>init-method-<strong>容器在初始化 bean 时调用的方法、</strong>destory-method</strong>，容器在销毁 bean 时调用的方法，以及，<strong>BeanFactoryPostProcessor</strong> 这类的 bean 加载过程中的前置和后置处理</li><li>这些类或者配置其实是 Spring 提供给开发者，用来实现 Bean 加载过程中的扩 展机制，在很多和 Spring 集成的中间件中比较常见，比如 Dubbo。</li></ul></li><li><strong>创建实例阶段</strong><ul><li>这个阶段主要是通过反射来创建 Bean 的实例对象，并且扫描和解析 Bean 声明 的一些属性</li></ul></li><li><strong>依赖注入阶段</strong><ul><li>如果被实例化的 Bean 存在依赖其他 Bean 对象的情况，则需要对这些依赖 bean 进行对象注入。比如常见的**@Autowired、setter** 注入等依赖注入的配置形式</li><li>同时 ， 在 这个阶段会触发一些扩展的调用 ， 比如常见的扩展类 ： <strong>BeanPostProcessors</strong>（用来实现 bean 初始化前后的回调）</li></ul></li><li><strong>容器缓存阶段</strong><ul><li>容器缓存阶段主要是<strong>把 bean 保存到容器</strong>以及 Spring 的缓存中，到了这个阶段， Bean 就可以被开发者使用</li><li>这个阶段涉及到的操作，常见的有，init-method 这个属性配置的方法， 会在这个阶段调用。</li><li>以及像BeanPostProcessors 方法中的后置处理器方法如 ： postProcessAfterInitialization，也会在这个阶段触发。</li></ul></li><li><strong>销毁实例阶段</strong><ul><li>当 Spring 应用上下文关闭时，该上下文中的所有 bean都会被销毁</li><li>如果存在 Bean 实现了 DisposableBean 接口，或者配置了 destory-method 属性， 会在这个阶段被调用。</li></ul></li></ol><h1 id="六、Mybatis"><a href="#六、Mybatis" class="headerlink" title="六、Mybatis"></a>六、Mybatis</h1><h2 id="1、mybatis的优缺点"><a href="#1、mybatis的优缺点" class="headerlink" title="1、mybatis的优缺点"></a>1、mybatis的优缺点</h2><p><strong>优点：</strong> </p><ol><li>基于 SQL 语句编程，相当灵活，不会对应用程序或者数据库的现有设计造成任何影响，SQL 写在 XML 里，解除 sql 与程序代码的耦合，便于统一管理；提供 XML 标签， 支持编写动态 SQL 语句， <strong>并可重用</strong>。 </li><li>与 JDBC 相比，减少了 50%以上的代码量，消除了 JDBC 大量冗余的代码，<strong>不需要手动开关连接</strong>； </li><li><strong>很好的与各种数据库兼容</strong>（ 因为 MyBatis 使用 JDBC 来连接数据库，所以只要JDBC 支持的数据库 MyBatis 都支持）。</li><li><strong>能够与 Spring 很好的集成</strong>； </li><li><strong>提供映射标签</strong>， 支持对象与数据库的 ORM 字段关系映射； 提供对象关系映射标签， 支持对象关 系组件维护。</li></ol><p><strong>缺点：</strong> </p><ol><li>SQL 语句的编写工作量较大， 尤其当字段多、关联表多时， 对开发人员编写SQL 语句的功底有一 定要求。</li><li>SQL 语句依赖于数据库， 导致数据库移植性差， <strong>不能随意更换数据库。</strong></li></ol><h2 id="2、-和-的区别是什么？"><a href="#2、-和-的区别是什么？" class="headerlink" title="2、#{}和${}的区别是什么？"></a>2、#{}和${}的区别是什么？</h2><ol><li><strong>#{}<strong>是预编译处理、是</strong>占位符</strong>， <strong>${}<strong>是字符串替换、是</strong>拼接符</strong>。</li><li>Mybatis 在处理**#{}<strong>时，会将 sql 中的#{}替换为?号，</strong>调用 PreparedStatement 来赋值；** </li><li>Mybatis 在处理**${}<strong>时， 就是</strong>把${}替换成变量的值**，调用 Statement 来赋值；</li><li>#{} 的变量替换是在DBMS 中、变量替换后，**#{} 对应的变量自动加上单引号** </li><li>${} 的变量替换是在 DBMS 外、变量替换后，**${} 对应的变量不会加上单引号** </li><li><strong>使用#{}可以有效的防止 SQL 注入</strong>， 提高系统安全性。</li></ol><h2 id="3、简述-Mybatis-的插件运行原理，如何编写一个插件。"><a href="#3、简述-Mybatis-的插件运行原理，如何编写一个插件。" class="headerlink" title="3、简述 Mybatis 的插件运行原理，如何编写一个插件。"></a>3、简述 Mybatis 的插件运行原理，如何编写一个插件。</h2><p>答： Mybatis 只支持针对 <strong>ParameterHandler、ResultSetHandler、StatementHandler、Executor</strong> 这 4 种接口的插件， Mybatis 使用 JDK 的动态代理， 为需要拦截的接口生成代理对象以实现接口方法拦 截功能， 每当执行这 4 种接口对象的方法时，就会进入拦截方法，具体就是 InvocationHandler 的 invoke() 方法， <strong>拦截那些你指定需要拦截的方法。</strong></p><p><strong>编写插件：</strong> 实现 Mybatis 的 Interceptor 接口并复写 intercept()方法， 然后在给插件编写注解， 指定要拦截哪一个接口的哪些方法即可， 在配置文件中配置编写的插件。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Intercepts(&#123;@Signature(type = StatementHandler.class, method = &quot;query&quot;, args =</span></span><br><span class="line"><span class="meta">&#123;Statement.class, ResultHandler.class&#125;),</span></span><br><span class="line"><span class="meta">@Signature(type = StatementHandler.class, method = &quot;update&quot;, args =</span></span><br><span class="line"><span class="meta">&#123;Statement.class&#125;),</span></span><br><span class="line"><span class="meta">@Signature(type = StatementHandler.class, method = &quot;batch&quot;, args = &#123;</span></span><br><span class="line"><span class="meta">Statement.class &#125;)&#125;)</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line">invocation.proceed()执行具体的业务逻</span><br></pre></td></tr></table></figure><h1 id="七、Mysql"><a href="#七、Mysql" class="headerlink" title="七、Mysql"></a>七、Mysql</h1><h2 id="1、索引的基本原理"><a href="#1、索引的基本原理" class="headerlink" title="1、索引的基本原理"></a>1、索引的基本原理</h2><ol><li>索引用来快速地寻找那些具有特定值的记录。如果没有索引，一般来说执行查询时遍历整张表。 </li><li><strong>索引的原理：就是把无序的数据变成有序的查询</strong> <ul><li>把创建了索引的列的内容进行排序 </li><li>对排序结果生成倒排表 </li><li>在倒排表内容上拼上数据地址链 </li><li>在查询的时候，先拿到倒排表内容，再取出数据地址链，从而拿到具体数据</li></ul></li></ol><h2 id="2、mysql聚簇和非聚簇索引的区别"><a href="#2、mysql聚簇和非聚簇索引的区别" class="headerlink" title="2、mysql聚簇和非聚簇索引的区别"></a>2、mysql聚簇和非聚簇索引的区别</h2><ol><li>都是B+树的数据结构</li></ol><ul><li><strong>聚簇索引：将数据存储与索引放到了一块</strong>、并且是按照一定的顺序组织的，找到索引也就找到了数据，<strong>数据的物理存放顺序与索引顺序是一致的</strong>，即：只要索引是相邻的，那么对应的数据一定也是 相邻地存放在磁盘上的</li><li><strong>非聚簇索引：</strong>叶子节点不存储数据、<strong>存储的是数据行地址</strong>，也就是说根据索引查找到数据行的位置 再取磁盘查找数据，这个就有点类似一本树的目录，<strong>比如我们要找第三章第一节，那我们先在这个 目录里面找，找到对应的页码后再去对应的页码看文章。</strong></li></ul><ol start="2"><li><p>优势： </p><ul><li>查询通过聚簇索引可以直接获取数据，相比非聚簇索引需要第二次查询（非覆盖索引的情况下）效率要高</li><li><strong>聚簇索引</strong>对于范围查询的效率很高，因为<strong>其数据是按照大小排列的</strong></li><li><strong>聚簇索引适合用在排序的场合</strong>，非聚簇索引不适合</li></ul></li><li><p>劣势：</p><ul><li><strong>维护索引很昂贵</strong>，特别是插入新行或者主键被更新导至要分页(page split)的时候。建议在大量插入新行后，选在负载较低的时间段，通过OPTIMIZE TABLE优化表，<strong>因为必须被移动的行数据可能造成碎片</strong>。使用独享表空间可以弱化碎片</li><li>表因为使用UUId（随机ID）作为主键，使数据存储稀疏，这就会出现聚簇索引有可能有比全表扫面更慢，所以<strong>建议使用int的auto_increment作为主键</strong></li><li><strong>如果主键比较大的话，那辅助索引将会变的更大</strong>，因为辅助索引的叶子存储的是主键值；过长的主键值，会导致非叶子节点占用占用更多的物理空间</li></ul></li><li><p>InnoDB中一定有主键，<strong>主键一定是聚簇索引</strong>，<strong>不手动设置</strong>、则会<strong>使用unique</strong>索引，没有unique索引， 则会<strong>使用数据库内部的一个行的隐藏id</strong>来当作主键索引。<strong>在聚簇索引之上创建的索引称之为辅助索引</strong>， <strong>辅助索引访问数据总是需要二次查找</strong>，非聚簇索引都是辅助索引，像复合索引、前缀索引、唯一索引， <strong>辅助索引叶子节点存储的</strong>不再是行的物理位置，而<strong>是主键值</strong></p></li><li><p><strong>MyISM使用的是非聚簇索引，没有聚簇索引</strong>，非聚簇索引的两棵B+树看上去没什么不同，节点的结构完全一致只是存储的内容不同而已，<strong>主键索引B+树的节点存储了主键，辅助键索引B+树存储了辅助键。</strong>表数据存储在独立的地方，这两颗B+树的叶子节点都使用一个地址指向真正的表数据，对于表数据来说，这两个键没有任何差别。<strong>由于索引树是独立的，通过辅助键检索无需访问主键的索引树。</strong></p></li><li><p>如果<strong>涉及到大数据量的排序、全表扫描、count之类的操作的话</strong>，还是<strong>MyISAM占优势</strong>些，因为<strong>索引所占空间小</strong>，这些操作是需要在内存中完成的。</p></li></ol><h2 id="3、mysql索引的数据结构，各自优劣"><a href="#3、mysql索引的数据结构，各自优劣" class="headerlink" title="3、mysql索引的数据结构，各自优劣"></a>3、mysql索引的数据结构，各自优劣</h2><ol><li>索引的数据结构和具体存储引擎的实现有关，在<strong>MySQL中使用较多的索引有Hash索引，B+树索引等</strong>， <strong>InnoDB存储引擎</strong>的默认索引实现为<strong>：B+树索引</strong>。对于哈希索引来说，底层的数据结构就是哈希表，因 此在<strong>绝大多数需求为单条记录查询的时候，可以选择哈希索引</strong>，查询性能最快；<strong>其余大部分场景，建议选择BTree索引</strong>。</li><li><strong>B+树：</strong>B+树是一个平衡的多叉树，<strong>从根节点到每个叶子节点的高度差值不超过1，而且同层级的节点间有指针相互链接。</strong>在B+树上的常规检索，从根节点到叶子节点的搜索效率基本相当，不会出现大幅波动，而且<strong>基于索引的顺序扫描时，也可以利用双向指针快速左右移动</strong>，效率非常高。因此，B+树索引被广泛应用 于数据库、文件系统等场景。</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304141946206.png"                      alt="image-20230414194615001"                ></p><ol start="3"><li><strong>哈希索引：</strong>哈希索引就是<strong>采用一定的哈希算法</strong>，把键值换算成新的哈希值，检索时不需要类似B+树那样从根节点到叶子节点逐级查找，<strong>只需一次哈希算法</strong>即可立刻定位到相应的位置，速度非常快</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304141950820.png"                      alt="image-20230414195004603"                ></p><ol start="4"><li>如果是<strong>等值查询</strong>，那么<strong>哈希索引</strong>明显有绝对优势，因为只需要经过一次算法即可找到相应的键值；<strong>前提是键值都是唯一的</strong>。如果键值不是唯一的，就需要先找到该键所在位置，然后再根据链表往后扫描，直到找到相应的数据；</li><li>如果是<strong>范围查询</strong>检索，这时候哈希索引就毫无用武之地了，因为<strong>原先是有序的键值，经过哈希算法后， 有可能变成不连续的了</strong>，就没办法再利用索引完成范围查询检索；</li><li><strong>哈希索引</strong>也<strong>没办法利用索引完成排序</strong>，<strong>以及like ‘xxx%’ 这样的部分模糊查询</strong>（这种部分模糊查询，其实本质上也是范围查询）；</li><li><strong>哈希索引也不支持多列联合索引的最左匹配规则；</strong></li><li><strong>B+树索引的关键字检索效率比较平均</strong>，不像B树那样波动幅度大，<strong>在有大量重复键值情况下，哈希索引的效率也是极低的</strong>，因为存在哈希碰撞问题。</li></ol><h2 id="4、索引涉及的原则"><a href="#4、索引涉及的原则" class="headerlink" title="4、索引涉及的原则"></a>4、索引涉及的原则</h2><ol><li>查询<strong>更快</strong>、占用空间<strong>更小</strong></li><li>适合索引的列是出现在<strong>where子句中的列</strong>，或者连接子句中指定的列 </li><li><strong>基数较小</strong>的表，索引<strong>效果较差</strong>，没有必要在此列建立索引</li><li>使用短索引，<strong>如果对长字符串列进行索引，应该指定一个前缀长度</strong>，这样能够节省大量索引空间， 如果搜索词超过索引前缀长度，则使用索引排除不匹配的行，然后检查其余行是否可能匹配。 </li><li><strong>不要过度索引</strong>。索引需要额外的磁盘空间，并降低写操作的性能。在修改表内容的时候，索引会进行更新甚至重构，索引列越多，这个时间就会越长。所以<strong>只保持需要的索引有利于查询即可</strong>。</li><li><strong>定义有外键的数据列一定要建立索引。</strong></li><li><strong>更新频繁字段不适合创建索引</strong> </li><li><strong>若是不能有效区分数据的列</strong>不适合做索引列(如性别，男女未知，最多也就三种，区分度实在太低)</li><li><strong>尽量的扩展索引，不要新建索引</strong>。比如表中已经有a的索引，现在要加(a,b)的索引，那么只需要修改原来的索引即可。 </li><li>对于那些<strong>查询中很少涉及的列</strong>，<strong>重复值比较多的列</strong>不要建立索引。 </li><li>对于<strong>定义为text、image和bit的数据类型的列</strong>不要建立索引。</li></ol><h2 id="5、锁的类型有哪些"><a href="#5、锁的类型有哪些" class="headerlink" title="5、锁的类型有哪些"></a>5、锁的类型有哪些</h2><ol><li>基于锁的<strong>属性</strong>分类：<strong>共享锁、排他锁</strong>。</li><li>基于锁的<strong>粒度</strong>分类：<strong>行级锁(INNODB)、表级锁(INNODB、MYISAM)、页级锁(BDB引擎 )、记录锁、间隙锁、临键锁</strong>。 </li><li>基于锁的<strong>状态</strong>分类：<strong>意向共享锁、意向排它锁</strong>。<ul><li><strong>共享锁(Share Lock)：</strong>共享锁又称读锁，<strong>简称S锁</strong>；当一个事务为数据加上读锁之后，其他事务只能对该数据加读锁，而不能对数据加写锁，直到所有的读锁释放之后其他事务才能对其进行加持写锁。<strong>共享锁的特性主要是为了支持并发的读取数据</strong>，读取数据的时候不支持修改，避免出现<strong>重复读</strong>的问题。</li><li><strong>排他锁（eXclusive Lock）：</strong>排他锁又称写锁，<strong>简称X锁</strong>；当一个事务为数据加上写锁时，其他请求将不能再为数据加任何锁，直到该锁释放之后，其他事务才能对数据进行加锁。<strong>排他锁的目的是在数据修改时候，不允许其他人同时修 改，也不允许其他人读取</strong>。避免了出现<strong>脏数据和脏读</strong>的问题。</li><li><strong>表锁：</strong>表锁是指上锁的时候<strong>锁住的是整个表</strong>，当下一个事务访问该表的时候，必须等前一个事务释放了锁才能进行对表进行访问； 特点： 粒度大，加锁简单，容易冲突；</li><li><strong>行锁：</strong>行锁是指<strong>上锁的时候锁住的是表的某一行或多行记录</strong>，其他事务访问同一张表时，只有被锁住的记录不能访问，其他的记录可正常访问； 特点：粒度小，加锁比表锁麻烦，不容易冲突，<strong>相比表锁支持的并发要高</strong>；</li><li><strong>记录锁(Record Lock)：</strong>记录锁也属于行锁中的一种，只不过<strong>记录锁的范围只是表中的某一条记录</strong>，记录锁是说事务在加锁后锁住的只是表的某一条记录。 <strong>精准条件命中</strong>，并且命中的条件字段是唯一索引。加了记录锁之后数据可以<strong>避免</strong>数据在查询的时候被修改的<strong>重复读</strong>问题，也<strong>避免了</strong>在修改的事务未提交前被其他事务<strong>读取的脏读问题</strong>。</li><li><strong>页锁：</strong>页级锁是MySQL中锁定粒度介于行级锁和表级锁中间的一种锁。<strong>表级锁</strong>速度快，但冲突多，<strong>行级</strong>冲突少，但速度慢。所以取了<strong>折中的页级</strong>，<strong>一次锁定相邻的一组记录</strong>。 特点：开销和加锁时间界于表锁和行锁之间；会出现死锁；锁定粒度界于表锁和行锁之间，并发度一般</li><li><strong>间隙锁(Gap Lock)：</strong>属于行锁中的一种，间隙锁是在事务加锁后其<strong>锁住的是表记录的某一个区间</strong>，当表的相邻ID之间出现空 隙则会形成一个区间，遵循<strong>左开右闭</strong>原则。 范围查询并且查询未命中记录，查询条件必须命中索引、<strong>间隙锁只会出现在REPEATABLE_READ（重复读)的事务级别中。</strong> 触发条件：防止幻读问题，<strong>事务并发的时候，如果没有间隙锁</strong>，就会发生如下图的问题，<strong>在同一个事务里，A事务的两次查询出的结果会不一样</strong>。 比如表里面的数据ID 为 1,4,5,7,10 ,那么会形成以下几个间隙区间，-n-1区间，1-4区间，7-10 区间，10-n区间 （-n代表负无穷大，n代表正无穷大）</li><li><strong>临建锁(Next-Key Lock)：</strong>也属于行锁的一种，并且它是INNODB的行锁默认算法，总结来说<strong>它就是记录锁和间隙锁的组合</strong>，<strong>临键锁会把查询出来的记录锁住，同时也会把该范围查询内的所有间隙空间也会锁住</strong>，再之它会把相邻的下一个区间也会锁住；触发条件：范围查询并命中，查询命中了索引。 结合记录锁和间隙锁的特性，<strong>临键锁避免了在范围查询时出现脏读、重复读、幻读问题。</strong> <strong>加了临键锁之后，在范围区间内数据不允许被修改和插 入。</strong></li><li>如果当事务A加锁成功之后就设置一个状态告诉后面的人，已经有人对表里的行加了一个排他锁了，你们不能对整个表加共享锁或排它锁了，那么后面需要对整个表加锁的人只需要获取这个状态就知道自己是不是可以对表加锁，避免了对整个索引树的每个节点扫描是否加锁，而这个状态就是<strong>意向锁</strong>。</li><li><strong>意向共享锁：</strong>当一个事务试图对整个表进行加共享锁之前，<strong>首先需要获得这个表的意向共享锁</strong>。</li><li><strong>意向排他锁：</strong>当一个事务试图对整个表进行加排它锁之前，<strong>首先需要获得这个表的意向排它锁。</strong></li></ul></li></ol><h2 id="6、InnoDB存储引擎的锁的算法"><a href="#6、InnoDB存储引擎的锁的算法" class="headerlink" title="6、InnoDB存储引擎的锁的算法"></a>6、InnoDB存储引擎的锁的算法</h2><ol><li>Record lock：<strong>单个行记录</strong>上的锁 </li><li>Gap lock：间隙锁，<strong>锁定一个范围</strong>，不包括记录本身 </li><li>Next-key lock：record+gap：<strong>锁定一个范围，包含记录本身</strong></li><li>innodb对于<strong>行的查询使用next-key lock</strong> </li><li>Next-locking keying为了解决<strong>Phantom Problem幻读问题</strong> </li><li>当查询的<strong>索引含有唯一属性时</strong>，将next-key lock<strong>降级为</strong>record key </li><li><strong>Gap锁</strong>设计的目的是为了<strong>阻止多个事务将记录插入到同一范围内</strong>，而这会导致幻读问题的产生 </li><li><strong>有两种方式显式关闭gap锁</strong>：（除了外键约束和唯一性检查外，其余情况仅使用record lock） A. <strong>将事务隔离级别设置为RC</strong> B. <strong>将参数innodb_locks_unsafe_for_binlog设置为1</strong></li></ol><h2 id="7、关心过业务系统里面的sql耗时吗？统计过慢查询吗？对慢-查询都怎么优化过？"><a href="#7、关心过业务系统里面的sql耗时吗？统计过慢查询吗？对慢-查询都怎么优化过？" class="headerlink" title="7、关心过业务系统里面的sql耗时吗？统计过慢查询吗？对慢 查询都怎么优化过？"></a>7、关心过业务系统里面的sql耗时吗？统计过慢查询吗？对慢 查询都怎么优化过？</h2><ol><li>在业务系统中，除了使用主键进行的查询，其他的都会在测试库上测试其耗时，<strong>慢查询的统计主要由运维在做</strong>，会定期将业务中的慢查询反馈给我们。 </li><li>慢查询的优化首先要搞明白慢的原因是什么？<strong>是查询条件没有命中索引？是load了不需要的数据列？还是数据量太大？</strong> 所以优化也是针对这三个方向来的<ul><li>首先<strong>分析语句</strong>，看看是否load了额外的数据，可能是查询了多余的行并且抛弃掉了，可能是加载了许多结果中并不需要的列，<strong>对语句进行分析以及重写。</strong> </li><li><strong>分析语句的执行计划</strong>，然后获得其使用索引的情况，<strong>之后修改语句或者修改索引</strong>，使得语句可以尽可能的命中索引。 </li><li>如果对语句的优化已经无法进行，可以考虑表中的数据量是否太大，<strong>如果是的话可以进行横向或者纵向的分表。</strong></li></ul></li></ol><h2 id="8、事务的基本特性和隔离级别"><a href="#8、事务的基本特性和隔离级别" class="headerlink" title="8、事务的基本特性和隔离级别"></a>8、事务的基本特性和隔离级别</h2><ol><li>事务基本特性ACID分别是：<ul><li><strong>原子性</strong>指的是一个事务中的操作要么全部成功，要么全部失败。 </li><li><strong>一致性</strong>指的是数据库总是从一个一致性的状态转换到另外一个一致性的状态。比如A转账给B100块钱， 假设A只有90块，支付之前我们数据库里的数据都是符合约束的,但是如果事务执行成功了,我们的数据库 数据就破坏约束了,因此事务不能成功,这里我们说事务提供了一致性的保证 </li><li><strong>隔离性</strong>指的是一个事务的修改在<strong>最终提交前，对其他事务是不可见的。</strong> </li><li><strong>持久性</strong>指的是一旦事务提交，<strong>所做的修改就会永久保存到数据库中。</strong></li></ul></li><li>隔离性有4个隔离级别，分别是：<ul><li><strong>read uncommit 读未提交</strong>，可能会读到其他事务未提交的数据，也叫做<strong>脏读</strong>。 用户本来应该读取到id&#x3D;1的用户age应该是10，结果读取到了其他事务还没有提交的事务，结果读取结果age&#x3D;20，这就是脏读。 </li><li><strong>read commit 读已提交</strong>，<strong>两次读取结果不一致，叫做不可重复读。</strong> 不可重复读解决了脏读的问题，他只会读取已经提交的事务。 用户开启事务读取id&#x3D;1用户，查询到age&#x3D;10，再次读取发现结果&#x3D;20，在同一个事务里同一个查询读取到不同的结果叫做不可重复读。 </li><li><strong>repeatable read 可重复复读</strong>，这是mysql的默认级别，就是<strong>每次读取结果都一样</strong>，但是有<strong>可能产生幻读</strong>。 </li><li><strong>serializable 串行</strong>，一般是不会使用的，<strong>他会给每一行读取的数据加锁，会导致大量超时和锁竞争的问题。</strong></li></ul></li><li><strong>脏读(Drity Read)：</strong>某个事务已更新一份数据，另一个事务在此时读取了同一份数据，由于某些原因， 前一个RollBack了操作，则后一个事务所读取的数据就会是不正确的。 </li><li>**不可重复读(Non-repeatable read):**在一个事务的两次查询之中数据不一致，这可能是两次查询过程中间插入了一个事务更新的原有的数据。 </li><li><strong>幻读(Phantom Read):</strong> <strong>在一个事务的两次查询中数据笔数不一致</strong>，例如有一个事务查询了几列(Row)数 据，而另一个事务却在此时插入了新的几列数据，先前的事务在接下来的查询中，就会发现有几列数据是它先前所没有的。</li></ol><h2 id="9、ACID靠什么保证的？"><a href="#9、ACID靠什么保证的？" class="headerlink" title="9、ACID靠什么保证的？"></a>9、ACID靠什么保证的？</h2><ol><li><p><strong>A原子性由undo log日志保证</strong>，它记录了需要回滚的日志信息，事务回滚时撤销已经执行成功的sql </p></li><li><p><strong>C一致性由其他三大特性保证</strong>、程序代码要保证业务上的一致性</p></li><li><p>I隔离性由<strong>MVCC</strong>来保证</p></li><li><p>D持久性由<strong>内存+redo log来保证</strong>，mysql修改数据同时在内存和redo log记录这次操作，宕机的时候可以从redo log恢复</p><blockquote><p>InnoDB redo log 写盘，InnoDB 事务进入 prepare 状态。 如果前面 prepare 成功，binlog 写盘，再继续将事务日志持久化到 binlog，如果持久化成功，那么 InnoDB 事务则进入 commit 状态(在 redo log 里面写一个 commit 记录)</p><p>redolog的刷盘会在系统空闲时进行</p></blockquote></li></ol><h2 id="10、什么是MVCC"><a href="#10、什么是MVCC" class="headerlink" title="10、什么是MVCC"></a>10、什么是MVCC</h2><ol><li><strong>多版本并发控制：</strong>读取数据时通过一种类似<strong>快照</strong>的方式将数据保存下来，这样读锁就和写锁不冲突了， 不同的事务session会看到自己特定版本的数据，版本链 </li><li><strong>MVCC</strong>只在 <strong>READ COMMITTED</strong> 和 <strong>REPEATABLE READ</strong> 两个隔离级别下工作。其他两个隔离级别够和 MVCC不兼容, 因为 <strong>READ UNCOMMITTED</strong> 总是读取最新的数据行, 而不是符合当前事务版本的数据 行。而 <strong>SERIALIZABLE</strong> 则会对所有读取的行都加锁。</li><li><strong>聚簇索引</strong>记录中有两个必要的隐藏列：<ul><li><strong>trx_id：</strong>用来<strong>存储</strong>每次对某条聚簇索引<strong>记录</strong>进行<strong>修改的</strong>时候的<strong>事务id</strong>。 </li><li><strong>roll_pointer：</strong>每次对哪条聚簇索引记录有修改的时候，都会把老版本写入undo日志中。这个 roll_pointer就是存了一个指针，<strong>它指向这条聚簇索引记录的上一个版本的位置</strong>，通过它来获得上一个版本的记录信息。(注意插入操作的undo日志没有这个属性，因为它没有老版本)</li></ul></li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304171724470.png"                      alt="image-20230417172415231"                ></p><ol start="4"><li>开始事务时创建readview，<strong>readView维护当前活动的事务id</strong>，即未提交的事务id，排序生成一个数组访问数据，获取数据中的事务id（获取的是事务id最大的记录），<strong>对比readview</strong>：</li><li>如果在readview的<strong>左边</strong>（比readview都<strong>小</strong>），<strong>可以访问</strong>（在左边意味着该事务已经提交） </li><li>如果在readview的<strong>右边</strong>（比readview都<strong>大</strong>）或者就在readview<strong>中</strong>，<strong>不可以访问</strong>，获取roll_pointer，取上一版本重新对比（在右边意味着，该事务在readview生成之后出现，在readview中意味着该事务还未提交） </li><li><strong>已提交读隔离级别</strong>下的事务在<strong>每次</strong>查询的开始都会<strong>生成</strong>一个独立的ReadView,而<strong>可重复读隔离级别</strong>则在<strong>第一次</strong>读的时候<strong>生成</strong>一个ReadView，之后的读都复用之前的ReadView。 </li><li>这就是Mysql的MVCC,通过版本链，<strong>实现多版本，可并发读-写，写-读</strong>。通过ReadView生成策略的不同实现不同的隔离级别。</li></ol><h2 id="11、分表后非sharding-key的查询怎么处理，分表后的排序？"><a href="#11、分表后非sharding-key的查询怎么处理，分表后的排序？" class="headerlink" title="11、分表后非sharding_key的查询怎么处理，分表后的排序？"></a>11、分表后非sharding_key的查询怎么处理，分表后的排序？</h2><ol><li><strong>可以做一个mapping表</strong>，比如这时候商家要查询订单列表怎么办呢？不带user_id查询的话你总不能扫全表吧？所以我们可以<strong>做一个映射关系表</strong>，保存商家和用户的关系，查询的时候先通过商家查询到用户列表，再通过user_id去查询。 </li><li><strong>宽表</strong>，对数据实时性要求不是很高的场景，比如<strong>查询订单列表，可以把订单表同步到离线（实时） 数仓，再基于数仓去做成一张宽表，再基于其他如es提供查询服务。</strong></li><li><strong>数据量不是很大的话</strong>，比如后台的一些查询之类的，也可以通过<strong>多线程扫表</strong>，然后再<strong>聚合结果</strong>的方式来做。或者<strong>异步的形式</strong>也是可以的。</li><li><strong>排序字段是唯一索引：</strong><ul><li>首先<strong>第一页的查询</strong>：<strong>将各表的结果集进行合并，然后再次排序</strong> </li><li><strong>第二页及以后的查询</strong>，需要<strong>传入上一页排序字段的最后一个值，及排序方式。</strong> </li><li><strong>根据排序方式，及这个值进行查询。</strong>如排序字段date，上一页最后值为3，排序方式降序。查询的时候sql为select … from table where date &lt; 3 order by date desc limit 0,10。这样再将几个表的结果合并排序即可。</li></ul></li></ol><h2 id="12、mysql主从同步原理"><a href="#12、mysql主从同步原理" class="headerlink" title="12、mysql主从同步原理"></a>12、mysql主从同步原理</h2><ol><li>mysql主从同步的过程：</li><li>Mysql的主从复制中主要有三个线程： master（binlog dump thread）、slave（I&#x2F;O thread 、SQL thread） ，<strong>Master一条线程和Slave中的两条线程。</strong><ul><li>主节点 binlog，<strong>主从复制的基础是主库记录数据库的所有变更记录到 binlog</strong>。binlog是数据库服务器启动的那一刻起，保存所有修改数据库结构或内容的一个文件。 </li><li>主节点 log dump 线程，<strong>当 binlog 有变动时</strong>，log dump 线程读取其内容并发送给从节点。 </li><li>从节点 I&#x2F;O线程接收 binlog 内容，并将<strong>其写入到 relay log 文件中。</strong> </li><li><strong>从节点的SQL线程读取 relay log 文件内容对数据更新进行重放</strong>，最终保证主从数据库的一致性。</li></ul></li></ol><p>注：<strong>主从节点使用 binglog 文件 + position 偏移量来定位主从同步的位置</strong>，从节点会保存其已接收到的偏移量，如果从节点发生宕机重启，则会自动从 position 的位置发起同步。</p><ol start="3"><li>由于<strong>mysql默认的复制方式是异步的</strong>，主库把日志发送给从库后不关心从库是否已经处理，这样<strong>会产生一个问题</strong>就是假设主库挂了，从库处理失败了，这时候从库升为主库后，日志就丢失了。由此产生两个概念。</li><li><strong>全同步复制：</strong>主库写入binlog后强制同步日志到从库，<strong>所有的从库都执行完成后才返回给客户端</strong>，但是很显然这个方式的话性能会受到严重影响。</li><li><strong>半同步复制：</strong>和全同步不同的是，半同步复制的逻辑是这样，从库写入日志成功后返回ACK确认给主库，<strong>主库收到至少一个从库的确认就认为写操作完成。</strong></li></ol><h2 id="13、简述mysql中索引类型及对数据库的性能的影响"><a href="#13、简述mysql中索引类型及对数据库的性能的影响" class="headerlink" title="13、简述mysql中索引类型及对数据库的性能的影响"></a>13、简述mysql中索引类型及对数据库的性能的影响</h2><ol><li><strong>普通索引：</strong>允许被索引的数据列包含重复的值。 </li><li><strong>唯一索引：</strong>可以保证数据记录的唯一性。</li><li><strong>主键：</strong>是一种特殊的唯一索引，在一张表中只能定义一个主键索引，主键用于唯一标识一条记录，使用 关键字 <strong>PRIMARY KEY</strong> 来创建。 </li><li><strong>联合索引：</strong>索引可以覆盖多个数据列，如像INDEX(columnA, columnB)索引。 </li><li><strong>全文索引：</strong>通过建立<strong>倒排</strong>索引 ,可以极大的提升检索效率,<strong>解决判断字段是否包含的问题</strong>，是目前搜索引擎使用的一种关键技术。可以通过ALTER TABLE table_name ADD FULLTEXT (column);创建全文索引</li><li>索引可以极大的提高数据的查询速度。 </li><li>通过使用索引，可以在查询的过程中，使用优化隐藏器，提高系统的性能。 <strong>但是</strong>会降低插入、删除、更新表的速度，因为在执行这些写操作时，还要操作索引文件 </li><li>索引需要占物理空间，<strong>除了数据表占数据空间之外，每一个索引还要占一定的物理空间</strong>，如果要建立聚簇索引，那么需要的空间就会更大，如果非聚集索引很多，一旦聚集索引改变，那么所有非聚集索引都会跟着变。</li></ol><h2 id="14、mysql执行计划怎么看"><a href="#14、mysql执行计划怎么看" class="headerlink" title="14、mysql执行计划怎么看"></a>14、mysql执行计划怎么看</h2><ol><li><strong>执行计划就是sql的执行查询的顺序，以及如何使用索引查询，返回的结果集的行数</strong> EXPLAIN SELECT * from A where X&#x3D;? and Y&#x3D;?</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304171928354.png"                      alt="image-20230417192832210"                ></p><ol start="2"><li>id ：是一个有顺序的编号，是查询的顺序号，有几个 select 就显示几行。id的顺序是按 select 出现 的顺序增长的。id列的值越大执行优先级越高越先执行，id列的值相同则从上往下执行，id列的值为 NULL最后执行。</li><li>selectType 表示查询中每个select子句的类型<ul><li>SIMPLE： 表示此查询不包含 UNION 查询或子查询 </li><li>PRIMARY： 表示此查询是最外层的查询（包含子查询） </li><li>SUBQUERY： 子查询中的第一个 SELECT </li><li>UNION： 表示此查询是 UNION 的第二或随后的查询 </li><li>DEPENDENT UNION： UNION 中的第二个或后面的查询语句, 取决于外面的查询 </li><li>UNION RESULT, UNION 的结果 </li><li>DEPENDENT SUBQUERY: 子查询中的第一个 SELECT, 取决于外面的查询. 即子查询依赖于外层查 询的结果. </li><li>DERIVED：衍生，表示导出表的SELECT（FROM子句的子查询）</li></ul></li><li>table：表示该语句查询的表</li><li>type：优化sql的重要字段，也是我们判断sql性能和优化程度重要指标。他的取值类型范围：<ul><li>const：通过索引一次命中，匹配一行数据 </li><li>system: 表中只有一行记录，相当于系统表； </li><li>eq_ref：唯一性索引扫描，对于每个索引键，表中只有一条记录与之匹配 </li><li>ref: 非唯一性索引扫描,返回匹配某个值的所有 </li><li>range: 只检索给定范围的行，使用一个索引来选择行，一般用于between、&lt;、&gt;； </li><li>index: 只遍历索引树； </li><li>ALL: 表示全表扫描，这个类型的查询是性能最差的查询之一。 那么基本就是随着表的数量增多， 执行效率越慢。</li></ul></li><li>执行效率： ALL &lt; index &lt; range&lt; ref &lt; eq_ref &lt; const &lt; system。<strong>最好是避免ALL和index</strong></li><li>.possible_keys：它表示Mysql在执行该sql语句的时候，可能用到的索引信息，仅仅是可能，实际不一 定会用到。 </li><li>key：此字段是 mysql 在当前查询时所真正使用到的索引。 他是possible_keys的子集 </li><li>key_len：表示查询优化器使用了索引的字节数，这个字段可以评估组合索引是否完全被使用，这也是 我们优化sql时，评估索引的重要指标 </li><li>rows：mysql 查询优化器根据统计信息，估算该sql返回结果集需要扫描读取的行数，这个值相关重 要，索引优化之后，扫描读取的行数越多，说明索引设置不对，或者字段传入的类型之类的问题，说明 要优化空间越大 </li><li>filtered：返回结果的行占需要读到的行(rows列的值)的百分比，就是百分比越高，说明需要查询到 数据越准确， 百分比越小，说明查询到的数据量大，而结果集很少</li><li>extra<ul><li>using filesort ：表示 mysql 对结果集进行外部排序，不能通过索引顺序达到排序效果。一般有 using filesort都建议优化去掉，因为这样的查询 cpu 资源消耗大，延时大。</li><li>using index：覆盖索引扫描，表示查询在索引树中就可查找所需数据，不用扫描表数据文件，往往说明性能不错。.</li><li>using temporary：查询有使用临时表, 一般出现于排序， 分组和多表 join 的情况， 查询效率不高，建议优化。 </li><li>using where ：sql使用了where过滤,效率较高。</li></ul></li></ol><h1 id="八、redis"><a href="#八、redis" class="headerlink" title="八、redis"></a>八、redis</h1><h2 id="1、RDB-和-AOF-机制"><a href="#1、RDB-和-AOF-机制" class="headerlink" title="1、RDB 和 AOF 机制"></a>1、RDB 和 AOF 机制</h2><ol><li><strong>RDB：Redis DataBase</strong></li><li><strong>在指定的时间间隔内将内存中的数据集快照写入磁盘</strong>，实际操作过程是fork一个子进程，先将数据集写入临时文件，写入成功后，再替换之前的文件，用二进制压缩存储。</li><li><strong>优点：</strong><ul><li><strong>整个Redis数据库将只包含一个文件 dump.rdb</strong>，方便持久化。 </li><li>容灾性好，<strong>方便备份</strong>。 </li><li>性能最大化，<strong>fork 子进程来完成写操作</strong>，让<strong>主进程继续处理命令</strong>，所以是 <strong>IO 最大化</strong>。使用<strong>单独子进程来进行持久化</strong>，<strong>主进程不会进行任何 IO 操作</strong>，保证了 <strong>redis 的高性能</strong></li><li>相对于数据集大时，比 <strong>AOF</strong> 的启动效率更高。</li></ul></li><li><strong>缺点：</strong><ul><li><strong>数据安全性低。****RDB 是间隔一段时间进行持久化</strong>，如果持久化之间 redis 发生故障，会发生数据丢失。所以这种方式更适合数据要求不严谨的时候) </li><li>由于<strong>RDB是通过fork子进程来协助完成数据持久化工作的</strong>，因此，如果当数据集较大时，可能会导致整个服务器停止服务几百毫秒，甚至是1秒钟。</li></ul></li></ol><hr><ol><li><strong>AOF：Append Only File</strong></li><li>以<strong>日志的形式记录</strong>服务器所处理的每一个<strong>写、删除</strong>操作，<strong>查询</strong>操作不会记录，<strong>以文本的方式记录</strong>，可以打开文件看到详细的操作记录</li><li><strong>优点：</strong><ul><li><strong>数据安全</strong>，Redis中提供了3种同步策略，即<strong>每秒同步、每修改同步和不同步</strong>。事实上，<strong>每秒同步</strong>也是异步完成的，其效率也是非常高的，所差的是一旦系统出现宕机现象，那么这一秒钟之内修改的数据将会丢失。而<strong>每修改同步</strong>，我们可以将其视为同步持久化，即每次发生的数据变化都会被立即记录到磁 盘中。</li><li><strong>通过 append 模式写文件</strong>，即使中途服务器宕机也不会破坏已经存在的内容，可以通过 <strong>redischeck-aof</strong> 工具解决数据一致性问题。 </li><li>AOF 机制的 rewrite 模式。<strong>定期对AOF文件进行重写，以达到压缩的目的</strong></li></ul></li><li><strong>缺点：</strong><ul><li>AOF 文件比 RDB 文件大，且恢复速度慢。 </li><li>数据集大的时候，比 rdb 启动效率低。 </li><li>运行效率没有RDB高</li></ul></li><li>AOF文件比RDB更新频率高，<strong>优先使用AOF还原数据。</strong> </li><li><strong>AOF</strong>比RDB<strong>更安全也更大</strong> </li><li><strong>RDB</strong>性能比AOF<strong>好</strong> </li><li>如果两个都配了<strong>优先加载AOF</strong></li></ol><h2 id="2、Redis的过期键的删除策略"><a href="#2、Redis的过期键的删除策略" class="headerlink" title="2、Redis的过期键的删除策略"></a>2、Redis的过期键的删除策略</h2><ol><li><strong>Redis是key-value数据库</strong>，我们可以设置Redis中缓存的key的过期时间。<strong>Redis的过期策略就是指当 Redis中缓存的key过期了，Redis如何处理。</strong><ul><li><strong>惰性过期：</strong> <strong>只有当访问一个key时，才会判断该key是否已过期，过期则清除。</strong>该策略可以最大化地节省CPU资源，却对内存非常不友好。极端情况可能出现大量的过期key没有再次被访问，从而不会被清除，占用大量内存。 </li><li><strong>定期过期：</strong> <strong>每隔一定的时间，会扫描一定数量的数据库的expires字典中一定数量的key，并清除其中已过期的key。</strong>该策略是一个折中方案。通过调整<strong>定时扫描的时间间隔</strong>和<strong>每次扫描的限定耗时</strong>， 可以在不同情况下使得CPU和内存资源达到最优的平衡效果。</li></ul></li><li>(<strong>expires字典会保存所有设置了过期时间的key的过期时间数据</strong>，其中，<strong>key</strong>是指向键空间中的某个键的指针，<strong>value</strong>是该键的毫秒精度的UNIX时间戳表示的过期时间。<strong>键空间是指该Redis集群中保存的所有键。</strong>)</li><li>Redis中<strong>同时使用了</strong>惰性过期和定期过期两种过期策略。</li></ol><h2 id="3、Redis线程模型、单线程快的原因"><a href="#3、Redis线程模型、单线程快的原因" class="headerlink" title="3、Redis线程模型、单线程快的原因"></a>3、Redis线程模型、单线程快的原因</h2><ol><li><strong>Redis基于Reactor模式开发了网络事件处理器</strong>，这个处理器叫做文件事件处理器 file event handler。 这个文件事件处理器，它<strong>是单线程的</strong>，所以 Redis 才叫做单线程的模型，<strong>它采用IO多路复用机制来同时监听多个Socket，根据Socket上的事件类型来选择对应的事件处理器来处理这个事件。</strong>可以<strong>实现高性能的网络通信模型</strong>，又可以<strong>跟内部其他单线程的模块</strong>进行<strong>对接</strong>，保证了 Redis 内部的线程模型的简单性。<strong>文件事件处理器的结构包含4个部分</strong>：<strong>多个Socket、IO多路复用程序、文件事件分派器以及事件处理器</strong> （命令请求处理器、命令回复处理器、连接应答处理器等）。</li><li>多个 Socket 可能并发的产生不同的操作，每个操作对应不同的文件事件，但是IO多路复用程序会监听多个Socket，会将 Socket 放入一个队列中排队，每次从队列中取出一个 Socket 给事件分派器，<strong>事件分派器把 Socket 给对应的事件处理器。</strong></li><li>然后<strong>一个 Socket 的事件处理完之后，IO多路复用程序才会将队列中的下一个 Socket 给事件分派器</strong>。文件事件分派器会根据每个 Socket 当前产生的事件，来选择对应的事件处理器来处理。</li><li><strong>单线程快的原因：</strong><ul><li><strong>纯内存操作</strong> </li><li><strong>核心</strong>是基于非阻塞的IO多路复用机制 </li><li>单线程反而<strong>避免了</strong>多线程的频繁<strong>上下文切换</strong>带来的性能问题</li></ul></li></ol><h2 id="4、简述Redis事务实现"><a href="#4、简述Redis事务实现" class="headerlink" title="4、简述Redis事务实现"></a>4、简述Redis事务实现</h2><ol><li><strong>事务开始</strong>：<strong>MULTI命令的执行</strong>，标识着一个事务的开始。MULTI命令会将客户端状态的 flags 属性中打开 REDIS_MULTI 标识来完成的。</li><li><strong>命令入队：</strong> <strong>当一个客户端切换到事务状态之后，服务器会根据这个客户端发送来的命令来执行不同的操作。</strong>如果客户端发送的命令为<strong>MULTI</strong>、<strong>EXEC</strong>、<strong>WATCH</strong>、<strong>DISCARD</strong>中的一个，立即执行这个命令，否则将命令放入一 个事务队列里面，然后向客户端返回 <strong>QUEUED</strong> 回复<ul><li>如果客户端发送的命令为 <strong>EXEC、DISCARD、WATCH、MULTI</strong> 四个命令的其中一个，那么服务器立即执行这个命令。 </li><li>如果客户端发送的是四个命令以外的其他命令，那么服务器并不立即执行这个命令。 <strong>首先</strong>检查此命令的格式是否正确，如果不正确，服务器会在客户端状态（redisClient）的 flags 属性关闭 REDIS_MULTI 标识，并且返回错误信息给客户端。 如果正确，将这个命令放入一个事务队列里面，然后向客户端返回 QUEUED 回复</li><li>事务队列是按照<strong>FIFO</strong>的方式保存入队的命令</li></ul></li><li><strong>事务执行：</strong>客户端发送 <strong>EXEC</strong> 命令，服务器执行 EXEC 命令逻辑。<ul><li>如果客户端状态的 flags 属性不包含 REDIS_MULTI 标识，或者包含 REDIS_DIRTY_CAS 或者 REDIS_DIRTY_EXEC 标识，那么就直接<strong>取消事务</strong>的执行。 </li><li>否则客户端处于<strong>事务状态（flags 有 REDIS_MULTI 标识）</strong>，服务器会遍历客户端的事务队列，然后执行事务队列中的所有命令，最后将返回结果全部返回给客户端；</li></ul></li><li><strong>redis 不支持事务回滚机制</strong>，但是它会检查每一个事务中的命令是否错误。</li><li>Redis 事务<strong>不支持</strong>检查那些程序员自己逻辑错误。例如对 String 类型的数据库键执行对 HashMap 类型的操作！<ul><li><strong>WATCH</strong> 命令是一个<strong>乐观锁</strong>，可以为 Redis 事务提供 check-and-set （<strong>CAS</strong>）行为。可以<strong>监控一个或多个键</strong>，<strong>一旦其中有一个键被修改（或删除），之后的事务就不会执行</strong>，监控一直持续到EXEC命令。 </li><li><strong>MULTI</strong>命令<strong>用于开启一个事务</strong>，它总是返回OK。MULTI执行之后，客户端可以继续向服务器发送任意多条命令，这些命令不会立即被执行，而是被放到一个队列中，<strong>当EXEC命令被调用时，所有队列中的命令才会被执行。</strong> </li><li><strong>EXEC</strong>：<strong>执行所有事务块内的命令</strong>。返回事务块内所有命令的返回值，按命令执行的先后顺序排列。当操作被打断时，返回空值 nll 。 <strong>通过调用DISCARD，客户端可以清空事务队列，并放弃执行事务， 并且客户端会从事务状态中退出</strong>。 </li><li><strong>UNWATCH</strong>命令可以取消watch对所有key的监控。</li></ul></li></ol><h2 id="5、redis集群方案"><a href="#5、redis集群方案" class="headerlink" title="5、redis集群方案"></a>5、redis集群方案</h2><ol><li><strong>哨兵模式：</strong>sentinel，哨兵是 redis 集群中非常重要的一个组件，主要有以下功能：<ul><li><strong>集群监控</strong>：<strong>负责监控</strong> redis master 和 slave 进程是否正常工作。 </li><li><strong>消息通知</strong>：如果某个 redis 实例有故障，那么<strong>哨兵负责发送消息</strong>作为报警通知给管理员。 </li><li><strong>故障转移</strong>：如果 master node <strong>挂掉</strong>了，会<strong>自动转移</strong>到 slave node 上。 </li><li><strong>配置中心</strong>：如果<strong>故障转移发生了</strong>，通知 client 客户端新的 master 地址。</li></ul></li><li><strong>哨兵用于实现 redis 集群的高可用</strong>，本身也是分布式的，作为一个哨兵集群去运行，互相协同工作。<ul><li>故障转移时，判断一个 master node 是否宕机了，<strong>需要大部分的哨兵都同意才行</strong>，涉及到了分布式选举 </li><li>即使<strong>部分哨兵节点挂掉了</strong>，<strong>哨兵集群还是能正常工作</strong>的 </li><li>哨兵通常需要 3 个实例，来保证自己的健壮性。 </li><li>哨兵 + redis 主从的部署架构，是不保证数据零丢失的，只能保证 redis 集群的高可用性。 </li><li>对于哨兵 + redis 主从这种复杂的部署架构，尽量在测试环境和生产环境，都进行充足的测试和演练。</li></ul></li><li><strong>Redis Cluster是一种服务端Sharding技术</strong>，3.0版本开始正式提供。采用slot(槽)的概念，一共分成 16384个槽。将请求发送到任意节点，接收到请求的节点会将查询请求发送到正确的节点上执行。<strong>方案说明</strong><ul><li><strong>通过哈希的方式</strong>，将数据分片，每个节点均分存储一定哈希槽(哈希值)区间的数据，默认分配了 16384 个槽位</li><li><strong>每份数据分片会存储在多个互为主从的多节点上</strong> </li><li>数据写入<strong>先</strong>写主节点，<strong>再</strong>同步到从节点(支持配置为阻塞同步) </li><li>同一分片多个节点间的数据<strong>不保持强一致性</strong> </li><li>读取数据时，当客户端操作的key没有分配在该节点上时，redis会返回转向指令，指向正确的节点 </li><li><strong>扩容时需要需要把旧节点的数据迁移一部分到新节点</strong></li></ul></li><li>在 redis cluster 架构下，<strong>每个 redis 要放开两个端口号</strong>，比如一个是 6379，另外一个就是 加1w 的端 口号，比如 16379。</li><li>16379 端口号是<strong>用来进行节点间通信的</strong>，也就是 cluster bus 的通信，<strong>用来进行故障检测、配置更新、 故障转移授权</strong>。cluster bus 用了另外一种二进制的协议，gossip 协议，用于节点间进行高效的数据交换，占用更少的网络带宽和处理时间。</li><li><strong>优点：</strong><ul><li>无中心架构，<strong>支持动态扩容</strong>，对业务透明 </li><li>具备**Sentinel的监控和自动Failover(故障转移)**能力 </li><li><strong>客户端</strong>不需要连接集群所有节点<strong>，连接集群中任何一个可用节点即可</strong> </li><li>高性能，客户端直连redis服务，<strong>免去了proxy代理的损耗</strong></li></ul></li><li><strong>缺点：</strong><ul><li>运维也很复杂，数据迁移需要人工干预 </li><li>只能使用0号数据库 </li><li>不支持批量操作(pipeline管道操作) </li><li>分布式逻辑和存储模块耦合等</li></ul></li><li><strong>Redis Sharding</strong>是Redis Cluster出来之前，业界普遍使用的多Redis实例集群方法。<strong>其主要思想是采用哈希算法将Redis数据的key进行散列，通过hash函数，特定的key会映射到特定的Redis节点上。</strong>Java redis客户端驱动jedis，支持Redis Sharding功能，即ShardedJedis以及结合缓存池的 ShardedJedisPool<ul><li><strong>优点：</strong>服务端的Redis实例彼此独立，相互无关联，每个Redis实例像单服务器一样运行， 非常容易线性扩展，系统的灵活性很强</li><li><strong>缺点：</strong>由于sharding处理放到客户端，规模进一步扩大时给运维带来挑战。 客户端sharding不支持动态增删节点。服务端Redis实例群拓扑结构有变化时，每个客户端都需要更新 调整。连接不能共享，当应用规模增大时，资源浪费制约优化</li></ul></li></ol><h2 id="6、redis-主从复制的核心原理"><a href="#6、redis-主从复制的核心原理" class="headerlink" title="6、redis 主从复制的核心原理"></a>6、redis 主从复制的核心原理</h2><ol><li><strong>通过执行slaveof命令或设置slaveof选项，让一个服务器去复制另一个服务器的数据。</strong>主数据库可以进行读写操作，当写操作导致数据变化时会自动将数据同步给从数据库。<strong>而从数据库一般是只读的</strong>，并接受主数据库同步过来的数据。<strong>一个主数据库可以拥有多个从数据库，而一个从数据库只能拥有一个主数据库</strong>。</li><li><strong>全量复制：</strong><ul><li><strong>主节点通过bgsave命令fork子进程进行RDB持久化</strong>，该过程是非常消耗CPU、内存(页表复制)、硬盘IO的 </li><li><strong>主节点通过网络将RDB文件发送给从节点</strong>，对主从节点的带宽都会带来很大的消耗 </li><li><strong>从节点清空老数据、载入新RDB文件的过程是阻塞的，无法响应客户端的命令</strong>；如果从节点执行 bgrewriteaof，也会带来额外的消耗</li></ul></li><li><strong>部分复制：</strong><ul><li><strong>复制偏移量：</strong>执行复制的双方，主从节点，分别会维护一个复制偏移量offset</li><li><strong>复制积压缓冲区：</strong>主节点内部维护了一个固定长度的、先进先出(FIFO)队列作为复制积压缓冲区， <strong>当主从节点offset的差距过大超过缓冲区长度时，将无法执行部分复制，只能执行全量复制。</strong> </li><li><strong>服务器运行ID(runid)：</strong>每个Redis节点，都有其运行ID，运行ID由节点在启动时自动生成，<strong>主节点会将自己的运行ID发送给从节点，从节点会将主节点的运行ID存起来。</strong> 从节点Redis<strong>断开重连</strong>的时候，就是根据运行ID来判断同步的进度：<ul><li><strong>如果从节点保存的runid与主节点现在的runid相同</strong>，说明主从节点之前同步过，主节点会继续尝试<strong>使用部分复制</strong>(到底能不能部分复制还要看offset和复制积压缓冲区的情况)； </li><li><strong>如果从节点保存的runid与主节点现在的runid不同</strong>，说明从节点在断线前同步的Redis节点并不是当前的主节点，<strong>只能进行全量复制</strong>。</li></ul></li></ul></li><li>过程原理：</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304181626277.png"                      alt="image-20230418162652021"                ></p><h2 id="7、缓存雪崩、缓存穿透、缓存击穿"><a href="#7、缓存雪崩、缓存穿透、缓存击穿" class="headerlink" title="7、缓存雪崩、缓存穿透、缓存击穿"></a>7、缓存雪崩、缓存穿透、缓存击穿</h2><ol><li><strong>缓存雪崩</strong>是指<strong>缓存同一时间大面积的失效</strong>，所以，后面的请求都会落到数据库上，造成数据库短时间内承受大量请求而崩掉。</li><li><strong>解决方案：</strong><ul><li>缓存数据的<strong>过期时间设置随机</strong>，防止同一时间大量数据过期现象发生。 </li><li><strong>给每一个缓存数据增加相应的缓存标记</strong>，记录缓存是否失效，如果缓存标记失效，则更新数据缓存。 </li><li>缓存预热 </li><li>互斥锁</li></ul></li></ol><hr><ol><li><strong>缓存穿透</strong>是指<strong>缓存和数据库中都没有的数据</strong>，导致所有的请求都落到数据库上，造成数据库短时间内承受大量请求而崩掉。</li><li><strong>解决方案：</strong><ul><li><strong>接口层增加校验</strong>，如用户鉴权校验，id做基础校验，id&lt;&#x3D;0的直接拦截； </li><li>从缓存取不到的数据，在数据库中也没有取到，这时也可以将key-value对写为key-null，<strong>缓存有效时间可以设置短点</strong>，如30秒（设置太长会导致正常情况也没法使用）。这样可以防止攻击用反复用同一个id暴力攻击 </li><li><strong>采用布隆过滤器</strong>，<strong>将所有可能存在的数据哈希到一个足够大的 bitmap 中</strong>，一个一定不存在的数据会被这个 bitmap 拦截掉，从而避免了对底层存储系统的查询压力</li></ul></li></ol><hr><ol><li><strong>缓存击穿</strong>是指<strong>缓存中没有但数据库中有的数据</strong>（一般是缓存时间到期），这时由于并发用户特别多，同时读缓存没读到数据，又同时去数据库去取数据，引起数据库压力瞬间增大，造成过大压力。和缓存雪崩不同的是，<strong>缓存击穿指并发查&#x3D;&#x3D;同一&#x3D;&#x3D;条数据，缓存雪崩是不同数据都过期了，&#x3D;&#x3D;很多&#x3D;&#x3D;数据都查不到从而查数据库</strong>。</li><li><strong>解决方案：</strong><ul><li>设置热点数据永远不过期。 </li><li>加互斥锁</li></ul></li></ol><h1 id="九、分布式-x2F-微服务"><a href="#九、分布式-x2F-微服务" class="headerlink" title="九、分布式&#x2F;微服务"></a>九、分布式&#x2F;微服务</h1><h2 id="1、CAP理论，BASE理论"><a href="#1、CAP理论，BASE理论" class="headerlink" title="1、CAP理论，BASE理论"></a>1、CAP理论，BASE理论</h2><ol><li>Consistency (一致性)：<ul><li>即更新操作成功并返回客户端后，<strong>所有节点在同一时间的数据完全一致。</strong> </li><li>对于客户端来说，<strong>一致性指的是并发访问时更新过的数据如何获取的问题。</strong> </li><li>从服务端来看，<strong>则是更新如何复制分布到整个系统，以保证数据最终一致。</strong></li></ul></li><li>Availability (可用性):<ul><li><strong>即服务一直可用</strong>，而且是正常响应时间。系统能够很好的为用户服务，不出现用户操作失败或者访问超时等用户体验不好的情况。</li></ul></li><li>Partition Tolerance (分区容错性):<ul><li><strong>即分布式系统在遇到某节点或网络分区故障的时候，仍然能够对外提供满足一致性和可用性的服务。</strong>分区容错性要求能够使应用虽然是一个分布式系统，而看上去却好像是在一个可以运转正常的整体。比如现在的分布式系统中有某一个或者几个机器宕掉了，其他剩下的机器还能够正常运转满足系统需求，对 于用户而言并没有什么体验上的影响。</li></ul></li><li><strong>CP和AP：</strong>分区容错是必须保证的，当发生网络分区的时候，如果要继续服务，那么强一致性和可用性只能 2 选 1</li><li><strong>BASE</strong>是Basically Available（基本可用）、Soft state（软状态）和Eventually consistent（最终一致性）</li><li>BASE理论是对CAP中一致性和可用性权衡的结果，其来源于对大规模互联网系统分布式实践的总结， 是基于CAP定理逐步演化而来的<strong>。BASE理论的核心思想是：即使无法做到强一致性，但每个应用都可以根据自身业务特点，采用适当的方式来使系统达到最终一致性。</strong></li><li><strong>基本可用：</strong><ul><li><strong>响应时间上的损失:</strong> 正常情况下，处理用户请求需要 0.5s 返回结果，但是由于系统出现故障，处理用户请求的时间变为 3 s。 </li><li><strong>系统功能上的损失：</strong>正常情况下，用户可以使用系统的全部功能，但是由于系统访问量突然剧增， 系统的部分非核心功能无法使用。</li><li><strong>软状态：</strong>数据同步允许一定的延迟</li><li><strong>最终一致性：</strong>系统中所有的数据副本，在经过一段时间的同步后，最终能够达到一个一致的状态，不要求实时</li></ul></li></ol><h2 id="2、负载均衡算法、类型"><a href="#2、负载均衡算法、类型" class="headerlink" title="2、负载均衡算法、类型"></a>2、负载均衡算法、类型</h2><ol><li><strong>轮询法：</strong>将请求按顺序轮流地分配到后端服务器上，<strong>它均衡地对待后端的每一台服务器</strong>，而不关心服务器实际的连接数和当前的系统负载。</li><li><strong>随机法：</strong>通过系统的随机算法，<strong>根据后端服务器的列表大小值来随机选取其中的一台服务器进行访问</strong>。由概率统计理论可以得知，随着客户端调用服务端的次数增多， 其<strong>实际效果</strong>越来越接近于平均分配调用量到后端的每一台服务器，也就是<strong>轮询的结果。</strong></li><li><strong>源地址哈希法：</strong>源地址哈希的思想是<strong>根据获取客户端的IP地址，通过哈希函数计算得到的一个数值，用该数值对服务器列表的大小进行取模运算，得到的结果便是客服端要访问服务器的序号。</strong>采用源地址哈希法进行负载均衡，同一IP地址的客户端，当后端服务器列表不变时，它每次都会映射到同一台后端服务器进行访问。</li><li><strong>加权轮询法：</strong>不同的后端服务器可能机器的配置和当前系统的负载并不相同，因此它们的抗压能力也不相同。<strong>给配置高、负载低的机器配置更高的权重，让其处理更多的请求；而配置低、负载高的机器，给其分配较低的权重，降低其系统负载</strong>，加权轮询能很好地处理这一问题，并将请求顺序且按照权重分配到后端。</li><li><strong>加权随机法：</strong>与加权轮询法一样，<strong>加权随机法也根据后端机器的配置，系统的负载分配不同的权重。</strong>不同的是，它是 按照权重随机请求后端服务器，而非顺序</li><li><strong>最小连接数法：</strong>最小连接数算法比较灵活和智能，由于后端服务器的配置不尽相同，对于请求的处理有快有慢，它是<strong>根据后端服务器当前的连接情况，动态地选取其中当前积压连接数最少的一台服务器来处理当前的请求</strong>，尽可能地提高后端服务的利用效率，将负责合理地分流到每一台服务器。</li><li><strong>类型：</strong><ul><li>DNS 方式实现负载均衡</li><li>硬件负载均衡：F5 和 A10</li><li>软件负载均衡：<ul><li><strong>Nginx ：</strong> <strong>七层</strong>负载均衡，支持 HTTP、E-mail 协议，同时也支持 <strong>4 层</strong>负载均衡； </li><li><strong>HAproxy ：</strong>支持<strong>七层</strong>规则的，性能也很不错。OpenStack 默认使用的负载均衡软件就是 HAproxy； </li><li><strong>LVS ：</strong>运行在内核态，性能是软件负载均衡中最高的，严格来说工作在<strong>三层</strong>，所以更通用一些， <strong>适用各种应用服务。</strong></li></ul></li></ul></li></ol><h2 id="3、分布式架构下，Session-共享有什么方案"><a href="#3、分布式架构下，Session-共享有什么方案" class="headerlink" title="3、分布式架构下，Session 共享有什么方案"></a>3、分布式架构下，Session 共享有什么方案</h2><ol><li><strong>采用无状态服务</strong>，抛弃session</li><li><strong>存入cookie</strong>（有安全风险）</li><li><strong>服务器之间进行 Session 同步</strong>，这样可以保证每个服务器上都有全部的 Session 信息，不过当服务器数量比较多的时候，同步是会有延迟甚至同步失败； </li><li><strong>IP 绑定策略</strong>：使用 Nginx （或其他复杂均衡软硬件）中的 IP 绑定策略，同一个 IP 只能在指定的同一个机器访问，但 是这样做失去了负载均衡的意义，当挂掉一台服务器的时候，会影响一批用户的使用，风险很大；</li><li><strong>使用 Redis 存储：</strong>把 Session 放到 Redis 中存储，虽然架构上变得复杂，并且需要多访问一次 Redis ，但是这种方案带来 的好处也是很大的。<ul><li><strong>实现了 Session 共享</strong>； </li><li><strong>可以水平扩展</strong>（增加 Redis 服务器）； </li><li><strong>服务器重启 Session 不丢失</strong>（不过也要注意 Session 在 Redis 中的刷新&#x2F;失效机制）； </li><li>不仅可以跨服务器 Session 共享，<strong>甚至可以跨平台</strong>（例如网页端和 APP 端）。</li></ul></li></ol><h2 id="4、简述你对RPC、RMI的理解"><a href="#4、简述你对RPC、RMI的理解" class="headerlink" title="4、简述你对RPC、RMI的理解"></a>4、简述你对RPC、RMI的理解</h2><ol><li><strong>RPC：</strong>在本地调用远程的函数，远程过程调用，可以跨语言实现 httpClient</li><li><strong>RMI：</strong>远程方法调用，java中用于实现RPC的一种机制，RPC的java版本，是J2EE的网络调用机制，跨 JVM调用对象的方法，面向对象的思维方式</li><li>直接或间接实现接口 java.rmi.Remote 成为存在于服务器端的远程对象，供客户端访问并提供一定的服务</li><li>远程对象<strong>必须实现</strong>java.rmi.server.UniCastRemoteObject<strong>类</strong>，这样才能保证客户端访问获得远程对象时，该远程对象将会把自身的一个拷贝以Socket的形式传输给客户端，此时客户端所获得的这个拷贝称 为“存根”，而服务器端本身已存在的远程对象则称之为“骨架”。其实此时的存根是客户端的一个代理， 用于与服务器端的通信，而骨架也可认为是服务器端的一个代理，用于接收客户端的请求之后调用远程 方法来响应客户端的请求。</li></ol><h2 id="5、分布式id生成方案"><a href="#5、分布式id生成方案" class="headerlink" title="5、分布式id生成方案"></a>5、分布式id生成方案</h2><ol><li><strong>uuid：</strong><ul><li><strong>优点：</strong>代码简单，性能好（本地生成，没有网络消耗），保证唯一（相对而言，重复概率极低可以忽略）</li><li><strong>缺点：</strong><ul><li>每次生成的ID都是无序的，而且不是全数字，且无法保证趋势递增。</li><li>UUID生成的是字符串，字符串存储性能差，查询效率慢，写的时候由于<strong>不能产生顺序的append操作，需要进 行insert操作</strong>，导致频繁的页分裂，这种操作在记录占用空间比较大的情况下，性能下降比较大，还会增加读取磁盘次数</li><li>UUID长度过长，不适用于存储，耗费数据库性能。 </li><li>ID无一定业务含义，可读性差。 </li><li>有信息安全问题，有可能泄露mac地址</li></ul></li></ul></li><li><strong>数据库自增序列：</strong><ul><li><strong>单机模式优点：</strong><ul><li>实现简单，依靠数据库即可，成本小。 </li><li>ID数字化，单调自增，满足数据库存储和查询性能。 </li><li>具有一定的业务可读性。（结合业务code）</li></ul></li><li><strong>单机模式缺点：</strong><ul><li><strong>强依赖DB</strong>，存在单点问题，如果数据库宕机，则业务不可用。 </li><li><strong>DB生成ID性能有限</strong>，单点数据库压力大，无法扛高并发场景。 </li><li><strong>信息安全问题</strong>，比如暴露订单量，url查询改一下id查到别人的订单</li></ul></li><li>数据库高可用：<strong>多主模式做负载</strong>，基于序列的起始值和步长设置，不同的初始值，相同的步长，步长大于节点数<ul><li><strong>优点：</strong> 解决了ID生成的单点问题，同时平衡了负载。</li><li><strong>缺点：</strong> <strong>系统扩容困难：</strong>系统定义好步长之后，增加机器之后调整步长困难。 <strong>数据库压力大：</strong>每次获取一个ID都必须读写一次数据库。 <strong>主从同步的时候：</strong>电商下单-&gt;支付insert master db select数据 ，因为数据同步延迟导致查不到这个数据。<strong>加cache</strong>(不是最好的解决方式)数据要求比较严谨的话查master主库。</li></ul></li><li><strong>Leaf-segment：</strong><ul><li><strong>采用每次获取一个ID区间段的方式来解决</strong>，区间段用完之后再去数据库获取新的号段，这样一来可以大大减轻数据库的压力</li><li><strong>核心字段：</strong>biz_tag，max_id，step</li><li><strong>biz_tag</strong>用来区分业务，<strong>max_id</strong>表示该<strong>biz_tag</strong>目前所被分配的ID号段的最大值，<strong>step</strong>表示每次分配的号段长度，原来每次获取ID都要访问数据库，现在只需要把Step设置的足够合理如1000，那么现在可以在1000个ID用完之后再去访问数据库</li><li><strong>优点：</strong><ul><li>扩张灵活，性能强能够撑起大部分业务场景。 </li><li>ID号码是趋势递增的，满足数据库存储和查询性能要求。 </li><li>可用性高，即使ID生成服务器不可用，也能够使得业务在短时间内可用，为排查问题争取时间。</li></ul></li><li><strong>缺点：</strong><ul><li>可能存在多个节点同时请求ID区间的情况，依赖DB</li></ul></li><li><strong>双buffer：</strong>将获取一个号段的方式优化成获取两个号段，<strong>在一个号段用完之后不用立马去更新号段，还有一个缓存号段备用</strong>，这样能够有效解决这种冲突问题，而且采用双buffer的方式，<strong>在当前号段消耗了 10%的时候就去检查下一个号段有没有准备好，如果没有准备好就去更新下一个号段，当当前号段用完了就切换到下一个已经缓存好的号段去使用</strong>，同时在下一个号段消耗到10%的时候，又去检测下一个号段有没有准备好，如此往复。</li><li><strong>优点：</strong><ul><li>基于JVM存储双buffer的号段，减少了数据库查询，减少了网络依赖，效率更高。</li></ul></li><li><strong>缺点：</strong><ul><li><strong>segment号段长度是固定的</strong>，业务量大时可能会频繁更新号段，因为原本分配的号段会一下用完 </li><li><strong>如果号段长度设置的过长</strong>，但凡缓存中有号段没有消耗完，<strong>其他节点重新获取的号段与之前相比可能跨度会很大</strong>。动态调整Step</li></ul></li><li>基于redis、mongodb、zk等中间件生成</li><li><strong>雪花算法：</strong><ul><li>生成一个64bit的整性数字 </li><li><strong>第一位符号位固定为0</strong>，41位时间戳，10位workId，12位序列号 </li><li>位数可以有不同实现</li><li><strong>优点：</strong><ul><li>每个毫秒值包含的ID值很多<strong>，不够可以变动位数</strong>来增加，性能佳（依赖workId的实现）。 </li><li>时间戳值在高位，中间是固定的机器码，自增的序列在低位，<strong>整个ID是趋势递增的。</strong> </li><li>能够根据业务场景数据库节点布置灵活挑战bit位划分，灵活度高。</li></ul></li><li><strong>缺点：</strong><ul><li><strong>强依赖于机器时钟</strong>，如果时钟回拨，会导致重复的ID生成，所以一般基于此的算法发现时钟回拨， 都会抛异常处理，阻止ID生成，<strong>这可能导致服务不可用。</strong></li></ul></li></ul></li></ul></li></ul></li></ol><h2 id="6、分布式锁解决方案"><a href="#6、分布式锁解决方案" class="headerlink" title="6、分布式锁解决方案"></a>6、分布式锁解决方案</h2><ol><li><strong>需要这个锁独立于每一个服务之外，而不是在服务里面</strong>。 </li><li><strong>数据库：</strong> <strong>利用主键冲突控制一次只有一个线程能获取锁</strong>，非阻塞、不可重入、单点、失效时间 </li><li><strong>Zookeeper分布式锁：</strong>zk通过临时节点，解决了死锁的问题，一旦客户端获取到锁之后突然挂掉（Session连接断开），那么这个临时节点就会自动删除掉，其他客户端自动获取锁。<strong>临时顺序节点解决惊群效应</strong></li><li>Redis分布式锁：setNX，单线程处理网络请求，不需要考虑并发安全性 ；所有服务节点设置相同的key，返回为0、则锁获取失败</li><li><strong>setnx 问题：</strong><ul><li><strong>早期版本</strong>没有超时参数，需要单独设置，<strong>存在死锁问题</strong>（中途宕机） </li><li><strong>后期版本</strong>提供加锁与设置时间原子操作，但是存在任务超时，锁自动释放，导致并发问题，<strong>加锁与释放锁不是同一线程问题</strong></li></ul></li><li>删除锁：判断线程唯一标志，再删除 </li><li>可重入性及锁续期没有实现，通过redisson解决（类似AQS的实现，看门狗监听机制）</li><li><strong>redlock：</strong>意思的机制都只操作单节点、即使Redis通过sentinel保证高可用，如果这个master节点由于某些原因发生了主从切换，那么就会出现锁丢失的情况（redis同步设置可能数据丢失）。<strong>redlock从多个节点申请锁，当一半以上节点获取成功、锁才算获取成功</strong>，redission有相应的实现</li></ol><h2 id="7、分布式事务解决方案"><a href="#7、分布式事务解决方案" class="headerlink" title="7、分布式事务解决方案"></a>7、分布式事务解决方案</h2><ol><li><strong>XA规范：</strong>分布式事务规范，定义了分布式事务模型 </li><li><strong>四个角色：</strong>事务管理器(协调者TM)、资源管理器(参与者RM)，应用程序AP，通信资源管理器CRM </li><li><strong>全局事务：</strong>一个横跨多个数据库的事务，要么全部提交、要么全部回滚 </li><li>JTA事务时java对XA规范的实现，对应JDBC的单库事务</li><li>两阶段协议：</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304212001664.png"                      alt="image-20230421200058343"                ></p><ol start="6"><li>第一阶段（ prepare ） ：每个参与者执行本地事务但不提交，进入 ready 状态，并通知协调者已经准备就绪。</li><li>第二阶段（ commit ） 当协调者确认每个参与者都 ready 后，通知参与者进行 commit 操作；如果有参与者 fail ，则发送 rollback 命令，各参与者做回滚。</li><li>问题：<ul><li><strong>单点故障：</strong>一旦事务管理器出现故障，整个系统不可用（参与者都会阻塞住） </li><li><strong>数据不一致：</strong>在阶段二，如果事务管理器只发送了部分 commit 消息，此时网络发生异常，那么只有部分参与者接收到 commit 消息，也就是说只有部分参与者提交了事务，使得系统数据不一 致。 </li><li><strong>响应时间较长：</strong>参与者和协调者资源都被锁住，提交或者回滚之后才能释放 </li><li><strong>不确定性：</strong>当协事务管理器发送 commit 之后，并且此时只有一个参与者收到了 commit，那么当该参与者与事务管理器同时宕机之后，重新选举的事务管理器无法确定该条消息是否提交成功。</li></ul></li><li>三阶段协议：主要是针对两阶段的优化，解决了2PC单点故障的问题，但是性能问题和不一致问题仍然 没有根本解决</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304212030900.png"                      alt="image-20230421203043738"                ></p><ol start="9"><li>引入了超时机制解决参与者阻塞的问题，超时后本地提交，2pc只有协调者有超时机制<ul><li>第一阶段：CanCommit阶段，<strong>协调者询问事务参与者，是否有能力完成此次事务。</strong><ul><li>如果都返回yes，则进入第二阶段 </li><li>有一个返回no或等待响应超时，则中断事务，并向所有参与者发送abort请求</li></ul></li><li>第二阶段：PreCommit阶段，此时协调者会向所有的参与者发送PreCommit请求，<strong>参与者收到后开始执行事务操作</strong>。参与者<strong>执行完事务操作后</strong>（此时属于未提交事务的状态），就会向协调者<strong>反馈 “Ack”表示我已经准备好提交了</strong>，并等待协调者的下一步指令。</li><li>第三阶段：DoCommit阶段， 在阶段二中如果所有的参与者节点都返回了Ack，那么<strong>协调者就会从 “预提交状态”转变为“提交状态”。</strong>然后向所有的参与者节点发送”doCommit”请求，参与者节点在收到提交请求后就会各自执行事务提交操作，并向协调者节点反馈“Ack”消息，协调者收到所有参与者的Ack消息后完成事务。 <strong>相反，如果有一个参与者节点未完成PreCommit的反馈或者反馈超时</strong>，那么协调者都会向所有的参与者节点发送abort请求，从而中断事务。</li></ul></li><li>TCC（补偿事务）：Try、Confirm、Cancel</li><li>针对每个操作，都要注册一个与其对应的确认和补偿（撤销）操作</li><li><strong>Try操作做业务检查及资源预留</strong>，<strong>Confirm做业务确认操作</strong>，<strong>Cancel实现一个与Try相反的操作既回滚操作</strong>。TM首先发起所有的分支事务的try操作，任何一个分支事务的try操作执行失败，TM将会发起所有分支事务的Cancel操作，若try操作全部成功，TM将会发起所有分支事务的Confirm操作，其中 <strong>Confirm&#x2F;Cancel</strong>操作若<strong>执行失败</strong>，<strong>TM会进行重试</strong>。</li><li>TCC模型对业务的侵入性较强，改造的难度较大，<strong>每个操作都需要有 try 、 confirm 、 cancel 三个接 口实现</strong></li><li>confirm 和 cancel 接口还必须实现<strong>幂等性</strong>。</li><li><strong>消息队列的事务消息：</strong><ul><li>发送prepare消息到消息中间件 </li><li>发送成功后，执行本地事务<ul><li>如果事务执行成功，则commit，消息中间件将消息下发至消费端（commit前，消息不会被 消费） </li><li>如果事务执行失败，则回滚，消息中间件将这条prepare消息删除</li></ul></li><li>消费端接收到消息进行消费，如果消费失败，则不断重试</li></ul></li></ol><h2 id="8、如何实现接口的幂等性"><a href="#8、如何实现接口的幂等性" class="headerlink" title="8、如何实现接口的幂等性"></a>8、如何实现接口的幂等性</h2><ol><li><strong>唯一id</strong>。每次操作，都根据操作和内容生成唯一的id，在执行之前先判断id是否存在，如果不存在则执行后续操作，并且保存到数据库或者redis等。 </li><li>服务端提供发送token的接口，<strong>业务调用接口前先获取token,然后调用业务接口请求时，把token 携带过去</strong>,务器判断token是否存在redis中，存在表示第一次请求，可以继续执行业务，<strong>执行业务完成后，最后需要把redis中的token删除</strong></li><li><strong>建去重表</strong>。将业务中有唯一标识的字段保存到去重表，如果表中存在，则表示已经处理过了 </li><li><strong>版本控制</strong>。增加版本号，当版本号符合时，才能更新数据 </li><li><strong>状态控制</strong>。例如订单有状态已支付 未支付 支付中 支付失败，当处于未支付的时候才允许修改为支付中等</li></ol><h2 id="9、简述ZAB协议"><a href="#9、简述ZAB协议" class="headerlink" title="9、简述ZAB协议"></a>9、简述ZAB协议</h2><ol><li>ZAB协议是<strong>为分布式协调服务 Zookeeper 专门设计的一种支持崩溃恢复的原子广播协议</strong>，实现分布式数据一致性</li><li>所有客户端的请求都是写入到 Leader 进程中，然后，由 Leader 同步到其他节点，称为 Follower。<strong>在集群数据同步的过程中，如果出现 Follower 节点崩溃或者 Leader 进程崩溃时，都会通过 Zab 协议来保证数据一致性</strong></li><li>ZAB 协议包括两种基本的模式：<strong>崩溃恢复和消息广播。</strong></li><li><strong>消息广播：</strong><ul><li><strong>集群中所有的事务请求都由 Leader 节点来处理，其他服务器为 Follower</strong>，Leader 将客户端的事务请求转换为事务 Proposal，并且将 Proposal 分发给集群中其他所有的 Follower。 </li><li><strong>完成广播之后，Leader 等待 Follwer 反馈</strong>，当有过半数的 Follower 反馈信息后，Leader 将再次向集群内 Follower 广播 Commit 信息，<strong>Commit 信息就是确认将之前的 Proposal 提交。</strong> </li><li>Leader 节点的写入是一个两步操作，<strong>第一步是广播事务操作，第二步是广播提交操作</strong>，其中过半数指的是反馈的节点数 &gt;&#x3D;N&#x2F;2+1，N 是全部的 Follower 节点数量。</li></ul></li><li><strong>崩溃恢复：</strong><ul><li><strong>初始化集群，刚刚启动的时候</strong> </li><li><strong>Leader 崩溃，因为故障宕机</strong> </li><li><strong>Leader 失去了半数的机器支持，与集群中超过一半的节点断连</strong></li><li>此时开启新一轮 <strong>Leader</strong> 选举，选举产生的 Leader 会与过半的 Follower 进行同步，使数据一致，当与过半的机器同步完成后，就退出恢复模式， 然后进入消息广播模式</li></ul></li><li><strong>整个 ZooKeeper 集群的一致性保证就是在上面两个状态之前切换</strong>，当 Leader 服务正常时，就是正常的消息广播模式；当 Leader 不可用时，则进入崩溃恢复模式，崩溃恢复阶段会进行数据同步，完成以后，重新进入消息广播阶段。</li><li><strong>Zxid 是 Zab 协议的一个事务编号</strong>，Zxid 是一个 64 位的数字，其中低 32 位是一个简单的单调递增计数器，针对客户端每一个事务请求，计数器加 1；而高 32 位则代表 Leader 周期年代的编号。</li><li><strong>Leader 周期（ epoch）</strong>，可以理解为<strong>当前集群所处的年代或者周期</strong>，每当有一个新的 Leader 选举出现时，就会从这个 Leader 服务器上取出其本地日志中最大事务的 Zxid，并从中读取 epoch 值，然后加 1，以此作为新的周期 ID。高 32 位代表了每代 Leader 的唯一性，低 32 位则代表了每代 Leader 中 事务的唯一性。</li><li><strong>zab节点的三种状态：</strong><ul><li><strong>following：</strong>服从leader的命令 </li><li><strong>leading：</strong>负责协调事务 </li><li><strong>election&#x2F;looking：</strong>选举状态</li></ul></li></ol><h2 id="10、zk的数据模型和节点类型"><a href="#10、zk的数据模型和节点类型" class="headerlink" title="10、zk的数据模型和节点类型"></a>10、zk的数据模型和节点类型</h2><ol><li>数据模型：<strong>树形结构</strong></li><li>zk维护的数据主要有：<strong>客户端的会话（session）状态及数据节点（dataNode）信息。</strong></li><li>zk在内存中构造了个DataTree的数据结构，维护着path到dataNode的映射以及dataNode间的树状层级关系。<strong>为了提高读取性能，集群中每个服务节点都是将数据全量存储在内存中</strong>。所以，zk最适于读多写少且轻量级数据的应用场景。</li><li>数据仅存储在内存是很不安全的，<strong>zk采用事务日志文件及快照文件的方案来落盘数据</strong>，保障数据在不丢失的情况下能快速恢复。</li><li><strong>树中的每个节点被称为— Znode</strong></li><li><strong>Znode 兼具文件和目录两种特点</strong>。可以做路径标识，也可以存储数据，并可以具有子 Znode。具有 增、删、改、查等操作。</li><li><strong>Znode 具有原子性操作</strong>，<strong>读操作将获取与节点相关的所有数据，写操作也将替换掉节点的所有数据</strong>。 另外，<strong>每一个节点都拥有自己的 ACL</strong>(访问控制列表)，这个列表规定了用户的权限，即限定了特定用户对目标节点可以执行的操作</li><li><strong>Znode 存储数据大小有限制</strong>。每个 Znode 的数据大小至多 1M，常规使用中应该远小于此值。</li><li>Znode 通过路径引用，如同 Unix 中的文件路径。路径必须是绝对的，因此他们必须由斜杠字符来开头。除此以外，他们必须是唯一的，也就是说<strong>每一个路径只有一个表示</strong>，因此这些路径不能改变。在 ZooKeeper 中，路径由 Unicode 字符串组成，并且有一些限制。<strong>字符串”&#x2F;zookeeper”用以保存管理信息</strong>，比如关键配额信息。</li><li><strong>持久节点：</strong>一旦创建、该数据节点会一直存储在zk服务器上、即使创建该节点的客户端与服务端的会话关闭了、该节点也不会被删除</li><li><strong>临时节点：</strong>当创建该节点的客户端会话因超时或发生异常而关闭时、该节点也相应的在zk上被删除 。</li><li><strong>有序节点：</strong>不是一种单独种类的节点、而是在持久节点和临时节点的基础上、增加了一个节点有序的性质 。</li></ol><h2 id="11、简述zk的命名服务、配置管理、集群管理"><a href="#11、简述zk的命名服务、配置管理、集群管理" class="headerlink" title="11、简述zk的命名服务、配置管理、集群管理"></a>11、简述zk的命名服务、配置管理、集群管理</h2><ol><li><strong>命名服务：</strong> 通过<strong>指定的名字来获取资源或者服务地址</strong>。<strong>Zookeeper可以创建一个全局唯一的路径，这个路径就可以作为一个名字</strong>。被命名的实体可以是集群中的机器，服务的地址，或者是远程的对象等。一些分布式服务框架（RPC、RMI）中的服务地址列表，通过使用命名服务，客户端应用能够根据特定的名字来获取资源的实体、服务地址和提供者信息等</li><li><strong>配置管理：</strong>实际项目开发中，<strong>经常使用.properties或者xml需要配置很多信息</strong>，如数据库连接信息、fps地址端口等等。程序分布式部署时，如果把程序的这些配置信息保存在zk的znode节点下，当你要修改配置，即 znode会发生变化时，<strong>可以通过改变zk中某个目录节点的内容，利用watcher通知给各个客户端，从而更改配置。</strong></li><li><strong>集群管理：</strong>集群管理包括<strong>集群监控和集群控制</strong>，就是监控集群机器状态，剔除机器和加入机器。zookeeper可以方便集群机器的管理，它<strong>可以实时监控znode节点的变化</strong>，一旦发现有机器挂了，该机器就会与zk断开连 接，对应的临时目录节点会被删除，<strong>其他所有机器都收到通知</strong>。新机器加入也是类似。</li></ol><h2 id="12、讲下Zookeeper-watch机制"><a href="#12、讲下Zookeeper-watch机制" class="headerlink" title="12、讲下Zookeeper watch机制"></a>12、讲下Zookeeper watch机制</h2><ol><li><strong>客户端</strong>，可以通过在znode上设置watch，实现实时监听znode的变化</li><li><strong>Watch事件是一个一次性的触发器</strong>，当被设置了Watch的数据发生了改变的时候，则服务器将这个改变发送给设置了Watch的客户端<ul><li><strong>父节点的创建，修改，删除</strong>都会触发Watcher事件。 </li><li><strong>子节点的创建，删除</strong>会触发Watcher事件。</li></ul></li><li><strong>一次性：一旦被触发就会移除，再次使用需要重新注册</strong>，因为每次变动都需要通知所有客户端，一次性可以减轻压力，3.6.0默认持久递归，可以触发多次</li><li><strong>轻量：只通知发生了事件，不会告知事件内容</strong>，减轻服务器和带宽压力</li><li><strong>Watcher 机制包括三个角色：</strong>客户端线程、客户端的 WatchManager 以及 ZooKeeper 服务器<ul><li>客户端向 ZooKeeper 服务器<strong>注册一个 Watcher 监听</strong>，</li><li>把这个监听信息<strong>存储到客户端的 WatchManager</strong> 中 </li><li>当 ZooKeeper 中的节点发生变化时，会通知客户端，客户端会调用相应 Watcher 对象中的回调方法。<strong>watch回调是串行同步的</strong></li></ul></li></ol><h2 id="13、zk和eureka的区别"><a href="#13、zk和eureka的区别" class="headerlink" title="13、zk和eureka的区别"></a>13、zk和eureka的区别</h2><ol><li><strong>zk：</strong>CP设计(强一致性)，目标是一个分布式的协调系统，<strong>用于进行资源的统一管理。</strong>当节点crash后，需要进行<strong>leader的选举，在这个期间内，zk服务是不可用的</strong>。</li><li>eureka：AP设计（高可用），目标是一个服务注册发现系统，<strong>专门用于微服务的服务发现注册。</strong></li><li><strong>Eureka各个节点都是平等的，几个节点挂掉不会影响正常节点的工作，剩余的节点依然可以提供注册和查询服务</strong>。而Eureka的客户端在向某个Eureka注册时如果发现连接失败，会自动切换至其他节点，只要有一台Eureka还在，就能保证注册服务可用（<strong>保证可用性</strong>），只不过查到的信息可能不是最新的（<strong>不保证强一致性</strong>）</li><li>同时当eureka的服务端发现85%以上的服务都没有心跳的话，它就会认为自己的网络出了问题，就不会从服务列表中删除这些失去心跳的服务，<strong>同时eureka的客户端也会缓存服务信息</strong>。eureka对于服务注册发现来说是非常好的选择。</li></ol><h2 id="14、Spring-Cloud和Dubbo的区别"><a href="#14、Spring-Cloud和Dubbo的区别" class="headerlink" title="14、Spring Cloud和Dubbo的区别"></a>14、Spring Cloud和Dubbo的区别</h2><ol><li>底层协议：<strong>springcloud基于http协议，dubbo基于Tcp协议</strong>，决定了dubbo的性能相对会比较好</li><li>注册中心：Spring Cloud 使用的 eureka ，dubbo推荐使用zookeeper </li><li>模型定义：<strong>dubbo 将一个接口定义为一个服务，SpringCloud 则是将一个应用定义为一个服务</strong> </li><li>SpringCloud是一个生态，而Dubbo是SpringCloud生态中关于服务调用一种解决方案（服务治理）</li></ol><h2 id="15、什么是Hystrix？简述实现机制"><a href="#15、什么是Hystrix？简述实现机制" class="headerlink" title="15、什么是Hystrix？简述实现机制"></a>15、什么是Hystrix？简述实现机制</h2><ol><li><strong>分布式容错框架：</strong><ul><li>阻止故障的连锁反应，<strong>实现熔断</strong> </li><li>快速失败，<strong>实现优雅降级</strong> </li><li><strong>提供实时的监控和告警</strong></li></ul></li><li><strong>资源隔离：线程隔离，信号量隔离</strong><ul><li><strong>线程隔离：</strong>Hystrix会给每一个Command分配一个单独的线程池，这样在进行单个服务调用的时 候，就可以在独立的线程池里面进行，而不会对其他线程池造成影响</li><li><strong>信号量隔离：</strong>客户端需向依赖服务发起请求时，首先要获取一个信号量才能真正发起调用，由于信号量的数量有限，当并发请求量超过信号量个数时，后续的请求都会直接拒绝，进入fallback流 程。<strong>信号量隔离主要是通过控制并发请求量，防止请求线程大面积阻塞，从而达到限流和防止雪崩的目的。</strong></li></ul></li><li><strong>熔断和降级：调用服务失败后快速失败</strong><ul><li><strong>熔断是为了防止异常不扩散</strong>，保证系统的稳定性</li><li><strong>降级：</strong>编写好调用失败的补救逻辑，然后<strong>对服务直接停止运行</strong>，这样这些接口就无法正常调用，但又不至于直接报错，只是服务水平下降</li><li>通过HystrixCommand 或者HystrixObservableCommand 将所有的外部系统（或者称为依赖） 包装起来<strong>，整个包装对象是单独运行在一个线程之中</strong>（这是典型的命令模式）。</li><li><strong>超时请求应该超过你定义的阈值</strong></li><li><strong>为每个依赖关系维护一个小的线程池（或信号量）</strong>; 如果它变满了，那么依赖关系的请求将立即被拒绝，而不是排队等待。</li><li>统计成功，失败（由客户端抛出的异常），超时和线程拒绝。</li><li><strong>打开断路器可以在一段时间内停止对特定服务的所有请求</strong>，如果服务的错误百分比通过阈值，手动或自动的关闭断路器。</li><li><strong>当请求被拒绝、连接超时或者断路器打开，直接执行fallback逻辑。</strong></li><li>近乎实时监控指标和配置变化。</li></ul></li></ol><h2 id="16、springcloud核心组件及其作用"><a href="#16、springcloud核心组件及其作用" class="headerlink" title="16、springcloud核心组件及其作用"></a>16、springcloud核心组件及其作用</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304221805274.png"                      alt="image-20230422180531945"                ></p><ol><li><strong>Eureka：服务注册与发现</strong><ul><li><strong>注册：</strong>每个服务都向Eureka登记自己提供服务的元数据，包括服务的ip地址、端口号、版本号、通信协议等。<strong>eureka将各个服务维护在了一个服务清单中</strong>（<strong>双层Map，第一层key是服务名，第二层key是实例名，value是服务地址加端口</strong>）。同时对服务维持心跳，剔除不可用的服务，eureka集群各节点相互注册每个实例中都有一样的服务清单。</li><li><strong>发现：</strong>eureka注册的服务之间调用不需要指定服务地址，而是<strong>通过服务名向注册中心咨询，并获取所有服务实例清单(缓存到本地)，然后实现服务的请求访问。</strong></li></ul></li><li><strong>Ribbon：</strong>服务间发起请求的时候，<strong>基于Ribbon做负载均衡</strong>，从⼀个服务的多台机器中选择⼀台 （被调用方的服务地址有多个），Ribbon也是通过发起http请求，来进行的调用，只不过是<strong>通过调用服务名的地址来实现的</strong>。虽然说Ribbon<strong>不用去具体请求服务实例的ip地址或域名</strong>了，但是<strong>每调用一个接口都还要手动去发起Http请求</strong></li><li><strong>Feign：</strong>基于Feign的动态代理机制，<strong>根据注解和选择的机器，拼接请求URL地址，发起请求 ，简化服务间的调用，在Ribbon的基础上进行了进一步的封装。</strong>单独抽出了一个组件，就是Spring Cloud Feign。 在引入Spring Cloud Feign后，我们<strong>只需要创建一个接口并用注解的方式来配置它，即可完成对服务提供方的接口绑定。</strong></li><li>调用远程就像调用本地服务一样</li><li><strong>Hystrix：</strong>发起请求是通过Hystrix的线程池来⾛的，不同的服务⾛不同的线程池，实现了不同服务调⽤的隔离，<strong>通过统计接口超时次数返回默认值，实现服务熔断和降级</strong></li><li><strong>Zuul：</strong>如果前端、移动端要调⽤后端系统，统⼀从Zuul⽹关进⼊，由Zuul⽹关转发请求给对应的服务， 通过与Eureka进行整合，将自身注册为Eureka下的应用，<strong>从Eureka下获取所有服务的实例，来进行服务的路由</strong>。Zuul还提供了一套过滤器机制，开发者可以自己指定哪些规则的请求需要执行校验逻辑，<strong>只有通过校验逻辑的请求才会被路由到具体服务实例上</strong>，否则返回错误提示。</li></ol><h2 id="17、Dubbo-的整体架构设计及分层"><a href="#17、Dubbo-的整体架构设计及分层" class="headerlink" title="17、Dubbo 的整体架构设计及分层"></a>17、Dubbo 的整体架构设计及分层</h2><ol><li>五个角色：<ul><li>注册中心registry：服务注册与发现 </li><li>服务提供者provider：暴露服务 </li><li>服务消费者consumer：调用远程服务 </li><li>监控中心monitor：统计服务的调用次数和调用时间 </li><li>容器container：服务允许容器</li></ul></li><li><strong>调用流程：</strong><ul><li>container容器负责启动、加载、运行provider </li><li>provider在启动时，向regisitry中心注册自己提供的服务 </li><li>consumer在启动时，向regisitry中心订阅自己所需的服务 </li><li>regisitry返回服务提供者列表给consumer，如果有变更，registry将基于长连接推送变更数据给 consumer </li><li>consumer调用provider服务，基于负载均衡算法进行调用 </li><li>consumer调用provider的统计，基于短链接定时每分钟一次统计到monitor</li></ul></li><li><strong>分层：</strong><ul><li>接口服务层（ Service）：面向开发者，业务代码、接口、实现等 </li><li>配置层（ Config）：对外配置接口，以 ServiceConfig 和 ReferenceConfig 为中心</li><li>服务代理层（ Proxy）：对生产者和消费者、dubbo都会产生一个代理类封装调用细节，业务层对远程调用无感 </li><li>服务注册层（ Registry） ： 封装服务地址的注册和发现， 以服务 URL 为中心 </li><li>路由层（ Cluster） ： 封装多个提供者的路由和负载均衡， 并桥接注册中心 </li><li>监控层（ Monitor） ： RPC 调用次数和调用时间监控 </li><li>远程调用层（ Protocal）：封装 RPC 调用 </li><li>信息交换层（ Exchange）： 封装请求响应模式， 同步转异步</li><li>网络传输层（ Transport）：抽象 mina 和 netty 为统一接口，统一网络传输接口 </li><li>数据序列化层（ Serialize） ： 数据传输的序列化和反序列化</li></ul></li></ol><h1 id="十、MQ"><a href="#十、MQ" class="headerlink" title="十、MQ"></a>十、MQ</h1><h2 id="1、简述RabbitMQ的架构设计"><a href="#1、简述RabbitMQ的架构设计" class="headerlink" title="1、简述RabbitMQ的架构设计"></a>1、简述RabbitMQ的架构设计</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304221905320.png"                      alt="image-20230422190530065"                ></p><ol><li><strong>Broker：</strong>rabbitmq的服务节点</li><li><strong>Queue：</strong>队列，是RabbitMQ的内部对象，用于存储消息。<strong>RabbitMQ中消息只能存储在队列中</strong>。生产者投递消息到队列，消费者从队列中获取消息并消费。<strong>多个消费者可以订阅同一个队列</strong>，这时队列中的消息会被平均分摊(轮询)给多个消费者进行消费，而<strong>不是每个消费者都收到所有的消息进行消费</strong>。(注意：RabbitMQ<strong>不支持队列层面的广播消费</strong>，如果需要广播消费，可以采用一个交换器通过路由Key绑定多个队列，由多个消费者来订阅这些队列的方式。</li><li><strong>Exchange：</strong>交换器。生产者将消息发送到Exchange，由交换器将消息路由到一个或多个队列中。如果路由不到，或返回给生产者，或直接丢弃，或做其它处理。</li><li><strong>RoutingKey：</strong>路由Key。生产者将消息发送给交换器的时候，一般会指定一个RoutingKey，用来指定这个消息的路由规则。这个<strong>路由Key需要与交换器类型和绑定键(BindingKey)联合使用才能最终生效</strong>。 在交换器类型和绑定键固定的情况下，<strong>生产者可以在发送消息给交换器时通过指定RoutingKey来决定消息流向哪里</strong>。</li><li><strong>Binding：</strong>通过绑定将交换器和队列关联起来，在绑定的时候一般会指定一个绑定键，这样RabbitMQ 就<strong>可以指定如何正确的路由到队列了。</strong></li><li><strong>交换器和队列实际上是多对多关系</strong>。就像关系数据库中的两张表。他们通过BindingKey做关联(多对多关系表)。在投递消息时，可以通过Exchange和RoutingKey(对应BindingKey)就可以找到相对应的队列。</li><li><strong>信道：</strong>信道是建立在Connection 之上的虚拟连接。当应用程序与Rabbit Broker建立TCP连接的时候， 客户端紧接着可以创建一个AMQP 信道(Channel) ，每个信道都会被指派一个唯一的ID。<strong>RabbitMQ 处理的每条AMQP 指令都是通过信道完成的</strong>。信道就像电缆里的光纤束。一条电缆内含有许多光纤束，<strong>允许所有的连接通过多条光线束进行传输和接收。</strong></li></ol><h2 id="2、RabbitMQ如何确保消息发送-？-消息接收？"><a href="#2、RabbitMQ如何确保消息发送-？-消息接收？" class="headerlink" title="2、RabbitMQ如何确保消息发送 ？ 消息接收？"></a>2、RabbitMQ如何确保消息发送 ？ 消息接收？</h2><ol><li>发送方确认机制：<ul><li>信道需要设置为 <strong>confirm</strong> 模式，则所有在信道上发布的消息都会分配一个唯一ID。</li><li><strong>一旦消息被投递到queue</strong>（可持久化的消息需要写入磁盘），<strong>信道会发送一个确认给生产者</strong>（包含消息唯一 ID）。</li><li>如果 RabbitMQ 发生内部错误从而导致消息丢失，会<strong>发送一条 nack（未确认）消息给生产者</strong>。</li><li>所有被发送的消息都将被 confirm（即 ack） 或者被nack一次。但是没有对消息被 confirm 的快慢做任何保证，并且<strong>同一条消息不会既被 confirm又被nack</strong></li><li>发送方确认模式是异步的，<strong>生产者应用程序在等待确认的同时，可以继续发送消息</strong>。当确认消息到达生产者， 生产者的回调方法会被触发。</li><li>ConfirmCallback接口：只确认是否正确到达 Exchange 中，成功到达则回调</li><li>ReturnCallback接口：消息失败返回时回调</li></ul></li><li>接收方确认机制：<ul><li>消费者在声明队列时，<strong>可以指定noAck参数</strong>，当noAck&#x3D;false时，RabbitMQ会等待消费者显式发回ack信号 后才从内存(或者磁盘，持久化消息)中移去消息。否则，消息被消费后会被立即删除。</li><li><strong>消费者接收每一条消息后都必须进行确认</strong>（消息接收和消息确认是两个不同操作）。只有消费者确认了消息， RabbitMQ 才能安全地把消息从队列中删除。</li><li>RabbitMQ不会为未ack的消息设置超时时间，它判断此消息**是否需要重新投递给消费者的唯一依据是消费该消息的&#x3D;&#x3D;消费者连接是否已经断开&#x3D;&#x3D;**。这么设计的原因是RabbitMQ允许消费者消费一条消息的时间可以很长。保证数据的最终一致性；</li><li><strong>如果消费者返回ack之前断开了链接，RabbitMQ 会重新分发给下一个订阅的消费者。</strong>（可能存在消息重复消费的隐患，需要去重）</li></ul></li></ol><h2 id="3、RabbitMQ事务消息"><a href="#3、RabbitMQ事务消息" class="headerlink" title="3、RabbitMQ事务消息"></a>3、RabbitMQ事务消息</h2><ol><li><strong>通过对信道的设置实现</strong><ul><li>channel.txSelect()；<strong>通知服务器开启事务模式</strong>；服务端会返回Tx.Select-Ok </li><li>channel.basicPublish；<strong>发送消息</strong>，可以是多条，可以是消费消息提交ack </li><li>channel.txCommit()提交事务；</li><li>channel.txRollback()回滚事务；</li></ul></li><li><strong>消费者使用事务：</strong><ul><li>autoAck&#x3D;false，手动提交ack，<strong>以事务提交或回滚为准</strong>； </li><li>autoAck&#x3D;true，不支持事务的，也就是说你即使在收到消息之后在回滚事务也是于事无补的，<strong>队列已经把消息移除了</strong></li></ul></li><li>如果其中任意一个环节出现问题，就会抛出IoException异常，<strong>用户可以拦截异常进行事务回滚，或决定要不要重复消息。</strong></li><li>事务消息会降低rabbitmq的性能</li></ol><h2 id="4、RabbitMQ死信队列、延时队列"><a href="#4、RabbitMQ死信队列、延时队列" class="headerlink" title="4、RabbitMQ死信队列、延时队列"></a>4、RabbitMQ死信队列、延时队列</h2><ol><li>消息被消费方否定确认，使用 channel.basicNack 或 channel.basicReject ，并且此时 <strong>requeue</strong> 属性被设置为 <strong>false</strong> 。 </li><li>消息在队列的存活时间<strong>超过</strong>设置的TTL时间。 </li><li>消息队列的消息数量已经<strong>超过</strong>最大队列长度。</li><li>那么该消息将成为“死信”。“死信”消息会被RabbitMQ进行特殊处理，<strong>如果配置了死信队列信息，那么该消息将会被丢进死信队列中，如果没有配置，则该消息将会被丢弃</strong></li><li>为每个需要使用死信的业务队列配置一个死信交换机，这里<strong>同一个项目的死信交换机可以共用一个，</strong>然后为<strong>每个业务队列分配一个单独的路由key</strong>，死信队列只不过是绑定在死信交换机上的队列，死信交换机也不是什么特殊的交换机，只不过是用来接受死信的交换机，所以可以为任何类型【Direct、 Fanout、Topic】</li><li>TTL：<strong>一条消息或者该队列中的所有消息的最大存活时间</strong> </li><li>如果一条消息设置了TTL属性或者进入了设置TTL属性的队列，那么这条消息如果在TTL设置的时间内没有被消费，则会成为“死信”。<strong>如果同时配置了队列的TTL和消息的TTL，那么较小的那个值将会被使用。</strong> </li><li>只需要消费者一直消费死信队列里的消息</li></ol><h2 id="5、RabbitMQ镜像队列机制"><a href="#5、RabbitMQ镜像队列机制" class="headerlink" title="5、RabbitMQ镜像队列机制"></a>5、RabbitMQ镜像队列机制</h2><ol><li><strong>镜像queue有master节点和slave节点</strong>。master和slave是针对一个queue而言的，而不是一个node作为所有queue的master，其它node作为slave。<strong>一个queue&#x3D;&#x3D;第一次&#x3D;&#x3D;创建的node为它的master节点，其它node为slave节点。</strong></li><li>无论客户端的请求打到master还是slave<strong>最终数据都是从master节点获取。</strong>当请求打到master节点时， master节点直接将消息返回给client，同时master节点会通过GM（Guaranteed Multicast）协议将 queue的最新状态广播到slave节点。<strong>GM保证了广播消息的原子性，即要么都更新要么都不更新。</strong></li><li>当请求打到slave节点时，slave节点需要将<strong>请求先重定向</strong>到master节点，master节点将将消息返回给 client，同时master节点会通过GM协议将queue的最新状态广播到slave节点。</li><li>如果有新节点加入，RabbitMQ不会同步之前的历史数据，<strong>新节点只会复制该节点加入到集群&#x3D;&#x3D;之后&#x3D;&#x3D;新增的消息。</strong></li></ol><h2 id="6、简述kafka架构设计"><a href="#6、简述kafka架构设计" class="headerlink" title="6、简述kafka架构设计"></a>6、简述kafka架构设计</h2><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202304221938629.png"                      alt="image-20230422193806320"                ></p><ol><li><strong>Consumer Group</strong>：消费者组，<strong>消费者组内每个消费者负责消费不同分区的数据</strong>，提高消费能力。逻辑上的一个订阅者。</li><li><strong>Topic</strong>：可以理解为一个队列，Topic 将消息分类，生产者和消费者面向的是同一个 Topic。</li><li><strong>Partition</strong>：为了实现扩展性，提高并发能力，一个Topic以多个Partition的方式分布到多个 Broker 上，<strong>每个 Partition 是一个有序的队列</strong>。一个 Topic 的每个Partition都有若干个副本（Replica），一个 Leader 和若干个 Follower<strong>。生产者发送数据的对象，以及消费者消费数据的对象，都是 Leader</strong>。 Follower负责实时从 Leader 中同步数据，保持和 Leader 数据的同步。Leader 发生故障时，某个 Follower 还会成为新的 Leader。</li><li><strong>Offset</strong>：消费者消费的位置信息，监控数据消费到什么位置，当<strong>消费者挂掉再重新恢复的时候，可以从消费位置继续消费。</strong></li><li><strong>Zookeeper：Kafka</strong> 集群能够正常工作，需要依赖于 Zookeeper，<strong>Zookeeper 帮助 Kafka 存储和管理集群信息。</strong></li></ol><h2 id="7、Kafka是pull？push？优劣势分析"><a href="#7、Kafka是pull？push？优劣势分析" class="headerlink" title="7、Kafka是pull？push？优劣势分析"></a>7、Kafka是pull？push？优劣势分析</h2><ol><li><strong>pull模式：</strong><ul><li>根据consumer的消费能力<strong>进行数据拉取</strong>，可以控制速率</li><li><strong>可以批量拉取、也可以单条拉取</strong></li><li>可以设置<strong>不同的提交方式</strong>，实现<strong>不同的传输语义</strong></li><li>缺点：如果kafka没有数据，<strong>会导致consumer空循环</strong>，消耗资源</li><li>解决：通过参数设置，consumer拉取数据为空或者没有达到一定数量时进行<strong>阻塞</strong></li></ul></li><li><strong>push模式：</strong><ul><li><strong>不会导致consumer循环等待</strong></li><li>缺点：速率固定、忽略了consumer的消费能力，可能导致拒绝服务或者网络拥塞等情况</li></ul></li></ol><h2 id="8、Kafka中zk的作用"><a href="#8、Kafka中zk的作用" class="headerlink" title="8、Kafka中zk的作用"></a>8、Kafka中zk的作用</h2><ol><li>&#x2F;brokers&#x2F;ids：临时节点，保存所有broker节点信息，存储broker的物理地址、版本信息、启动时间等，节点名称为brokerID，b<strong>roker定时发送心跳到zk，如果断开则该brokerID会被删除</strong></li><li>&#x2F;brokers&#x2F;topics：临时节点，节点保存broker节点下所有的topic信息，每一个topic节点下包含一个固定的partitions节点，<strong>partitions的子节点就是topic的分区，每个分区下保存一个state节点</strong>、保存着当前leader分区和ISR的brokerID，<strong>state节点由leader创建</strong>，若leader宕机该节点会被删除，直到有新的 leader选举产生、重新生成state节点</li><li>&#x2F;consumers&#x2F;[group_id]&#x2F;owners&#x2F;[topic]&#x2F;[broker_id-partition_id]：<strong>维护消费者和分区的注册关系</strong></li><li>&#x2F;consumers&#x2F;[group_id]&#x2F;offsets&#x2F;[topic]&#x2F;[broker_id-partition_id]：<strong>分区消息的消费进度Offset</strong></li><li>client通过topic找到topic树下的state节点、获取leader的brokerID，到broker树中找到broker的物理地址，<strong>但是client不会直连zk，而是通过配置的broker获取到zk中的信息</strong></li></ol><h2 id="9、简述kafka的rebalance机制"><a href="#9、简述kafka的rebalance机制" class="headerlink" title="9、简述kafka的rebalance机制"></a>9、简述kafka的rebalance机制</h2><ol><li>consumer group中的消费者与topic下的partion重新匹配的过程</li><li><strong>何时会产生rebalance：</strong><ul><li>consumer group中的<strong>成员个数发生变化</strong> </li><li>consumer<strong>消费超时</strong> </li><li>group订阅的<strong>topic个数</strong>发生变化 </li><li>group订阅的<strong>topic的分区数</strong>发生变化</li></ul></li><li><strong>coordinator</strong>：通常是partition的leader节点所在的broker，<strong>负责监控group中consumer的存活，</strong></li><li>consumer维持到coordinator的心跳，判断consumer的消费超时<ul><li>coordinator通过心跳返回通知consumer进行rebalance </li><li>consumer请求coordinator加入组，coordinator选举产生leader consumer </li><li>leader consumer从coordinator获取所有的consumer，发送syncGroup(分配信息)给到 coordinator </li><li>coordinator通过心跳机制将syncGroup下发给consumer 完成rebalance</li></ul></li><li><strong>leader consumer监控topic的变化，通知coordinator触发rebalance</strong></li><li>如果C1消费消息超时，触发rebalance，重新分配后、该消息会被其他消费者消费，此时C1消费完成提交offset、导致<strong>错误</strong></li><li><strong>解决：</strong>coordinator每次rebalance，会标记一个<strong>Generation</strong>给到consumer，每次rebalance该 <strong>Generation</strong>会+1，consumer提交offset时，coordinator会比对<strong>Generation</strong>，不一致则拒绝提交</li></ol><h2 id="10、Kafka的性能好在什么地方"><a href="#10、Kafka的性能好在什么地方" class="headerlink" title="10、Kafka的性能好在什么地方"></a>10、Kafka的性能好在什么地方</h2><ol><li><strong>kafka不基于内存，而是硬盘存储</strong>，因此消息堆积能力更强</li><li><strong>顺序写：</strong>利用磁盘的顺序访问速度可以接近内存，kafka的消息都是append操作，partition是有序的， 节省了磁盘的寻道时间，同时通过批量操作、<strong>节省写入次数</strong>，partition物理上分为多个segment存储， <strong>方便删除</strong></li><li><strong>传统：</strong><ul><li>读取磁盘文件数据到内核缓冲区 </li><li>将内核缓冲区的数据copy到用户缓冲区 </li><li>将用户缓冲区的数据copy到socket的发送缓冲区 </li><li>将socket发送缓冲区中的数据发送到网卡、进行传输</li></ul></li><li><strong>零拷贝：</strong><ul><li>直接将内核缓冲区的数据发送到网卡传输 </li><li>使用的是操作系统的指令支持</li></ul></li><li>kafka不太依赖jvm，主要理由操作系统的pageCache，如果生产消费速率相当，则直接用pageCache 交换数据，不需要经过磁盘IO</li></ol><h1 id="十一、网络"><a href="#十一、网络" class="headerlink" title="十一、网络"></a>十一、网络</h1><h2 id="1、TCP的三次握⼿和四次挥⼿"><a href="#1、TCP的三次握⼿和四次挥⼿" class="headerlink" title="1、TCP的三次握⼿和四次挥⼿"></a>1、TCP的三次握⼿和四次挥⼿</h2><ol><li>TCP协议是7层⽹络协议中的传输层协议，负责数据的可靠传输。 </li><li>在建⽴TCP连接时，需要通过三次握⼿来建⽴，过程是：<ul><li>客户端向服务端发送⼀个SYN </li><li>服务端接收到SYN后，给客户端发送⼀个SYN_ACK </li><li>客户端接收到SYN_ACK后，再给服务端发送⼀个ACK</li></ul></li><li>在断开TCP连接时，需要通过四次挥⼿来断开，过程是：<ul><li>客户端向服务端发送FIN </li><li>服务端接收FIN后，向客户端发送ACK，表示我接收到了断开连接的请求，客户端你可以不发数据 了，不过服务端这边可能还有数据正在处理</li><li>服务端处理完所有数据后，向客户端发送FIN，表示服务端现在可以断开连接 </li><li>客户端收到服务端的FIN，向服务端发送ACK，表示客户端也会断开连接了</li></ul></li></ol><h2 id="2、什么是认证和授权？如何设计⼀个权限认证框架？"><a href="#2、什么是认证和授权？如何设计⼀个权限认证框架？" class="headerlink" title="2、什么是认证和授权？如何设计⼀个权限认证框架？"></a>2、什么是认证和授权？如何设计⼀个权限认证框架？</h2><ol><li><strong>认证： 就是对系统访问者的身份进行确认。</strong> </li><li><strong>授权：就是对系统访问者的⾏为进行控制。</strong>授权通常是在认证之后，对系统内的⽤户隐私数据进⾏保护。后台接⼝访问权限、前台控件的访问权限。 </li><li>RBAC模型： 主体 -&gt; ⻆⾊ -&gt; 资源 -&gt; 访问系统的⾏为。 </li><li>认证和授权也是对⼀个权限认证框架进⾏扩展的两个主要的⽅⾯</li></ol><h2 id="3、如果没有Cookie-Session还能进行身份验证吗？"><a href="#3、如果没有Cookie-Session还能进行身份验证吗？" class="headerlink" title="3、如果没有Cookie,Session还能进行身份验证吗？"></a>3、如果没有Cookie,Session还能进行身份验证吗？</h2><ol><li>当服务器tomcat第⼀次接收到客户端的请求时，会开辟⼀块独⽴的session空间，建⽴⼀个session对象，同时会<strong>⽣成⼀个session id，通过响应头的⽅式保存到客户端浏览器的cookie当中</strong>。以后客户端的每次请求，都会在请求头部带上这个session id，这样就可以对应上服务端的⼀些会话的相关信息，⽐如⽤户的登录状态。</li><li>如果没有客户端的Cookie，Session是⽆法进⾏身份验证的。</li><li>当服务端从单体应⽤升级为分布式之后，cookie+session这种机制要怎么扩展？<ul><li><strong>session黏贴：</strong> 在负载均衡中，通过⼀个机制保证同⼀个客户端的所有请求都会转发到同⼀个 tomcat实例当中。问题： 当这个tomcat实例出现问题之后，请求就会被转发到其他实例，这时候 ⽤户的session信息就丢了。 </li><li><strong>session复制：</strong> 当⼀个tomcat实例上保存了session信息后，主动将session 复制到集群中的其他实例。问题： 复制是需要时间的，在复制过程中，容易产⽣session信息丢失。</li><li><strong>session共享：</strong> 就是将服务端的session信息保存到⼀个第三⽅中，⽐如Redis。</li></ul></li></ol><h2 id="4、什么是CSRF攻击？如何防⽌？"><a href="#4、什么是CSRF攻击？如何防⽌？" class="headerlink" title="4、什么是CSRF攻击？如何防⽌？"></a>4、什么是CSRF攻击？如何防⽌？</h2><ol><li><strong>CSRF：</strong> Cross Site Requst Forgery 跨站请求伪造，⼀个正常的请求会将合法⽤户的session id保存到 浏览器的cookie。这时候，如果⽤户在浏览器中打来另⼀个tab⻚， 那这个tab⻚也是可以获得浏览器的 cookie。⿊客就可以利⽤这个cookie信息进⾏攻击。</li><li><strong>攻击过程：</strong> <ul><li>某银⾏⽹站A可以以GET请求的⽅式发起转账操作。 <a class="link"   href="http://www.xxx.com/transfor.do" >www.xxx.com/transfor.do<i class="fas fa-external-link-alt"></i></a>? accountNum&#x3D;100&amp;money&#x3D;1000 accountNum表示⽬标账户。这个请求肯定是需要登录才可以正 常访问的。 </li><li>攻击者在某个论坛或者⽹站上，上传⼀个图⽚，链接地址是 <a class="link"   href="http://www.xxx.com/transfer.do" >www.xxx.com/transfer.do<i class="fas fa-external-link-alt"></i></a>? accountNum&#x3D;888&amp;money&#x3D;10000 其中这个accountNum就是攻击者⾃⼰的银⾏账户。</li><li>如果有⼀个⽤户，登录了银⾏⽹站，然后⼜打开浏览器的另⼀个tab⻚，点击了这个图⽚。这时，银 ⾏就会受理到⼀个带了正确cookie的请求，就会完成转账。⽤户的钱就被盗了。</li></ul></li><li><strong>CSRF防⽌⽅式：</strong><ul><li>尽量使⽤POST请求，限制GET请求。POST请求可以带请求体，攻击者就不容易伪造出请求。 </li><li>将cookie设置为HttpOnly : respose.setHeader(“SetCookie”,”cookiename&#x3D;cookievalue;HttpOnly”)。 </li><li>增加token；</li><li><strong>在请求中放⼊⼀个攻击者⽆法伪造的信息，并且该信息不存在于cookie当中</strong>。这也是Spring Security框架中采⽤的防范⽅式。</li></ul></li></ol><h1 id="十二、Elasticsearch"><a href="#十二、Elasticsearch" class="headerlink" title="十二、Elasticsearch"></a>十二、Elasticsearch</h1><h2 id="1、elasticsearch-了解多少，说说你们公司-es-的集群架构，索引数据大小，分片有多少，以及一些调优手段-。"><a href="#1、elasticsearch-了解多少，说说你们公司-es-的集群架构，索引数据大小，分片有多少，以及一些调优手段-。" class="headerlink" title="1、elasticsearch 了解多少，说说你们公司 es 的集群架构，索引数据大小，分片有多少，以及一些调优手段 。"></a>1、elasticsearch 了解多少，说说你们公司 es 的集群架构，索引数据大小，分片有多少，以及一些调优手段 。</h2><p>如实结合自己的实践场景回答即可。 比如：ES 集群架构 13 个节点，索引根据通道不同共 20+索引，根据日期，每日递增 20+，索引：10 分片，每日递增 1 亿+数据，每个通道每天索引大小控制：150GB 之内。 </p><hr><ol><li><p><strong>设计阶段调优</strong></p><ul><li>根据业务增量需求，<strong>采取基于日期模板创建索引</strong>，通过 roll over API 滚动索引； </li><li><strong>使用别名</strong>进行索引管理；</li><li>每天凌晨定时对索引做 <strong>force_merge</strong> 操作，以释放空间；  </li><li><strong>采取冷热分离机制</strong>，热数据存储到 SSD，提高检索效率；冷数据定期进行 shrink操作，以缩减存储； </li><li>采取 <strong>curator</strong> 进行索引的生命周期管理；</li><li>仅针对需要分词的字段，<strong>合理的设置分词器</strong>；</li><li>Mapping 阶段充分结合各个字段的属性，是否需要检索、是否需要存储等。……..</li></ul></li><li><p><strong>写入调优</strong></p><ul><li>写入前副本数设置为 <strong>0</strong>； </li><li>写入前关闭 <strong>refresh_interval</strong> 设置为-1，禁用刷新机制；</li><li>写入过程中：采取 <strong>bulk</strong> 批量写入；</li><li><strong>写入后恢复副本数和刷新间隔</strong>；</li><li>尽量<strong>使用自动生成的 id</strong>。</li></ul></li><li><p><strong>查询调优</strong></p><ul><li>禁用 <strong>wildcard</strong>；</li><li>禁用批量 <strong>terms</strong>（成百上千的场景）；</li><li><strong>充分利用倒排索引机制</strong>，能 keyword 类型尽量 keyword； </li><li>数据量大时候，可以先基于时间敲定索引再检索；  </li><li><strong>设置合理的路由机制</strong></li></ul></li></ol><h2 id="2、elasticsearch-的倒排索引是什么"><a href="#2、elasticsearch-的倒排索引是什么" class="headerlink" title="2、elasticsearch 的倒排索引是什么"></a>2、elasticsearch 的倒排索引是什么</h2><ul><li><strong>传统的我们的检索</strong>是通过文章，逐个遍历找到对应关键词的位置。 </li><li>而倒排索引，是通过分词策略，形成了词和文章的映射关系表，这种<strong>词典+映射表</strong>即为倒排索引。 </li><li>有了倒排索引，就能实现 o（1）时间复杂度的效率检索文章了，极大的提高了检索效率</li></ul><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305041916323.png"                      alt="image-20230504191644121"                ></p><h2 id="3、elasticsearch-索引数据多了怎么办，如何调优，部署"><a href="#3、elasticsearch-索引数据多了怎么办，如何调优，部署" class="headerlink" title="3、elasticsearch 索引数据多了怎么办，如何调优，部署"></a>3、elasticsearch 索引数据多了怎么办，如何调优，部署</h2><p>解答：索引数据的规划，应在前期做好规划，正所谓<strong>“设计先行，编码在后”</strong>，这样才能有效的避免突如其来的数据激增导致集群处理能力不足引发的线上客户检索或者其他业务受到影响。 如何调优，正如问题 1 所说，这里细化一下：</p><ol><li><strong>动态索引层面</strong><ul><li><strong>基于模板+时间+rollover api 滚动创建索引</strong>，举例：设计阶段定义：blog 索引的模板格式为：blog_index_时间戳的形式，每天递增数据。 </li><li><strong>这样做的好处</strong>：不至于数据量激增导致单个索引数据量非常大，接近于上线 2 的32 次幂-1，索引存储达到了 TB+甚至更大。 </li><li>一旦单个索引很大，存储等各种风险也随之而来，所以要提前考虑+及早避免。</li></ul></li><li><strong>存储层面</strong><ul><li>冷热数据分离存储，热数据（比如最近 3 天或者一周的数据），其余为冷数据。对于冷数据不会再写入新数据，可以<strong>考虑定期 force_merge 加 shrink 压缩操作</strong>，节省存储空间和检索效率。</li></ul></li><li><strong>部署层面</strong><ul><li>一旦之前没有规划，这里就属于应急策略。结合 ES 自身的支持动态扩展的特点，<strong>动态新增机器的方式可以缓解集群压力</strong>，注意：如果之前主节点等规划合理，不需要重启集群也能完成动态新增的</li></ul></li></ol><h2 id="4、elasticsearch-是如何实现-master-选举的"><a href="#4、elasticsearch-是如何实现-master-选举的" class="headerlink" title="4、elasticsearch 是如何实现 master 选举的"></a>4、elasticsearch 是如何实现 master 选举的</h2><ol><li>前置前提： <ul><li>只有候选主节点（master：true）的节点才能成为主节点。 </li><li>最小主节点数（min_master_nodes）的目的是<strong>防止脑裂</strong>。</li></ul></li><li>核心入口为 findMaster，选择主节点成功返回对应 Master，否则返回 null。选举流程大致描述如下：<ul><li><strong>第一步：确认候选主节点数达标</strong>，elasticsearch.yml 设置的值 discovery.zen.minimum_master_nodes； </li><li>第二步：比较：<strong>先判定是否具备 master 资格，具备候选主节点资格的优先返回</strong>；若两节点都为候选主节点，则 <strong>id 小的值会为主节点</strong>。注意这里的 id 为 string 类型。</li></ul></li><li>Elasticsearch 的选主是 <strong>ZenDiscovery</strong> 模块负责的，主要包含 <strong>Ping</strong>（节点之间通过这个 RPC 来发现彼此）和 <strong>Unicast</strong>（单播模块包含一个主机列表以控制哪些节点需要 ping 通）这两部分；  </li><li>对所有可以成为 master 的节点（node.master: true）<strong>根据 nodeId 字典排序</strong>，每次选举每个节点都把自己所知道节点排一次序，然后选出第一个（第 0 位）节点，暂且认为它是 master 节点。</li><li><strong>如果对某个节点的投票数达到一定的值</strong>（可以成为 master 节点数 n&#x2F;2+1）<strong>并且该节点自己也选举自己</strong>，那这个节点就是 master。否则重新选举一直到满足上述条件。 </li><li>补充：master 节点的职责主要包括<strong>集群、节点和索引的管理，不负责文档级别的管理</strong>；data 节点可以关闭 http 功能*。</li></ol><h2 id="5、详细描述一下-Elasticsearch-索引文档的过程"><a href="#5、详细描述一下-Elasticsearch-索引文档的过程" class="headerlink" title="5、详细描述一下 Elasticsearch 索引文档的过程"></a>5、详细描述一下 Elasticsearch 索引文档的过程</h2><p>这里的索引文档应该理解为<strong>文档写入 ES</strong>，创建索引的过程。 文档写入包含：<strong>单文档写入和批量 bulk 写入</strong>，这里只解释一下：<strong>单文档写入流程</strong>。 记住官方文档中的这个图。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202305041939556.png"                      alt="image-20230504193906319"                ></p><ol><li>第一步：客户向集群某节点<strong>写入数据，发送请求</strong>。（如果没有指定路由&#x2F;协调节点，请求的节点扮演路由节点的角色。） </li><li>第二步：节点 1 接受到请求后，使用文档_id 来<strong>确定文档属于分片 0</strong>。请求会被转到另外的节点，假定节点 3。因<strong>此分片 0 的主分片分配到节点 3 上。</strong> </li><li>第三步：<strong>节点 3 在主分片上执行写操作</strong>，如果成功，则<strong>将请求并行转发到节点 1和节点 2 的副本分片上</strong>，等待结果返回。所有的副本分片都报告成功，节点 3 将向协调节点（节 点 1）报告成功，<strong>节点 1 向请求客户端报告写入成功。</strong></li><li><strong>第二步中的文档获取分片的过程？</strong><ul><li>借助路由算法获取，路由算法就是根据路由和文档 id 计算目标的分片 id 的 过程。</li></ul></li></ol><h2 id="6、详细描述一下-Elasticsearch-搜索的过程？"><a href="#6、详细描述一下-Elasticsearch-搜索的过程？" class="headerlink" title="6、详细描述一下 Elasticsearch 搜索的过程？"></a>6、详细描述一下 Elasticsearch 搜索的过程？</h2><ol><li>搜索拆解为“query then fetch” 两个阶段。</li><li>query 阶段的目的：<strong>定位到位置，但不取</strong>。</li><li><strong>步骤拆解如下：</strong><ul><li>假设一个索引数据有 5 主+1 副本 共 10 分片，<strong>一次请求会命中（主或者副本分片中）的一个。</strong> </li><li><strong>每个分片在本地进行查询</strong>，结果返回到本地有序的<strong>优先队列</strong>中。</li><li><strong>第 2）步骤的结果发送到协调节点</strong>，协调节点产生一个全局的排序列表。</li><li>fetch 阶段的目的：取数据。 <strong>路由节点获取所有文档，返回给客户端。</strong></li></ul></li></ol><h2 id="7、Elasticsearch-在部署时，对-Linux-的设置有哪些优化方法"><a href="#7、Elasticsearch-在部署时，对-Linux-的设置有哪些优化方法" class="headerlink" title="7、Elasticsearch 在部署时，对 Linux 的设置有哪些优化方法"></a>7、Elasticsearch 在部署时，对 Linux 的设置有哪些优化方法</h2><ol><li>关闭缓存 swap; </li><li>堆内存设置为：Min（节点内存&#x2F;2, 32GB）; </li><li>设置最大文件句柄数；</li><li>线程池+队列大小根据业务需要做调整；</li><li>磁盘存储 raid 方式——存储有条件使用 RAID10，增加单节点性能以及避免单节点存储故障。</li></ol><h2 id="8、Elasticsearch-中的节点（比如共-20-个），其中的-10-个选了一个-master，另外-10-个选了另一个-master，怎-么办？"><a href="#8、Elasticsearch-中的节点（比如共-20-个），其中的-10-个选了一个-master，另外-10-个选了另一个-master，怎-么办？" class="headerlink" title="8、Elasticsearch 中的节点（比如共 20 个），其中的 10 个选了一个 master，另外 10 个选了另一个 master，怎 么办？"></a>8、Elasticsearch 中的节点（比如共 20 个），其中的 10 个选了一个 master，另外 10 个选了另一个 master，怎 么办？</h2><ol><li>当集群 master 候选数量<strong>不小于 3 个时</strong>，可以通过设置最少投票通过数量（discovery.zen.minimum_master_nodes）超过所有候选节点一半以上来解决脑裂问题；</li><li><strong>当候选数量为两个时</strong>，只能修改为唯一的一个 master 候选，其他作为 data节点，避免脑裂问题</li></ol><h2 id="9、客户端在和集群连接时，如何选择特定的节点执行请求的？"><a href="#9、客户端在和集群连接时，如何选择特定的节点执行请求的？" class="headerlink" title="9、客户端在和集群连接时，如何选择特定的节点执行请求的？"></a>9、客户端在和集群连接时，如何选择特定的节点执行请求的？</h2><ul><li>TransportClient 利用 transport 模块远程连接一个 elasticsearch 集群。它并不加入到集群中，只是简单的<strong>获得</strong>一个或者多个初始化的 <strong>transport 地址</strong>，并以<strong>轮询的方式</strong>与 这些地址进行通信。</li></ul><h2 id="10、详细描述一下-Elasticsearch-更新和删除文档的过程。"><a href="#10、详细描述一下-Elasticsearch-更新和删除文档的过程。" class="headerlink" title="10、详细描述一下 Elasticsearch 更新和删除文档的过程。"></a>10、详细描述一下 Elasticsearch 更新和删除文档的过程。</h2><ol><li>删除和更新也都是写操作，但<strong>是 Elasticsearch 中的文档是不可变的</strong>，因此不能被删除或者改动以展示其变更；</li><li><strong>磁盘上的每个段都有一个相应的.del 文件</strong>。当删除请求发送后，文档并没有真的被删除，而是在.del 文件中被标记为删除。该文档依然能匹配查询，但是会在结果中被过滤掉。当段合并时，在.del 文件中被标记为删除的文档将不会被写入新段。</li><li><strong>在新的文档被创建时，Elasticsearch 会为该文档指定一个版本号</strong>，当执行更新时，旧版本的文档在.del 文件中被标记为删除，新版本的文档被索引到一个新段。旧版本的文档依然能匹配查询，但是会在结果中被过滤掉。</li></ol><h2 id="11、在并发情况下，Elasticsearch-如果保证读写一致？"><a href="#11、在并发情况下，Elasticsearch-如果保证读写一致？" class="headerlink" title="11、在并发情况下，Elasticsearch 如果保证读写一致？"></a>11、在并发情况下，Elasticsearch 如果保证读写一致？</h2><ol><li><strong>可以通过版本号使用乐观并发控制</strong>，以确保新版本不会被旧版本覆盖，由应用层来处理具体的冲突；</li><li>另外对于写操作，一致性级别支持 quorum&#x2F;one&#x2F;all，默认为 quorum，即<strong>只有当大多数分片可用时才允许写操作</strong>。但即使大多数可用，也可能存在因为网络等原因导致写入副本失败，这样该副本被认为故障，分片将会在一个不同的节点上重建。 </li><li><strong>对于读操作，可以设置 replication 为 sync(默认)<strong>，</strong>这使得操作在主分片和副本分片都完成后才会返回</strong>；如果设置 replication 为 async 时，也可以通过设置搜索请求参数 _preference 为 primary 来查询主分片，确保文档是最新版本。</li></ol><h2 id="12、如何监控-Elasticsearch-集群状态？"><a href="#12、如何监控-Elasticsearch-集群状态？" class="headerlink" title="12、如何监控 Elasticsearch 集群状态？"></a>12、如何监控 Elasticsearch 集群状态？</h2><p>Marvel 让你可以很简单的通过 <strong>Kibana</strong> 监控 Elasticsearch。你可以实时查看你的集群健康状态和性能，也可以分析过去的集群、索引和节点指标。 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、Java基础&quot;&gt;&lt;a href=&quot;#一、Java基础&quot; class=&quot;headerlink&quot; title=&quot;一、Java基础&quot;&gt;&lt;/a&gt;一、Java基础&lt;/h1&gt;&lt;h2 id=&quot;1、面向对象&quot;&gt;&lt;a href=&quot;#1、面向对象&quot; class=&quot;headerli</summary>
      
    
    
    
    
    <category term="JAVA面试" scheme="http://example.com/tags/JAVA%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>行测之资料分析</title>
    <link href="http://example.com/2023/03/24/%E8%A1%8C%E6%B5%8B%E4%B9%8B%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90/"/>
    <id>http://example.com/2023/03/24/%E8%A1%8C%E6%B5%8B%E4%B9%8B%E8%B5%84%E6%96%99%E5%88%86%E6%9E%90/</id>
    <published>2023-03-24T08:14:27.000Z</published>
    <updated>2023-04-01T13:46:49.953Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、统计术语"><a href="#一、统计术语" class="headerlink" title="一、统计术语"></a>一、统计术语</h1><h2 id="1、基期量与现期量"><a href="#1、基期量与现期量" class="headerlink" title="1、基期量与现期量"></a>1、基期量与现期量</h2><p><strong>基期量</strong>：作为对比参照的具体数值</p><p><strong>现期量</strong>：相对于基期量的数值</p><p><strong>常用表达方式</strong>：与A相比，B······；B比A······(&#x3D;&#x3D;A为基期量，B为现期量&#x3D;&#x3D;)</p><h2 id="2、增长量与增长率"><a href="#2、增长量与增长率" class="headerlink" title="2、增长量与增长率"></a>2、增长量与增长率</h2><p><strong>增长量&#x3D;现期量-基期量&#x3D;基期量×增长率</strong></p><p><strong>增长率&#x3D;增幅&#x3D;增速&#x3D;增长速度&#x3D; &#x3D;&#x3D;增长量&#x2F;基期量&#x3D;&#x3D;</strong></p><h2 id="3、年均增长量与年均增长率"><a href="#3、年均增长量与年均增长率" class="headerlink" title="3、年均增长量与年均增长率"></a>3、年均增长量与年均增长率</h2><p><strong>年均增长量&#x3D;（现期量-基期量）&#x2F;间隔年份</strong></p><p><strong>现期量&#x3D;基期量×（1+年均增长率）^n^,其中n为相差周期数</strong></p><p>&#x3D;&#x3D;2017年产值比2016年增长了280%&#x3D;&#x3D; &#x3D; &#x3D;&#x3D;2017年产值比2016年增长了2.8倍&#x3D;&#x3D; &#x3D; &#x3D;&#x3D;2017年产值是2016年的3.8倍&#x3D;&#x3D;</p><h2 id="4、同比与环比"><a href="#4、同比与环比" class="headerlink" title="4、同比与环比"></a>4、同比与环比</h2><p><strong>同比</strong>：就是跟去年这个时候进行比较</p><p><strong>环比</strong>：就是跟上一个统计周期相比（日环比，周环比，月环比，年环比）</p><h2 id="5、百分数和百分点"><a href="#5、百分数和百分点" class="headerlink" title="5、百分数和百分点"></a>5、百分数和百分点</h2><p><strong>百分数</strong>：也叫百分率和百分比，数学中用%来表示</p><p><strong>百分点</strong>：指&#x3D;&#x3D;不同时期&#x3D;&#x3D;以百分数形式表示的相对指标的变化，比如同比增幅提高了8个百分点</p><h2 id="6、比重"><a href="#6、比重" class="headerlink" title="6、比重"></a>6、比重</h2><p><strong>比重</strong>：部分在整体中所占比例</p><h2 id="7、顺差与逆差"><a href="#7、顺差与逆差" class="headerlink" title="7、顺差与逆差"></a>7、顺差与逆差</h2><p><strong>顺差</strong>：在一个时期内，一个国家的出口商品额大于进口商品额</p><p><strong>逆差</strong>：在一个时期内，一个国家的出口商品额小于进口商品额</p><h2 id="8、GDP"><a href="#8、GDP" class="headerlink" title="8、GDP"></a>8、GDP</h2><p>GDP等价于增加值</p><h2 id="9、恩格尔系数与基尼系数"><a href="#9、恩格尔系数与基尼系数" class="headerlink" title="9、恩格尔系数与基尼系数"></a>9、恩格尔系数与基尼系数</h2><p><strong>恩格尔系数</strong>：食品支出占总消费的百分比，值越低则生活水平越好</p><p><strong>基尼系数</strong>：：用来衡量贫富差距的，值越小，贫富差距越小</p><h1 id="二、结构阅读法"><a href="#二、结构阅读法" class="headerlink" title="二、结构阅读法"></a>二、结构阅读法</h1><h2 id="1、文字型资料"><a href="#1、文字型资料" class="headerlink" title="1、文字型资料"></a>1、文字型资料</h2><p><strong>多段型</strong>：时间，关键词，结构（其中）</p><p><strong>孤立段</strong>：时间，关键词，标点（。；）</p><h2 id="2、表格型资料"><a href="#2、表格型资料" class="headerlink" title="2、表格型资料"></a>2、表格型资料</h2><p><strong>设置陷阱</strong>：时间，单位及表格标题中的限定性概念</p><h2 id="3、图形型资料"><a href="#3、图形型资料" class="headerlink" title="3、图形型资料"></a>3、图形型资料</h2><p><strong>主要注意</strong>：横纵坐标，图例，单位</p><h1 id="三、基础速算技巧"><a href="#三、基础速算技巧" class="headerlink" title="三、基础速算技巧"></a>三、基础速算技巧</h1><h2 id="1、计算类"><a href="#1、计算类" class="headerlink" title="1、计算类"></a>1、计算类</h2><h3 id="1、截位法"><a href="#1、截位法" class="headerlink" title="1、截位法"></a>1、截位法</h3><p><strong>判断原则</strong>：</p><ul><li>选项首位均不同，保留两位</li><li>选项首位有相同的，保留三位</li></ul><p><strong>一步除式</strong>：只估算分母即可&#x3D;&gt;12345&#x2F;1369&#x3D;&gt;12345&#x2F;1370</p><h3 id="2、公式法"><a href="#2、公式法" class="headerlink" title="2、公式法"></a>2、公式法</h3><p>A&#x2F;（1±r）≈A（1减加r）&#x3D;&#x3D;当r小于等于5%&#x3D;&#x3D;</p><h2 id="2、比较类"><a href="#2、比较类" class="headerlink" title="2、比较类"></a>2、比较类</h2><h3 id="1、直接观察法"><a href="#1、直接观察法" class="headerlink" title="1、直接观察法"></a>1、直接观察法</h3><p>当分数的分子和分母一大一小时，直接看分子，分子大的分数就大</p><h3 id="2、速度比较法"><a href="#2、速度比较法" class="headerlink" title="2、速度比较法"></a>2、速度比较法</h3><p>（1）横向比较法：看两个分数分子之间、分母之间的变化速度，谁变化速度快就看谁，分子变化快就看分子，分子大的分数就大；分母变化快就看分母，分母小的分数大</p><p>（2）纵向比较法：当分子大于分母时，可以近似看作直除；当分子小于分母时，比较分子和分母的倍数关系，倍数越大，分数越小</p><h2 id="3、估算法"><a href="#3、估算法" class="headerlink" title="3、估算法"></a>3、估算法</h2><h3 id="1、叠除估算法"><a href="#1、叠除估算法" class="headerlink" title="1、叠除估算法"></a>1、叠除估算法</h3><ol><li>分开估算</li><li>交叉估算</li></ol><h3 id="2、乘法估算"><a href="#2、乘法估算" class="headerlink" title="2、乘法估算"></a>2、乘法估算</h3><p><strong>如果乘法一大一小，可以按比例增加或减小</strong>：A×B≈A↑×B↓（99↑×101↓≈100×100）</p><h3 id="4、分数转化为百分比"><a href="#4、分数转化为百分比" class="headerlink" title="4、分数转化为百分比"></a>4、分数转化为百分比</h3><p>$$<br>\frac{1}{6}&#x3D;16.7<br>$$</p><p>$$<br>\frac{1}{7}&#x3D;14.3<br>$$</p><p>$$<br>\frac{1}{9}&#x3D;11.1<br>$$</p><p>$$<br>\frac{1}{11}&#x3D;9.1<br>$$</p><p>$$<br>\frac{1}{12}&#x3D;8.3<br>$$</p><p>$$<br>\frac{1}{13}&#x3D;7.7<br>$$</p><p>$$<br>\frac{1}{14}&#x3D;7.1<br>$$</p><p>$$<br>\frac{1}{15}&#x3D;6.7<br>$$</p><p>$$<br>\frac{1}{16}&#x3D;6.25<br>$$</p><p>$$<br>\frac{1}{17}&#x3D;5.9<br>$$</p><p>$$<br>\frac{1}{18}&#x3D;5.6<br>$$</p><p>$$<br>\frac{1}{19}&#x3D;5.3<br>$$</p><h1 id="四、增长相关"><a href="#四、增长相关" class="headerlink" title="四、增长相关"></a>四、增长相关</h1><h2 id="1、增长率"><a href="#1、增长率" class="headerlink" title="1、增长率"></a>1、增长率</h2><h3 id="1、一般增长率"><a href="#1、一般增长率" class="headerlink" title="1、一般增长率"></a>1、一般增长率</h3><p><strong>一般问法</strong>：·······的增长率&#x2F;增速&#x2F;增幅是······；增长最快&#x2F;最慢的是·····；···增长了···，且选项皆为百分数</p><p><strong>基本公式如下：</strong></p><ul><li>现期增长率&#x3D;基期增长率±百分点</li><li>增长率&#x3D;增长量&#x2F;基期量</li></ul><p><strong>比较增长率时</strong>：如果现期量&#x2F;基期量≥2，可以直接比较现期量&#x2F;基期量；如果现期量&#x2F;基期量&lt;2，则比较增长量&#x2F;基期量</p><h3 id="2、混合增长率"><a href="#2、混合增长率" class="headerlink" title="2、混合增长率"></a>2、混合增长率</h3><p><strong>题型特征</strong>：题干所求为总体增长率，资料给出了组成总体的各部分增长率和现期量</p><p><strong>口诀</strong>：混合之后居中，偏向基期更大的一边</p><table><thead><tr><th></th><th>上半年</th><th>全年</th><th>下半年</th></tr></thead><tbody><tr><td>量</td><td>A↑</td><td>A+B</td><td>B</td></tr><tr><td>r</td><td>a（n下↓，n为a到x的距离）</td><td>x</td><td>b(m为x到b的距离)</td></tr></tbody></table><p>说明：<strong>量和距离成反比</strong></p><h3 id="3、间隔增长率"><a href="#3、间隔增长率" class="headerlink" title="3、间隔增长率"></a>3、间隔增长率</h3><p><strong>题型特征</strong>：求间隔一年的增长率，比如：····2013年相比2011年增长了····</p><p><strong>计算公式</strong>：r<del>间隔</del>&#x3D; r<del>1</del>+r<del>2</del>+ r<del>1</del>×r<del>2</del></p><p><strong>速算技巧</strong>：</p><ul><li>r<del>1</del>×r<del>2</del>&#x3D;a%×b%&#x3D;ab&#x2F;100%</li><li>r<del>1</del>×r<del>2</del>一个化为分数，一个不变</li><li>r<del>1</del>和r<del>2</del>均小于10%，则r<del>1</del>×r<del>2</del>&lt;1%可忽略不计</li></ul><h3 id="4、年均增长率"><a href="#4、年均增长率" class="headerlink" title="4、年均增长率"></a>4、年均增长率</h3><p><strong>题型特征</strong>：再某段时间，我国生产总值的年均增速为······</p><p><strong>基本公式</strong>：基期量×（1+年均增长率）^n^&#x3D;现期量</p><ul><li>计算时：计算量较大，可居中带入选项，确定选项范围</li><li>比较时：<strong>年份差n相同时，只需要比较现期量&#x2F;基期量</strong></li></ul><h2 id="2、增长量"><a href="#2、增长量" class="headerlink" title="2、增长量"></a>2、增长量</h2><h3 id="1、一般增长量"><a href="#1、一般增长量" class="headerlink" title="1、一般增长量"></a>1、一般增长量</h3><p><strong>题型特征</strong>：增长最多&#x2F;最少的是·····；增长了···，且选项中带有单位</p><p><strong>基本公式</strong>：</p><ul><li>增长量&#x3D;现期量-基期量</li><li>增长量&#x3D;【现期量&#x2F;（1+增长率）】×增长率</li></ul><p>当增长率r&#x3D;1&#x2F;n，增长量等于现期量&#x2F;（n+1）；当增长率r&#x3D;-1&#x2F;n，增长量等于现期量&#x2F;（n-1）</p><p><strong>当进行增长量进行比较时：可以直接用现期量×r（前提是1+r<del>1</del>≈1+r<del>2</del>）</strong></p><p>例子如下：5.9×942-6.1×920&#x3D;5.9×942-（5.9+0.2）×920&#x3D;5.9×22-0.2×920&#x3D;120-184</p><h2 id="3、基期与现期"><a href="#3、基期与现期" class="headerlink" title="3、基期与现期"></a>3、基期与现期</h2><h3 id="1、普通基期"><a href="#1、普通基期" class="headerlink" title="1、普通基期"></a>1、普通基期</h3><p><strong>基本公式</strong>：基期量&#x3D;现期量-增长量；基期量&#x3D;现期量&#x2F;（1+r）</p><h3 id="2、间隔基期"><a href="#2、间隔基期" class="headerlink" title="2、间隔基期"></a>2、间隔基期</h3><p><strong>题型特征</strong>：资料为2017年相关数据，求2015年的数据</p><p><strong>基本公式</strong>：</p><ul><li>基期量&#x3D;现期量&#x2F;（1+r<del>间隔</del>）</li><li>r<del>间隔</del>&#x3D; r<del>1</del>+r<del>2</del>+ r<del>1</del>×r<del>2</del></li></ul><h3 id="3、现期计算"><a href="#3、现期计算" class="headerlink" title="3、现期计算"></a>3、现期计算</h3><ol><li>增长量不变：现期量&#x3D;基期量+增长量×n</li><li>增长率不变：现期量&#x3D;基期量×（1+r）^n^</li></ol><h1 id="五、比例相关"><a href="#五、比例相关" class="headerlink" title="五、比例相关"></a>五、比例相关</h1><h2 id="1、现期比例"><a href="#1、现期比例" class="headerlink" title="1、现期比例"></a>1、现期比例</h2><h3 id="1、现期倍数"><a href="#1、现期倍数" class="headerlink" title="1、现期倍数"></a>1、现期倍数</h3><p><strong>题型特征</strong>：A是B的多少倍</p><p><strong>计算公式</strong>：A÷B</p><h3 id="2、现期比重"><a href="#2、现期比重" class="headerlink" title="2、现期比重"></a>2、现期比重</h3><p>就是跟现期倍数基本一样</p><p><strong>计算公式</strong>：部分量&#x2F;总体量</p><h3 id="3、现期平均数"><a href="#3、现期平均数" class="headerlink" title="3、现期平均数"></a>3、现期平均数</h3><p><strong>题型特征</strong>：问题中包含平均；均；每等关键词；例如人均GDP，就是GDP&#x2F;人数</p><p><strong>基本公式</strong>：平均数&#x3D;总量&#x2F;个数</p><h2 id="2、基期比例"><a href="#2、基期比例" class="headerlink" title="2、基期比例"></a>2、基期比例</h2><h3 id="1、基期倍数"><a href="#1、基期倍数" class="headerlink" title="1、基期倍数"></a>1、基期倍数</h3><p><strong>题型特征</strong>：A是B的多少倍或者比值是多少</p><p><strong>基本公式</strong>：基期倍数&#x3D;（A&#x2F;B）×【（1+b）&#x2F;（1+a）】，其中A、B表示现期量，a、b表示增长率</p><h3 id="2、基期比重"><a href="#2、基期比重" class="headerlink" title="2、基期比重"></a>2、基期比重</h3><p><strong>题型特征</strong>：A是B的多少倍或者比值是多少</p><p><strong>基本公式</strong>：基期倍数&#x3D;（A&#x2F;B）×【（1+b）&#x2F;（1+a）】，其中A表示现期量部分量，B表示现期整体量，a、b表示增长率</p><h3 id="3、基期平均数"><a href="#3、基期平均数" class="headerlink" title="3、基期平均数"></a>3、基期平均数</h3><p><strong>题型特征</strong>：问题中包含平均；均；每等关键词；</p><p><strong>基本公式</strong>：基期倍数&#x3D;（A&#x2F;B）×【（1+b）&#x2F;（1+a）】，其中A表示现期总量，B表示现期个数，a、b表示增长率</p><h2 id="3、两期比例"><a href="#3、两期比例" class="headerlink" title="3、两期比例"></a>3、两期比例</h2><h3 id="1、两期比重"><a href="#1、两期比重" class="headerlink" title="1、两期比重"></a>1、两期比重</h3><p><strong>常见问法</strong>：xxx年比重与xxx年相比上升了&#x2F;下降的是······；xxx年比重与xxx年相比上升了&#x2F;下降了多少个百分点</p><p><strong>基本公式</strong>：两期比重增加量&#x3D;现期比重-基期比重&#x3D;（A&#x2F;B）×【（a-b）&#x2F;（1+a）】，A表示现期部分量，B表示现期整体量，a、b表示增长率；其中（A&#x2F;B）&lt;1</p><p><strong>注意</strong>：</p><ul><li>两期比重的增长量的正负取决于&#x3D;&#x3D;a-b&#x3D;&#x3D;</li><li>a&gt;b，则比重上升,a&#x3D;b，则比重不变，否则比重下降，就是看<strong>增速</strong></li></ul><h3 id="2、两期平均数"><a href="#2、两期平均数" class="headerlink" title="2、两期平均数"></a>2、两期平均数</h3><p><strong>题型特征</strong>：问题中包含平均；均；每等关键词；对比现期平均数和基期平均数的增长。</p><p><strong>基本公式</strong>：</p><ul><li>平均数增长量&#x3D;现期平均数-基期平均数&#x3D;（A&#x2F;B）×【（a-b）&#x2F;（1+a）】，A表示现期总量，B表示现期个数，a、b表示增长率</li><li>平均增长率&#x3D;（现期平均数-基期平均数）&#x2F;基期平均数&#x3D; &#x3D;&#x3D;（a-b）&#x2F;（1+a）&#x3D;&#x3D;比如：今年房价销售额增速为a，销售面积增速为b，则均价增速为（a-b）&#x2F;（1+a）</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、统计术语&quot;&gt;&lt;a href=&quot;#一、统计术语&quot; class=&quot;headerlink&quot; title=&quot;一、统计术语&quot;&gt;&lt;/a&gt;一、统计术语&lt;/h1&gt;&lt;h2 id=&quot;1、基期量与现期量&quot;&gt;&lt;a href=&quot;#1、基期量与现期量&quot; class=&quot;headerlink</summary>
      
    
    
    
    
    <category term="行测" scheme="http://example.com/tags/%E8%A1%8C%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>Anylogic之项目</title>
    <link href="http://example.com/2022/10/13/Anylogic%E4%B9%8B%E9%A1%B9%E7%9B%AE/"/>
    <id>http://example.com/2022/10/13/Anylogic%E4%B9%8B%E9%A1%B9%E7%9B%AE/</id>
    <published>2022-10-13T09:26:05.000Z</published>
    <updated>2022-10-14T08:36:33.747Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、说明文档"><a href="#一、说明文档" class="headerlink" title="一、说明文档"></a>一、说明文档</h2><h3 id="第一个页面如下图所示："><a href="#第一个页面如下图所示：" class="headerlink" title="第一个页面如下图所示："></a>第一个页面如下图所示：</h3><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202210141020671.png"                      alt="image-20221014102050075"                ></p><p>第一个页面的主要功能从两个方面进行说明：</p><ul><li>前端往Anylogic端传参数</li><li>热力图显示与关闭</li></ul><p>可以看出分为四个模块：左上、左下、右上、右下。</p><ul><li>左上：往输入框中写入文本框提示的对应数值，然后点击后面相应按钮，就可以传到对应的端口。<ul><li>数据格式如上图所示：id:1,count:20;id代表哪个灾害，count代表数量</li></ul></li><li>左下：是进行台风、地震、火灾伤员人数设置的，同样在文本框中输入相应的数值，点击按钮就会传入对应的端口。<ul><li>数据格式就是随便输入数字</li></ul></li><li>右上：有两个功能：<ol><li>点击地图上任意一点，右下模块就会显示对应的经纬度及地区，且最开始显示的经纬度及地区是根据IP地址进行判断的。</li><li>点击打开热力图就会不断的从后端接收数据，并显示在地图上；点击关闭就会暂停对数据的接收并且不显示热力图。</li></ol></li><li>右下：根据右上模块点击地图获取的数据进行传输，点击对应按钮输入到对应端口。</li></ul><h3 id="第二个页面如下图所示："><a href="#第二个页面如下图所示：" class="headerlink" title="第二个页面如下图所示："></a>第二个页面如下图所示：</h3><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202210140935034.png"                      alt="image-20221014093502974"                ></p><p>第二页面的主要功能：</p><ul><li>就是进行数据统计，包括公共统计数据图和日常统计数据图。</li><li>当Anylogic端和该页面同时启动就会自动接收数据</li></ul><h3 id="第三个页面如下图所示："><a href="#第三个页面如下图所示：" class="headerlink" title="第三个页面如下图所示："></a>第三个页面如下图所示：</h3><p><strong>第三个页面下总体大规模页面：</strong></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202210140936860.png"                      alt="image-20221014093636913"                ></p><p><strong>第三个页面下单项大规模页面：</strong></p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202210141031144.png"                      alt="image-20221014103110315"                ></p><p>第三页面的主要功能：</p><ul><li>就是进行数据统计，分为总体大规模和单项大规模数据图。<ul><li>其中单项大规模需要启动单个灾害例如火灾，地震或者台风，点击任意一个，单项大规模统计图才会统计数据</li></ul></li><li>当Anylogic端和该页面同时启动就会自动接收数据</li></ul><h3 id="第四个页面如下图所示："><a href="#第四个页面如下图所示：" class="headerlink" title="第四个页面如下图所示："></a>第四个页面如下图所示：</h3><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202210141040077.png"                      alt="image-20221014104045484"                ></p><p>第三页面的主要功能：</p><ul><li>从Anyogic接收小车运行数据，在此页面进行解析并移动</li><li>小蓝点代表小车，白色框是小车编号</li></ul><h2 id="二、代码"><a href="#二、代码" class="headerlink" title="二、代码"></a>二、代码</h2><h3 id="udp传输"><a href="#udp传输" class="headerlink" title="udp传输"></a>udp传输</h3><p>udp传输总体就两种代码：</p><ul><li>接收代码</li><li>发送代码</li></ul><p>接收代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> net.sf.json.JSONObject;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.SocketException;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet implementation class SelectBar1Servlet</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CartServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span>&#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">long</span> <span class="variable">serialVersionUID</span> <span class="operator">=</span> <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@see</span> HttpServlet#HttpServlet()</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="title function_">CartServlet</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="built_in">super</span>();</span><br><span class="line">      <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@see</span> HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">      <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">      doPost(request, response);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@see</span> HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">      <span class="type">JSONObject</span> <span class="variable">json</span> <span class="operator">=</span><span class="keyword">new</span> <span class="title class_">JSONObject</span>();<span class="comment">//JSON格式的数据结构</span></span><br><span class="line">      <span class="comment">//json.put(&quot;result&quot;,&quot; success&quot;);</span></span><br><span class="line">      <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> Receive();</span><br><span class="line">      System.out.println(str);</span><br><span class="line">      <span class="comment">//从其它对象转化成JSON对象</span></span><br><span class="line">      json = JSONObject.fromObject(str);</span><br><span class="line">      response.setCharacterEncoding(<span class="string">&quot;utf-8&quot;</span>);</span><br><span class="line">      response.setContentType(<span class="string">&quot;application/json;charset=utf-8&quot;</span>);</span><br><span class="line">      <span class="type">PrintWriter</span> <span class="variable">out</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">      out = response.getWriter();</span><br><span class="line">      <span class="comment">//out.write(json.toString());</span></span><br><span class="line">      System.out.println(json);</span><br><span class="line">      out.println(json);</span><br><span class="line">      out.flush();</span><br><span class="line">      out.close();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">Receive</span><span class="params">()</span> &#123;</span><br><span class="line">      <span class="comment">//它的唯一作用就是接收和发送数据报</span></span><br><span class="line">      <span class="type">DatagramSocket</span> <span class="variable">ds</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">         ds = <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>(<span class="number">1456</span>);<span class="comment">//创建一个DatagramSocket能够在UDP端口1235接收广播。</span></span><br><span class="line">      &#125; <span class="keyword">catch</span> (SocketException e) &#123;</span><br><span class="line">         <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">         e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">while</span>(<span class="literal">true</span>) &#123;</span><br><span class="line">         <span class="comment">// 创建包对象</span></span><br><span class="line">         <span class="type">byte</span>[] bys = <span class="keyword">new</span> <span class="title class_">byte</span>[<span class="number">9000</span>];</span><br><span class="line">         <span class="comment">//这类表示一个数据报包,接收数据包长度 length DatagramPacket构建。</span></span><br><span class="line">         <span class="type">DatagramPacket</span> <span class="variable">dp</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(bys, bys.length);</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 接收数据</span></span><br><span class="line">         <span class="keyword">try</span> &#123;</span><br><span class="line">            ds.receive(dp);</span><br><span class="line">         &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">            e.printStackTrace();</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         <span class="comment">// 解析数据</span></span><br><span class="line">         <span class="type">InetAddress</span> <span class="variable">address</span> <span class="operator">=</span> dp.getAddress();<span class="comment">// 获取发送端的IP对象</span></span><br><span class="line">         <span class="type">byte</span>[] data = dp.getData();<span class="comment">// 获取接收到的数据</span></span><br><span class="line">         <span class="type">int</span> <span class="variable">length</span> <span class="operator">=</span> dp.getLength();<span class="comment">// 获取具体收到数据的长度</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(data);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">         System.out.println(str);</span><br><span class="line">         ds.close();</span><br><span class="line">         <span class="keyword">return</span> str;</span><br><span class="line">         <span class="comment">// 释放资源</span></span><br><span class="line"></span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发送代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramPacket;</span><br><span class="line"><span class="keyword">import</span> java.net.DatagramSocket;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet implementation class SelectLine2Servlet</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">releaseDailyServlet</span> <span class="keyword">extends</span> <span class="title class_">HttpServlet</span> &#123;</span><br><span class="line">   <span class="comment">// 以下为Socket服务器的IP和端口，根据实际情况修改</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">String</span> <span class="variable">SOCKET_IP</span> <span class="operator">=</span> <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">int</span> <span class="variable">UDP_PORT</span> <span class="operator">=</span> <span class="number">60012</span>; <span class="comment">// UDP传输专用端口</span></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doGet</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">      <span class="built_in">this</span>.doPost(req, resp);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">doPost</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">      <span class="built_in">this</span>.getParam(req, resp);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> String <span class="title function_">getParam</span><span class="params">(HttpServletRequest req, HttpServletResponse resp)</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">      <span class="type">StringBuffer</span> <span class="variable">stringBuffer</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">      <span class="type">BufferedReader</span> <span class="variable">bufferedReader</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">      bufferedReader = req.getReader();</span><br><span class="line">      <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> <span class="literal">null</span> ;</span><br><span class="line">      <span class="keyword">while</span>((str=bufferedReader.readLine())!=<span class="literal">null</span>)&#123;</span><br><span class="line">         stringBuffer.append(str);</span><br><span class="line">      &#125;</span><br><span class="line">      str = stringBuffer.toString() ;</span><br><span class="line">      System.out.println(str);</span><br><span class="line">      startUdpClient(str);</span><br><span class="line">      <span class="keyword">return</span> str;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 启动UDP客户端发送文本消息</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">startUdpClient</span><span class="params">(String quake)</span> &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;UDP客户端发送消息：&quot;</span> + quake);</span><br><span class="line">      <span class="comment">// 创建一个DatagramSocket对象</span></span><br><span class="line">      <span class="keyword">try</span> (<span class="type">DatagramSocket</span> <span class="variable">socket</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramSocket</span>()) &#123;</span><br><span class="line">         <span class="comment">// 根据IP地址获得对应的网络地址对象</span></span><br><span class="line">         <span class="type">InetAddress</span> <span class="variable">serverAddress</span> <span class="operator">=</span> InetAddress.getByName(SOCKET_IP);</span><br><span class="line">         <span class="type">byte</span> data[] = quake.getBytes(); <span class="comment">// 把字符串转换为字节数组</span></span><br><span class="line">         <span class="comment">// 创建一个DatagramPacket对象，构造方法的四个参数依次为：</span></span><br><span class="line">         <span class="comment">// 待发送的数据、数据的长度、服务器的网络地址、服务器的端口号。</span></span><br><span class="line">         <span class="type">DatagramPacket</span> <span class="variable">packet</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">DatagramPacket</span>(data, data.length, serverAddress, UDP_PORT);</span><br><span class="line">         socket.send(packet); <span class="comment">// 向服务器发送数据包</span></span><br><span class="line">      &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">         e.printStackTrace();</span><br><span class="line">      &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="第页面代码"><a href="#第页面代码" class="headerlink" title="第页面代码"></a>第页面代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/BigData.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/index.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/index01.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/js/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://a.amap.com/jsapi_demos/static/demo-center/css/demo-center.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/js/bstable/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/js/bstable/css/bootstrap-table.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/Security_operation.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;assets/js/artDialog/skins/default.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>上海项目<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input-card</span> <span class="selector-class">.btn</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">1.2rem</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">9rem</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input-card</span> <span class="selector-class">.btn</span><span class="selector-pseudo">:last-child</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input</span>&#123;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            -web-kit-appearance:none;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            -moz-appearance: none;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>:<span class="number">1.4em</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>:<span class="number">2.0em</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>:<span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#c8cccf</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:<span class="number">#6a6f77</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">outline</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_bodey&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;index_nav&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">&quot;height: 30px; margin-bottom: 0px;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;l_left total_chose_fr nav_active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>实时监测<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;l_left total_chose_pl&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index1.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>统计分析二<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;r_right total_chose_pl&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index3.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>小车运行<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;r_right total_chose_pl&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index2.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>统计分析四<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;index_tabs&quot;</span> &gt;</span></span><br><span class="line">        <span class="comment">&lt;!--安防运作--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 109%;&quot;</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--第一页左侧--&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left_cage&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--第一页左上角--&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01 cage_cl&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 1.5% !important; height: 55%;&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;input&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;抽调日常救护车&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;transferDaily&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px; margin-left: 5px&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-white btn-info btn-bold&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handleTransferDaily()&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 40px;margin-left: 10px&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;ace-icon fa fa-floppy-o bigger-120 blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                            提交</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;input&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;释放抽调日常救护车&quot;</span>  <span class="attr">v-model</span>=<span class="string">&quot;releaseDaily&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px; margin-left: 5px&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-white btn-info btn-bold&quot;</span>  @<span class="attr">click</span>=<span class="string">&quot;handleReleaseDaily()&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 40px;margin-left: 10px&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;ace-icon fa fa-floppy-o bigger-120 blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                            提交</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;input&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;抽调备用救护车&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;transferSpare&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px; margin-left: 5px&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-white btn-info btn-bold&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handleTransferSpare()&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 40px;margin-left: 10px&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;ace-icon fa fa-floppy-o bigger-120 blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                            提交</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;input&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;释放抽调备用救护车&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;releaseSpare&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px; margin-left: 5px&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-white btn-info btn-bold&quot;</span>  @<span class="attr">click</span>=<span class="string">&quot;handleReleaseSpare()&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 40px;margin-left: 10px&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;ace-icon fa fa-floppy-o bigger-120 blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                            提交</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--第一页左中--&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01 cage_cl&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 1.5% !important; height: 40%;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02 &quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;input&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;台风伤员人数设置&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;typhoon&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px; margin-left: 5px&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-white btn-info btn-bold&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handleTyphoon()&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 40px;margin-left: 10px&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;ace-icon fa fa-floppy-o bigger-120 blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                提交</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;input&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;地震伤员人数设置&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;quake&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px; margin-left: 5px&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-white btn-info btn-bold&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handleQuake()&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 40px;margin-left: 10px&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;ace-icon fa fa-floppy-o bigger-120 blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                提交</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;input&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;火灾伤员人数设置&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;fire&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px; margin-left: 5px&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-white btn-info btn-bold&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handleFire()&quot;</span>  <span class="attr">style</span>=<span class="string">&quot;height: 40px;margin-left: 10px&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;ace-icon fa fa-floppy-o bigger-120 blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                提交</span><br><span class="line">                            <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="comment">&lt;!--第一页中间--&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center_cage&quot;</span>&gt;</span></span><br><span class="line">                <span class="comment">&lt;!--中上--&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01 cage_cl&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 3.5% !important; height: 74%; position: relative;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; overflow: hidden;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="comment">&lt;!--上海地图--&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;map&quot;</span> <span class="attr">id</span>=<span class="string">&quot;map&quot;</span>  &gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-card&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-bottom: 120px;margin-right: 1px&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-item&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;打开热力图&quot;</span> <span class="attr">id</span>=<span class="string">&quot;start&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;openHeatmap()&quot;</span>/&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;关闭热力图&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pause&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;closeHeatmap()&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;app1&quot;</span>&gt;</span></span><br><span class="line">                     <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01 cage_cl&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 0.6% !important; height: 32.1%;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                            <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;input&quot;</span> <span class="attr">name</span>=<span class="string">&quot;address&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span><span class="attr">id</span>=<span class="string">&quot;where&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;地区&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;district&quot;</span><span class="attr">style</span>=<span class="string">&quot;width: 200px; margin-left: 5px&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                            <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;input&quot;</span> <span class="attr">ame</span>=<span class="string">&quot;longitude&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span><span class="attr">id</span>=<span class="string">&quot;lng&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;经度&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lngs&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px; margin-left: 5px&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                            <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;input&quot;</span> <span class="attr">name</span>=<span class="string">&quot;latitude&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span><span class="attr">id</span>=<span class="string">&quot;lat&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;纬度&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lats&quot;</span> <span class="attr">style</span>=<span class="string">&quot;width: 200px; margin-left: 5px&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">br</span>&gt;</span><span class="tag">&lt;/<span class="name">br</span>&gt;</span></span><br><span class="line">                                <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span> <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-white btn-info btn-bold&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handleLats()&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 40px;margin-left: 10px&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;ace-icon fa fa-floppy-o bigger-120 blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                    <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>存入台风<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                                <span class="symbol">&amp;nbsp;</span> <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span> <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span> <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span> <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-white btn-info btn-bold&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handleLats1()&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 40px;margin-left: 10px&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;ace-icon fa fa-floppy-o bigger-120 blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                    <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>存入地震<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                                <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;btn btn-white btn-info btn-bold&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;handleLats2()&quot;</span> <span class="attr">style</span>=<span class="string">&quot;height: 40px;margin-left: 10px&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;ace-icon fa fa-floppy-o bigger-120 blue&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">                                    <span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span>存入火灾<span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span><span class="symbol">&amp;nbsp;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/js/bstable/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/js/bstable/js/bootstrap-table.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;assets/js/jquery.pagination.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/js/bstable/js/bootstrap-table-zh-CN.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://api.map.baidu.com/api?v=2.0&amp;ak=5ieMMexWmzB9jivTq6oCRX9j&amp;callback&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://api.map.baidu.com/library/Heatmap/2.0/src/Heatmap_min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--百度地图--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> is_empty =<span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">    lng = <span class="number">121.484205</span>;</span></span><br><span class="line"><span class="language-javascript">    lat = <span class="number">31.242241</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> map = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Map</span>(<span class="string">&quot;map&quot;</span>);<span class="comment">//在指定的容器内创建地图实例</span></span></span><br><span class="line"><span class="language-javascript">    map.<span class="title function_">setDefaultCursor</span>(<span class="string">&quot;crosshair&quot;</span>);<span class="comment">//设置地图默认的鼠标指针样式</span></span></span><br><span class="line"><span class="language-javascript">    map.<span class="title function_">enableScrollWheelZoom</span>();<span class="comment">//启用滚轮放大缩小，默认禁用。</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> point =<span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(lng,lat)</span></span><br><span class="line"><span class="language-javascript">    map.<span class="title function_">centerAndZoom</span>(point, <span class="number">15</span>);</span></span><br><span class="line"><span class="language-javascript">    map.<span class="title function_">addControl</span>(<span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">NavigationControl</span>());</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> marker = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Marker</span>(point);        <span class="comment">// 创建标注</span></span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">this</span>.<span class="property">map</span>.<span class="title function_">addOverlay</span>(marker);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    map.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="keyword">function</span>(<span class="params">e</span>)&#123;<span class="comment">//地图单击事件</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> geocoder = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Geocoder</span>();</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> point = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(e.<span class="property">point</span>.<span class="property">lng</span>,e.<span class="property">point</span>.<span class="property">lat</span>);</span></span><br><span class="line"><span class="language-javascript">        geocoder.<span class="title function_">getLocation</span>(point,<span class="keyword">function</span>(<span class="params">geocoderResult,LocationOptions</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            map.<span class="title function_">clearOverlays</span>()</span></span><br><span class="line"><span class="language-javascript">            map.<span class="title function_">addControl</span>(<span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">NavigationControl</span>());</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> marker = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Marker</span>(point);        <span class="comment">// 创建标注</span></span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">this</span>.<span class="property">map</span>.<span class="title function_">addOverlay</span>(marker);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//定位成功</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">var</span> address = geocoderResult.<span class="property">address</span>;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;where&quot;</span>).<span class="property">value</span> =address</span></span><br><span class="line"><span class="language-javascript">            layer.<span class="title function_">msg</span>(<span class="string">&#x27;定位成功&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// $(&#x27;#suggestId&#x27;).val(geocoderResult.address);</span></span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;lng&quot;</span>).<span class="property">value</span> = e.<span class="property">point</span>.<span class="property">lng</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;lat&quot;</span>).<span class="property">value</span> = e.<span class="property">point</span>.<span class="property">lat</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">iploac</span>(<span class="params">result</span>)&#123;<span class="comment">//根据IP设置地图中心</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> cityName = result.<span class="property">name</span>;</span></span><br><span class="line"><span class="language-javascript">        map.<span class="title function_">setCenter</span>(cityName);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(is_empty ==<span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> myCity = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">LocalCity</span>();</span></span><br><span class="line"><span class="language-javascript">        myCity.<span class="title function_">get</span>(iploac);</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">dingwei</span>()</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">dingwei</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> geolocation = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Geolocation</span>();</span></span><br><span class="line"><span class="language-javascript">        geolocation.<span class="title function_">getCurrentPosition</span>(<span class="keyword">function</span>(<span class="params">r</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span>(<span class="variable language_">this</span>.<span class="title function_">getStatus</span>() == <span class="variable constant_">BMAP_STATUS_SUCCESS</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> mk = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Marker</span>(r.<span class="property">point</span>);</span></span><br><span class="line"><span class="language-javascript">                map.<span class="title function_">addOverlay</span>(mk);</span></span><br><span class="line"><span class="language-javascript">                map.<span class="title function_">panTo</span>(r.<span class="property">point</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;lng&quot;</span>).<span class="property">value</span> = r.<span class="property">point</span>.<span class="property">lng</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;lat&quot;</span>).<span class="property">value</span> = r.<span class="property">point</span>.<span class="property">lat</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> city_name =r.<span class="property">address</span>.<span class="property">province</span> + r.<span class="property">address</span>.<span class="property">city</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;where&quot;</span>).<span class="property">value</span> = city_name</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;获取失败&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">sear</span>(<span class="params">result</span>)&#123;<span class="comment">//地图搜索</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span>(result.<span class="property">length</span> ==<span class="number">0</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">dingwei</span>();</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span> <span class="literal">false</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> local = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">LocalSearch</span>(map, &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">renderOptions</span>:&#123;<span class="attr">map</span>: map&#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">        local.<span class="title function_">search</span>(result);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> points =[];</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">var</span> s;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">if</span>(!<span class="title function_">isSupportCanvas</span>())&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">alert</span>(<span class="string">&#x27;热力图目前只支持有canvas支持的浏览器,您所使用的浏览器不能使用热力图功能~&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//详细的参数,可以查看heatmap.js的文档 https://github.com/pa7/heatmap.js/blob/master/README.md</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//参数说明如下:</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">/* visible 热力图是否显示,默认为true</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">       * opacity 热力的透明度,1-100</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">       * radius 势力图的每个点的半径大小</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">       * gradient  &#123;JSON&#125; 热力图的渐变区间 . gradient如下所示</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">       * &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        .2:&#x27;rgb(0, 255, 255)&#x27;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        .5:&#x27;rgb(0, 110, 255)&#x27;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        .8:&#x27;rgb(100, 0, 255)&#x27;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">      其中 key 表示插值的位置, 0~1.</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">          value 为颜色值.</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">       */</span></span></span><br><span class="line"><span class="language-javascript">    heatmapOverlay = <span class="keyword">new</span> <span class="title class_">BMapLib</span>.<span class="title class_">HeatmapOverlay</span>(&#123;<span class="string">&quot;radius&quot;</span>:<span class="number">10</span>&#125;);</span></span><br><span class="line"><span class="language-javascript">    map.<span class="title function_">addOverlay</span>(heatmapOverlay);</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//是否显示热力图</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">openHeatmap</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">         s1 = <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">getHeat</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">async</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">url</span>: <span class="string">&quot;/ShangHai/HertServlet&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;post&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(points)</span></span><br><span class="line"><span class="language-javascript">                    s= points.<span class="property">length</span>;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (points.<span class="property">length</span>)&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; s; i++) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                            <span class="keyword">if</span> ((result.<span class="property">lng</span> ===points[i].<span class="property">lng</span>)&amp;&amp;(result.<span class="property">lat</span> ===points[i].<span class="property">lat</span>))&#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="variable language_">console</span>.<span class="title function_">log</span>(i)</span></span><br><span class="line"><span class="language-javascript">                                points[i] = result;</span></span><br><span class="line"><span class="language-javascript">                                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;111&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                                <span class="keyword">break</span>;</span></span><br><span class="line"><span class="language-javascript">                            &#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;222&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                                <span class="keyword">if</span> (i+<span class="number">1</span> === s )&#123;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;333&quot;</span>)</span></span><br><span class="line"><span class="language-javascript">                                    points.<span class="title function_">push</span>(result)</span></span><br><span class="line"><span class="language-javascript">                                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                        points.<span class="title function_">push</span>(result);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                    heatmapOverlay.<span class="title function_">setDataSet</span>(&#123;<span class="attr">data</span>:points,<span class="attr">max</span>:<span class="number">10</span>&#125;);</span></span><br><span class="line"><span class="language-javascript">                    heatmapOverlay.<span class="title function_">show</span>();</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript">        &#125;,<span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">closeHeatmap</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">clearInterval</span>(s1)</span></span><br><span class="line"><span class="language-javascript">        heatmapOverlay.<span class="title function_">hide</span>();</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="title function_">closeHeatmap</span>();</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">setGradient</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/*格式如下所示:</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     &#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         0:&#x27;rgb(102, 255, 0)&#x27;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         .5:&#x27;rgb(255, 170, 0)&#x27;,</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">         1:&#x27;rgb(255, 0, 0)&#x27;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">     &#125;*/</span></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> gradient = &#123;&#125;;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> colors = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;input[type=&#x27;color&#x27;]&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">        colors = [].<span class="property">slice</span>.<span class="title function_">call</span>(colors,<span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">        colors.<span class="title function_">forEach</span>(<span class="keyword">function</span>(<span class="params">ele</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            gradient[ele.<span class="title function_">getAttribute</span>(<span class="string">&quot;data-key&quot;</span>)] = ele.<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">        heatmapOverlay.<span class="title function_">setOptions</span>(&#123;<span class="string">&quot;gradient&quot;</span>:gradient&#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//判断浏览区是否支持canvas</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">isSupportCanvas</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> elem = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;canvas&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">return</span> !!(elem.<span class="property">getContext</span> &amp;&amp; elem.<span class="title function_">getContext</span>(<span class="string">&#x27;2d&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 引入组件库 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/js/axios-0.18.0.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> vue = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">typhoon</span>:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">quake</span>:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">fire</span>:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">transferDaily</span>:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">releaseDaily</span>:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">transferSpare</span>:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">releaseSpare</span>:<span class="string">&quot;&quot;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">handleTyphoon</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">window</span>.<span class="property">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">typhoon</span>)</span></span><br><span class="line"><span class="language-javascript">                axios.<span class="title function_">post</span>(<span class="string">&quot;/ShangHai/typhoonServlet&quot;</span>,<span class="variable language_">this</span>.<span class="property">typhoon</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">info</span>(res);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">handleQuake</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">window</span>.<span class="property">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">quake</span>)</span></span><br><span class="line"><span class="language-javascript">                axios.<span class="title function_">post</span>(<span class="string">&quot;/ShangHai/quakeServlet&quot;</span>,<span class="variable language_">this</span>.<span class="property">quake</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">info</span>(res);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">handleFire</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">window</span>.<span class="property">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">fire</span>)</span></span><br><span class="line"><span class="language-javascript">                axios.<span class="title function_">post</span>(<span class="string">&quot;/ShangHai/fireServlet&quot;</span>,<span class="variable language_">this</span>.<span class="property">fire</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">info</span>(res);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">handleTransferDaily</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                axios.<span class="title function_">post</span>(<span class="string">&quot;/ShangHai/transferDailyServlet&quot;</span>,<span class="string">&quot;&#123;&quot;</span>+<span class="variable language_">this</span>.<span class="property">transferDaily</span>+<span class="string">&quot;&#125;&quot;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">info</span>(res);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">handleReleaseDaily</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                axios.<span class="title function_">post</span>(<span class="string">&quot;/ShangHai/releaseDailyServlet&quot;</span>,<span class="string">&quot;&#123;&quot;</span>+<span class="variable language_">this</span>.<span class="property">releaseDaily</span>+<span class="string">&quot;&#125;&quot;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">info</span>(res);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">handleTransferSpare</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                axios.<span class="title function_">post</span>(<span class="string">&quot;/ShangHai/transferSpareServlet&quot;</span>,<span class="string">&quot;&#123;&quot;</span>+<span class="variable language_">this</span>.<span class="property">transferSpare</span>+<span class="string">&quot;&#125;&quot;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">info</span>(res);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">handleReleaseSpare</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">             axios.<span class="title function_">post</span>(<span class="string">&quot;/ShangHai/releaseSpareServlet&quot;</span>,<span class="string">&quot;&#123;&quot;</span>+<span class="variable language_">this</span>.<span class="property">releaseSpare</span>+<span class="string">&quot;&#125;&quot;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">info</span>(res);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> vue = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>: <span class="string">&#x27;#app1&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">data</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">return</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">district</span>:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">lngs</span>:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">lats</span>:<span class="string">&quot;&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">handleLats</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">lats</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;lat&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">district</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;where&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">lngs</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;lng&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                axios.<span class="title function_">post</span>(<span class="string">&quot;/ShangHai/districtServlet&quot;</span>,<span class="string">&quot;&#123;&quot;</span>+<span class="string">&quot;lat:&quot;</span>+<span class="variable language_">this</span>.<span class="property">lats</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;lng:&quot;</span>+<span class="variable language_">this</span>.<span class="property">lngs</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;district:&quot;</span>+<span class="variable language_">this</span>.<span class="property">district</span>+<span class="string">&quot;&#125;&quot;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">info</span>(res);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">handleLats1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">lats</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;lat&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">district</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;where&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">lngs</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;lng&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                axios.<span class="title function_">post</span>(<span class="string">&quot;/ShangHai/district1Servlet&quot;</span>,<span class="string">&quot;&#123;&quot;</span>+<span class="string">&quot;lat:&quot;</span>+<span class="variable language_">this</span>.<span class="property">lats</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;lng:&quot;</span>+<span class="variable language_">this</span>.<span class="property">lngs</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;district:&quot;</span>+<span class="variable language_">this</span>.<span class="property">district</span>+<span class="string">&quot;&#125;&quot;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">info</span>(res);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">handleLats2</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">lats</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;lat&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">district</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;where&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">lngs</span> = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;lng&quot;</span>).<span class="property">value</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                axios.<span class="title function_">post</span>(<span class="string">&quot;/ShangHai/district2Servlet&quot;</span>,<span class="string">&quot;&#123;&quot;</span>+<span class="string">&quot;lat:&quot;</span>+<span class="variable language_">this</span>.<span class="property">lats</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;lng:&quot;</span>+<span class="variable language_">this</span>.<span class="property">lngs</span>+<span class="string">&quot;,&quot;</span>+<span class="string">&quot;district:&quot;</span>+<span class="variable language_">this</span>.<span class="property">district</span>+<span class="string">&quot;&#125;&quot;</span>).<span class="title function_">then</span>(<span class="function">(<span class="params">res</span>)=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">info</span>(res);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                &#125;)</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="第二页代码"><a href="#第二页代码" class="headerlink" title="第二页代码"></a>第二页代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/BigData.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/index.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/index01.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/js/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/js/echarts.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://a.amap.com/jsapi_demos/static/demo-center/css/demo-center.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/js/bstable/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/js/bstable/css/bootstrap-table.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/Security_operation.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>上海项目<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">html</span>, <span class="selector-tag">body</span>, <span class="selector-id">#allmap</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input-card</span> <span class="selector-class">.btn</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">1.2rem</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">9rem</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input-card</span> <span class="selector-class">.btn</span><span class="selector-pseudo">:last-child</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input</span>&#123;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            -web-kit-appearance:none;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            -moz-appearance: none;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>:<span class="number">1.4em</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>:<span class="number">2.0em</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>:<span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#c8cccf</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:<span class="number">#6a6f77</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">outline</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/js/axios-0.18.0.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_bodey&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;index_nav&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">&quot;height: 30px; margin-bottom: 0px;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;l_left total_chose_fr &quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>实时监测<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;l_left total_chose_pl nav_active&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index1.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>统计分析二<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;r_right total_chose_pl&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index3.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>小车运行<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;r_right total_chose_pl&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index2.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>统计分析四<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>  &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;clear&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_left01&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll maginS&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>空闲床位比率<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;buyTime&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>日常繁忙、空闲比率<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;Package01&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>二甲、三甲医院占比<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;rode01&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_left01&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll maginS&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>日常伤员生成数量<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;bookAret&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>日常伤员平均等待时间<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;bookBmonth&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>日常救护车利用率<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;whearAbook&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_left01&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll maginS&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>日常驾车去医院比率<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;seaAbook01&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>日常伤员车上平均耗时<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;actionBook&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>日常车上最大值输出<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sperceBook01&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--1空闲床位比率--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myLine = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;buyTime&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> date = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> datas = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now =<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">addData</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/data1Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                now = now+result.<span class="property">num</span>;</span></span><br><span class="line"><span class="language-javascript">                date.<span class="title function_">push</span>(now);</span></span><br><span class="line"><span class="language-javascript">                datas.<span class="title function_">push</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                myLine.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine.<span class="title function_">setOption</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:[<span class="string">&#x27;#7de494&#x27;</span>,<span class="string">&#x27;#7fd7b1&#x27;</span>, <span class="string">&#x27;#5578cf&#x27;</span>, <span class="string">&#x27;#5ebbeb&#x27;</span>, <span class="string">&#x27;#d16ad8&#x27;</span>,<span class="string">&#x27;#f8e19a&#x27;</span>,  <span class="string">&#x27;#00b7ee&#x27;</span>, <span class="string">&#x27;#81dabe&#x27;</span>,<span class="string">&#x27;#5fc5ce&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">left</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">right</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">top</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">bottom</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbox</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">feature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">saveAsImage</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">boundaryGap</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: date</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;2014年&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>:<span class="string">&#x27;line&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">stack</span>: <span class="string">&#x27;总量&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">areaStyle</span>: &#123;<span class="attr">normal</span>: &#123;&#125;&#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>:datas</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--2日常繁忙、空闲--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myBar1 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;Package01&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/data2Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                myBar1.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                myBar1.<span class="title function_">setOption</span>(&#123; <span class="comment">//加载数据图表</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>: [<span class="string">&#x27;#3398DB&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">tooltip</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">trigger</span>: <span class="string">&#x27;axis&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">axisPointer</span>: &#123;            <span class="comment">// 坐标轴指示器，坐标轴触发有效</span></span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">type</span>: <span class="string">&#x27;shadow&#x27;</span>        <span class="comment">// 默认为直线，可选为：&#x27;line&#x27; | &#x27;shadow&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">left</span>: <span class="string">&#x27;3%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">right</span>: <span class="string">&#x27;4%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">bottom</span>: <span class="string">&#x27;3%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">xAxis</span>: [</span></span><br><span class="line"><span class="language-javascript">                        &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">data</span>: [<span class="string">&#x27;日常繁忙&#x27;</span>,<span class="string">&#x27;日常空闲&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">axisTick</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">alignWithLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.6)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                                &#125;</span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    ],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">yAxis</span>:[</span></span><br><span class="line"><span class="language-javascript">                        &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.6)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                                &#125;</span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,0.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                                &#125;</span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                            type : <span class="string">&#x27;value&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    ],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                        &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">name</span>: <span class="string">&#x27;直接访问&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">barWidth</span>: <span class="string">&#x27;60%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">data</span>:[result.<span class="property">busy</span>,result.<span class="property">idle</span>]</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    ]</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                myBar1.<span class="title function_">hideLoading</span>();</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--3二甲、三甲医院占比--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    myBar2 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;rode01&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/data3Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(result);</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                myBar2.<span class="title function_">setOption</span>(&#123; <span class="comment">//加载数据图表</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>: [<span class="string">&#x27;#3398DB&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">tooltip</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">trigger</span>: <span class="string">&#x27;axis&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">axisPointer</span>: &#123;            <span class="comment">// 坐标轴指示器，坐标轴触发有效</span></span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">type</span>: <span class="string">&#x27;shadow&#x27;</span>        <span class="comment">// 默认为直线，可选为：&#x27;line&#x27; | &#x27;shadow&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">left</span>: <span class="string">&#x27;3%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">right</span>: <span class="string">&#x27;4%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">bottom</span>: <span class="string">&#x27;3%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">xAxis</span>: [</span></span><br><span class="line"><span class="language-javascript">                        &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">data</span>: [<span class="string">&#x27;二甲&#x27;</span>,<span class="string">&#x27;三甲&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">axisTick</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">alignWithLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.6)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                                &#125;</span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    ],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">yAxis</span>:[</span></span><br><span class="line"><span class="language-javascript">                        &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.6)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                                &#125;</span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,0.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                                &#125;</span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                            type : <span class="string">&#x27;value&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    ],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                        &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">name</span>: <span class="string">&#x27;直接访问&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">barWidth</span>: <span class="string">&#x27;60%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">data</span>:[result.<span class="property">two</span>,result.<span class="property">three</span>]</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    ]</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--5日常伤员平均等待时间--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myLine5 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;bookBmonth&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> date5 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> datas5 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now5 =<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">addData5</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine5.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/data5Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript">                now5 = now5+result.<span class="property">num</span>;</span></span><br><span class="line"><span class="language-javascript">                date5.<span class="title function_">push</span>(now5);</span></span><br><span class="line"><span class="language-javascript">                datas5.<span class="title function_">push</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                myLine5.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        myLine5.<span class="title function_">setOption</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:[<span class="string">&#x27;#7de494&#x27;</span>,<span class="string">&#x27;#7fd7b1&#x27;</span>, <span class="string">&#x27;#5578cf&#x27;</span>, <span class="string">&#x27;#5ebbeb&#x27;</span>, <span class="string">&#x27;#d16ad8&#x27;</span>,<span class="string">&#x27;#f8e19a&#x27;</span>,  <span class="string">&#x27;#00b7ee&#x27;</span>, <span class="string">&#x27;#81dabe&#x27;</span>,<span class="string">&#x27;#5fc5ce&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">left</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">right</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">top</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">bottom</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbox</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">feature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">saveAsImage</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">boundaryGap</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: date5</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;2014年&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>:<span class="string">&#x27;line&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">stack</span>: <span class="string">&#x27;总量&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">areaStyle</span>: &#123;<span class="attr">normal</span>: &#123;&#125;&#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>:datas5</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--6日常救护车利用率--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myLine6 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;whearAbook&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> date6 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> datas6 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now6 =<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">addData6</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine6.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/data6Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                now6 = now6+result.<span class="property">num</span>;</span></span><br><span class="line"><span class="language-javascript">                date6.<span class="title function_">push</span>(now6);</span></span><br><span class="line"><span class="language-javascript">                datas6.<span class="title function_">push</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                myLine6.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        myLine6.<span class="title function_">setOption</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:[<span class="string">&#x27;#7de494&#x27;</span>,<span class="string">&#x27;#7fd7b1&#x27;</span>, <span class="string">&#x27;#5578cf&#x27;</span>, <span class="string">&#x27;#5ebbeb&#x27;</span>, <span class="string">&#x27;#d16ad8&#x27;</span>,<span class="string">&#x27;#f8e19a&#x27;</span>,  <span class="string">&#x27;#00b7ee&#x27;</span>, <span class="string">&#x27;#81dabe&#x27;</span>,<span class="string">&#x27;#5fc5ce&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">left</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">right</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">top</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">bottom</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbox</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">feature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">saveAsImage</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">boundaryGap</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: date6</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;2014年&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>:<span class="string">&#x27;line&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">stack</span>: <span class="string">&#x27;总量&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">areaStyle</span>: &#123;<span class="attr">normal</span>: &#123;&#125;&#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>:datas6</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--7日常驾车去医院比率--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myLine7 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;seaAbook01&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> date7 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> datas7 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now7 =<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">addData7</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine7.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/data7Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                now7 = now7+result.<span class="property">num</span>;</span></span><br><span class="line"><span class="language-javascript">                date7.<span class="title function_">push</span>(now7);</span></span><br><span class="line"><span class="language-javascript">                datas7.<span class="title function_">push</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                myLine7.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        myLine7.<span class="title function_">setOption</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:[<span class="string">&#x27;#7de494&#x27;</span>,<span class="string">&#x27;#7fd7b1&#x27;</span>, <span class="string">&#x27;#5578cf&#x27;</span>, <span class="string">&#x27;#5ebbeb&#x27;</span>, <span class="string">&#x27;#d16ad8&#x27;</span>,<span class="string">&#x27;#f8e19a&#x27;</span>,  <span class="string">&#x27;#00b7ee&#x27;</span>, <span class="string">&#x27;#81dabe&#x27;</span>,<span class="string">&#x27;#5fc5ce&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">left</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">right</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">top</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">bottom</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbox</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">feature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">saveAsImage</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">boundaryGap</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: date7</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;2014年&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>:<span class="string">&#x27;line&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">stack</span>: <span class="string">&#x27;总量&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">areaStyle</span>: &#123;<span class="attr">normal</span>: &#123;&#125;&#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>:datas7</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--8日常伤员车上平均耗时--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myLine8 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;actionBook&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> date8 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> datas8 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now8 =<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">addData8</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine8.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/data8Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                now8 = now8+result.<span class="property">num</span>;</span></span><br><span class="line"><span class="language-javascript">                date8.<span class="title function_">push</span>(now8);</span></span><br><span class="line"><span class="language-javascript">                datas8.<span class="title function_">push</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                myLine8.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        myLine8.<span class="title function_">setOption</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:[<span class="string">&#x27;#7de494&#x27;</span>,<span class="string">&#x27;#7fd7b1&#x27;</span>, <span class="string">&#x27;#5578cf&#x27;</span>, <span class="string">&#x27;#5ebbeb&#x27;</span>, <span class="string">&#x27;#d16ad8&#x27;</span>,<span class="string">&#x27;#f8e19a&#x27;</span>,  <span class="string">&#x27;#00b7ee&#x27;</span>, <span class="string">&#x27;#81dabe&#x27;</span>,<span class="string">&#x27;#5fc5ce&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">left</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">right</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">top</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">bottom</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbox</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">feature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">saveAsImage</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">boundaryGap</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: date8</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;2014年&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>:<span class="string">&#x27;line&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">stack</span>: <span class="string">&#x27;总量&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">areaStyle</span>: &#123;<span class="attr">normal</span>: &#123;&#125;&#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>:datas8</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--9日常车上最大值输出--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myLine9 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;sperceBook01&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> date9 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> datas9 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now9 =<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">addData9</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine9.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/data9Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                now9 = now9+result.<span class="property">num</span>;</span></span><br><span class="line"><span class="language-javascript">                date9.<span class="title function_">push</span>(now9);</span></span><br><span class="line"><span class="language-javascript">                datas9.<span class="title function_">push</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                myLine9.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        myLine9.<span class="title function_">setOption</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:[<span class="string">&#x27;#7de494&#x27;</span>,<span class="string">&#x27;#7fd7b1&#x27;</span>, <span class="string">&#x27;#5578cf&#x27;</span>, <span class="string">&#x27;#5ebbeb&#x27;</span>, <span class="string">&#x27;#d16ad8&#x27;</span>,<span class="string">&#x27;#f8e19a&#x27;</span>,  <span class="string">&#x27;#00b7ee&#x27;</span>, <span class="string">&#x27;#81dabe&#x27;</span>,<span class="string">&#x27;#5fc5ce&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">left</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">right</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">top</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">bottom</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbox</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">feature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">saveAsImage</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">boundaryGap</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: date9</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;2014年&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>:<span class="string">&#x27;line&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">stack</span>: <span class="string">&#x27;总量&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">areaStyle</span>: &#123;<span class="attr">normal</span>: &#123;&#125;&#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>:datas9</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--4日常伤员生成数量--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myLine4 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;bookAret&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> date4 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> datas4 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now4 =<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">addData4</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine4.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/data4Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                now4 = now4+result.<span class="property">num</span>;</span></span><br><span class="line"><span class="language-javascript">                date4.<span class="title function_">push</span>(now4);</span></span><br><span class="line"><span class="language-javascript">                datas4.<span class="title function_">push</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                myLine4.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        myLine4.<span class="title function_">setOption</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:[<span class="string">&#x27;#7de494&#x27;</span>,<span class="string">&#x27;#7fd7b1&#x27;</span>, <span class="string">&#x27;#5578cf&#x27;</span>, <span class="string">&#x27;#5ebbeb&#x27;</span>, <span class="string">&#x27;#d16ad8&#x27;</span>,<span class="string">&#x27;#f8e19a&#x27;</span>,  <span class="string">&#x27;#00b7ee&#x27;</span>, <span class="string">&#x27;#81dabe&#x27;</span>,<span class="string">&#x27;#5fc5ce&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">left</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">right</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">top</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">bottom</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbox</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">feature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">saveAsImage</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">boundaryGap</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: date4</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;2014年&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>:<span class="string">&#x27;line&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">stack</span>: <span class="string">&#x27;总量&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">areaStyle</span>: &#123;<span class="attr">normal</span>: &#123;&#125;&#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>:datas4</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="第三页代码"><a href="#第三页代码" class="headerlink" title="第三页代码"></a>第三页代码</h3><p>第三页第一个：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/BigData.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/index.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/index01.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/js/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/js/echarts.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://a.amap.com/jsapi_demos/static/demo-center/css/demo-center.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/js/bstable/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/js/bstable/css/bootstrap-table.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/Security_operation.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>上海项目<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">html</span>, <span class="selector-tag">body</span>, <span class="selector-id">#allmap</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input-card</span> <span class="selector-class">.btn</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">1.2rem</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">9rem</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input-card</span> <span class="selector-class">.btn</span><span class="selector-pseudo">:last-child</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input</span>&#123;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            -web-kit-appearance:none;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            -moz-appearance: none;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>:<span class="number">1.4em</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>:<span class="number">2.0em</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>:<span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#c8cccf</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:<span class="number">#6a6f77</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">outline</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_bodey&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;index_nav&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">&quot;height: 30px; margin-bottom: 0px;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;l_left total_chose_fr&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>实时监测<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;l_left total_chose_pl&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index1.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>统计分析二<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;r_right total_chose_pl&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index3.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>小车运行<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;r_right total_chose_pl nav_active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index2.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>统计分析四<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;index_tabs&quot;</span> &gt;</span></span><br><span class="line"><span class="comment">&lt;!--四--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;shuju_nav&quot;</span> &gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">&quot;height: 30px; margin-bottom: 0px;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;l_left total_chose_fr nav_active1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index2.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>总体大规模<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;l_left total_chose_pl&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index2_1.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>单项大规模<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;index1_tabs&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner1&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;clear&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_left06&quot;</span> &gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll04 &quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01&quot;</span><span class="attr">style</span>=<span class="string">&quot;margin-top: 0%&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>总体伤员平均等待时间<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;s1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll04&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 0%&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>伤员生成数量<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;s2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll04&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 0%&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>台风伤员平均等待时间<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;s3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_left06&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll04 &quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 0%;height: 150%;width:115%&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>地震伤员平均等待时间<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;s4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll04&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 100px;height: 150%;width:115%&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>火灾伤员平均等待时间<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;s5&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_left06&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll04&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder03&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 0%;margin-left: 40px&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>日常伤员生成地统计<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;s6&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll04&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder03&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 100px;margin-left: 40px&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>各区等待时长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;s7&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--1总体伤员平均等待时间--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myLine10 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;s1&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> date10 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> datas10 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now10 =<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">addData</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/mdata1Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript">                now10 = now10+result.<span class="property">num</span>;</span></span><br><span class="line"><span class="language-javascript">                date10.<span class="title function_">push</span>(now10);</span></span><br><span class="line"><span class="language-javascript">                datas10.<span class="title function_">push</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine10.<span class="title function_">setOption</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:[<span class="string">&#x27;#7de494&#x27;</span>,<span class="string">&#x27;#7fd7b1&#x27;</span>, <span class="string">&#x27;#5578cf&#x27;</span>, <span class="string">&#x27;#5ebbeb&#x27;</span>, <span class="string">&#x27;#d16ad8&#x27;</span>,<span class="string">&#x27;#f8e19a&#x27;</span>,  <span class="string">&#x27;#00b7ee&#x27;</span>, <span class="string">&#x27;#81dabe&#x27;</span>,<span class="string">&#x27;#5fc5ce&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">left</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">right</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">top</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">bottom</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbox</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">feature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">saveAsImage</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">boundaryGap</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: date10</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;2014年&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>:<span class="string">&#x27;line&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">stack</span>: <span class="string">&#x27;总量&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>:datas10</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--2伤员生成数量--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myLine11 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;s2&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> date11 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> datas11 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now11 =<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">addData</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/mdata2Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                now11 = now11+result.<span class="property">num</span>;</span></span><br><span class="line"><span class="language-javascript">                date11.<span class="title function_">push</span>(now11);</span></span><br><span class="line"><span class="language-javascript">                datas11.<span class="title function_">push</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine11.<span class="title function_">setOption</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:[<span class="string">&#x27;#7de494&#x27;</span>,<span class="string">&#x27;#7fd7b1&#x27;</span>, <span class="string">&#x27;#5578cf&#x27;</span>, <span class="string">&#x27;#5ebbeb&#x27;</span>, <span class="string">&#x27;#d16ad8&#x27;</span>,<span class="string">&#x27;#f8e19a&#x27;</span>,  <span class="string">&#x27;#00b7ee&#x27;</span>, <span class="string">&#x27;#81dabe&#x27;</span>,<span class="string">&#x27;#5fc5ce&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">left</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">right</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">top</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">bottom</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbox</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">feature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">saveAsImage</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">boundaryGap</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: date11</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>:<span class="string">&#x27;line&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>:datas11</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--3台风伤员平均等待时间--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myLine12 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;s3&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> date12 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> datas12 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now12 =<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">addData</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/mdata3Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                now12 = now12+result.<span class="property">num</span>;</span></span><br><span class="line"><span class="language-javascript">                date12.<span class="title function_">push</span>(now12);</span></span><br><span class="line"><span class="language-javascript">                datas12.<span class="title function_">push</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine12.<span class="title function_">setOption</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:[<span class="string">&#x27;#7de494&#x27;</span>,<span class="string">&#x27;#7fd7b1&#x27;</span>, <span class="string">&#x27;#5578cf&#x27;</span>, <span class="string">&#x27;#5ebbeb&#x27;</span>, <span class="string">&#x27;#d16ad8&#x27;</span>,<span class="string">&#x27;#f8e19a&#x27;</span>,  <span class="string">&#x27;#00b7ee&#x27;</span>, <span class="string">&#x27;#81dabe&#x27;</span>,<span class="string">&#x27;#5fc5ce&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">left</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">right</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">top</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">bottom</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbox</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">feature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">saveAsImage</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">boundaryGap</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: date12</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>:<span class="string">&#x27;line&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>:datas12</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--4地震伤员平均等待时间--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myLine13 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;s4&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> date13 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> datas13 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now13 =<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">addData</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/mdata4Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                now13 = now13+result.<span class="property">num</span>;</span></span><br><span class="line"><span class="language-javascript">                date13.<span class="title function_">push</span>(now13);</span></span><br><span class="line"><span class="language-javascript">                datas13.<span class="title function_">push</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine13.<span class="title function_">setOption</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:[<span class="string">&#x27;#7de494&#x27;</span>,<span class="string">&#x27;#7fd7b1&#x27;</span>, <span class="string">&#x27;#5578cf&#x27;</span>, <span class="string">&#x27;#5ebbeb&#x27;</span>, <span class="string">&#x27;#d16ad8&#x27;</span>,<span class="string">&#x27;#f8e19a&#x27;</span>,  <span class="string">&#x27;#00b7ee&#x27;</span>, <span class="string">&#x27;#81dabe&#x27;</span>,<span class="string">&#x27;#5fc5ce&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">left</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">right</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">top</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">bottom</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbox</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">feature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">saveAsImage</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">boundaryGap</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: date13</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;2014年&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>:<span class="string">&#x27;line&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">stack</span>: <span class="string">&#x27;总量&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">areaStyle</span>: &#123;<span class="attr">normal</span>: &#123;&#125;&#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>:datas13</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--5火灾伤员平均等待时间--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myLine14 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;s5&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> date14 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> datas14 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now14 =<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">addData</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/mdata5Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                now14 = now14+result.<span class="property">num</span>;</span></span><br><span class="line"><span class="language-javascript">                date14.<span class="title function_">push</span>(now14);</span></span><br><span class="line"><span class="language-javascript">                datas14.<span class="title function_">push</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine14.<span class="title function_">setOption</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:[<span class="string">&#x27;#7de494&#x27;</span>,<span class="string">&#x27;#7fd7b1&#x27;</span>, <span class="string">&#x27;#5578cf&#x27;</span>, <span class="string">&#x27;#5ebbeb&#x27;</span>, <span class="string">&#x27;#d16ad8&#x27;</span>,<span class="string">&#x27;#f8e19a&#x27;</span>,  <span class="string">&#x27;#00b7ee&#x27;</span>, <span class="string">&#x27;#81dabe&#x27;</span>,<span class="string">&#x27;#5fc5ce&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">left</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">right</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">top</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">bottom</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbox</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">feature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">saveAsImage</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">boundaryGap</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: date14</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;2014年&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>:<span class="string">&#x27;line&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">stack</span>: <span class="string">&#x27;总量&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">areaStyle</span>: &#123;<span class="attr">normal</span>: &#123;&#125;&#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>:datas14</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--6日常伤员生成地统计--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myBar3 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;s6&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/mdata6Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                myBar3.<span class="title function_">setOption</span>(&#123; <span class="comment">//加载数据图表</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>: [<span class="string">&#x27;#3398DB&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">tooltip</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">trigger</span>: <span class="string">&#x27;axis&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">axisPointer</span>: &#123;            <span class="comment">// 坐标轴指示器，坐标轴触发有效</span></span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">type</span>: <span class="string">&#x27;shadow&#x27;</span>        <span class="comment">// 默认为直线，可选为：&#x27;line&#x27; | &#x27;shadow&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">left</span>: <span class="string">&#x27;3%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">right</span>: <span class="string">&#x27;4%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">bottom</span>: <span class="string">&#x27;3%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">xAxis</span>: [</span></span><br><span class="line"><span class="language-javascript">                        &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">data</span>: [<span class="string">&#x27;闵行区&#x27;</span>,<span class="string">&#x27;黄浦区&#x27;</span>,<span class="string">&#x27;徐汇区&#x27;</span>,<span class="string">&#x27;长宁区&#x27;</span>,<span class="string">&#x27;静安区&#x27;</span>,<span class="string">&#x27;普陀区&#x27;</span>,<span class="string">&#x27;虹口区&#x27;</span>,<span class="string">&#x27;杨浦区&#x27;</span>,<span class="string">&#x27;浦东新区&#x27;</span>,<span class="string">&#x27;金山区&#x27;</span>,<span class="string">&#x27;闸北区&#x27;</span>,<span class="string">&#x27;嘉定区&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">axisTick</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">alignWithLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.6)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                                &#125;</span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    ],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">yAxis</span>:[</span></span><br><span class="line"><span class="language-javascript">                        &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.6)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                                &#125;</span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,0.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                                &#125;</span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                            type : <span class="string">&#x27;value&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    ],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                        &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">name</span>: <span class="string">&#x27;直接访问&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">barWidth</span>: <span class="string">&#x27;60%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">data</span>:[result.<span class="property">data0</span>,result.<span class="property">data1</span>,result.<span class="property">data2</span>,result.<span class="property">data3</span>,result.<span class="property">data4</span>,result.<span class="property">data5</span>,result.<span class="property">data6</span>,result.<span class="property">data7</span>,result.<span class="property">data8</span>,result.<span class="property">data9</span>,result.<span class="property">data10</span>,result.<span class="property">data11</span>]</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    ]</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--7各区等待时长--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myBar4 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;s7&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">window</span>.<span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/mdata7Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(result)</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(result.<span class="property">data0</span>)</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                myBar4.<span class="title function_">setOption</span>(&#123; <span class="comment">//加载数据图表</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>: [<span class="string">&#x27;#3398DB&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">tooltip</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">trigger</span>: <span class="string">&#x27;axis&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">axisPointer</span>: &#123;            <span class="comment">// 坐标轴指示器，坐标轴触发有效</span></span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">type</span>: <span class="string">&#x27;shadow&#x27;</span>        <span class="comment">// 默认为直线，可选为：&#x27;line&#x27; | &#x27;shadow&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">left</span>: <span class="string">&#x27;3%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">right</span>: <span class="string">&#x27;4%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">bottom</span>: <span class="string">&#x27;3%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">xAxis</span>: [</span></span><br><span class="line"><span class="language-javascript">                        &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">data</span>: [<span class="string">&#x27;闵行区&#x27;</span>,<span class="string">&#x27;黄浦区&#x27;</span>,<span class="string">&#x27;徐汇区&#x27;</span>,<span class="string">&#x27;长宁区&#x27;</span>,<span class="string">&#x27;静安区&#x27;</span>,<span class="string">&#x27;普陀区&#x27;</span>,<span class="string">&#x27;虹口区&#x27;</span>,<span class="string">&#x27;杨浦区&#x27;</span>,<span class="string">&#x27;浦东新区&#x27;</span>,<span class="string">&#x27;金山区&#x27;</span>,<span class="string">&#x27;闸北区&#x27;</span>,<span class="string">&#x27;嘉定区&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">axisTick</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">alignWithLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.6)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                                &#125;</span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    ],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">yAxis</span>:[</span></span><br><span class="line"><span class="language-javascript">                        &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.6)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                                &#125;</span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                                    <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,0.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                                &#125;</span></span><br><span class="line"><span class="language-javascript">                            &#125;,</span></span><br><span class="line"><span class="language-javascript">                            type : <span class="string">&#x27;value&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    ],</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                        &#123;</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">name</span>: <span class="string">&#x27;直接访问&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">type</span>: <span class="string">&#x27;bar&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">barWidth</span>: <span class="string">&#x27;60%&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                            <span class="attr">data</span>:[result.<span class="property">data0</span>,result.<span class="property">data1</span>,result.<span class="property">data2</span>,result.<span class="property">data3</span>,result.<span class="property">data4</span>,result.<span class="property">data5</span>,result.<span class="property">data6</span>,result.<span class="property">data7</span>,result.<span class="property">data8</span>,result.<span class="property">data9</span>,result.<span class="property">data10</span>,result.<span class="property">data11</span>]</span></span><br><span class="line"><span class="language-javascript">                        &#125;</span></span><br><span class="line"><span class="language-javascript">                    ]</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第三页第二个：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/BigData.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/index.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/index01.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/js/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/js/echarts.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://a.amap.com/jsapi_demos/static/demo-center/css/demo-center.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/js/bstable/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/js/bstable/css/bootstrap-table.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/Security_operation.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>上海项目<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">html</span>, <span class="selector-tag">body</span>, <span class="selector-id">#allmap</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input-card</span> <span class="selector-class">.btn</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">1.2rem</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">9rem</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input-card</span> <span class="selector-class">.btn</span><span class="selector-pseudo">:last-child</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input</span>&#123;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            -web-kit-appearance:none;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            -moz-appearance: none;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>:<span class="number">1.4em</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>:<span class="number">2.0em</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>:<span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#c8cccf</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:<span class="number">#6a6f77</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">outline</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_bodey&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;index_nav&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">&quot;height: 30px; margin-bottom: 0px;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;l_left total_chose_fr&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>实时监测<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;l_left total_chose_pl&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index1.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>统计分析二<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;r_right total_chose_pl&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index3.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>小车运行<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;r_right total_chose_pl nav_active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index2.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>统计分析四<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;index_tabs&quot;</span> &gt;</span></span><br><span class="line"><span class="comment">&lt;!--四--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;shuju_nav&quot;</span> &gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">&quot;height: 30px; margin-bottom: 0px;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;l_left total_chose_fr &quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index2.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>总体大规模<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;l_left total_chose_pl nav_active1&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index2_1.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>单项大规模<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;index1_tabs&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner1&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;clear&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_left06&quot;</span> &gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll04 maginS&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01&quot;</span><span class="attr">style</span>=<span class="string">&quot;margin-top: 0%;height: 150%;width:105%&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>大规模车上平均耗时<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;s8&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll04&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 100px;height: 150%;width:200%;margin-left: 50px&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>大规模车上最大耗时<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;s9&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_left06&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll04 maginS&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 0%;height: 150%;width:115%;margin-left: 10px&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>大规模救护车利用率<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;s10&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_left06&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll04&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder03&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 0%;margin-left: 40px&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>大规模伤员平均等待时间<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;s11&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAll04&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder03&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 100px;margin-left: 40px;width: 200%&quot;</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_tit1&quot;</span>&gt;</span>大规模伤员最大等待时间<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                                    <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;data_chart&quot;</span> <span class="attr">id</span>=<span class="string">&quot;s12&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--8大规模车上平均耗时--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myLine15 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;s8&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> date15 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> datas15 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now15 =<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">addData</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine15.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/mdata8Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                now15 = now15+result.<span class="property">num</span>;</span></span><br><span class="line"><span class="language-javascript">                date15.<span class="title function_">push</span>(now15);</span></span><br><span class="line"><span class="language-javascript">                datas15.<span class="title function_">push</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                myLine15.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine15.<span class="title function_">setOption</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:[<span class="string">&#x27;#7de494&#x27;</span>,<span class="string">&#x27;#7fd7b1&#x27;</span>, <span class="string">&#x27;#5578cf&#x27;</span>, <span class="string">&#x27;#5ebbeb&#x27;</span>, <span class="string">&#x27;#d16ad8&#x27;</span>,<span class="string">&#x27;#f8e19a&#x27;</span>,  <span class="string">&#x27;#00b7ee&#x27;</span>, <span class="string">&#x27;#81dabe&#x27;</span>,<span class="string">&#x27;#5fc5ce&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">left</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">right</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">top</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">bottom</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbox</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">feature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">saveAsImage</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">boundaryGap</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: date15</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;2014年&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>:<span class="string">&#x27;line&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">stack</span>: <span class="string">&#x27;总量&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">areaStyle</span>: &#123;<span class="attr">normal</span>: &#123;&#125;&#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>:datas15</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--9大规模车上最大耗时--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myLine16 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;s9&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> date16 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> datas16 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now16 =<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">addData</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine16.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/mdata9Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                now16 = now16+result.<span class="property">num</span>;</span></span><br><span class="line"><span class="language-javascript">                date16.<span class="title function_">push</span>(now16);</span></span><br><span class="line"><span class="language-javascript">                datas16.<span class="title function_">push</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                myLine16.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine16.<span class="title function_">setOption</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:[<span class="string">&#x27;#7de494&#x27;</span>,<span class="string">&#x27;#7fd7b1&#x27;</span>, <span class="string">&#x27;#5578cf&#x27;</span>, <span class="string">&#x27;#5ebbeb&#x27;</span>, <span class="string">&#x27;#d16ad8&#x27;</span>,<span class="string">&#x27;#f8e19a&#x27;</span>,  <span class="string">&#x27;#00b7ee&#x27;</span>, <span class="string">&#x27;#81dabe&#x27;</span>,<span class="string">&#x27;#5fc5ce&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">left</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">right</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">top</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">bottom</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbox</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">feature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">saveAsImage</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">boundaryGap</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: date16</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;2014年&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>:<span class="string">&#x27;line&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">stack</span>: <span class="string">&#x27;总量&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">areaStyle</span>: &#123;<span class="attr">normal</span>: &#123;&#125;&#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>:datas16</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--10大规模救护车利用率--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myLine17 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;s10&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> date17 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> datas17 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now17 =<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">addData</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine17.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/mdata10Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                now17 = now17+result.<span class="property">num</span>;</span></span><br><span class="line"><span class="language-javascript">                date17.<span class="title function_">push</span>(now17);</span></span><br><span class="line"><span class="language-javascript">                datas17.<span class="title function_">push</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                myLine17.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine17.<span class="title function_">setOption</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:[<span class="string">&#x27;#7de494&#x27;</span>,<span class="string">&#x27;#7fd7b1&#x27;</span>, <span class="string">&#x27;#5578cf&#x27;</span>, <span class="string">&#x27;#5ebbeb&#x27;</span>, <span class="string">&#x27;#d16ad8&#x27;</span>,<span class="string">&#x27;#f8e19a&#x27;</span>,  <span class="string">&#x27;#00b7ee&#x27;</span>, <span class="string">&#x27;#81dabe&#x27;</span>,<span class="string">&#x27;#5fc5ce&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">left</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">right</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">top</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">bottom</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbox</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">feature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">saveAsImage</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">boundaryGap</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: date17</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;2014年&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>:<span class="string">&#x27;line&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">stack</span>: <span class="string">&#x27;总量&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">areaStyle</span>: &#123;<span class="attr">normal</span>: &#123;&#125;&#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>:datas17</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--11大规模伤员平均等待时间--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myLine18 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;s11&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> date18 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> datas18 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now18 =<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">addData</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine18.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/mdata11Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                now18 = now18+result.<span class="property">num</span>;</span></span><br><span class="line"><span class="language-javascript">                date18.<span class="title function_">push</span>(now18);</span></span><br><span class="line"><span class="language-javascript">                datas18.<span class="title function_">push</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                myLine18.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine18.<span class="title function_">setOption</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:[<span class="string">&#x27;#7de494&#x27;</span>,<span class="string">&#x27;#7fd7b1&#x27;</span>, <span class="string">&#x27;#5578cf&#x27;</span>, <span class="string">&#x27;#5ebbeb&#x27;</span>, <span class="string">&#x27;#d16ad8&#x27;</span>,<span class="string">&#x27;#f8e19a&#x27;</span>,  <span class="string">&#x27;#00b7ee&#x27;</span>, <span class="string">&#x27;#81dabe&#x27;</span>,<span class="string">&#x27;#5fc5ce&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">left</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">right</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">top</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">bottom</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbox</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">feature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">saveAsImage</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">boundaryGap</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: date18</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;2014年&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>:<span class="string">&#x27;line&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">stack</span>: <span class="string">&#x27;总量&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">areaStyle</span>: &#123;<span class="attr">normal</span>: &#123;&#125;&#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>:datas18</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--12大规模伤员最大等待时间--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myLine19 = echarts.<span class="title function_">init</span>(<span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;s12&#x27;</span>));</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> date19 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> datas19 = [];</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> now19 =<span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">addData</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine19.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            type : <span class="string">&quot;post&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">async</span> : <span class="literal">true</span>, <span class="comment">//异步请求（同步请求将会锁住浏览器，用户其他操作必须等待请求完成才可以执行）</span></span></span><br><span class="line"><span class="language-javascript">            url : <span class="string">&quot;/ShangHai/mdata12Servlet&quot;</span>, <span class="comment">//请求发送到Controller处，路径我上面写好了的，直接拼的，你自己按照你的写</span></span></span><br><span class="line"><span class="language-javascript">            data : &#123;&#125;,</span></span><br><span class="line"><span class="language-javascript">            dataType : <span class="string">&quot;json&quot;</span>, <span class="comment">//返回数据形式为json</span></span></span><br><span class="line"><span class="language-javascript">            success : <span class="keyword">function</span>(<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//请求成功时执行该函数内容，result即为服务器返回的json对象</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                now19 = now19+result.<span class="property">num</span>;</span></span><br><span class="line"><span class="language-javascript">                date19.<span class="title function_">push</span>(now19);</span></span><br><span class="line"><span class="language-javascript">                datas19.<span class="title function_">push</span>(result.<span class="property">data</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            error : <span class="keyword">function</span>(<span class="params">errorMsg</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                myLine19.<span class="title function_">hideLoading</span>(); <span class="comment">//隐藏加载动画</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">2000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> (<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        myLine19.<span class="title function_">setOption</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">color</span>:[<span class="string">&#x27;#7de494&#x27;</span>,<span class="string">&#x27;#7fd7b1&#x27;</span>, <span class="string">&#x27;#5578cf&#x27;</span>, <span class="string">&#x27;#5ebbeb&#x27;</span>, <span class="string">&#x27;#d16ad8&#x27;</span>,<span class="string">&#x27;#f8e19a&#x27;</span>,  <span class="string">&#x27;#00b7ee&#x27;</span>, <span class="string">&#x27;#81dabe&#x27;</span>,<span class="string">&#x27;#5fc5ce&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">grid</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">left</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">right</span>:<span class="number">40</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">top</span>:<span class="number">30</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">bottom</span>:<span class="number">20</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">containLabel</span>: <span class="literal">true</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">toolbox</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">feature</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">saveAsImage</span>: &#123;&#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">xAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;category&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">boundaryGap</span>: <span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>: date19</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">yAxis</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">type</span>: <span class="string">&#x27;value&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.2)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">splitLine</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">lineStyle</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">color</span>:<span class="string">&#x27;rgba(255,255,255,.1)&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">axisLabel</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&quot;rgba(255,255,255,.7)&quot;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">series</span>: [</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;2014年&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">type</span>:<span class="string">&#x27;line&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">stack</span>: <span class="string">&#x27;总量&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">areaStyle</span>: &#123;<span class="attr">normal</span>: &#123;&#125;&#125;,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">data</span>:datas19</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript">    &#125;, <span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="第四页代码"><a href="#第四页代码" class="headerlink" title="第四页代码"></a>第四页代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/BigData.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/index.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/index01.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/js/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://a.amap.com/jsapi_demos/static/demo-center/css/demo-center.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/js/bstable/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/js/bstable/css/bootstrap-table.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/Security_operation.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;assets/js/artDialog/skins/default.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>上海项目<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">html</span>, <span class="selector-tag">body</span>, <span class="selector-id">#allmap</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input-card</span> <span class="selector-class">.btn</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">1.2rem</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">9rem</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input-card</span> <span class="selector-class">.btn</span><span class="selector-pseudo">:last-child</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input</span>&#123;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            -web-kit-appearance:none;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            -moz-appearance: none;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>:<span class="number">1.4em</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>:<span class="number">2.0em</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>:<span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#c8cccf</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:<span class="number">#6a6f77</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">outline</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_bodey&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;index_nav&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">&quot;height: 30px; margin-bottom: 0px;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;l_left total_chose_fr&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>实时监测<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;l_left total_chose_pl&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index1.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>统计分析二<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;r_right total_chose_pl nav_active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index3.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>小车运行<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;r_right total_chose_pl&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index2.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>统计分析四<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;index_tabs&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--完成--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>  &gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01 cage_cl&quot;</span> <span class="attr">style</span>=<span class="string">&quot; !important; height: 105%; position: relative;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; overflow: hidden;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;allmap&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://api.map.baidu.com/api?v=2.0&amp;ak=5ieMMexWmzB9jivTq6oCRX9j&amp;callback&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 百度地图API功能</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> map=<span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Map</span>(<span class="string">&quot;allmap&quot;</span>); <span class="comment">// 创建map实例</span></span></span><br><span class="line"><span class="language-javascript">    map.<span class="title function_">centerAndZoom</span>(<span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(<span class="number">121.53135</span>, <span class="number">31.165419</span>), <span class="number">13</span>);<span class="comment">// 初始化地图,设置中心点坐标和地图级别</span></span></span><br><span class="line"><span class="language-javascript">    map.<span class="title function_">enableScrollWheelZoom</span>(<span class="literal">true</span>);<span class="comment">//鼠标滚轮缩放</span></span></span><br><span class="line"><span class="language-javascript">    map.<span class="title function_">addControl</span>(<span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">MapTypeControl</span>()); <span class="comment">//添加切换地图类型附件</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> time =<span class="number">3000</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">CartArr</span> = []</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">IDArr</span> = []<span class="comment">//存的是每个小车的id</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">Arr</span> = []<span class="comment">//获取传过来封装好的小车起始和终点的数据</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">Arr2</span> = &#123;&#125;<span class="comment">//每个小车都在这个对象里有对应的数组数据（起始和终点）</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">PointArr1</span> = &#123;&#125;<span class="comment">//每个小车都在这个对象里有对应的数组数据（通过百度地图解析的路径）</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myIcon=<span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Icon</span>(<span class="string">&quot;./assets/img/cars.png&quot;</span>, <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Size</span>(<span class="number">20</span>, <span class="number">20</span>), &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">offset</span>: <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Size</span>(<span class="number">20</span>,<span class="number">20</span>),</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//相当于CSS精灵</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">imageOffset</span>: <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Size</span>(<span class="number">0</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//图片的偏移量。为了是图片底部中心对准坐标点。</span></span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> carMks=[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>,<span class="number">25</span>,<span class="number">26</span>,<span class="number">27</span>,<span class="number">28</span>,<span class="number">29</span>,<span class="number">30</span>,<span class="number">31</span>, <span class="number">32</span>,  <span class="number">33</span>,  <span class="number">34</span>,  <span class="number">35</span>,  <span class="number">36</span>,  <span class="number">37</span>,  <span class="number">38</span>,  <span class="number">39</span>,  <span class="number">40</span>,  <span class="number">41</span>,  <span class="number">42</span>,  <span class="number">43</span>,  <span class="number">44</span>,  <span class="number">45</span>,  <span class="number">46</span>,  <span class="number">47</span>,  <span class="number">48</span>,  <span class="number">49</span>,  <span class="number">50</span>,  <span class="number">51</span>,  <span class="number">52</span>,  <span class="number">53</span>,  <span class="number">54</span>,  <span class="number">55</span>,  <span class="number">56</span>,  <span class="number">57</span>,  <span class="number">58</span>,  <span class="number">59</span>,  <span class="number">60</span>,  <span class="number">61</span>,  <span class="number">62</span>,  <span class="number">63</span>,  <span class="number">64</span>,  <span class="number">65</span>,  <span class="number">66</span>,  <span class="number">67</span>,  <span class="number">68</span>,  <span class="number">69</span>,  <span class="number">70</span>,  <span class="number">71</span>,  <span class="number">72</span>,  <span class="number">73</span>,  <span class="number">74</span>,  <span class="number">75</span>,  <span class="number">76</span>,  <span class="number">77</span>,  <span class="number">78</span>,  <span class="number">79</span>,  <span class="number">80</span>,  <span class="number">81</span>,  <span class="number">82</span>,  <span class="number">83</span>,  <span class="number">84</span>,  <span class="number">85</span>,  <span class="number">86</span>,  <span class="number">87</span>,  <span class="number">88</span>,  <span class="number">89</span>,  <span class="number">90</span>,  <span class="number">91</span>,  <span class="number">92</span>,  <span class="number">93</span>,  <span class="number">94</span>,  <span class="number">95</span>,  <span class="number">96</span>,  <span class="number">97</span>,  <span class="number">98</span>,  <span class="number">99</span>,  <span class="number">100</span>, <span class="number">101</span>, <span class="number">102</span>, <span class="number">103</span>, <span class="number">104</span>, <span class="number">105</span>, <span class="number">106</span>, <span class="number">107</span>, <span class="number">108</span>, <span class="number">109</span>, <span class="number">110</span>, <span class="number">111</span>, <span class="number">112</span>, <span class="number">113</span>, <span class="number">114</span>, <span class="number">115</span>, <span class="number">116</span>, <span class="number">117</span>, <span class="number">118</span>, <span class="number">119</span>, <span class="number">120</span>, <span class="number">121</span>, <span class="number">122</span>, <span class="number">123</span>, <span class="number">124</span>, <span class="number">125</span>, <span class="number">126</span>, <span class="number">127</span>, <span class="number">128</span>, <span class="number">129</span>, <span class="number">130</span>, <span class="number">131</span>, <span class="number">132</span>, <span class="number">133</span>, <span class="number">134</span>, <span class="number">135</span>, <span class="number">136</span>, <span class="number">137</span>, <span class="number">138</span>, <span class="number">139</span>, <span class="number">140</span>, <span class="number">141</span>, <span class="number">142</span>, <span class="number">143</span>, <span class="number">144</span>, <span class="number">145</span>, <span class="number">146</span>, <span class="number">147</span>, <span class="number">148</span>, <span class="number">149</span>, <span class="number">150</span>, <span class="number">151</span>, <span class="number">152</span>, <span class="number">153</span>, <span class="number">154</span>, <span class="number">155</span>, <span class="number">156</span>, <span class="number">157</span>, <span class="number">158</span>, <span class="number">159</span>, <span class="number">160</span>, <span class="number">161</span>, <span class="number">162</span>, <span class="number">163</span>, <span class="number">164</span>, <span class="number">165</span>, <span class="number">166</span>, <span class="number">167</span>, <span class="number">168</span>, <span class="number">169</span>, <span class="number">170</span>, <span class="number">171</span>, <span class="number">172</span>, <span class="number">173</span>, <span class="number">174</span>, <span class="number">175</span>, <span class="number">176</span>, <span class="number">177</span>, <span class="number">178</span>, <span class="number">179</span>, <span class="number">180</span>, <span class="number">181</span>, <span class="number">182</span>, <span class="number">183</span>, <span class="number">184</span>, <span class="number">185</span>, <span class="number">186</span>, <span class="number">187</span>, <span class="number">188</span>, <span class="number">189</span>, <span class="number">190</span>, <span class="number">191</span>, <span class="number">192</span>, <span class="number">193</span>, <span class="number">194</span>, <span class="number">195</span>, <span class="number">196</span>, <span class="number">197</span>, <span class="number">198</span>, <span class="number">199</span>, <span class="number">200</span>,];<span class="comment">//设置车辆图标</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">Is</span>=[<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>];<span class="comment">//循环小车的数组使用</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//小车行驶图标</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//终点图标</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> terminalPoint = myIcon;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">getCars</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">async</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">url</span>: <span class="string">&quot;/ShangHai/CartServlet&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>: <span class="string">&#x27;post&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">0</span>; k &lt; result.<span class="property">col</span>.<span class="property">length</span>; k++) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (!<span class="title class_">CartArr</span>.<span class="title function_">includes</span>(result.<span class="property">col</span>[k].<span class="property">id</span>))&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="title class_">CartArr</span>.<span class="title function_">push</span>(result.<span class="property">col</span>[k].<span class="property">id</span>);</span></span><br><span class="line"><span class="language-javascript">                        <span class="comment">//carMks.push(result.col[k].id);</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                    id1 = result.<span class="property">col</span>[k].<span class="property">id</span>;</span></span><br><span class="line"><span class="language-javascript">                    status = result.<span class="property">col</span>[k].<span class="property">status</span>;</span></span><br><span class="line"><span class="language-javascript">                    lng = result.<span class="property">col</span>[k].<span class="property">lng</span>;</span></span><br><span class="line"><span class="language-javascript">                    lat = result.<span class="property">col</span>[k].<span class="property">lat</span>;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">let</span> <span class="title class_">Arr1</span> = &#123;status,lng,lat,id1&#125;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title class_">Arr</span>.<span class="title function_">push</span>(<span class="title class_">Arr1</span>)</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                <span class="title class_">Arr2</span>[id1] = <span class="title class_">Arr</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="title class_">Arr</span> = []</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// for (let k = 0; k &lt; result.col.length; k++) &#123;</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//     if (!CartArr.includes(result.col[k].id))&#123;</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//         CartArr.push(result.col[k].id);</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//         carMks.push(result.col[k].id);</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//     PointArr.push(result.col[k]);</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">500</span>);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> id;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> j = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> i = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> s = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">startAnimation</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">        time = time/<span class="number">2</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (time &lt;<span class="number">10</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            time =<span class="number">10</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">pauseAnimation</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">        time = time*<span class="number">2</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">start1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// //终点</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// if(Arr2[id1][1].lon==Arr2[id1][0].lon&amp;&amp;Arr2[id1][1].lat==Arr2[id1][0].lat)&#123;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     //相同点，则不需要画图</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     return;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">renderLastPoint</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">700</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">renderLastPoint</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> driving=<span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">DrivingRoute</span>(map);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> sp = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(<span class="title class_">Arr2</span>[id1][<span class="number">0</span>].<span class="property">lng</span>, <span class="title class_">Arr2</span>[id1][<span class="number">0</span>].<span class="property">lat</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> ep = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(<span class="title class_">Arr2</span>[id1][<span class="number">1</span>].<span class="property">lng</span>, <span class="title class_">Arr2</span>[id1][<span class="number">1</span>].<span class="property">lat</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//设置新的开始点</span></span></span><br><span class="line"><span class="language-javascript">        driving.<span class="title function_">search</span>(sp, ep);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        driving.<span class="title function_">setSearchCompleteCallback</span>(<span class="keyword">function</span>(<span class="params">res</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span>(driving.<span class="title function_">getStatus</span>()==<span class="variable constant_">BMAP_STATUS_SUCCESS</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//获取两点之间的实际点组</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> plan=res.<span class="title function_">getPlan</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> arrPois=[];</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;plan.<span class="title function_">getNumRoutes</span>();j++)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">var</span> route=plan.<span class="title function_">getRoute</span>(j);</span></span><br><span class="line"><span class="language-javascript">                    arrPois=arrPois.<span class="title function_">concat</span>(route.<span class="title function_">getPath</span>());</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">let</span> <span class="title class_">PointAee</span> = []</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">0</span>; k &lt; arrPois.<span class="property">length</span> ; k++) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (k &lt;=arrPois.<span class="property">length</span>-<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                        status = <span class="title class_">Arr2</span>[id1][<span class="number">0</span>].<span class="property">status</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        status = <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                    lng = arrPois[k].<span class="property">lng</span>;</span></span><br><span class="line"><span class="language-javascript">                    lat = arrPois[k].<span class="property">lat</span>;</span></span><br><span class="line"><span class="language-javascript">                    id = <span class="title class_">Arr2</span>[id1][<span class="number">1</span>].<span class="property">id1</span>;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (!<span class="title class_">IDArr</span>.<span class="title function_">includes</span>(id))&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="title class_">IDArr</span>.<span class="title function_">push</span>(id);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">let</span> <span class="title class_">PointAww</span> = &#123;status,lng,lat,id&#125;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title class_">PointAee</span>.<span class="title function_">push</span>(<span class="title class_">PointAww</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// if (!CartArr.includes(PointArr[1].id))&#123;</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//     CartArr.push(PointArr[1].id);</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//     carMks.push(PointArr[1].id);</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                <span class="title class_">PointArr1</span>[id] = <span class="title class_">PointAee</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> interval = <span class="built_in">setInterval</span>(fn, time);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// clearInterval(interval);</span></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">IDArr</span>.<span class="property">length</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">IDArr</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> b = <span class="number">0</span>; b &lt; <span class="title class_">IDArr</span>.<span class="property">length</span>; b++) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (<span class="title class_">PointArr1</span>[<span class="title class_">IDArr</span>[b]][<span class="title class_">Is</span>[b]])&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">drawLine</span>(map,<span class="title class_">PointArr1</span>[<span class="title class_">IDArr</span>[b]][<span class="title class_">Is</span>[b]],<span class="title class_">PointArr1</span>[<span class="title class_">IDArr</span>[b]][<span class="title class_">Is</span>[b]+<span class="number">1</span>],<span class="title class_">CartArr</span>);<span class="comment">//画线调用</span></span></span><br><span class="line"><span class="language-javascript">            &#125;<span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="title class_">PointArr1</span>[<span class="title class_">IDArr</span>[b]] = [];</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">Is</span>[b]++</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            interval = <span class="built_in">setInterval</span>(fn, time);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 划线</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">drawLine</span>(<span class="params">map,pointArr,pointArrNext,CartArr</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (pointArrNext != <span class="literal">undefined</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (<span class="title class_">CartArr</span>.<span class="title function_">includes</span>(pointArr.<span class="property">id</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">addMarkerEnd</span>(<span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(pointArrNext.<span class="property">lng</span>, pointArrNext.<span class="property">lat</span>), pointArrNext.<span class="property">status</span>, map, pointArrNext, <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(pointArr.<span class="property">lng</span>, pointArr.<span class="property">lat</span>));<span class="comment">//添加图标</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">addMarkerEnd</span>(<span class="params">point, name, mapInit, trackUnit, prePoint,</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// res = carMks.indexOf(trackUnit.id)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (name === <span class="string">&quot;false&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (carMks[trackUnit.<span class="property">id</span>]) &#123;<span class="comment">//先判断第一次进来的时候这个值有没有定义，有的话就清除掉上一次的。然后在进行画图标。第一次进来时候没有定义也就不走这块，直接进行画图标</span></span></span><br><span class="line"><span class="language-javascript">                    mapInit.<span class="title function_">removeOverlay</span>(carMks[trackUnit.<span class="property">id</span>]);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                carMks[trackUnit.<span class="property">id</span>] = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Marker</span>(point, &#123;<span class="attr">icon</span>: terminalPoint&#125;);  <span class="comment">// 创建标注</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> label = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Label</span>(trackUnit.<span class="property">id</span>, &#123;<span class="attr">offset</span>: <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Size</span>(<span class="number">10</span>, -<span class="number">30</span>)&#125;);</span></span><br><span class="line"><span class="language-javascript">                label.<span class="title function_">setStyle</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">width</span>:<span class="string">&quot;20px&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">textAlign</span>: <span class="string">&quot;center&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">border</span>: <span class="string">&quot;1px solid rgb(204, 204, 204)&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>: <span class="string">&quot;rgb(0, 0, 0)&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">borderRadius</span>: <span class="string">&quot;10px&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">padding</span>: <span class="string">&quot;10px&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">background</span>: <span class="string">&quot;rgb(255, 255, 255)&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">                carMks[trackUnit.<span class="property">id</span>].<span class="title function_">setLabel</span>(label);</span></span><br><span class="line"><span class="language-javascript">                mapInit.<span class="title function_">addOverlay</span>(carMks[trackUnit.<span class="property">id</span>]);               <span class="comment">// 将标注添加到地图中</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                mapInit.<span class="title function_">removeOverlay</span>(carMks[trackUnit.<span class="property">id</span>]);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="小车运行前一次性传过来代码"><a href="#小车运行前一次性传过来代码" class="headerlink" title="小车运行前一次性传过来代码"></a>小车运行前一次性传过来代码</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/BigData.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/index.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/index01.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;assets/js/jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://a.amap.com/jsapi_demos/static/demo-center/css/demo-center.css&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/js/bstable/css/bootstrap.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/js/bstable/css/bootstrap-table.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;assets/css/Security_operation.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;assets/js/artDialog/skins/default.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>上海项目<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-tag">html</span>, <span class="selector-tag">body</span>, <span class="selector-id">#allmap</span> &#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input-card</span> <span class="selector-class">.btn</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">1.2rem</span>;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">width</span>: <span class="number">9rem</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input-card</span> <span class="selector-class">.btn</span><span class="selector-pseudo">:last-child</span>&#123;</span></span><br><span class="line"><span class="language-css">            <span class="attribute">margin-right</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        <span class="selector-class">.input</span>&#123;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            -web-kit-appearance:none;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            -moz-appearance: none;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">font-size</span>:<span class="number">1.4em</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">height</span>:<span class="number">2.0em</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border-radius</span>:<span class="number">5px</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#c8cccf</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">color</span>:<span class="number">#6a6f77</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">            <span class="attribute">outline</span>:<span class="number">0</span>;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">        &#125;</span></span><br><span class="line"><span class="language-css">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span> &gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;data_bodey&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;index_nav&quot;</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">style</span>=<span class="string">&quot;height: 30px; margin-bottom: 0px;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;l_left total_chose_fr&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>实时监测<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;l_left total_chose_pl&quot;</span> &gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index1.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>统计分析二<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;r_right total_chose_pl nav_active&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index3备份.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>统计分析三<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;r_right total_chose_pl&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;index2.html&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: #dbe9f1&quot;</span>&gt;</span>统计分析四<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;index_tabs&quot;</span> &gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--完成--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;inner&quot;</span>  &gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder01 cage_cl&quot;</span> <span class="attr">style</span>=<span class="string">&quot; !important; height: 105%; position: relative;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dataAllBorder02&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position: relative; overflow: hidden;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;allmap&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-card&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h4</span>&gt;</span>小车运行控制<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-item&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;开始&quot;</span> <span class="attr">id</span>=<span class="string">&quot;start1&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;start1()&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;结束&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pause1&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;pausen()&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;input-item&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;速度x2&quot;</span> <span class="attr">id</span>=<span class="string">&quot;start&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;startAnimation()&quot;</span>/&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span> <span class="attr">value</span>=<span class="string">&quot;速度÷2&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pause&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;pauseAnimation()&quot;</span>/&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;http://api.map.baidu.com/api?v=2.0&amp;ak=5ieMMexWmzB9jivTq6oCRX9j&amp;callback&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 百度地图API功能</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> map=<span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Map</span>(<span class="string">&quot;allmap&quot;</span>); <span class="comment">// 创建map实例</span></span></span><br><span class="line"><span class="language-javascript">    map.<span class="title function_">centerAndZoom</span>(<span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(<span class="number">121.53135</span>, <span class="number">31.165419</span>), <span class="number">13</span>);<span class="comment">// 初始化地图,设置中心点坐标和地图级别</span></span></span><br><span class="line"><span class="language-javascript">    map.<span class="title function_">enableScrollWheelZoom</span>(<span class="literal">true</span>);<span class="comment">//鼠标滚轮缩放</span></span></span><br><span class="line"><span class="language-javascript">    map.<span class="title function_">addControl</span>(<span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">MapTypeControl</span>()); <span class="comment">//添加切换地图类型附件</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> time =<span class="number">4000</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">PointArr</span> = [</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// &#123;id:&quot;c1&quot;,lng:116.297611,lat:40.047363,status:200&#125;,</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// &#123;id:&quot;c1&quot;,lng:116.307223,lat:40.056379,status:null&#125;,</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// &#123;id:&quot;car2&quot;,lng:116.307223,lat:40.056379,status:null&#125;,</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// &#123;id:&quot;car2&quot;,lng:116.268751,lat:40.045313,status:400&#125;,</span></span></span><br><span class="line"><span class="language-javascript">    ]</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">CartArr</span> = []</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">IDArr</span> = []</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">Arr</span> = []</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">Arr2</span> = &#123;&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> myIcon=<span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Icon</span>(<span class="string">&quot;./assets/img/cars.png&quot;</span>, <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Size</span>(<span class="number">20</span>, <span class="number">20</span>), &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">offset</span>: <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Size</span>(<span class="number">20</span>,<span class="number">20</span>),</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//相当于CSS精灵</span></span></span><br><span class="line"><span class="language-javascript">        <span class="attr">imageOffset</span>: <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Size</span>(<span class="number">0</span>, <span class="number">0</span>)</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//图片的偏移量。为了是图片底部中心对准坐标点。</span></span></span><br><span class="line"><span class="language-javascript">    &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> carMks=[<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>,<span class="number">11</span>,<span class="number">12</span>,<span class="number">13</span>,<span class="number">14</span>,<span class="number">15</span>,<span class="number">16</span>,<span class="number">17</span>,<span class="number">18</span>,<span class="number">19</span>,<span class="number">20</span>,<span class="number">21</span>,<span class="number">22</span>,<span class="number">23</span>,<span class="number">24</span>,<span class="number">25</span>,<span class="number">26</span>,<span class="number">27</span>,<span class="number">28</span>,<span class="number">29</span>,<span class="number">30</span>];<span class="comment">//设置车辆图标</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//小车行驶图标</span></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">//终点图标</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> terminalPoint = myIcon;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">getCars</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        $.<span class="title function_">ajax</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">async</span>: <span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">url</span>: <span class="string">&quot;/ShangHai/CartServlet&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">type</span>: <span class="string">&#x27;post&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">dataType</span>: <span class="string">&#x27;json&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">success</span>: <span class="keyword">function</span> (<span class="params">result</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//console.log(result)</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">0</span>; k &lt; result.<span class="property">col</span>.<span class="property">length</span>; k++) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (!<span class="title class_">CartArr</span>.<span class="title function_">includes</span>(result.<span class="property">col</span>[k].<span class="property">id</span>))&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="title class_">CartArr</span>.<span class="title function_">push</span>(result.<span class="property">col</span>[k].<span class="property">id</span>);</span></span><br><span class="line"><span class="language-javascript">                        <span class="comment">//carMks.push(result.col[k].id);</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                    id1 = result.<span class="property">col</span>[k].<span class="property">id</span>;</span></span><br><span class="line"><span class="language-javascript">                    status = result.<span class="property">col</span>[k].<span class="property">status</span>;</span></span><br><span class="line"><span class="language-javascript">                    lng = result.<span class="property">col</span>[k].<span class="property">lng</span>;</span></span><br><span class="line"><span class="language-javascript">                    lat = result.<span class="property">col</span>[k].<span class="property">lat</span>;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">let</span> <span class="title class_">Arr1</span> = &#123;status,lng,lat,id1&#125;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title class_">Arr</span>.<span class="title function_">push</span>(<span class="title class_">Arr1</span>)</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                <span class="title class_">Arr2</span>[id1] = <span class="title class_">Arr</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="title class_">Arr</span> = []</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// for (let k = 0; k &lt; result.col.length; k++) &#123;</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//     if (!CartArr.includes(result.col[k].id))&#123;</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//         CartArr.push(result.col[k].id);</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//         carMks.push(result.col[k].id);</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//     &#125;</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//     PointArr.push(result.col[k]);</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//     console.log(PointArr)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;)</span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">500</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> <span class="title class_">PointArr1</span> = &#123;&#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> id;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> j = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> i = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">let</span> s = <span class="number">0</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">startAnimation</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">        time = time/<span class="number">2</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (time &lt;<span class="number">10</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            time =<span class="number">10</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">pauseAnimation</span> () &#123;</span></span><br><span class="line"><span class="language-javascript">        time = time*<span class="number">2</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="built_in">setInterval</span>(<span class="keyword">function</span> <span class="title function_">start1</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// //终点</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// if(Arr2[id1][1].lon==Arr2[id1][0].lon&amp;&amp;Arr2[id1][1].lat==Arr2[id1][0].lat)&#123;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     //相同点，则不需要画图</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//     return;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">renderLastPoint</span>();</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;,<span class="number">700</span>);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">renderLastPoint</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> driving=<span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">DrivingRoute</span>(map);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> sp = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(<span class="title class_">Arr2</span>[id1][<span class="number">0</span>].<span class="property">lng</span>, <span class="title class_">Arr2</span>[id1][<span class="number">0</span>].<span class="property">lat</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> ep = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(<span class="title class_">Arr2</span>[id1][<span class="number">1</span>].<span class="property">lng</span>, <span class="title class_">Arr2</span>[id1][<span class="number">1</span>].<span class="property">lat</span>);</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">//设置新的开始点</span></span></span><br><span class="line"><span class="language-javascript">        driving.<span class="title function_">search</span>(sp, ep);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        driving.<span class="title function_">setSearchCompleteCallback</span>(<span class="keyword">function</span>(<span class="params">res</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span>(driving.<span class="title function_">getStatus</span>()==<span class="variable constant_">BMAP_STATUS_SUCCESS</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//获取两点之间的实际点组</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> plan=res.<span class="title function_">getPlan</span>(<span class="number">0</span>);</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> arrPois=[];</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span>(<span class="keyword">var</span> j=<span class="number">0</span>;j&lt;plan.<span class="title function_">getNumRoutes</span>();j++)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">var</span> route=plan.<span class="title function_">getRoute</span>(j);</span></span><br><span class="line"><span class="language-javascript">                    arrPois=arrPois.<span class="title function_">concat</span>(route.<span class="title function_">getPath</span>());</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">let</span> <span class="title class_">PointAee</span> = []</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">for</span> (<span class="keyword">let</span> k = <span class="number">0</span>; k &lt; arrPois.<span class="property">length</span> ; k++) &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (k &lt;=arrPois.<span class="property">length</span>-<span class="number">2</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                        status = <span class="title class_">Arr2</span>[id1][<span class="number">0</span>].<span class="property">status</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125;<span class="keyword">else</span> &#123;</span></span><br><span class="line"><span class="language-javascript">                        status = <span class="literal">null</span>;</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                    lng = arrPois[k].<span class="property">lng</span>;</span></span><br><span class="line"><span class="language-javascript">                    lat = arrPois[k].<span class="property">lat</span>;</span></span><br><span class="line"><span class="language-javascript">                    id = <span class="title class_">Arr2</span>[id1][<span class="number">1</span>].<span class="property">id1</span>;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">if</span> (!<span class="title class_">IDArr</span>.<span class="title function_">includes</span>(id))&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="title class_">IDArr</span>.<span class="title function_">push</span>(id);</span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">let</span> <span class="title class_">PointAww</span> = &#123;status,lng,lat,id&#125;</span></span><br><span class="line"><span class="language-javascript">                    <span class="title class_">PointAee</span>.<span class="title function_">push</span>(<span class="title class_">PointAww</span>)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// if (!CartArr.includes(PointArr[1].id))&#123;</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//     CartArr.push(PointArr[1].id);</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">//     carMks.push(PointArr[1].id);</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// &#125;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                <span class="title class_">PointArr1</span>[id] = <span class="title class_">PointAee</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    &#125;;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> interval = <span class="built_in">setInterval</span>(fn, time);</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="built_in">clearInterval</span>(interval);</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">for</span> (<span class="keyword">var</span> b = <span class="number">0</span>; b &lt; <span class="title class_">IDArr</span>.<span class="property">length</span>; b++) &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">drawLine</span>(map,<span class="title class_">PointArr1</span>[<span class="title class_">IDArr</span>[b]][i],<span class="title class_">PointArr1</span>[<span class="title class_">IDArr</span>[b]][i+<span class="number">1</span>],<span class="title class_">CartArr</span>);<span class="comment">//画线调用</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        i = i + <span class="number">1</span>;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (time &gt; <span class="number">0</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">            interval = <span class="built_in">setInterval</span>(fn, time);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// 划线</span></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">drawLine</span>(<span class="params">map,pointArr,pointArrNext,CartArr</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">if</span> (pointArrNext != <span class="literal">undefined</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (<span class="title class_">CartArr</span>.<span class="title function_">includes</span>(pointArr.<span class="property">id</span>)) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">addMarkerEnd</span>(<span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(pointArrNext.<span class="property">lng</span>, pointArrNext.<span class="property">lat</span>), pointArrNext.<span class="property">status</span>, map, pointArrNext, <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Point</span>(pointArr.<span class="property">lng</span>, pointArr.<span class="property">lat</span>));<span class="comment">//添加图标</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">function</span> <span class="title function_">addMarkerEnd</span>(<span class="params">point, name, mapInit, trackUnit, prePoint,</span>) &#123;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// res = carMks.findIndex(function(value) &#123;</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//       return value == trackUnit.id;</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//   &#125;)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// res = carMks.indexOf(trackUnit.id)</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">if</span> (name === <span class="string">&quot;false&quot;</span>) &#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(carMks)</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">if</span> (carMks[trackUnit.<span class="property">id</span>]) &#123;<span class="comment">//先判断第一次进来的时候这个值有没有定义，有的话就清除掉上一次的。然后在进行画图标。第一次进来时候没有定义也就不走这块，直接进行画图标</span></span></span><br><span class="line"><span class="language-javascript">                    mapInit.<span class="title function_">removeOverlay</span>(carMks[trackUnit.<span class="property">id</span>]);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">                carMks[trackUnit.<span class="property">id</span>] = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Marker</span>(point, &#123;<span class="attr">icon</span>: terminalPoint&#125;);  <span class="comment">// 创建标注</span></span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">var</span> label = <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Label</span>(trackUnit.<span class="property">id</span>, &#123;<span class="attr">offset</span>: <span class="keyword">new</span> <span class="title class_">BMap</span>.<span class="title class_">Size</span>(<span class="number">10</span>, -<span class="number">30</span>)&#125;);</span></span><br><span class="line"><span class="language-javascript">                label.<span class="title function_">setStyle</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">width</span>:<span class="string">&quot;20px&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">textAlign</span>: <span class="string">&quot;center&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">border</span>: <span class="string">&quot;1px solid rgb(204, 204, 204)&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>: <span class="string">&quot;rgb(0, 0, 0)&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">borderRadius</span>: <span class="string">&quot;10px&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">padding</span>: <span class="string">&quot;10px&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">background</span>: <span class="string">&quot;rgb(255, 255, 255)&quot;</span>,</span></span><br><span class="line"><span class="language-javascript">                &#125;);</span></span><br><span class="line"><span class="language-javascript">                carMks[trackUnit.<span class="property">id</span>].<span class="title function_">setLabel</span>(label);</span></span><br><span class="line"><span class="language-javascript">                mapInit.<span class="title function_">addOverlay</span>(carMks[trackUnit.<span class="property">id</span>]);               <span class="comment">// 将标注添加到地图中</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125; <span class="keyword">else</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                mapInit.<span class="title function_">removeOverlay</span>(carMks[trackUnit.<span class="property">id</span>]);</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//获</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="web-xml代码"><a href="#web-xml代码" class="headerlink" title="web.xml代码"></a>web.xml代码</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xmlns:xsi</span>=<span class="string">&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">xsi:schemaLocation</span>=<span class="string">&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;</span></span></span><br><span class="line"><span class="tag">         <span class="attr">version</span>=<span class="string">&quot;4.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>data1Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data1Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>data.data1Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data1Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/data1Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>data2Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data2Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>data.data2Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data2Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/data2Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>data5Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data5Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>data.data5Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data5Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/data5Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>data4Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data4Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>data.data4Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data4Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/data4Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>data3Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data3Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>data.data3Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data3Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/data3Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>data6Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data6Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>data.data6Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data6Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/data6Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>data7Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data7Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>data.data7Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data7Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/data7Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>data8Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data8Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>data.data8Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data8Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/data8Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>data9Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data9Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>data.data9Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>data9Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/data9Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>typhoonServlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>typhoonServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.typhoonServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>typhoonServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/typhoonServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>SelectBar1Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SelectBar1Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>data.data1Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>SelectBar1Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/SelectBar1Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>quakeServlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>quakeServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.quakeServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>quakeServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/quakeServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>fireServlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>fireServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.fireServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>fireServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/fireServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>transferDailyServlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>transferDailyServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.transferDailyServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>transferDailyServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/transferDailyServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>releaseDailyServlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>releaseDailyServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.releaseDailyServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>releaseDailyServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/releaseDailyServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>transferSpareServlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>transferSpareServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.transferSpareServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>transferSpareServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/transferSpareServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>releaseSpareServlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>releaseSpareServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.releaseSpareServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>releaseSpareServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/releaseSpareServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>districtServlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>districtServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.districtServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>districtServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/districtServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>district1Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>district1Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.district1Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>district1Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/district1Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>district2Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>district2Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.district2Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>district2Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/district2Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>HertServlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HertServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.HertServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HertServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/HertServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>lngsServlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>lngsServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.lngsServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>lngsServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/lngsServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>lngs1Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>lngs1Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.lngs1Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>lngs1Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/lngs1Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>lngs2Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>lngs2Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.lngs2Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>lngs2Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/lngs2Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>lngs3Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>lngs3Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.lngs3Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>lngs3Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/lngs3Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>CartServlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CartServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.CartServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>CartServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/CartServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>latsServlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>latsServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.latsServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>latsServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/latsServlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>lats1Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>lats1Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.lats1Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>lats1Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/lats1Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>lats2Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>lats2Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>servlet.lats2Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>lats2Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/lats2Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>mdata1Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata1Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>mdata.mdata1Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata1Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/mdata1Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>mdata2Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata2Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>mdata.mdata2Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata2Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/mdata2Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>mdata3Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata3Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>mdata.mdata3Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata3Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/mdata3Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>mdata4Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata4Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>mdata.mdata4Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata4Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/mdata4Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>mdata5Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata5Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>mdata.mdata5Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata5Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/mdata5Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>mdata6Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata6Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>mdata.mdata6Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata6Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/mdata6Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>mdata7Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata7Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>mdata.mdata7Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata7Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/mdata7Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>mdata8Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata8Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>mdata.mdata8Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata8Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/mdata8Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>mdata9Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata9Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>mdata.mdata9Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata9Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/mdata9Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>mdata10Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata10Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>mdata.mdata10Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata10Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/mdata10Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>mdata11Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata11Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>mdata.mdata11Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata11Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/mdata11Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">description</span>&gt;</span><span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">display-name</span>&gt;</span>mdata12Servlet<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata12Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>mdata.mdata12Servlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>mdata12Servlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/mdata12Servlet<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注：用的大数据模板</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、说明文档&quot;&gt;&lt;a href=&quot;#一、说明文档&quot; class=&quot;headerlink&quot; title=&quot;一、说明文档&quot;&gt;&lt;/a&gt;一、说明文档&lt;/h2&gt;&lt;h3 id=&quot;第一个页面如下图所示：&quot;&gt;&lt;a href=&quot;#第一个页面如下图所示：&quot; class=&quot;header</summary>
      
    
    
    
    
    <category term="Anylogic" scheme="http://example.com/tags/Anylogic/"/>
    
  </entry>
  
  <entry>
    <title>基于 Vue3 ，打造前台+中台通用提效解决方案</title>
    <link href="http://example.com/2022/09/28/%E5%9F%BA%E4%BA%8E-Vue3-%EF%BC%8C%E6%89%93%E9%80%A0%E5%89%8D%E5%8F%B0-%E4%B8%AD%E5%8F%B0%E9%80%9A%E7%94%A8%E6%8F%90%E6%95%88%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>http://example.com/2022/09/28/%E5%9F%BA%E4%BA%8E-Vue3-%EF%BC%8C%E6%89%93%E9%80%A0%E5%89%8D%E5%8F%B0-%E4%B8%AD%E5%8F%B0%E9%80%9A%E7%94%A8%E6%8F%90%E6%95%88%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2022-09-28T02:14:05.000Z</published>
    <updated>2022-11-20T13:16:19.533Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1、全新的项目构建方案-——-vite"><a href="#1、全新的项目构建方案-——-vite" class="headerlink" title="1、全新的项目构建方案 —— vite"></a>1、全新的项目构建方案 —— vite</h1><p>vite 作为一面世就备受瞩目的前端构建工具，它究竟有什么神奇的地方？它又凭什么挑战 webpack 老大的地位呢？学习本章带你了解 vite 的“前世今生”</p><hr><h2 id="1-1-vite-VS-webpack"><a href="#1-1-vite-VS-webpack" class="headerlink" title="1-1 vite VS webpack"></a>1-1 vite VS webpack</h2><ul><li>一个字：<strong>快</strong>！</li></ul><h2 id="1-2-素质三连：vite-为什么快？这种快的机制会不会有什么问题？官方是如何解决的？"><a href="#1-2-素质三连：vite-为什么快？这种快的机制会不会有什么问题？官方是如何解决的？" class="headerlink" title="1-2 素质三连：vite 为什么快？这种快的机制会不会有什么问题？官方是如何解决的？"></a>1-2 素质三连：vite 为什么快？这种快的机制会不会有什么问题？官方是如何解决的？</h2><ol><li><ul><li><strong>webpack会遇到这种问题</strong>：假设我们的项目有A、B两个页面，其中A页面是项目首页，里面的代码一切正常。B页面是一个需要经过跳转才会进入的页面，里面存在一些错误。比如导入一个不存在的文件a.js，然后打印a；当我们去构建这个项目时，明明没有进入过B页面，但是webpack依旧会抛出错误</li><li><strong>而vite</strong>，同样的错误，在没有进入B页面的时候他是不会出现的，只有进入B页面，才会突然出现这样的一个错误（原因：vite不会一开始就构建整个项目，而是将应用区分为<strong>依赖</strong>和<strong>源码</strong>两部分，对于<strong>源码</strong>部分，它会根据<strong>路由来拆分</strong>代码模块，只会去构建一开始就必须要构建的内容，同时vite以原生ESM方式为浏览器提供源码，让浏览器接管了<strong>打包</strong>的部分工作）</li></ul></li><li><p>如果我们项目中存在commonJS的内容怎么办？是不是就意味着不能被解析？<strong>确实如此</strong>，在vite早期版本就因为这个问题导致很多<strong>依赖</strong>无法使用。</p></li><li><p>因为这个问题非常的严重，所以针对于这个问题，vite 在后期提供了 <strong>依赖预构建</strong>的功能，其中一个非常重要的目的就是为了解决CommonJS 和 UMD 兼容性问题。目前vite会先将<strong>CommonJS 或UMD</strong> 发布的依赖项转换为 ESM 之后，再重新进行编译。这也可以理解为<strong>速度对业务的一个妥协</strong>。</p></li></ol><h2 id="1-3-为什么选择了-vite"><a href="#1-3-为什么选择了-vite" class="headerlink" title="1-3 为什么选择了 vite"></a>1-3 为什么选择了 vite</h2><p>目前最新的vite 版本为2.8.5 的版本，经过了两年多的更新的之后，现在的vite 已经非常成熟，足以满足<strong>企业级开发</strong>的需求，并且经过调研，越来越过得企业开始尝试使用 vite 作为项目的构建工具，根据npm的月下载量可以看出，目前vite 的月下载量已经达到了236万</p><p>如果说webpack 代表的是现在，那么vite 极有可能代表了未来。</p><p>所以在vite 已经足以支持企业级开发的前提下，我们是时候拥抱vite 了。</p><h2 id="1-4-通过-vite-构建《小慕前端》"><a href="#1-4-通过-vite-构建《小慕前端》" class="headerlink" title="1-4 通过 vite 构建《小慕前端》"></a>1-4 通过 vite 构建《小慕前端》</h2><p>我们通过vite去构建《小慕前端》，对应的版本信息如下：</p><blockquote><p>vite 版本：2.8.0</p><p>node 版本： 16.13.1</p><p>npm 版本： 8.1.2</p></blockquote><p>想要使用vite，我们首先需要下载vite：</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g vite@<span class="number">2</span>.<span class="number">8</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><blockquote><p>兼容性注意</p><p>Vite需要Node.js版本&gt;&#x3D;12.0.0</p></blockquote><p>在vite下载完成后，通过以下流程在构建</p><ol><li>创建一个项目</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm init vite@latest</span><br></pre></td></tr></table></figure><ol start="2"><li>如果没有安装过vite@latest，那么则会提示进行安装，选择y即可</li><li>等待依赖安装完成</li><li>输入项目名称：imooc-front</li><li>选择一个框架就是vue，语言也就是vue</li><li>如果想Network也显示地址，我们可以去项目里的package.json的dev中加入对应的–host</li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202209290951271.png"                      alt="image-20220929095113140"                ></p><h1 id="2、定制化、高可用前台样式处理方案——tailwindcss"><a href="#2、定制化、高可用前台样式处理方案——tailwindcss" class="headerlink" title="2、定制化、高可用前台样式处理方案——tailwindcss"></a>2、定制化、高可用前台样式处理方案——tailwindcss</h1><p>你还在用传统的 css 定义样式吗？你 out 了。学习 tailwind ，不写一行 css 一样实现 《高定制化、高个性化、高交互性，高可用性》 的精美前台项目。</p><hr><h2 id="2-1-企业级项目下的css处理痛点"><a href="#2-1-企业级项目下的css处理痛点" class="headerlink" title="2-1 企业级项目下的css处理痛点"></a>2-1 企业级项目下的css处理痛点</h2><ul><li>统一的维护变得困难</li><li>大量的ClassName负担</li><li>HTML、CSS分离造成了滚动问题</li><li>响应式、主题切换实现复杂</li></ul><p>难道是因为html、ess 已经足够成熟，不需要再进行改变了吗？应该也不是的，比如针对于css而言，我们在进行企业开发时，就会遇到很多问题，比如：</p><ol><li>有时我们需要统一设计方案，比如项目中的红色我们需要使用同样的色值，标题的文字大小我们期望在整个项目中进行统一的划分。这样的一套<strong>变量</strong>如果通过css来实现，那么就不得不维护一个庞大的<strong>变量组</strong>，这其实是一个非常大的心智负担。</li><li>html结构是一个非常复杂的结构化内容，为了给这些结构指定对应的样式，那么通常我们都是通过clssName来去指定。这就必须要求我们为这套复杂的结构指定各种各样包含语义化的className。比如：container、container-box，container-box-<br>title、container-box-sub-title，container-box-sub-title-left-imag大量的”无意义”命名本身就会增加很多额外的负担。</li><li>因为html 和css 是分离的，所以我们通常情况下在开发时，不得不在整个代码文件中，来回的上下翻滚，或者进行分屏操作。无论是哪一种其实都不能给我们带来一个很好地开发体验。</li><li>针对于一些”复杂“的功能，比如响应式（媒体查询）、主题定制。如果我们想要通过传统的html+ css的形式来进行实现，无疑是非常复杂的。</li></ol><h2 id="2-2-安装tailwindcss到你的项目"><a href="#2-2-安装tailwindcss到你的项目" class="headerlink" title="2-2 安装tailwindcss到你的项目"></a>2-2 安装tailwindcss到你的项目</h2><ol><li><p>在我们的&#x3D;&#x3D;项目&#x3D;&#x3D;中执行 npm install -D <a class="link"   href="mailto:&#116;&#97;&#x69;&#108;&#119;&#x69;&#x6e;&#100;&#x63;&#115;&#115;&#64;&#51;&#x2e;&#48;&#x2e;&#50;&#51;" >&#116;&#97;&#x69;&#108;&#119;&#x69;&#x6e;&#100;&#x63;&#115;&#115;&#64;&#51;&#x2e;&#48;&#x2e;&#50;&#51;<i class="fas fa-external-link-alt"></i></a> <a class="link"   href="mailto:&#112;&#x6f;&#x73;&#x74;&#x63;&#115;&#115;&#x40;&#56;&#46;&#x34;&#46;&#x38;" >&#112;&#x6f;&#x73;&#x74;&#x63;&#115;&#115;&#x40;&#56;&#46;&#x34;&#46;&#x38;<i class="fas fa-external-link-alt"></i></a> <a class="link"   href="mailto:&#97;&#117;&#116;&#x6f;&#112;&#114;&#x65;&#x66;&#105;&#x78;&#x65;&#x72;&#64;&#x31;&#48;&#46;&#52;&#x2e;&#x32;" >&#97;&#117;&#116;&#x6f;&#112;&#114;&#x65;&#x66;&#105;&#x78;&#x65;&#x72;&#64;&#x31;&#48;&#46;&#52;&#x2e;&#x32;<i class="fas fa-external-link-alt"></i></a>，装 tailwindcss</p></li><li><p>执行npx tailwindcss init -p 创建 tailwind.config.js 文件，该文件为 tailwindcss 的配置文件，该文件默认内容为：</p></li></ol><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202209290952236.png"                      alt="image-20220929095257143"                ></p><ol start="3"><li><p>接下来我们需要添加<strong>模板路径（tailwind的应用范围）</strong></p></li><li><p>在tailwind.config.js 文件中的content 选项下，写入如下内容：</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="comment">//Tailwind应用范围</span></span><br><span class="line">  <span class="attr">content</span>: [<span class="string">&#x27;./index.html&#x27;</span>,<span class="string">&#x27;./src/**/*.&#123;vue,js&#125;&#x27;</span>],</span><br><span class="line">···</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li><p>接下来我们需要添加一些tailwind的指令</p></li><li><p>创建 src&#x2F;styles&#x2F;index.scss文件，并写入如下代码：</p></li></ol><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//导入tailwind的基础指令组件</span></span><br><span class="line"><span class="keyword">@tailwind</span> base;</span><br><span class="line"><span class="keyword">@tailwind</span> components;</span><br><span class="line"><span class="keyword">@tailwind</span> utilities;</span><br></pre></td></tr></table></figure><ol start="7"><li>然后在src&#x2F;main.js引入该index.scss</li><li>因为我们使用了scss，所以我们需要安装<strong>sass</strong>，执行npm i -D <a class="link"   href="mailto:&#x73;&#x61;&#115;&#115;&#x40;&#49;&#x2e;&#x34;&#53;&#46;&#48;" >&#x73;&#x61;&#115;&#115;&#x40;&#49;&#x2e;&#x34;&#53;&#46;&#48;<i class="fas fa-external-link-alt"></i></a>安装 sass</li><li>此时tailwind 已经安装到我们的项目中</li><li>我们可以在src&#x2F;App.vue 中为img标签增加一个 class&#x3D;”bg-red-900”</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img alt=&quot;Vue logo&quot;  class=&quot;bg-red-900&quot; src=&quot;@/assets/logo.svg&quot; width=&quot;125&quot; height=&quot;125&quot; /&gt;</span><br></pre></td></tr></table></figure><h2 id="2-3-tailwindcss初体验"><a href="#2-3-tailwindcss初体验" class="headerlink" title="2-3 tailwindcss初体验"></a>2-3 tailwindcss初体验</h2><p>我们对App.vue进行修改，有一点不好就是IDEA没有对tailwind有代码补充提醒</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"> &lt;div class=&quot;bg-slate-800 rounded-xl p-8 md:flex md:p-0&quot;&gt;</span><br><span class="line">   &lt;img class=&quot;w-24 h-24 rounded-full mx-auto md:w-48 md: h-auto md: rounded-none&quot;</span><br><span class="line">        src=&quot;https://tailwindcss.com/_next/static/media/sarah-dayan.a8ff3f1095a58085a82e3bb6aab12eb2.jpg&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">   &lt;div class=&quot;pt-6 text-center space-y-4 md:p-8 md: text-lett&quot;&gt;</span><br><span class="line">     &lt;p class=&quot;text-lg font-medium text-zinc-100&quot;&gt;</span><br><span class="line">       “这是使用 tailwindcss</span><br><span class="line">       来实现的一个基础的卡片区域，在实现该卡域的过程中，我们从来没有离开过HTML 区域.”</span><br><span class="line">     &lt;/p&gt;</span><br><span class="line">     &lt;div class=&quot;font-medium&quot;&gt;</span><br><span class="line">       &lt;div class=&quot;text-sky-400&quot;&gt;LGD_Sunday&lt;/div&gt;</span><br><span class="line">       &lt;div class=&quot;text-slate-500&quot;&gt;中前台前端解决方案&lt;/div&gt;</span><br><span class="line">       &lt;/div&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line"> &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="2-4-tailwindcss设计理念和价值体现"><a href="#2-4-tailwindcss设计理念和价值体现" class="headerlink" title="2-4 tailwindcss设计理念和价值体现"></a>2-4 tailwindcss设计理念和价值体现</h2><p><strong>设计理念</strong></p><p>tailwindcss中一个非常核心的内容就是：<strong>每一个类名都代表了一个css属性</strong>，这个样式在 tailwindcss 中被称作为<strong>原子化CSS</strong>，而大家争议的核心其实就在这里。<br>那么想要搞明白这样的一种设计理念，那么我们需要先搞清楚CSS设计史上的一些粒度划分。<br>整个前端历史中，CSS 颗粒度设计主要可以分为4种形式（<strong>颗粒度自上而下逐渐增大，颗粒度越大则约束性越高，可定制性越弱</strong>）：</p><ol><li>行内样式：样式全部写入行内。自由度最高，可定制化最强。但是不方便样式的复用，每次都要写完整的样式。|</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div style=&quot;background-color：#ffffff；color：#333333；&quot;&gt;</span><br><span class="line">    我是一个div</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>原子化CSS：每一个类名都代表了一个css属性。自度依然很强，可定制化依然很高，也方便复用。但是大量的样式会造成大量的类名。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;bg-white text-zinc-800&quot;&gt;-   我是一个div&lt;/div&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>传统形式：通过一个或几个具有语义化的class来描述一段css 属性。封装性强，语义化强，自由度和可定制化性一般（比如cart 就标记好了当前为一个卡片，通常边框、弧度、阴影、padding 也都一并规定好了）。但是大量的html需要取大量的语义化class，并且在html 和css中需要来回的切换、查找。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container-box desc-container cart&quot;&gt;我是-div&lt;/div&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>组件形式：在组件库中极为常见。封装性极强（不光封装了样式，也封装了功能），语义化强。但是自由度和可定制化性比较差。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;m-cart&gt;我是-个div&lt;/m-cart&gt;</span><br></pre></td></tr></table></figure><p>而tailwindcss 的核心设计理念就是：第二个：<strong>原子化的CSS</strong>。那么根据我们刚才的分析，这种方式惟一的问题就是：<strong>大量的样式会造成大量的类名这样的情况</strong>。而这样的一个问题在她的高自由度、高定制化、高可复用的优势之下，也就变得没有那么重要了。</p><p><strong>价值体现</strong></p><p>想要明确 tailwindcss 的价值，那么我们需要先来明确一下<strong>现代的前端应用</strong>开发的一些问题。<br>我们以后台前端解决方案这门课中的项目为例。项目中使用了element-plus作为UI 组件库。当我们决定使用<strong>element-plus</strong>的那一刻起，就<strong>决定了整体的项目样式为element设计风格</strong>。如果此时我们想要把项目做出个性化的风格出来，那么”几乎是不可能的”。<br>不过好在后台系统，风格本就干篇一律，这样设计倒也没有问题。但是如果是前台系统呢？<br>前台系统讲究高定制化、高个性化、高交互性，在这样的一个要求下，element，antd，vant 这样的组件库是否还能够满足我们需求呢？</p><p>对于<strong>高定制化、高个性化、高交互性</strong>的前台应用而言，通用组件库这种普适的组件系统是很难满足对应需求的。那么这也就意味着我们无法借助现有的样式，而需要手动写入大量的css样式和动画。<br>那么现在再回过头来看我们的4种颗粒度的css形式，你会怎么选择呢？</p><ol><li>行内样式：无复用性，不合适！</li><li>组件形式：通用组件库，经过刚才的分析，不合适！</li></ol><p>那么剩下的就只有<strong>原子化CSS</strong> 和<strong>传统形式</strong>这两种的。<br>因为我们的项目中，包含<strong>响应式</strong>和<strong>主题更换</strong>，而这两种功能如果想要通过<strong>传统形式</strong>来进行实现的话，是比较复杂的。因为这意味着我们需要定义大量的<strong>媒体查询</strong>和<strong>主题类名</strong>。<br>所以综上所述，在<strong>高定制化、高个性化、高交互性</strong>的前台应用中，<strong>原子化CSS</strong>是最合适的一种形式。而这种形式的具体体现就是tailwindcss</p><p><strong>总结</strong></p><ol><li>如果你想要实现一个<strong>通用</strong>的后台项目，那么推荐使用通用组件库实现</li><li>如果你想要实现一个<strong>高定制化、高个性化、高交互性</strong>的前台项目，那么推荐使用tailwindcss 实现</li></ol><h1 id="3、明星项目架构解决方案——搭建基础项目结构"><a href="#3、明星项目架构解决方案——搭建基础项目结构" class="headerlink" title="3、明星项目架构解决方案——搭建基础项目结构"></a>3、明星项目架构解决方案——搭建基础项目结构</h1><p>一般被人追捧，并具备长期可维护、可扩展的能力的项目，被称为明星项目，那么你知道如何搭建一个明星项目的基础架构吗？</p><hr><h2 id="3-1-项目开发助手-Prettier-Code-formatter-、-Tailwind-CSS-IntelliSense、Volar"><a href="#3-1-项目开发助手-Prettier-Code-formatter-、-Tailwind-CSS-IntelliSense、Volar" class="headerlink" title="3-1 项目开发助手 Prettier - Code formatter 、 Tailwind CSS IntelliSense、Volar"></a>3-1 项目开发助手 Prettier - Code formatter 、 Tailwind CSS IntelliSense、Volar</h2><p>分别在插件库中进行安装</p><p>针对Prettier ，在设置一个文件是.prettierrc，内容如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;semi&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">  <span class="string">&quot;singleQuote&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">&quot;trailingComma&quot;</span>: <span class="string">&quot;none&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-2-项目架构基本结构处理分析"><a href="#3-2-项目架构基本结构处理分析" class="headerlink" title="3-2 项目架构基本结构处理分析"></a>3-2 项目架构基本结构处理分析</h2><p>通过vite 创建出的这个项目，目前来看还是非常简随的，只包含了基础的项目结构，所以我们需要进行较多的一些改造内容。</p><p>那么想要明确最终的改造方案，我们就需要先来分析一下我们的项目《小慕前端》</p><p>咱们的项目分为移动端和PC端两种显示结果，但是这两种显示结果通过同一套代码进行实现，也就是所谓的响应式构建方案。那么我们在分析的时候就需要分别分析（PS：此处我们只分析大的路由方案，目的是让大家对基本的项目结构有一个初步的认识，以方便我们的项目结构处理，后续具体的细节构建方案不在这次分析行为之内）：</p><ol><li>移动端结构</li><li>PC端结构</li></ol><p>然后把这两种的分析方案，合并到一起，组成一个最终的架构方案。</p><p><strong>移动端结构分析</strong><br>移动端的结构相对比较简单，当我们去进行路由跳转时，它是以整个页面进行的整体路由切换。</p><p>那么由此可知，移动端不存在嵌套路由的概念，只需要在APP，vue 中保留一个路由出口即可。</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202209301544534.png"                      alt="image-20220930154414339"                ></p><p><strong>PC端结构分析</strong><br>而PC端的结构相对比较复杂，如下图所示：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202209301545306.png"                      alt="image-20220930154519166"                ></p><p>我们需要通过两个路由出口进行表示：</p><ol><li>App.vue：一级路由出口，用作整页路由切换</li><li>Main.vue：二级路由出口，用作局部路由切换</li></ol><p>那么由此我们可知，移动端和PC端两者的路由结构是不同的，所以这就要求我们需要根据 当前用户所在设备的不同，构建不同的<strong>路由表</strong>。<br>那么这一小节我们分析了项目在不同设备中，需要具备不同的路由结构，所以我们就需要生成多个路由表来应对不同的情况。<br>那么接下来我们就根据这一小节的分析，结合我们的项目经验，构建出基本的项目架构。</p><h2 id="3-3-构建项目架构"><a href="#3-3-构建项目架构" class="headerlink" title="3-3 构建项目架构"></a>3-3 构建项目架构</h2><p>在这一小节中，我们需要把咱们整个项目的架子搭建起来。因为咱们的项目默认没有安装vue-router 和vuex。所以我们需要先安装这两个插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save vuex@4.0.2 vue-router@4.0.14</span><br></pre></td></tr></table></figure><p>然后我们去处理项目基本架构，最终架构如下（部分省略）：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202209301553059.png"                      alt="image-20220930155333757"                ></p><h1 id="4、企业级vite配置方案——让vite得心应手"><a href="#4、企业级vite配置方案——让vite得心应手" class="headerlink" title="4、企业级vite配置方案——让vite得心应手"></a>4、企业级vite配置方案——让vite得心应手</h1><p>任何一种构建工具都需要根据我们的需求进行对应的配置，那么针对于 vite 而言，在大厂中我们应该如何根据自己的业务进行对应的配置呢？</p><hr><h2 id="4-1-明确移动端和PC端的构建顺序"><a href="#4-1-明确移动端和PC端的构建顺序" class="headerlink" title="4-1 明确移动端和PC端的构建顺序"></a>4-1 明确移动端和PC端的构建顺序</h2><p>在上一章中（项目架构基本结构处理分析）中，我们明确了项目包含<strong>移动端路由表和PC端路由表</strong>两部分，所以我们在开发的时候就需要分别来去处理<strong>移动端</strong>和<strong>pc端</strong>对应的内容。</p><p>那么对于这两部分，我们需要按照什么样的顺序进行构建呢？</p><p>因为咱们的项目是使用的tailwindcss作为样式处理的核心库，所以我们的<strong>构建顺序</strong>需要尊重<strong>tailwindcss的构建顺序</strong>的。<br>那么在tailwind中，有这样一段内容：</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202209301656800.png"                      alt="image-20220930165624626"                ></p><p>翻译过来就是<strong>移动优先</strong>的原则。<br>也就是说，使用 tailwind构建响应式系统时，需要先构建移动端，再构建PC端。<br>而这个顺序，同样也是咱们项目的构建顺序。</p><h2 id="4-2-构建移动处理工具-MobileTerminal"><a href="#4-2-构建移动处理工具-MobileTerminal" class="headerlink" title="4-2 构建移动处理工具 MobileTerminal"></a>4-2 构建移动处理工具 MobileTerminal</h2><blockquote><p>但是我们如何判断当前的设备是移动设备呢？</p></blockquote><p>为什么达到这个目的，我们就需要先去构建出咱们的第一个工具方法：isMobileTerminal，该方法将返回一个boolean形的数据，如果为true 则表示当前所在为<strong>移动端</strong>，如果为false则表示当前为<strong>PC端</strong></p><p>那么根据我们之前的<strong>构建方案</strong>，所有的工具方法需要被放入到utils中，所以下面我们首先需要在utils中创建一个<strong>工具类flexible.js</strong>，在该方法中规定屏幕宽度**&lt;1280则为移动设备<strong>，并且为了保证这个方法的灵活性，我们可以让它称为一个</strong>计算属性**，所以我们得出如下代码</p><p>&#x2F;src&#x2F;utils&#x2F;flexible.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断当前是否为移动设备，判断依据为屏幕的宽度是否大于指定值（1280）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> &#123; computed &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">PC_DEVICE_WIDTH</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;../constants&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isMobileTerminal = <span class="title function_">computed</span>(<span class="function">() =&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="variable language_">document</span>.<span class="property">documentElement</span>.<span class="property">clientWidth</span> &lt;<span class="variable constant_">PC_DEVICE_WIDTH</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>src&#x2F;constants&#x2F;index.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//PC设备指定宽度</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">PC_DEVICE_WIDTH</span> =<span class="number">1000</span></span><br></pre></td></tr></table></figure><p>src&#x2F;APP.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;&#123;&#123;isMobileTerminal&#125;&#125;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123;isMobileTerminal&#125; from &#x27;./utils/flexible&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>此时当我们切换浏览器设备时，就可以得到对应的判断结果。</p><p><strong>注意：</strong>因为我们要在后面进行<strong>响应式的视图处理</strong>所以此处通过<strong>宽度</strong>进行移动端判断！！！！<br>大家在实际开发中更建议通过以下代码来进行是否为移动端的准确判断</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断当前是否为移动设备</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isMobileTerminal = <span class="title function_">computed</span>(<span class="function">()=&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="regexp">/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i</span>.<span class="title function_">test</span>(navigator.<span class="property">userAgent</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="4-3-通过-vueuse-优化处理方案"><a href="#4-3-通过-vueuse-优化处理方案" class="headerlink" title="4-3 通过 vueuse 优化处理方案"></a>4-3 通过 vueuse 优化处理方案</h2><p>通过上面的实验，我们可以看出它并不是响应式的，因为必须通过刷新才能改变值，所以接下来我们使用<strong>vueuse库</strong>，先进行安装</p><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i @vueuse/core@<span class="number">8</span>.<span class="number">1</span>.<span class="number">2</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断当前是否为移动设备，判断依据为屏幕的宽度是否大于指定值（1280）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> &#123; computed &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; <span class="variable constant_">PC_DEVICE_WIDTH</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;../constants&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;useWindowSize&#125; <span class="keyword">from</span> <span class="string">&#x27;@vueuse/core&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123;width&#125; = <span class="title function_">useWindowSize</span>()</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> isMobileTerminal = <span class="title function_">computed</span>(<span class="function">() =&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> width.<span class="property">value</span> &lt;<span class="variable constant_">PC_DEVICE_WIDTH</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="4-3-定义-软链接"><a href="#4-3-定义-软链接" class="headerlink" title="4-3 定义@软链接"></a>4-3 定义@软链接</h2><p>我们知道在webpack 中可以直接通过@符号表示src路径，但是在vite 默认是不可以的。</p><p>vite 提供了 <strong>resolve.alias</strong>功能，表示：<strong>通过别名在指向一个具体的路径</strong></p><p>那么我们就可以通过此配置来实现@软链接功能在vite.config.js中写入</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//新增</span></span><br><span class="line"><span class="keyword">import</span> &#123; fileURLToPath, <span class="variable constant_">URL</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;node:url&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="comment">//软连接</span></span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: <span class="title function_">fileURLToPath</span>(<span class="keyword">new</span> <span class="title function_">URL</span>(<span class="string">&#x27;./src&#x27;</span>, <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">url</span>))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>或者写成这样：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; fileURLToPath, <span class="variable constant_">URL</span> &#125; <span class="keyword">from</span> <span class="string">&#x27;node:url&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> &#123; defineConfig &#125; <span class="keyword">from</span> <span class="string">&#x27;vite&#x27;</span></span><br><span class="line"><span class="keyword">import</span> vue <span class="keyword">from</span> <span class="string">&#x27;@vitejs/plugin-vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;join&#125; <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [<span class="title function_">vue</span>()],</span><br><span class="line">  <span class="comment">//软连接</span></span><br><span class="line">  <span class="attr">resolve</span>: &#123;</span><br><span class="line">    <span class="attr">alias</span>: &#123;</span><br><span class="line">      <span class="string">&#x27;@&#x27;</span>: <span class="title function_">join</span>(__dirname,<span class="string">&#x27;/src&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="4-4-构建VueRouter移动端路由表"><a href="#4-4-构建VueRouter移动端路由表" class="headerlink" title="4-4 构建VueRouter移动端路由表"></a>4-4 构建VueRouter移动端路由表</h2><p>那么到现在我们已经有了isMobileTerminal方法，那么接下来我们就可以利用这个方法处理移动端路由表，不过在处理该路由表之前我们还需初始化咱们的vue-router</p><ol><li>在src&#x2F;router&#x2F;index.js 中初始化 VueRouter</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;createRouter,createWebHistory&#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;isMobileTerminal&#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/flexible&#x27;</span></span><br><span class="line"><span class="keyword">import</span> mobileRoutes <span class="keyword">from</span> <span class="string">&#x27;./modules/mobile-router&#x27;</span></span><br><span class="line"><span class="keyword">import</span> pcRoutes <span class="keyword">from</span> <span class="string">&#x27;./modules/pc-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//创建vueRouter实例</span></span><br><span class="line"><span class="keyword">const</span> router =<span class="title function_">createRouter</span>(&#123;</span><br><span class="line">  <span class="attr">history</span>: <span class="title function_">createWebHistory</span>(),</span><br><span class="line">  <span class="attr">routes</span>: isMobileTerminal.<span class="property">value</span> ? mobileRoutes : pcRoutes</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> router</span><br></pre></td></tr></table></figure><ol start="2"><li>创建对应的移动端和pc端路由&#x2F;mobile-router.js和pc-router.js</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> [&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;home&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="function">()=&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/main/index.vue&#x27;</span>)</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> []</span><br></pre></td></tr></table></figure><ol start="3"><li>创建移动端首页@&#x2F;views&#x2F;main&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;我是移动端首页&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>在main.js中使用路由</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; createApp &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">App</span> <span class="keyword">from</span> <span class="string">&#x27;./App.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">&#x27;./router&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;./styles/index.scss&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> app = <span class="title function_">createApp</span>(<span class="title class_">App</span>)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">use</span>(router)</span><br><span class="line"></span><br><span class="line">app.<span class="title function_">mount</span>(<span class="string">&#x27;#app&#x27;</span>)</span><br></pre></td></tr></table></figure><ol start="5"><li>在App.vue中使用一级路由</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;router-view/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="4-5-划分移动端首页模块"><a href="#4-5-划分移动端首页模块" class="headerlink" title="4-5 划分移动端首页模块"></a>4-5 划分移动端首页模块</h2><p>移动端首页模块总共可分为三部分：<br>1.顶部的navigationbar</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202210051651788.png"                      alt="image-20221005165100555"                ></p><p>2.中间的列表内容</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202210051652839.png"                      alt="image-20221005165206482"                ></p><p>3.底部的tabbar</p><p><img                       lazyload                     src="/images/loading.svg"                     data-src="https://raw.githubusercontent.com/ainianxu/image/master/202210051652038.png"                      alt="image-20221005165221913"                ></p><p>那么我们首先要开发的就是<strong>顶部的navigationBar</strong>部分。<br>而对于该部分又可以分为三块内容：</p><ol><li>navigator 表：</li><li>右侧汉堡按钮：</li><li>点击汉堡按钮展示的popup弹出层：</li></ol><p>那么明确好这些内容之后，接下来我们就可以按照这个顺序依次开发。</p><p>那么下面首先我们创建移动端的navigation模块：</p><ol><li>建 src&#x2F;views&#x2F;main&#x2F;components&#x2F;navigation&#x2F;mobile&#x2F;index.vue 组件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;我是移动端首页&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;&lt;/script&gt;</span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>创建 src&#x2F;views&#x2F;main&#x2F;components&#x2F;navigation&#x2F;index.vue 组件，为<strong>控制移动端和PC端的navigation 展示组件</strong></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;mobile-navigation-vue v-if=&quot;isMobileTerminal&quot;/&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123;isMobileTerminal&#125; from &#x27;@/utils/flexible&#x27;</span><br><span class="line">import mobileNavigationVue from &#x27;./mobile/index.vue&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>3.在src&#x2F;views&#x2F;main&#x2F;index.vue中导入该组件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;navigation-vue/&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import navigationVue from &#x27;./components/navigation/index.vue&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="4-6-导入并配置axios"><a href="#4-6-导入并配置axios" class="headerlink" title="4-6 导入并配置axios"></a>4-6 导入并配置axios</h2><p>在有了 navigation 组件之后，接下来我们就可以尝试<strong>获取数据，渲染数据</strong>了</p><p>那么想要获取数据，我们将使用 axios</p><ol><li>安装 axios 依赖</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save axios@<span class="number">0</span>.<span class="number">26</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure><ol start="2"><li>创建 src&#x2F;utils&#x2F;request.js</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;https://api.imooc-front.lgdsunday.club/api&#x27;</span>,</span><br><span class="line">  <span class="attr">timeout</span>: <span class="number">5000</span> <span class="comment">//请求超时时间</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service</span><br></pre></td></tr></table></figure><ol start="3"><li>创建请求接口 src&#x2F;api&#x2F;category.js</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">*获取分类列表</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getCategory</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>: <span class="string">&#x27;/category&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>在src&#x2F;views&#x2F;main&#x2F;components&#x2F;navigation&#x2F;mobile&#x2F;index.vue中使用获得分类列表方法</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123;getCategory&#125; from &#x27;@/api/category&#x27;</span><br><span class="line">const getCategoryData = async ()=&gt;&#123;</span><br><span class="line">  const res = await getCategory()</span><br><span class="line">  console.log(res)</span><br><span class="line">&#125;</span><br><span class="line">getCategoryData()</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><blockquote><p>在vue中，await是等待的意思，await关键字只能放在async函数里，await配合async一起使用，相当于把异步函数变成了同步，await会等待后面表达式的返回结果之后才执行下一步。</p><p><a class="link"   href="https://www.cnblogs.com/zhoujuan/p/11692818.html" >vue中异步函数async和await的用法 - zhouj2019 - 博客园 (cnblogs.com)<i class="fas fa-external-link-alt"></i></a></p></blockquote><h2 id="4-7-vite处理代理服务器"><a href="#4-7-vite处理代理服务器" class="headerlink" title="4-7 vite处理代理服务器"></a>4-7 vite处理代理服务器</h2><p>我们遇到了一个跨域的问题，这个问题在<strong>前后端分离</strong>的项目开发中是非常常见的。同时对于webpack可以直接通过proxy进行处理，那么vite 中是否也提供了类似的能力呢？</p><p>是的，vite同样提供了<strong>proxy</strong>的配置项。</p><p>具体使用的方式与webpack 中的proxy 基本没有区别，依然是通过devServer 根据url 进行代理处理。</p><p>具体配置方式如下：</p><ol><li>在src&#x2F;utils&#x2F;request.js 中，修改basURL为api，示当前请求为开发时的api请求</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">&#x27;axios&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> service = axios.<span class="title function_">create</span>(&#123;</span><br><span class="line">  <span class="attr">baseURL</span>: <span class="string">&#x27;/api&#x27;</span>,</span><br><span class="line">  <span class="attr">timeout</span>:<span class="number">5000</span><span class="comment">//请求超时时间</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> service</span><br></pre></td></tr></table></figure><ol start="2"><li>在vite.config.js 中新增 server选项，配置代理</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//代理配置</span></span><br><span class="line"><span class="attr">server</span>:&#123;</span><br><span class="line">  <span class="attr">proxy</span>:&#123;</span><br><span class="line">    <span class="comment">//代理所有/api的请求</span></span><br><span class="line">    <span class="string">&#x27;/api&#x27;</span>:&#123;</span><br><span class="line">      <span class="comment">//代理请求之后的请求地址</span></span><br><span class="line">      <span class="attr">target</span>:<span class="string">&#x27;https://api.imooc-front.lgdsunday.club/&#x27;</span>,</span><br><span class="line">      <span class="comment">//跨域</span></span><br><span class="line">      <span class="attr">changeOrigin</span>: <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-8-vite处理环境变量"><a href="#4-8-vite处理环境变量" class="headerlink" title="4-8 vite处理环境变量"></a>4-8 vite处理环境变量</h2><p>到这里咱们已经可以请求到服务端，并且得到对应的数据响应了。</p><p>但是如果大家查看咱们的接口文档，那么可以发现baseURL分为两种：</p><p>DEV：<a class="link"   href="https://api.imooc-front.lgdsunday.club/api" >https://api.imooc-front.lgdsunday.club/api<i class="fas fa-external-link-alt"></i></a> </p><p>PROD：<a class="link"   href="https://api,imooc-front.lgdsunday.club/prod-api" >https://api，imooc-front.lgdsunday.club/prod-api<i class="fas fa-external-link-alt"></i></a></p><p>在通常咱们的企业级项目开发之中，都会区分<strong>开发时服务</strong>和<strong>生产时服务</strong>。</p><p>对于开发时服务而言，它内部的数据是<strong>假数据</strong>，所以我们可以随便修改。</p><p>而生产时服务，它内部数据为<strong>真实数据</strong>，所以是不能随意修改的。</p><p>那么在我们进行项目开发时，我们需要把服务切换为DEV 模式，而在打包项目时需要切换为PROD模式。</p><p>但是如果这个操作全靠人工切换，那么难免会有疏忽，一旦出现问题将会引起巨大的风险，所以我们期望可以<strong>根据项目状态，自动切换请求的服务地址。</strong></p><p>那么这样应该怎么做呢？</p><p>在vite中提供了**.env文件**，该文件为环境变量文件，默认提供了四种文件格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.env#所有情况下都会加载</span><br><span class="line">.env.local.     #所有情况下都会加载，但会被git 忽略</span><br><span class="line">.env.[mode]  #只在指定模式下加载</span><br><span class="line">.env.[mode].local      #只在指定模式下加载，但会被git 忽略</span><br></pre></td></tr></table></figure><p>其中有一种.env.[mode]的格式可以在<strong>不同模式下加载不同内容</strong>，这不正是我们想要的吗？</p><p>那么明确好之后，下面我们就创建对应的文件：</p><ol><li>新建.env.development文件，表示<strong>开发时</strong>的.env文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#只在指定模式(development)下加载</span><br><span class="line">#base api，只有以 VITE_为前缀的变量才会暴露给经过vite处理</span><br><span class="line">VITE_BASE_API =&#x27;/api</span><br></pre></td></tr></table></figure><ol start="2"><li>新建.env.production文件，表示<strong>生产时</strong>的.env文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#只在指定模式（production）下加载</span><br><span class="line">#base api，只有以 VITE_为前缀的变量才会暴露给经过vite处理</span><br><span class="line">VITE_BASE_API =&#x27;/prod-api&#x27;</span><br></pre></td></tr></table></figure><p>3.在src&#x2F;utils&#x2F;request.js 中打印 VITE_BASE_API</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">VITE_BASE_API</span>)</span><br></pre></td></tr></table></figure><ol start="4"><li>此时当找们执行 npm run dev时，可以发现浏览器打&#x2F;ap1，表示<strong>开发时</strong>服务地址</li><li>执行 npm run build 打包项目后运行（可以通过anywhere运行 dist 目录），浏览器打印为&#x2F;prod-api，表示<strong>发布时</strong>服务地址</li><li>表明咱们的环境变量配置成功</li><li>那么我们只需要修改 baseURL 为import.meta.env.VITE_BASE_API变量即可</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baseURL</span>: <span class="keyword">import</span>.<span class="property">meta</span>.<span class="property">env</span>.<span class="property">VITE_BASE_API</span>,</span><br></pre></td></tr></table></figure><h1 id="5、构建自己的物料解决方案——构建物料库，实现前端设计"><a href="#5、构建自己的物料解决方案——构建物料库，实现前端设计" class="headerlink" title="5、构建自己的物料解决方案——构建物料库，实现前端设计"></a>5、构建自己的物料解决方案——构建物料库，实现前端设计</h1><h2 id="5-1-为什么不使用组件库，而要自己构建？前台系统与后台系统的根本性区别！"><a href="#5-1-为什么不使用组件库，而要自己构建？前台系统与后台系统的根本性区别！" class="headerlink" title="5-1 为什么不使用组件库，而要自己构建？前台系统与后台系统的根本性区别！"></a>5-1 为什么不使用组件库，而要自己构建？前台系统与后台系统的根本性区别！</h2><p>我们明确了<strong>本项目中，不会使用现有的前端组件库，而是会构建一个咱们自己的物料库（组件库）。</strong>那么为什么要这么做呢？是为了故作高深吗？</p><p>不是的！</p><p>为了让大家更加明确原因，所以我们专门在抽出来一小节的内容，来明确这一点。</p><p>想要明确这一点内容，那么我们首先需要明确<strong>后台系统</strong>和<strong>前台系统</strong>的根本性区别。<br><strong>后台系统</strong></p><p>后台系统是大家平时项目开发中非常常见的一种项目形式。</p><p>但是后台系统有一个非常好的地方，那就是<strong>样式同质化高</strong></p><p>这些系统无论以什么样子的主题构建，他都有非常类似的地方：</p><ol><li><p>左侧通常为menu菜单</p><ol><li>菜单一般都是可折叠的</li><li>菜单一般都是可分层的</li><li>菜单一般都有图片和文字组成</li></ol></li><li><p>右侧通常为内容展示</p></li></ol><p>那么这种就叫做<strong>样式同质化高</strong>。因为它的样式同质化高，所以我们可以总结出一种通用的方式，来处理这种高同质化的<strong>功能</strong>和<strong>样式</strong>。<br>而这种通用的方式就是<strong>通用组件库</strong>，比如 element，antd，vant等等</p><p><strong>前台系统</strong><br>前台系统又分为了：</p><ol><li>pc端前台系统</li><li>移动端前台系统</li></ol><p>这个之外前台系统讲究 <strong>个性化样式</strong></p><p><strong>总结</strong></p><p>因为<strong>前台系统和后台系统</strong>的这种根本性的设计区别（前台讲究个性化，后台偏同质化），所以这就导致了目前市面上的<strong>通用组件库</strong>更多的是后台PC系统组件库（比如element 或者antd）。<br>这就导致，如果你想要开发一个前台系统，那么就需要拥有你自己的<strong>组件库</strong>！<br>这也是为什么我们必须要开发一个组件库的原因。</p><h2 id="5-2-数据拦截简化数据获取流程"><a href="#5-2-数据拦截简化数据获取流程" class="headerlink" title="5-2 数据拦截简化数据获取流程"></a>5-2 数据拦截简化数据获取流程</h2><p>我们在src&#x2F;utils&#x2F;request.js中新增数据拦截器，获取我们需要的东西，过滤不需要的</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 响应拦截器：</span></span><br><span class="line"><span class="comment"> * 服务端返回数据之后，前端.then之前被调用</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">service.<span class="property">interceptors</span>.<span class="property">response</span>.<span class="title function_">use</span>(<span class="function">(<span class="params">response</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;success,message,data&#125; =response.<span class="property">data</span></span><br><span class="line">  <span class="keyword">if</span> (success)&#123;</span><br><span class="line">    <span class="keyword">return</span> data</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//<span class="doctag">TODO:</span>业务请求错误</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(message))</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="5-3-业务组件：移动端navigationBar"><a href="#5-3-业务组件：移动端navigationBar" class="headerlink" title="5-3 业务组件：移动端navigationBar"></a>5-3 业务组件：移动端navigationBar</h2><ol><li>将navigation&#x2F;mobile&#x2F;index.vue中的代码，移植到navigation&#x2F;index.vue，并加以修改</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import &#123;ref&#125; from &#x27;vue&#x27;</span><br><span class="line">const categoryData = ref([])</span><br><span class="line">const getCategoryData = async () =&gt; &#123;</span><br><span class="line">  const &#123;categorys&#125; = await getCategory()</span><br><span class="line">  categoryData.value = categorys</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在子组件navigation&#x2F;mobile&#x2F;index.vue中进行数据接收，并优化数据在web端显示的格式</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;bg-white sticky top-0 left-0 z-10&quot;&gt;</span><br><span class="line">    &lt;ul</span><br><span class="line">      class=&quot; relative flex overflow-x-auto p-1 text-xs text-zinc-600</span><br><span class="line">      overflow-hidden&quot;&gt;</span><br><span class="line">      &lt;li v-for=&quot;item in data&quot; :key=&quot;item.id&quot; class=&quot;shrink-0 px-1.5 py-0.5 z-10 duration-200&quot;&gt;&#123;&#123;item.name&#125;&#125;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">//vite 构建的项目中，我们可以直接使用 defineProps方法</span><br><span class="line">defineProps(&#123;</span><br><span class="line">  data:&#123;</span><br><span class="line">    type: Array,</span><br><span class="line">    required:true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>在父组件navigation&#x2F;index.vue中进行数据绑定</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;mobile-navigation-vue v-if=&quot;isMobileTerminal&quot; :data=&quot;categoryData&quot; /&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h2 id="5-4-动态rem基准-修正tailwind，完善移动端navig"><a href="#5-4-动态rem基准-修正tailwind，完善移动端navig" class="headerlink" title="5-4 动态rem基准+修正tailwind，完善移动端navig"></a>5-4 动态rem基准+修正tailwind，完善移动端navig</h2><ol><li>现在src&#x2F;utils&#x2F;flexible.js中写一个方法（调整字体的）</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">useREM</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="comment">//定义最大的fontSize</span></span><br><span class="line">  <span class="keyword">const</span> <span class="variable constant_">MAX_FONT_SIZE</span> = <span class="number">40</span></span><br><span class="line">  <span class="comment">//监听html文档被解析完成的事件</span></span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">addEventListener</span>(<span class="string">&#x27;DOMContentLoaded&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//拿到html标签</span></span><br><span class="line">    <span class="keyword">const</span> html =<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;html&#x27;</span>)</span><br><span class="line">    <span class="comment">//计算fontSize，根据屏幕宽度/10</span></span><br><span class="line">    <span class="keyword">let</span> fontSize = <span class="variable language_">window</span>.<span class="property">innerWidth</span>/<span class="number">10</span></span><br><span class="line">    fontSize = fontSize&gt;<span class="variable constant_">MAX_FONT_SIZE</span> ? <span class="variable constant_">MAX_FONT_SIZE</span> : fontSize</span><br><span class="line">    <span class="comment">//赋值给html</span></span><br><span class="line">    html.<span class="property">style</span>.<span class="property">fontSize</span> = fontSize + <span class="string">&#x27;px&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在src&#x2F;main.js中调用方法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useREM &#125; <span class="keyword">from</span> <span class="string">&#x27;./utils/flexible&#x27;</span></span><br><span class="line"><span class="title function_">useREM</span>()</span><br></pre></td></tr></table></figure><ol start="3"><li>通过观察web页面的字体跟想象中的不一样，那么我们需要调整tailwind中fontsize的大小，在tailwind.config.js中进行修改</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme</span>: &#123;</span><br><span class="line">  <span class="attr">extend</span>: &#123;</span><br><span class="line">    <span class="attr">fontsize</span>:&#123;</span><br><span class="line">      <span class="attr">xs</span>:[<span class="string">&#x27;0.25rem&#x27;</span>,<span class="string">&#x27;0.35rem&#x27;</span>],</span><br><span class="line">      <span class="attr">sm</span>:[<span class="string">&#x27;0.35rem&#x27;</span>,<span class="string">&#x27;0.45rem&#x27;</span>],</span><br><span class="line">      <span class="attr">base</span>:[<span class="string">&#x27;0.45rem&#x27;</span>,<span class="string">&#x27;0.55rem&#x27;</span>],</span><br><span class="line">      <span class="attr">lg</span>:[<span class="string">&#x27;0.55rem&#x27;</span>,<span class="string">&#x27;0.65rem&#x27;</span>],</span><br><span class="line">      <span class="attr">xl</span>:[<span class="string">&#x27;0.65rem&#x27;</span>,<span class="string">&#x27;0.75rem&#x27;</span>],</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="5-5-通用组件：基于vite的统一svg处理svg-icon"><a href="#5-5-通用组件：基于vite的统一svg处理svg-icon" class="headerlink" title="5-5 通用组件：基于vite的统一svg处理svg-icon"></a>5-5 通用组件：基于vite的统一svg处理svg-icon</h2><ol><li>我们首先创建一个icon的通用组件src&#x2F;lib&#x2F;svg-icon&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;!--  把 aria-hidden=&quot;true&quot; 加到元素上会把该元素和它的所有子元素从无障碍树上移除。--&gt;</span><br><span class="line">&lt;svg aria-hidden=&#x27;true&#x27;&gt;</span><br><span class="line">  &lt;use :xlink:href=&#x27;symbolId&#x27; :class =&quot;fillClass&quot; :fill=&#x27;color&#x27;/&gt;</span><br><span class="line">&lt;/svg&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; computed &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">const props = defineProps(&#123;</span><br><span class="line">  //显示的svg</span><br><span class="line">  name:&#123;</span><br><span class="line">    type:String,</span><br><span class="line">    required:true</span><br><span class="line">  &#125;,</span><br><span class="line">  //svg图标的颜色</span><br><span class="line">  color:&#123;</span><br><span class="line">    type:String</span><br><span class="line">  &#125;,</span><br><span class="line">  //tailwind指定svg颜色的类名</span><br><span class="line">  fillClass:&#123;</span><br><span class="line">    type:String</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">//真实显示的svg图标（拼接#icon-）</span><br><span class="line">const symbolId = computed(()=&gt;`#icon-$&#123;props.name&#125;`)</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>然后我们在src&#x2F;lib&#x2F;index.js中进行注册</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> svgIcon <span class="keyword">from</span> <span class="string">&#x27;./svg-icon/index.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">install</span>(<span class="params">app</span>)&#123;</span><br><span class="line">    app.<span class="title function_">component</span>(<span class="string">&#x27;m-svg-icon&#x27;</span>,svgIcon)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.在main.js中进行使用</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mLibs <span class="keyword">from</span> <span class="string">&#x27;./lib&#x27;</span></span><br><span class="line">app.<span class="title function_">use</span>(mLibs)</span><br></pre></td></tr></table></figure><ol start="4"><li>我们首先给tailwind增加一个阴影效果，就是横着拉动那些标签时，有隐隐约约的感觉，在tailwind.config.js中</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme</span>: &#123;</span><br><span class="line">  <span class="attr">extend</span>: &#123;</span><br><span class="line">    <span class="attr">boxShadow</span>:&#123;</span><br><span class="line">      <span class="string">&#x27;l-white&#x27;</span>: <span class="string">&#x27;-10px 0 10px white&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ol start="5"><li>我们在src&#x2F;views&#x2F;main&#x2F;components&#x2F;navigation&#x2F;mobile&#x2F;ndex.vue中的ul下使用我们定义的组件，</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--汉堡按钮--&gt;</span><br><span class="line">&lt;li class=&quot;fixed top-0 right-[-1px] h-4 px-1 flex items-center bg-white z-20 shadow-l-white&quot;&gt;</span><br><span class="line">  &lt;m-svg-icon class=&quot;w-1.5 h-1.5&quot; name=&quot;hamburger&quot;&gt;&lt;/m-svg-icon&gt;</span><br><span class="line">&lt;/li&gt;</span><br></pre></td></tr></table></figure><ol start="6"><li>另外我们在要使原有标签最后一个距离最右边有一定距离，在原有的基础上，class上加上最后一个样式</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;li v-for=&quot;item in data&quot; :key=&quot;item.id&quot; class=&quot;shrink-0 px-1.5 py-0.5 z-10 duration-200 last:mr-4&quot;&gt;&#123;&#123;item.name&#125;&#125;&lt;/li&gt;</span><br></pre></td></tr></table></figure><h2 id="5-6-vite处理svg矢量图"><a href="#5-6-vite处理svg矢量图" class="headerlink" title="5-6 vite处理svg矢量图"></a>5-6 vite处理svg矢量图</h2><p>无论是vue-cli 还是vite 默认他们都不会处理咱们主动导入的svg矢量图标，也就是说<strong>虽然我们把svg图标放入到了项目中，但是vite“无法使用”到它们</strong></p><p>那么怎么办呢？</p><p>此时我们就需要使用到一个 vite 的 plugin，vite-plugin-svg-icons</p><ol><li>安装vite-plugin-svg-icons 到项目中</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm i fast-glob</span><br><span class="line">npm i --save-dev vite-plugin-svg-icons@<span class="number">2</span>.<span class="number">0</span>.<span class="number">1</span></span><br></pre></td></tr></table></figure><ol start="2"><li>在vite.config.js中注册</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> path,&#123;join&#125; <span class="keyword">from</span> <span class="string">&#x27;path&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;createSvgIconsPlugin&#125; <span class="keyword">from</span> <span class="string">&#x27;vite-plugin-svg-icons&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// https://vitejs.dev/config/</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="title function_">defineConfig</span>(&#123;</span><br><span class="line">  <span class="attr">plugins</span>: [</span><br><span class="line">    <span class="title function_">vue</span>(),</span><br><span class="line">    <span class="title function_">createSvgIconsPlugin</span>(&#123;</span><br><span class="line">      <span class="comment">//指定需要缓存的图标文件夹</span></span><br><span class="line">      <span class="comment">//就是说process.cwd()返回的是当前Node.js进程执行时的工作目录</span></span><br><span class="line">      <span class="attr">iconDirs</span>:[path.<span class="title function_">resolve</span>(process.<span class="title function_">cwd</span>(),<span class="string">&#x27;src/assets/icons&#x27;</span>)],</span><br><span class="line">      <span class="comment">//指定symbolId格式，这的symbolId是与src/lib/svg-icon/index.vue中的symbolId对应const symbolId = computed(()=&gt;`#icon-$&#123;props.name&#125;`)</span></span><br><span class="line">      <span class="attr">symbolId</span>:<span class="string">&#x27;icon-[name]&#x27;</span></span><br><span class="line">    &#125;)</span><br><span class="line">  ],</span><br></pre></td></tr></table></figure><ol start="3"><li>在main.js中注册svg-icons,由于createSvgIconsPlugin给我们生成的是虚拟地址，所以这里就引用一个虚拟地址</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注册svg-icons</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;virtual:svg-icons-register&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="5-7-移动端slider处理"><a href="#5-7-移动端slider处理" class="headerlink" title="5-7 移动端slider处理"></a>5-7 移动端slider处理</h2><p>那么处理好了以上内容之后，接下来我们来处理对应的slider 选中滑块。</p><p>对于选中滑块而言，我们想要处理分为两部分</p><ol><li>slider 滑块的本身样式</li><li>滑块切换时逻辑与滚动动画</li></ol><p><strong>slider 样式处理</strong></p><p>在 src&#x2F;views&#x2F;main&#x2F;components&#x2F;navigation&#x2F;mobile&#x2F;index.vue 中新增：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--滑块--&gt;</span><br><span class="line">&lt;li</span><br><span class="line">  ref=&quot;sliderTarget&quot;</span><br><span class="line">  :style=&quot;sliderStyle&quot;</span><br><span class="line">  class=&quot;absolute h-[22px] bg-zinc-900 rounded-lg duration-200&quot;</span><br><span class="line">&gt;</span><br><span class="line">&lt;/li&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">//滑块</span><br><span class="line">const sliderStyle =ref(&#123;</span><br><span class="line">  transform: &#x27;translateX(0px)&#x27;,</span><br><span class="line">  width: &#x27;60px&#x27;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><strong>处理切换逻辑</strong></p><p>当slider 进行切换时，它的当前位置就是通过translatex进行指定，也就是说我们只需要<strong>计算出当前点击的item位置与宽度即可</strong></p><p>那么想要达到这个目的，我们就需要具备以下内容：</p><ol><li>选中的 item T标：currentCategoryIndex</li><li>所有item元素：itemRefs</li><li>ul 的横向滚动偏离位置：ulScrollLeft</li><li>最后在 currentCategoryIndex 发生改变时，获取 item下标元素的left和width，计算 sliderStyle 即可</li></ol><hr><ol><li>首先给li标签增加一个ref</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;li</span><br><span class="line">  v-for=&quot;item in data&quot;</span><br><span class="line">  :key=&quot;item.id&quot;</span><br><span class="line">  class=&quot;shrink-0 px-1.5 py-0.5 z-10 duration-200 last:mr-4&quot;</span><br><span class="line">  :ref=&quot;setItemRef&quot;</span><br><span class="line">&gt;</span><br><span class="line">    &#123;&#123;item.name&#125;&#125;</span><br><span class="line">&lt;/li&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>选中的 item 下标：currentCategoryIndex</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//选中item下标</span></span><br><span class="line"><span class="keyword">const</span> currentCategoryIndex = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><ol start="3"><li>所有item元素：itemRefs；通过1中绑定的函数，我们可以直接获取其中的所有的DOM元素，然后进行判断，如果有值就将他添加到数组里</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取所有的item元素</span></span><br><span class="line"><span class="keyword">let</span> itemRefs = []</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">setItemRef</span> = (<span class="params">el</span>) =&gt;&#123;</span><br><span class="line"><span class="keyword">if</span> (el)&#123;</span><br><span class="line">  itemRefs.<span class="title function_">push</span>(el)</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>又因为setItemRef是每次DOM进行变化的时候都会执行一遍，这样的话每次只要改变一次数据，就会重复导入，所以我们新增一个监听函数，让他在每次DOM变化前将数组置空</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//数据改变之后，DOM变化之前</span><br><span class="line">onBeforeUpdate(() =&gt;&#123;</span><br><span class="line">  itemRefs = []</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="5"><li>我们要拿到ul 的横向滚动偏离位置：ulScrollLeft，首先我们先获取ul元素，然后通过vueuse-&gt;useScroll获取响应式得scroll滚动距离。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--先绑定一个ref--&gt;</span><br><span class="line">&lt;ul ref=&quot;ulTarget&quot;&gt;</span><br><span class="line">  </span><br><span class="line"> //获取ul元素</span><br><span class="line">const ulTarget = ref(null)</span><br><span class="line">//通过vueuse-&gt;useScroll获取响应式得scroll滚动距离</span><br><span class="line">const &#123;x: ulScrollLeft&#125; =useScroll(ulTarget)</span><br></pre></td></tr></table></figure><ol start="6"><li>最后在 currentCategoryIndex 发生改变时，获取 item下标元素的left和width，计算 sliderStyle</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">//增加了一个index，又增加一个onItemClick方法</span><br><span class="line">&lt;li</span><br><span class="line">  v-for=&quot;(item,index) in data&quot;</span><br><span class="line">  :key=&quot;item.id&quot;</span><br><span class="line">  class=&quot;shrink-0 px-1.5 py-0.5 z-10 duration-200 last:mr-4&quot;</span><br><span class="line">  :ref=&quot;setItemRef&quot;</span><br><span class="line">  @click=&quot;onItemClick(index)&quot;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//item点击事件</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onItemClick</span> =(<span class="params">index</span>)=&gt;&#123;</span><br><span class="line">  currentCategoryIndex.<span class="property">value</span> =index</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//watch监听</span></span><br><span class="line"><span class="title function_">watch</span>(currentCategoryIndex,<span class="function">(<span class="params">val</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> &#123; left,width &#125; = itemRefs[val].<span class="title function_">getBoundingClientRect</span>()</span><br><span class="line">  sliderStyle.<span class="property">value</span> = &#123;</span><br><span class="line">    <span class="comment">//滑块的位置= ul横向滚动的位置+当前元素的left-ul的padding</span></span><br><span class="line">    <span class="attr">transform</span>: <span class="string">`translateX(<span class="subst">$&#123;ulScrollLeft.value+left-<span class="number">10</span>&#125;</span>px)`</span>,</span><br><span class="line">    <span class="attr">width</span>: width+<span class="string">&#x27;px&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="7"><li>最后给增加一个点击哪个标签哪个标签就显示高亮样式</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//增加一个：class</span><br><span class="line">&lt;li</span><br><span class="line">  v-for=&quot;(item,index) in data&quot;</span><br><span class="line">  :key=&quot;item.id&quot;</span><br><span class="line">  class=&quot;shrink-0 px-1.5 py-0.5 z-10 duration-200 last:mr-4&quot;</span><br><span class="line">  :class=&quot;&#123;</span><br><span class="line">    &#x27;text-zinc-100&#x27;: currentCategoryIndex === index</span><br><span class="line">  &#125;&quot;</span><br><span class="line">  :ref=&quot;setItemRef&quot;</span><br><span class="line">  @click=&quot;onItemClick(index)&quot;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><h2 id="5-8-补全category数据"><a href="#5-8-补全category数据" class="headerlink" title="5-8 补全category数据"></a>5-8 补全category数据</h2><ol><li>首先在常量模块src&#x2F;constants&#x2F;index.js中定义category的本地构建数据</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//category的本地构建数据</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">ALL_CATEGORY_ITEM</span> =&#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="string">&#x27;all&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>:<span class="string">&#x27;全部&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>我们在获取数据源的时候将这个直接插入到头部就可以,在navigation&#x2F;index.vue中</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//增加unshift方法</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getCategoryData</span> = <span class="keyword">async</span> (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;categorys&#125; = <span class="keyword">await</span> <span class="title function_">getCategory</span>()</span><br><span class="line">  categoryData.<span class="property">value</span> = categorys</span><br><span class="line">  categoryData.<span class="property">value</span>.<span class="title function_">unshift</span>(<span class="variable constant_">ALL_CATEGORY_ITEM</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>如果发现开始的滑块跟全部标签对不上那么就先修改navigation&#x2F;mobile&#x2F;index.vue的滑块样式</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//滑块</span></span><br><span class="line"><span class="keyword">const</span> sliderStyle =<span class="title function_">ref</span>(&#123;</span><br><span class="line">  <span class="attr">transform</span>: <span class="string">&#x27;translateX(0px)&#x27;</span>,</span><br><span class="line">  <span class="attr">width</span>: <span class="string">&#x27;60px&#x27;</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="5-9-通用组件：弹出窗口-popup能力分析"><a href="#5-9-通用组件：弹出窗口-popup能力分析" class="headerlink" title="5-9 通用组件：弹出窗口-popup能力分析"></a>5-9 通用组件：弹出窗口-popup能力分析</h2><p>当我们点击<strong>面包屑按钮</strong>时，会有一个弹出窗口 popup 自低而上弹出，那么这样的一个功能，我们一样可以把它处理为项目的<strong>通用组件</strong></p><p>那么想要处理popup的话，首先就需要先搞清楚popup的能力。</p><ol><li>当popup展开时，内容视图应该不属于任何一个<strong>组件内部</strong>，而应该直接被插入到body下面</li><li>popup应该包含两部分内容，一部分为背景蒙版，一部分为内容的包裹容器</li><li>popup应该通过一个双向绑定进行控制展示和隐藏</li><li>popup 展示时，滚动应该被锁定</li><li>内容区域应该接收所有的 attrs，并且应该通过插槽让调用方指定其内容</li></ol><h2 id="5-9-通用组件：弹出窗口-popup-实现"><a href="#5-9-通用组件：弹出窗口-popup-实现" class="headerlink" title="5-9 通用组件：弹出窗口-popup 实现"></a>5-9 通用组件：弹出窗口-popup 实现</h2><ol><li>当popup展开时，内容视图应该不属于任何一个<strong>组件内部</strong>，而应该直接被插入到body下面。这里使用的就是vue3中的一个标签</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;teleport to=&quot;body&quot;&gt;</span><br><span class="line">    &lt;!-- 蒙版--&gt;</span><br><span class="line">      &lt;div&gt;蒙版&lt;/div&gt;</span><br><span class="line">    &lt;!-- 内容--&gt;</span><br><span class="line">      &lt;div&gt;内容&lt;/div&gt;</span><br><span class="line">  &lt;/teleport&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>我们给蒙版和内容都增加过度和动画</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;teleport to=&quot;body&quot;&gt;</span><br><span class="line">  &lt;!-- 蒙版--&gt;</span><br><span class="line">  &lt;transition name=&quot;fade&quot;&gt;</span><br><span class="line">    &lt;div &gt;蒙版&lt;/div&gt;</span><br><span class="line">  &lt;/transition&gt;</span><br><span class="line">  &lt;!-- 内容--&gt;</span><br><span class="line">  &lt;transition name=&quot;popup-down-up&quot;&gt;</span><br><span class="line">    &lt;div&gt;内容&lt;/div&gt;</span><br><span class="line">  &lt;/transition&gt;</span><br><span class="line"></span><br><span class="line">&lt;/teleport&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>我们定义蒙版和内容的过度和动画样式</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line">//fade动画</span><br><span class="line">.fade-enter-active,</span><br><span class="line">.fade-leave-active&#123;</span><br><span class="line">  transition: all 0.3s;</span><br><span class="line">&#125;</span><br><span class="line">//准备进入，离开完成</span><br><span class="line">.fade-enter-from,</span><br><span class="line">.fade-enter-to&#123;</span><br><span class="line">  opacity: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.popup-down-up-enter-active,</span><br><span class="line">.popup-down-up-leave-active&#123;</span><br><span class="line">  transition: all 0.3s;</span><br><span class="line">&#125;</span><br><span class="line">.popup-down-up-enter-from,</span><br><span class="line">.popup-down-up-enter-to&#123;</span><br><span class="line">  transform: translateY(100%);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>给蒙版和内容绑定样式</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;teleport to=&quot;body&quot;&gt;</span><br><span class="line">  &lt;!-- 蒙版--&gt;</span><br><span class="line">  &lt;transition name=&quot;fade&quot;&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      class=&#x27;w-screen h-screen bg-zinc-900/80 z-40 fixed top-0 left-0&#x27;</span><br><span class="line">    &gt;&lt;/div&gt;</span><br><span class="line">  &lt;/transition&gt;</span><br><span class="line">  &lt;!-- 内容--&gt;</span><br><span class="line">  &lt;transition name=&quot;popup-down-up&quot;&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      v-bind=&quot;$attrs&quot;</span><br><span class="line">      class=&#x27;w-screen bg-white z-50 fixed bottom-0 &#x27;&gt;</span><br><span class="line">      &lt;slot/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/transition&gt;</span><br><span class="line"></span><br><span class="line">&lt;/teleport&gt;</span><br></pre></td></tr></table></figure><ol start="5"><li>popup通过一个双向绑定进行控制展示和隐藏</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="attr">modelValue</span>:&#123;</span><br><span class="line">    <span class="attr">required</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">type</span>:<span class="title class_">Boolean</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> emits = <span class="title function_">defineEmits</span>([<span class="string">&#x27;update:modelValue&#x27;</span>])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;teleport to=&quot;body&quot;&gt;</span><br><span class="line">  &lt;!-- 蒙版--&gt;</span><br><span class="line">  &lt;transition name=&quot;fade&quot;&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      v-if=&#x27;modelValue&#x27;</span><br><span class="line">      class=&#x27;w-screen h-screen bg-zinc-900/80 z-40 fixed top-0 left-0&#x27;</span><br><span class="line">      @click=&quot;emits(&#x27;update:modelValue&#x27;,false)&quot;</span><br><span class="line">    &gt;&lt;/div&gt;</span><br><span class="line">  &lt;/transition&gt;</span><br><span class="line">  &lt;!-- 内容--&gt;</span><br><span class="line">  &lt;transition name=&quot;popup-down-up&quot;&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      v-if=&#x27;modelValue&#x27;</span><br><span class="line">      v-bind=&quot;$attrs&quot;</span><br><span class="line">      class=&#x27;w-screen bg-white z-50 fixed bottom-0 &#x27;&gt;</span><br><span class="line">      &lt;slot/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/transition&gt;</span><br></pre></td></tr></table></figure><ol start="6"><li>在lib&#x2F;index.js中定义组件，在第一步之后，并且插入到mobile&#x2F;index.vue的ul后面</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> popup <span class="keyword">from</span> <span class="string">&#x27;./popup/index.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">install</span>(<span class="params">app</span>)&#123;</span><br><span class="line">    app.<span class="title function_">component</span>(<span class="string">&#x27;m-popup&#x27;</span>,popup)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;m-popup&gt;&lt;/m-popup&gt;</span><br></pre></td></tr></table></figure><ol start="7"><li>在mobile&#x2F;index.vue中增加</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//控制popup展示</span></span><br><span class="line"><span class="keyword">const</span> isVisable = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onShowPopup</span> =(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  isVisable.<span class="property">value</span>=<span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--汉堡按钮增加click--&gt;</span><br><span class="line">&lt;li</span><br><span class="line">  class=&quot;fixed top-0 right-[-1px] h-4 px-1 flex items-center bg-white z-20 shadow-l-white&quot;</span><br><span class="line">  @click=&#x27;onShowPopup&#x27;&gt;</span><br><span class="line">  &lt;m-svg-icon class=&quot;w-1.5 h-1.5&quot; name=&quot;hamburger&quot;&gt;&lt;/m-svg-icon&gt;</span><br><span class="line">&lt;/li&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">组件传值</span><br><span class="line">&lt;m-popup v-model=&#x27;isVisable&#x27;&gt;&lt;/m-popup&gt;</span><br></pre></td></tr></table></figure><ol start="8"><li>popup 展示时，滚动应该被锁定</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useScrollLock&#125; <span class="keyword">from</span> <span class="string">&#x27;@vueuse/core&#x27;</span></span><br><span class="line"><span class="comment">//锁定滚动</span></span><br><span class="line"><span class="keyword">const</span> isLocked =<span class="title function_">useScrollLock</span>(<span class="variable language_">document</span>.<span class="property">body</span>)</span><br><span class="line"><span class="title function_">watch</span>(</span><br><span class="line">  <span class="function">()=&gt;</span>props.<span class="property">modelValue</span>,</span><br><span class="line">  <span class="function">(<span class="params">val</span>)=&gt;</span>&#123;</span><br><span class="line">    isLocked.<span class="property">value</span> =val</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    <span class="attr">immediate</span>:<span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="5-10-组件间双向数据绑定功能优化"><a href="#5-10-组件间双向数据绑定功能优化" class="headerlink" title="5-10 组件间双向数据绑定功能优化"></a>5-10 组件间双向数据绑定功能优化</h2><p>这里我们使用useVModel，直接完成双向数据绑定。 props + emit -&gt; ref</p><ol><li>首先我们引入useVModel</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;useVModel&#125; <span class="keyword">from</span> <span class="string">&#x27;@vueuse/core&#x27;</span></span><br><span class="line"><span class="comment">//是一个响应式数据，当isVisable值发生变化时，会自动触发emit修改modelValue</span></span><br><span class="line"><span class="keyword">const</span> isVisable = <span class="title function_">useVModel</span>(props)</span><br></pre></td></tr></table></figure><ol start="2"><li>我们将使用modelValue全部换掉，蒙版的点击方法也换了</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;teleport to=&quot;body&quot;&gt;</span><br><span class="line">  &lt;!-- 蒙版--&gt;</span><br><span class="line">  &lt;transition name=&quot;fade&quot;&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      v-if=&#x27;isVisable&#x27;</span><br><span class="line">      class=&#x27;w-screen h-screen bg-zinc-900/80 z-40 fixed top-0 left-0&#x27;</span><br><span class="line">      @click=&quot;isVisable = false&quot;</span><br><span class="line">    &gt;&lt;/div&gt;</span><br><span class="line">  &lt;/transition&gt;</span><br><span class="line">  &lt;!-- 内容--&gt;</span><br><span class="line">  &lt;transition name=&quot;popup-down-up&quot;&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      v-if=&#x27;isVisable&#x27;</span><br><span class="line">      v-bind=&quot;$attrs&quot;</span><br><span class="line">      class=&#x27;w-screen bg-white z-50 fixed bottom-0 &#x27;&gt;</span><br><span class="line">      &lt;slot/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;/transition&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">watch</span>(</span><br><span class="line">  isVisable,<span class="comment">//这也换了</span></span><br><span class="line">  <span class="function">(<span class="params">val</span>)=&gt;</span>&#123;</span><br><span class="line">    isLocked.<span class="property">value</span> =val</span><br><span class="line">  &#125;,&#123;</span><br><span class="line">    <span class="attr">immediate</span>:<span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="5-11-vite通用组件自动化注册"><a href="#5-11-vite通用组件自动化注册" class="headerlink" title="5-11 vite通用组件自动化注册"></a>5-11 vite通用组件自动化注册</h2><p>目前我们在项目中已经完成了两个通用组件，将来我们还会完成更多的通用组件开发。</p><p>那么如果每次开发完成一个通用组件之后，都去手动进行注册，未免有些过于麻烦了，所以我们期望通过vite 提供的功能，进行通用组件的自动化注册那么，如果想要完成这个功能的话，就需要使用到两个关键的知识点：</p><ol><li>vite的Glob 导入功能：该功能可以帮助我们在文件系统中导入多个模块</li><li>vue defineAsyncCommponent方法：该方法可以创建一个<strong>按需加载的异步组件</strong></li></ol><p>基于以上两个方法，实现组件<strong>自动注册</strong></p><p>在src&#x2F;libs&#x2F;index.js 中：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; defineAsyncComponent &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">install</span>(<span class="params">app</span>)&#123;</span><br><span class="line">    <span class="comment">//1.获取当前路径下的所有文件夹的index.vue</span></span><br><span class="line">    <span class="keyword">const</span> components = <span class="keyword">import</span>.<span class="property">meta</span>.<span class="title function_">glob</span>(<span class="string">&#x27;./*/index.vue&#x27;</span>)</span><br><span class="line">    <span class="comment">//2.遍历获取到的组件模块</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> [fullPath,fn] <span class="keyword">of</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(components))&#123;</span><br><span class="line">      <span class="keyword">const</span> componentName = <span class="string">&#x27;m-&#x27;</span>+fullPath.<span class="title function_">replace</span>(<span class="string">&#x27;./&#x27;</span>,<span class="string">&#x27;&#x27;</span>).<span class="title function_">split</span>(<span class="string">&#x27;/&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">      <span class="comment">//3.利用app.component进行注册</span></span><br><span class="line">      app.<span class="title function_">component</span>(componentName,<span class="title function_">defineAsyncComponent</span>(fn))</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-12-业务组件：移动端弹层menu"><a href="#5-12-业务组件：移动端弹层menu" class="headerlink" title="5-12 业务组件：移动端弹层menu"></a>5-12 业务组件：移动端弹层menu</h2><ol><li>我们先新建&#x2F;views&#x2F;main&#x2F;components&#x2F;menu&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class=&#x27;py-2 h-[80vh] flex flex-col&#x27;&gt;</span><br><span class="line">  &lt;h2 class=&#x27;text-xl text-zinc-900 font-bold mb-2 px-1&#x27;&gt;</span><br><span class="line">    所有分类</span><br><span class="line">  &lt;/h2&gt;</span><br><span class="line">  &lt;ul class=&#x27;overflow-y-scroll&#x27;&gt;</span><br><span class="line">    &lt;li</span><br><span class="line">      v-for=&quot;(item,index)in categorys&quot;</span><br><span class="line">      :key=&quot;item.id&quot;</span><br><span class="line">      class=&quot;text-lg text-zinc-900 px-1 py-1.5</span><br><span class="line">      duration-100 active:bg-zinc-100&quot;</span><br><span class="line">      @click=&quot;$emit(&#x27;onItemClick&#x27;,index)&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &#123;&#123;item.name&#125;&#125;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">//需要接收的数据</span><br><span class="line">defineProps(&#123;</span><br><span class="line">  categorys:&#123;</span><br><span class="line">    type:Array,</span><br><span class="line">    required:true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">//推荐，所有事件都进行一个手动注册</span><br><span class="line">defineEmits([&#x27;onItemClick&#x27;])</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>在&#x2F;views&#x2F;main&#x2F;components&#x2F;mobile&#x2F;index.vue中导入组件；然后使用组件（绑定需要传入的数据，并绑定1中的点击事件）</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="title class_">MenuVue</span> <span class="keyword">from</span> <span class="string">&#x27;@/views/main/components/menu/index.vue&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;m-popup v-model=&#x27;isVisable&#x27;&gt;</span><br><span class="line">  &lt;menu-vue :categorys=&quot;data&quot; @onItemClick=&quot;onItemClick&quot;&gt;&lt;/menu-vue&gt;</span><br><span class="line">&lt;/m-popup&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>我们想当点击menu中数据的上面导航栏也跳转到相应的位置，并自动退出menu，只需要在点击事件下修改下可见值。</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//item点击事件</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onItemClick</span> =(<span class="params">index</span>)=&gt;&#123;</span><br><span class="line">  currentCategoryIndex.<span class="property">value</span> =index</span><br><span class="line">  isVisable.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-13-总结"><a href="#5-13-总结" class="headerlink" title="5-13 总结"></a>5-13 总结</h2><p>在本章中我们处理了<strong>移动端的navgationBar模块</strong>，在处理该模块的过程中，我们做了：</p><ol><li><p>自定义了两个通用组件，这两个组件都是将来可以被大家放入到中台组件库&#x2F;物料库中的：</p><ol><li>svg-icon</li><li>popup</li></ol></li><li><p>修正了rem值，对于移动端的rem处理目前可以根据设备的不同来自动修正</p></li><li><p>基于vite的svg矢量图导入和自动组件注册</p></li><li><p>介绍了vueuse中更多的功能方法</p></li></ol><h1 id="6、企业级通用业务Header处理方案——结合中台组件的业务组件处理"><a href="#6、企业级通用业务Header处理方案——结合中台组件的业务组件处理" class="headerlink" title="6、企业级通用业务Header处理方案——结合中台组件的业务组件处理"></a>6、企业级通用业务Header处理方案——结合中台组件的业务组件处理</h1><p>Header 模块是 PC 端业务中的高频功能，通用性极强。那么对于这样的功能大厂通常如何去进行处理呢？当它与中台组件库结合时，又会碰撞出什么样的火花呢？</p><hr><h2 id="6-1-处理PC端基础架构"><a href="#6-1-处理PC端基础架构" class="headerlink" title="6-1 处理PC端基础架构"></a>6-1 处理PC端基础架构</h2><p>PC端将具备两个路由的出口：</p><ol><li>一级路由出口：APP.vue中</li><li>二级路由出口：Main.vue中</li></ol><p>那么对于我们当前的代码而言，我们仅存在一个一级路由出口，所以接下来我们就需要处理二级路由出口</p><ol><li>创建 src&#x2F;views&#x2F;layout&#x2F;index.vue文件，表示一级路由出口对应的组件</li><li>在layout&#x2F;components 中分别创建三个业务组件：<ol><li>header&#x2F;index.vue：表示PC端头部区域</li><li>main.vue：二级路由出口</li><li>.floating：右下角悬浮区域</li></ol></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;header&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;main&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div &gt;floating&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>在src&#x2F;views&#x2F;layout&#x2F;index.vue文件中，导入这三个组件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&#x27;h-screen&#x27;&gt;</span><br><span class="line">  &lt;header-vue&gt;&lt;/header-vue&gt;</span><br><span class="line">  &lt;main-vue &gt;&lt;/main-vue&gt;</span><br><span class="line">  &lt;floating-vue&gt;&lt;/floating-vue&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import headerVue from &#x27;./components/header/index.vue&#x27;</span><br><span class="line">import mainVue from &#x27;./components/main.vue&#x27;</span><br><span class="line">import floatingVue from &#x27;./components/floating.vue&#x27;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>在router&#x2F;modules&#x2F;mobile-router增加路由</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> [&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;main&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="function">()=&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/layout/index.vue&#x27;</span>),</span><br><span class="line">  <span class="attr">children</span>:[]</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><ol start="5"><li>手动设置页面布局，让头部高为72px，main为整个页面减去头部，悬浮框在右下角。<ol><li>首先在tailwind.config.js中增加高的样式</li><li>src&#x2F;views&#x2F;layout&#x2F;index.vue文件中使用</li><li>悬浮框就在layout&#x2F;components &#x2F;floating中设置</li></ol></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme</span>: &#123;</span><br><span class="line">  <span class="attr">extend</span>: &#123;</span><br><span class="line">    <span class="attr">height</span>:&#123;</span><br><span class="line">      <span class="attr">header</span>:<span class="string">&#x27;72px&#x27;</span>,</span><br><span class="line">      <span class="attr">main</span>:<span class="string">&#x27;calc(100vh-72px)&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&#x27;h-screen&#x27;&gt;</span><br><span class="line">  &lt;header-vue class=&#x27;h-header&#x27;&gt;&lt;/header-vue&gt;</span><br><span class="line">  &lt;main-vue class=&#x27;h-main&#x27;&gt;&lt;/main-vue&gt;</span><br><span class="line">  &lt;floating-vue&gt;&lt;/floating-vue&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import headerVue from &#x27;./components/header/index.vue&#x27;</span><br><span class="line">import mainVue from &#x27;./components/main.vue&#x27;</span><br><span class="line">import floatingVue from &#x27;./components/floating.vue&#x27;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&#x27;fixed bottom-10 right-2&#x27;&gt;floating&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="6-2-PC端Header模块处理分析与简单实现"><a href="#6-2-PC端Header模块处理分析与简单实现" class="headerlink" title="6-2 PC端Header模块处理分析与简单实现"></a>6-2 PC端Header模块处理分析与简单实现</h2><p>我们在src&#x2F;views&#x2F;layout&#x2F;components&#x2F;header中建立三个模块分别是：</p><ol><li>header-search&#x2F;index.vue</li><li>header-my.vue</li><li>header-theme.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;search&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;my&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;theme&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>然后在src&#x2F;views&#x2F;layout&#x2F;components&#x2F;header中进行使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&#x27;w-full bg-white border-b border-b-zinc-200</span><br><span class="line">  px-2 py-1&#x27;&gt;</span><br><span class="line">    &lt;div class=&#x27;flex items-center&#x27;&gt;</span><br><span class="line">      &lt;img</span><br><span class="line">        class=&#x27;h-4 cusor-pointer mr-2&#x27;</span><br><span class="line">        src=&quot;https://m.imooc.com/static/wap/static/common/img/logo-small@2x.png&quot;</span><br><span class="line">        @click=&#x27;onToHome&#x27;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;header-search-vue class=&#x27;mr-1&#x27;&gt;&lt;/header-search-vue&gt;</span><br><span class="line">      &lt;header-theme-vue class=&#x27;mr-1&#x27;&gt;&lt;/header-theme-vue&gt;</span><br><span class="line">      &lt;header-my-vue&gt;&lt;/header-my-vue&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import headerSearchVue from &#x27;./header-search/index.vue&#x27;</span><br><span class="line">import headerThemeVue from &#x27;./header-theme.vue&#x27;</span><br><span class="line">import headerMyVue from &#x27;./header-my.vue&#x27;</span><br><span class="line">import &#123; useRouter &#125; from &#x27;vue-router&#x27;</span><br><span class="line"></span><br><span class="line">//router===this.$router</span><br><span class="line">const router = useRouter()</span><br><span class="line">const onToHome = () =&gt;&#123;</span><br><span class="line">  router.push(&#x27;/&#x27;)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="6-3-通用组件：search搜索框能力分析"><a href="#6-3-通用组件：search搜索框能力分析" class="headerlink" title="6-3 通用组件：search搜索框能力分析"></a>6-3 通用组件：search搜索框能力分析</h2><p>对于header 中的模块我们依次进行处理</p><p>search 部分为搜索框，对于该搜索框而言我们期望把它做成通用组件</p><p>那么既然是通用组件，我们就需要分析它的能力，它应该具备什么样的功能：</p><ol><li>输入内容实现双向数据绑定</li><li>鼠标移入与获取焦点时的动画</li><li>一键清空文本功能</li><li>搜索触发功能</li><li>可控制，可填充的下拉展示区</li><li>监听到以下事件列表：<ol><li>clear：删除所有文本事件</li><li>input：输入事件</li><li>focus：获取焦点事件</li><li>blur：失去焦点事件</li><li>search：触发搜索（点击或回车）事件</li></ol></li></ol><h2 id="6-4-通用组件：search搜索框样式处理"><a href="#6-4-通用组件：search搜索框样式处理" class="headerlink" title="6-4 通用组件：search搜索框样式处理"></a>6-4 通用组件：search搜索框样式处理</h2><ol><li>我们创建通用组件src&#x2F;lib&#x2F;search&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div</span><br><span class="line">    class=&#x27;group relative p-0.5 rounded-xl border-white</span><br><span class="line">    duration-500 hover:bg-red-100/40&#x27;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;!--搜索图标--&gt;</span><br><span class="line">      &lt;m-svg-icon</span><br><span class="line">        class=&#x27;w-1.5 h-1.5 absolute translate-y-[-50%] top-[50%] left-2&#x27;</span><br><span class="line">        name=&quot;search&quot;</span><br><span class="line">        color=&quot;#70707&quot;</span><br><span class="line">      &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">      &lt;!--输入框--&gt;</span><br><span class="line">      &lt;input</span><br><span class="line">        class=&#x27;block w-full h-[44px] pl-4 outline-0</span><br><span class="line">        bg-zinc-100 caret-zinc-400 rounded-xl</span><br><span class="line">        text-zinc-900 tracking-wide text-sm font-semibold border</span><br><span class="line">        border-zinc-100 focus:border-red-300 group-hover:bg-white</span><br><span class="line">        group-hover:border-zinc-200&#x27;</span><br><span class="line">        type=&quot;text&quot;</span><br><span class="line">        placeholder=&quot;搜索&quot;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;!--删除按钮--&gt;</span><br><span class="line">      &lt;m-svg-icon</span><br><span class="line">        name = &quot;input-delete&quot;</span><br><span class="line">        class=&#x27;w-1.5 h-1.5 absolute translate-y-[-50%] top-[50%] right-9</span><br><span class="line">        cursor-pointer duration-500&#x27;</span><br><span class="line">      &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">      &lt;!--分割线--&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class=&#x27;opacity-0 h-1.5 w-[1px] absolute translate-y-[-50%] top-[50%]</span><br><span class="line">        right-[62px] duration-500 bg-zinc-200 group-hover:opacity-100&#x27;</span><br><span class="line">      &gt;&lt;/div&gt;</span><br><span class="line">      &lt;!--TODO:搜索按钮（通用组件）--&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--下拉区--&gt;</span><br><span class="line">    &lt;transition name=&#x27;slide&#x27;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class=&#x27;max-h-[368px] w-full text-base overflow-auto bg-white</span><br><span class="line">        absolute z-20 left-0 top-[56px] p-2 rounded border border-zinc-200</span><br><span class="line">        duration-200 hover:shadow-2xl&#x27;</span><br><span class="line">      &gt;&lt;/div&gt;</span><br><span class="line">    &lt;/transition&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line">.slide-enter-active,</span><br><span class="line">.slide-leave-active&#123;</span><br><span class="line">  transition:all 0.5s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.slide-enter-from,</span><br><span class="line">.slide-leave-to&#123;</span><br><span class="line">  opacity: 0;</span><br><span class="line">  transform: translateY(40px);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>我们不需要在进行路由注册了，已经自动注册过了，直接使用就行，在views&#x2F;layout&#x2F;components&#x2F;header&#x2F;header-search&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;m-search&gt;&lt;/m-search&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="6-5-通用组件：button按钮能力分析"><a href="#6-5-通用组件：button按钮能力分析" class="headerlink" title="6-5 通用组件：button按钮能力分析"></a>6-5 通用组件：button按钮能力分析</h2><p>现在咱们的search 通用组件还差最后的一个<strong>按钮显示</strong></p><p>因为咱们在课程中会经常使用到各种各样的button按钮组件，所以说我们期望拥有一个button 按钮通用组件</p><p>那么对于这个按钮来说，我们期望拥有以下能力：</p><ol><li>可以显示文字按钮，并提供Loading功能</li><li>可以显示 icon按钮，并可以任意指定icon颜色</li><li>可开关的点击动画</li><li>可以指定各种风格和大小</li><li>当指定的风格或大小不符合预设时，需要给开发者以提示消息</li></ol><h2 id="6-6-通用组件：button按钮功能实现"><a href="#6-6-通用组件：button按钮功能实现" class="headerlink" title="6-6 通用组件：button按钮功能实现-"></a>6-6 通用组件：button按钮功能实现-</h2><ol><li>我们创建lib&#x2F;button&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;button</span><br><span class="line">    class=&#x27;text-xs text-center rounded duration-150 flex justify-center items-center&#x27;</span><br><span class="line">    :class=&quot;[</span><br><span class="line">      typeEnum[type],</span><br><span class="line">      sizeEnum[sizeKey].button,</span><br><span class="line">      &#123;</span><br><span class="line">        &#x27;active:scale-105&#x27;:isActiveAnim</span><br><span class="line">      &#125;</span><br><span class="line">    ]&quot;</span><br><span class="line">    @click.stop=&#x27;onBtnClick&#x27;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;!-- loading--&gt;</span><br><span class="line">    &lt;m-svg-icon</span><br><span class="line">      v-if=&#x27;loading&#x27;</span><br><span class="line">      name=&#x27;loading&#x27;</span><br><span class="line">      class=&#x27;w-2 h-2 animate-spin mr-1&#x27;</span><br><span class="line">    &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">    &lt;!-- icon按钮--&gt;</span><br><span class="line">    &lt;m-svg-icon</span><br><span class="line">      v-if=&#x27;icon&#x27;</span><br><span class="line">      :name=&#x27;icon&#x27;</span><br><span class="line">      class=&#x27;m-auto&#x27;</span><br><span class="line">      :class=&#x27;sizeEnum[sizeKey].icon&#x27;</span><br><span class="line">      :color=&#x27;iconColor&#x27;</span><br><span class="line">      :fillClass=&#x27;iconClass&#x27;</span><br><span class="line">    &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">    &lt;!-- icon按钮--&gt;</span><br><span class="line">    &lt;slot v-else/&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;!--1.构建 type风格可选项和size大小可选项--&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">const EMITS_CLICK=&#x27;click&#x27;</span><br><span class="line">//type可选项：表示按钮风格</span><br><span class="line">const typeEnum = &#123;</span><br><span class="line">  primary:&#x27;text-white bg-zinc-800 hover:bg-zinc-900 active:bg-zinc-800&#x27;,</span><br><span class="line">  main:&#x27;text-white bg-main hover:bg-hover-main active:bg-main&#x27;,</span><br><span class="line">  info:&#x27;text-zinc-800 bg-zinc-200 hover:bg-zinc-300 active:bg-zinc-200&#x27;</span><br><span class="line">&#125;</span><br><span class="line">//size可选项：表示按钮的大小。区分文字按钮和icon按钮</span><br><span class="line">const sizeEnum = &#123;</span><br><span class="line">  //文字按钮</span><br><span class="line">  default:&#123;</span><br><span class="line">    button:&#x27;w-8 h-4 text-sm&#x27;,</span><br><span class="line">    icon:&#x27;&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  //icon按钮</span><br><span class="line">  &#x27;icon-default&#x27;:&#123;</span><br><span class="line">    button:&#x27;w-4 h-4&#x27;,</span><br><span class="line">    icon:&#x27;w-1.5 h-1.5&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  small:&#123;</span><br><span class="line">    button:&#x27;w-7 h-3 text-base&#x27;,</span><br><span class="line">    icon:&#x27;&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#x27;icon-small&#x27;:&#123;</span><br><span class="line">    button:&#x27;w-3 h-3&#x27;,</span><br><span class="line">    icon:&#x27;w-1.5 h-1.5&#x27;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">/**</span><br><span class="line"> * 1.构建 type风格可选项和size大小可选项</span><br><span class="line"> 2.通过props让开发者控制按钮3.区分 icon button和 text button</span><br><span class="line"> 4.依据当前的数据，实现视图</span><br><span class="line"> 5.处理点击事件</span><br><span class="line"> */</span><br><span class="line">import &#123; computed &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">const props = defineProps(&#123;</span><br><span class="line">  //icon图标</span><br><span class="line">  icon:String,</span><br><span class="line">  //icon颜色</span><br><span class="line">  iconColor:String,</span><br><span class="line">  //icon图标类名（taliwind）</span><br><span class="line">  iconClass:String,</span><br><span class="line">  //按钮风格</span><br><span class="line">  type: &#123;</span><br><span class="line">    type: String,</span><br><span class="line">    default: &#x27;main&#x27;,</span><br><span class="line">    validator(val) &#123;</span><br><span class="line">      //1.获取所有的可选项</span><br><span class="line">      const keys = Object.keys(typeEnum)</span><br><span class="line">      //2.开发者这顶的风格在可选项中嘛</span><br><span class="line">      const result = keys.includes(val)</span><br><span class="line">      if (!result) &#123;</span><br><span class="line">        throw new Error(`你的type必须是$&#123;keys.join(&#x27;、&#x27;)&#125;中的一个`)</span><br><span class="line">      &#125;</span><br><span class="line">      return result</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">    //大小风格</span><br><span class="line">    size:&#123;</span><br><span class="line">      type:String,</span><br><span class="line">      default:&#x27;default&#x27;,</span><br><span class="line">      validator(val) &#123;</span><br><span class="line">        const keys = Object.keys(sizeEnum).filter((key)=&gt;</span><br><span class="line">        !key.includes(&#x27;icon&#x27;))</span><br><span class="line">        const result = keys.includes(val)</span><br><span class="line">        if (!result)&#123;</span><br><span class="line">          throw new Error(`你的size必须是$&#123;keys.join(&#x27;、&#x27;)&#125;中的一个`)</span><br><span class="line">        &#125;</span><br><span class="line">        return result</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">  //按钮点击时，是否需要动画</span><br><span class="line">  isActiveAnim:&#123;</span><br><span class="line">    type:Boolean,</span><br><span class="line">    default:true</span><br><span class="line">  &#125;,</span><br><span class="line">  //加载状态</span><br><span class="line">  loading:&#123;</span><br><span class="line">    type:Boolean,</span><br><span class="line">    default:false</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">const emits = defineEmits([EMITS_CLICK])</span><br><span class="line">//props.size</span><br><span class="line">const sizeKey = computed(()=&gt;&#123;</span><br><span class="line">  return props.icon ? &#x27;icon-&#x27;+props.size :props.size</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 点击事件处理</span><br><span class="line"> */</span><br><span class="line">const onBtnClick=()=&gt;&#123;</span><br><span class="line">  if (props.loading) return</span><br><span class="line">  emits(EMITS_CLICK)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>在tailwind.config.js中新增样式</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">colors</span>:&#123;</span><br><span class="line">  <span class="attr">main</span>:<span class="string">&#x27;#f44c58&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;hover-main&#x27;</span>:<span class="string">&#x27;$f32836&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.在lib&#x2F;search&#x2F;index.vue中使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--TODO:搜索按钮（通用组件）--&gt;</span><br><span class="line">&lt;m-button</span><br><span class="line">  class=&#x27;absolute translate-y-[-50%] top-[50%] right-1 rounded-full&#x27;</span><br><span class="line">  icon=&#x27;search&#x27;</span><br><span class="line">  iconColor=&#x27;#ffffff&#x27;</span><br><span class="line">&gt;&lt;/m-button&gt;</span><br></pre></td></tr></table></figure><h2 id="6-7-通用组件：完善search基本能力"><a href="#6-7-通用组件：完善search基本能力" class="headerlink" title="6-7 通用组件：完善search基本能力"></a>6-7 通用组件：完善search基本能力</h2><ol><li>输入内容实现双向数据绑定，在lib&#x2F;search&#x2F;index.vue中进行，在输入框处进行绑定</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">EMIT_UPDATE_MODELVALUE</span> = <span class="string">&#x27;update:modelValue&#x27;</span></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">/**</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">   1.输入内容实现双向数据绑定</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">   2.搜索按钮在hover 是展示</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">   3.一键清空文本功能</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">   4.触发搜索</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">   5.控制下拉展示区的展示</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml">   6.事件处理</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml"> */</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123; useVModel &#125; <span class="keyword">from</span> <span class="string">&#x27;@vueuse/core&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> props =<span class="title function_">defineProps</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">modelValue</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">required</span>:<span class="literal">true</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">type</span>:<span class="title class_">String</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="title function_">defineEmits</span>([<span class="variable constant_">EMIT_UPDATE_MODELVALUE</span>])</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> intputValue = <span class="title function_">useVModel</span>(props)</span></span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--输入框--&gt;</span><br><span class="line">&lt;input</span><br><span class="line">  class=&#x27;block w-full h-[44px] pl-4 outline-0</span><br><span class="line">  bg-zinc-100 caret-zinc-400 rounded-xl</span><br><span class="line">  text-zinc-900 tracking-wide text-sm font-semibold border</span><br><span class="line">  border-zinc-100 focus:border-red-300 group-hover:bg-white</span><br><span class="line">  group-hover:border-zinc-200&#x27;</span><br><span class="line">  type=&quot;text&quot;</span><br><span class="line">  placeholder=&quot;搜索&quot;</span><br><span class="line">  v-model=&#x27;intputValue&#x27;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>搜索按钮在hover 是展示 ，就是增加下搜索按钮的样式</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--TODO:搜索按钮（通用组件）--&gt;</span><br><span class="line">&lt;m-button</span><br><span class="line">  class=&#x27;opacity-0 absolute translate-y-[-50%] top-[50%] right-1 rounded-full duration-500 group-hover:opacity-100&#x27;</span><br><span class="line">  icon=&#x27;search&#x27;</span><br><span class="line">  iconColor=&#x27;#ffffff&#x27;</span><br><span class="line">&gt;&lt;/m-button&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>一键清空文本功能，就是在删除按钮处增加一个显示条件，在绑定一个清空函数</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--删除按钮--&gt;</span><br><span class="line">&lt;m-svg-icon</span><br><span class="line">  v-show=&#x27;intputValue&#x27;</span><br><span class="line">  name = &quot;input-delete&quot;</span><br><span class="line">  class=&#x27;w-1.5 h-1.5 absolute translate-y-[-50%] top-[50%] right-9</span><br><span class="line">  cursor-pointer duration-500&#x27;</span><br><span class="line">  @click=&#x27;onClearClick&#x27;</span><br><span class="line">&gt;&lt;/m-svg-icon&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除文本</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onClearClick</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  intputValue.<span class="property">value</span>=<span class="string">&#x27;&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>触发搜索 ，我们首先在搜索按钮增加点击事件，在文本框增加回车事件，然后注册一个emits，最后写一个搜索事件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--TODO:搜索按钮（通用组件）--&gt;</span><br><span class="line">&lt;m-button</span><br><span class="line">  class=&#x27;opacity-0 absolute translate-y-[-50%] top-[50%] right-1 rounded-full duration-500 group-hover:opacity-100&#x27;</span><br><span class="line">  icon=&#x27;search&#x27;</span><br><span class="line">  iconColor=&#x27;#ffffff&#x27;</span><br><span class="line">  @click=&#x27;onSearchHandler&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--输入框--&gt;</span><br><span class="line">&lt;input</span><br><span class="line">  class=&#x27;block w-full h-[44px] pl-4 outline-0</span><br><span class="line">  bg-zinc-100 caret-zinc-400 rounded-xl</span><br><span class="line">  text-zinc-900 tracking-wide text-sm font-semibold border</span><br><span class="line">  border-zinc-100 focus:border-red-300 group-hover:bg-white</span><br><span class="line">  group-hover:border-zinc-200&#x27;</span><br><span class="line">  type=&quot;text&quot;</span><br><span class="line">  placeholder=&quot;搜索&quot;</span><br><span class="line">  v-model=&#x27;intputValue&#x27;</span><br><span class="line">  @keyup.enter=&#x27;onSearchHandler&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">EMIT_SEARCH</span> = <span class="string">&#x27;search&#x27;</span></span><br><span class="line"><span class="keyword">const</span> emits = <span class="title function_">defineEmits</span>([<span class="variable constant_">EMIT_UPDATE_MODELVALUE</span>,<span class="variable constant_">EMIT_SEARCH</span>])</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 搜索</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSearchHandler</span> = (<span class="params"></span>) =&gt;&#123;</span><br><span class="line">  <span class="title function_">emits</span>(<span class="variable constant_">EMIT_SEARCH</span>,intputValue.<span class="property">value</span>)</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;search&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>控制下拉展示区的展示</li></ol><ul><li>首先我们先给下拉框设置一个什么时候显示，什么情况下显示</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;transition name=&#x27;slide&#x27;&gt;</span><br><span class="line">  &lt;div</span><br><span class="line">    v-if=&#x27;$slots.dropdown&#x27;</span><br><span class="line">    v-show=&#x27;isFocus&#x27;</span><br><span class="line">    class=&#x27;max-h-[368px] w-full text-base overflow-auto bg-white</span><br><span class="line">    absolute z-20 left-0 top-[56px] p-2 rounded border border-zinc-200</span><br><span class="line">    duration-200 hover:shadow-2xl&#x27;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;slot name=&#x27;dropdown&#x27;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/transition&gt;</span><br></pre></td></tr></table></figure><ul><li>然后我们在header&#x2F;header-search&#x2F;index.vue中进行使用这个插槽</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;m-search v-model=&#x27;inputValue&#x27;&gt;</span><br><span class="line">      &lt;template #dropdown&gt;</span><br><span class="line">        &lt;div&gt;</span><br><span class="line">          dropdown</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/m-search&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">const inputValue = ref(&#x27;&#x27;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ul><li>其次我们给输入框设置获取焦点的函数</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--输入框--&gt;</span><br><span class="line">&lt;input</span><br><span class="line">  class=&#x27;block w-full h-[44px] pl-4 outline-0</span><br><span class="line">  bg-zinc-100 caret-zinc-400 rounded-xl</span><br><span class="line">  text-zinc-900 tracking-wide text-sm font-semibold border</span><br><span class="line">  border-zinc-100 focus:border-red-300 group-hover:bg-white</span><br><span class="line">  group-hover:border-zinc-200&#x27;</span><br><span class="line">  type=&quot;text&quot;</span><br><span class="line">  placeholder=&quot;搜索&quot;</span><br><span class="line">  v-model=&#x27;intputValue&#x27;</span><br><span class="line">  @keyup.enter=&#x27;onSearchHandler&#x27;</span><br><span class="line">  @focus=&#x27;onFocusHandler&#x27;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><ul><li>下面对获取焦点函数进行定义</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//input 是否获取焦点</span></span><br><span class="line"><span class="keyword">const</span> isFocus = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取到焦点</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onFocusHandler</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  isFocus.<span class="property">value</span> =<span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>然后我们想让下拉框点击外面的时候进行隐藏这时我们使用vue自带的onClickOutside，现在开头进行</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div</span><br><span class="line">  class=&#x27;group relative p-0.5 rounded-xl border-white</span><br><span class="line">  duration-500 hover:bg-red-100/40&#x27;</span><br><span class="line">  ref=&#x27;containerTarge&#x27;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> containerTarge = <span class="title function_">ref</span>(<span class="literal">null</span>)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 点击containerTarge区域外隐藏dropdown</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_">onClickOutside</span>(containerTarge,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  isFocus.<span class="property">value</span>=<span class="literal">false</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="6"><li>事件处理</li></ol><ul><li>先定义这些事件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除所有文本</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">EMIT_CLEAR</span> = <span class="string">&#x27;clear&#x27;</span></span><br><span class="line"><span class="comment">//输入事件</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">EMIT_INPUT</span> = <span class="string">&#x27;input&#x27;</span></span><br><span class="line"><span class="comment">//获取焦点</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">EMIT_FOCUS</span> = <span class="string">&#x27;focus&#x27;</span></span><br><span class="line"><span class="comment">//失去焦点</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">EMIT_BULR</span> = <span class="string">&#x27;blur&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>然后将这些事件进行注册</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> emits = <span class="title function_">defineEmits</span>([</span><br><span class="line">  <span class="variable constant_">EMIT_UPDATE_MODELVALUE</span>,</span><br><span class="line">  <span class="variable constant_">EMIT_SEARCH</span>,</span><br><span class="line">  <span class="variable constant_">EMIT_CLEAR</span>,</span><br><span class="line">  <span class="variable constant_">EMIT_INPUT</span>,</span><br><span class="line">  <span class="variable constant_">EMIT_FOCUS</span>,</span><br><span class="line">  <span class="variable constant_">EMIT_BULR</span></span><br><span class="line">])</span><br></pre></td></tr></table></figure><ul><li>使用这些事件，记得输入框绑定失去焦点事件</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听用户输入行为</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_">watch</span>(intputValue,<span class="function">(<span class="params">val</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="title function_">emits</span>(<span class="variable constant_">EMIT_INPUT</span>,val)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除文本</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onClearClick</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  intputValue.<span class="property">value</span>=<span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="title function_">emits</span>(<span class="variable constant_">EMIT_CLEAR</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 搜索</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSearchHandler</span> = (<span class="params"></span>) =&gt;&#123;</span><br><span class="line">  <span class="title function_">emits</span>(<span class="variable constant_">EMIT_SEARCH</span>,intputValue.<span class="property">value</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"> * 获取到焦点</span><br><span class="line"> */</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onFocusHandler</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  isFocus.<span class="property">value</span> =<span class="literal">true</span></span><br><span class="line">  <span class="title function_">emits</span>(<span class="variable constant_">EMIT_FOCUS</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 失去焦点</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onBlurHandler</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="title function_">emits</span>(<span class="variable constant_">EMIT_BULR</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--输入框--&gt;</span><br><span class="line">&lt;input</span><br><span class="line">  class=&#x27;block w-full h-[44px] pl-4 outline-0</span><br><span class="line">  bg-zinc-100 caret-zinc-400 rounded-xl</span><br><span class="line">  text-zinc-900 tracking-wide text-sm font-semibold border</span><br><span class="line">  border-zinc-100 focus:border-red-300 group-hover:bg-white</span><br><span class="line">  group-hover:border-zinc-200&#x27;</span><br><span class="line">  type=&quot;text&quot;</span><br><span class="line">  placeholder=&quot;搜索&quot;</span><br><span class="line">  v-model=&#x27;intputValue&#x27;</span><br><span class="line">  @keyup.enter=&#x27;onSearchHandler&#x27;</span><br><span class="line">  @focus=&#x27;onFocusHandler&#x27;</span><br><span class="line">  @blur=&#x27;onBlurHandler&#x27;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><h2 id="6-8-通用组件：popover气泡卡片能力分析"><a href="#6-8-通用组件：popover气泡卡片能力分析" class="headerlink" title="6-8 通用组件：popover气泡卡片能力分析"></a>6-8 通用组件：popover气泡卡片能力分析</h2><ol><li>提供两个插槽</li></ol><ul><li>具名插槽：<strong>触发弹层的视图</strong></li><li>匿名插槽：<strong>弹出层视图中展示的内容</strong></li></ul><ol start="2"><li>控制弹出层的位置，我们期望可以具备以下位置弹出：<ul><li>左上</li><li>右上</li><li>左下</li><li>右下</li></ul></li></ol><h2 id="6-9-通用组件：popover气泡卡片基础功能实现"><a href="#6-9-通用组件：popover气泡卡片基础功能实现" class="headerlink" title="6-9 通用组件：popover气泡卡片基础功能实现"></a>6-9 通用组件：popover气泡卡片基础功能实现</h2><ol><li>我们在lib中创建组件popover&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&#x27;relative&#x27; @mouseenter=&#x27;onMouseenter&#x27;</span><br><span class="line">@mouseleave=&#x27;onMouseleave&#x27;&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">&lt;!--    具名插槽：触发弹层的视图--&gt;</span><br><span class="line">    &lt;slot name=&#x27;reference&#x27;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;!--  气泡展示--&gt;</span><br><span class="line">  &lt;transition name=&#x27;slide&#x27;&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      v-show=&#x27;isVisable&#x27;</span><br><span class="line">      class=&#x27;absolute p-1 z-20 bg-white border rounded-md&#x27;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;!--    匿名插槽:弹出层视图中展示的内容--&gt;</span><br><span class="line">      &lt;slot/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/transition&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">const isVisable = ref(false)</span><br><span class="line">/**</span><br><span class="line"> * 鼠标移入触发</span><br><span class="line"> */</span><br><span class="line">const onMouseenter = () =&gt;&#123;</span><br><span class="line">  isVisable.value=true</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * 鼠标移出触发</span><br><span class="line"> */</span><br><span class="line">const onMouseleave = () =&gt;&#123;</span><br><span class="line">  isVisable.value=false</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line">.slide-enter-active,</span><br><span class="line">.slide-leave-active&#123;</span><br><span class="line">  transition:opacity 0.3s,transform 0.3s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.slide-enter-from,</span><br><span class="line">.slide-leave-to&#123;</span><br><span class="line">  opacity: 0;</span><br><span class="line">  transform: translateY(20px);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>我们在src&#x2F;constants&#x2F;index.js中定义常量</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//极简白</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">THEME_LIGHT</span> =<span class="string">&#x27;THEME_LIGHT&#x27;</span></span><br><span class="line"><span class="comment">//极夜黑</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">THEME_DARK</span> = <span class="string">&#x27;THEME_DARK&#x27;</span></span><br><span class="line"><span class="comment">//跟随系统</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">THEME_SYSTEM</span> = <span class="string">&#x27;THEME_SYSTEM&#x27;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>在views&#x2F;layout&#x2F;components&#x2F;header&#x2F;header-theme.vue中使用</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;m-popover&gt;</span><br><span class="line">    &lt;!--具名插槽：触发弹层的视图--&gt;</span><br><span class="line">    &lt;template #reference&gt;</span><br><span class="line">      &lt;m-svg-icon</span><br><span class="line">        name=&#x27;theme-light&#x27;</span><br><span class="line">        class=&#x27;w-4 h-4 p-1 cursor-pointer rounded-sm duration-200</span><br><span class="line">        outline-none hover:bg-zinc-100/60&#x27;</span><br><span class="line">        fillClass=&#x27;fill-zinc-900&#x27;</span><br><span class="line">      &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">      &lt;!--    匿名插槽:弹出层视图中展示的内容--&gt;</span><br><span class="line">      &lt;div class=&#x27;w-[140px] overflow-hidden&#x27;&gt;</span><br><span class="line">        &lt;div</span><br><span class="line">          class=&#x27;flex item-center p-1 cursor-pointer rounded hover:bg-zinc-100/60&#x27;</span><br><span class="line">          v-for=&#x27;item in themeArr&#x27;</span><br><span class="line">          :key=&#x27;item.id&#x27;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;m-svg-icon</span><br><span class="line">            :name=&#x27;item.icon&#x27;</span><br><span class="line">            class=&#x27;w-1.5 h-1.5 mr-1&#x27;</span><br><span class="line">            fillClass=&#x27;fill-zinc-900&#x27;</span><br><span class="line">          &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">          &lt;span class=&#x27;text-zinc-900 text-sm&#x27;&gt;&#123;&#123; item.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/m-popover&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123;THEME_LIGHT,THEME_DARK,THEME_SYSTEM&#125; from &#x27;@/constants&#x27;</span><br><span class="line">const themeArr = [</span><br><span class="line">  &#123;</span><br><span class="line">    id:&#x27;0&#x27;,</span><br><span class="line">    type:THEME_LIGHT,</span><br><span class="line">    icon:&#x27;theme-light&#x27;,</span><br><span class="line">    name:&#x27;极简白&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    id:&#x27;1&#x27;,</span><br><span class="line">    type:THEME_DARK,</span><br><span class="line">    icon:&#x27;theme-dark&#x27;,</span><br><span class="line">    name:&#x27;极夜黑&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    id:&#x27;2&#x27;,</span><br><span class="line">    type:THEME_SYSTEM,</span><br><span class="line">    icon:&#x27;theme-system&#x27;,</span><br><span class="line">    name:&#x27;跟随系统&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="6-10-通用组件：popover功能延伸，控制气泡展示位置"><a href="#6-10-通用组件：popover功能延伸，控制气泡展示位置" class="headerlink" title="6-10 通用组件：popover功能延伸，控制气泡展示位置"></a>6-10 通用组件：popover功能延伸，控制气泡展示位置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> 1.指定所有可选位置的常量，并生成enum</span><br><span class="line"> 2.通过prop控制指定位置</span><br><span class="line"> 3.获取元素的DOM。创建读取元素尺寸的方法</span><br><span class="line"> 4.生成气泡的样式对象，用来控制每个位置对应的样式</span><br><span class="line"> 5.根据prop，计算样式对象</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><ol><li>指定所有可选位置的常量，并生成enum,在lib&#x2F;popover&#x2F;index.vue</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="comment">//左上</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PROP_TOP_LEFT</span> = <span class="string">&#x27;top-left&#x27;</span></span><br><span class="line"><span class="comment">//右上</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PROP_TOP_RIGHT</span> = <span class="string">&#x27;top-right&#x27;</span></span><br><span class="line"><span class="comment">//左下</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PROP_BOTTOM_LEFT</span> = <span class="string">&#x27;bottom-left&#x27;</span></span><br><span class="line"><span class="comment">//右下</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PROP_BOTTOM_RIGHT</span> = <span class="string">&#x27;bottom-right&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> placementEnum=[</span><br><span class="line">  <span class="variable constant_">PROP_TOP_LEFT</span>,</span><br><span class="line">  <span class="variable constant_">PROP_TOP_RIGHT</span>,</span><br><span class="line">  <span class="variable constant_">PROP_BOTTOM_LEFT</span>,</span><br><span class="line">  <span class="variable constant_">PROP_BOTTOM_RIGHT</span></span><br><span class="line">  ]</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>通过prop控制指定位置</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="comment">//控制气泡弹出位置，给出开发者错误提示</span></span><br><span class="line">  <span class="attr">placement</span>:&#123;</span><br><span class="line">    <span class="attr">type</span>:<span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">default</span>:<span class="variable constant_">PROP_BOTTOM_LEFT</span>,</span><br><span class="line">    <span class="title function_">validator</span>(<span class="params">val</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> result = placementEnum.<span class="title function_">includes</span>(val)</span><br><span class="line">      <span class="keyword">if</span> (!result)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`你的placement必须是<span class="subst">$&#123;placementEnum.join(<span class="string">&#x27;、&#x27;</span>)&#125;</span>中的一个`</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> result</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="3"><li>获取元素的DOM。创建读取元素尺寸的方法,获取dom先在两个插槽设置ref</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> &lt;div ref=&#x27;referenceTarget&#x27;&gt;</span><br><span class="line">&lt;!--    具名插槽：触发弹层的视图--&gt;</span><br><span class="line">    &lt;slot name=&#x27;reference&#x27;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  </span><br><span class="line">   &lt;div</span><br><span class="line">      ref=&#x27;contentTarget&#x27;</span><br><span class="line">      v-show=&#x27;isVisable&#x27;</span><br><span class="line">      class=&#x27;absolute p-1 z-20 bg-white border rounded-md&#x27;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;!--    匿名插槽:弹出层视图中展示的内容--&gt;</span><br><span class="line">      &lt;slot/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 计算元素的尺寸</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> referenceTarget = <span class="title function_">ref</span>(<span class="literal">null</span>)</span><br><span class="line"><span class="keyword">const</span> contentTarget = <span class="title function_">ref</span>(<span class="literal">null</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">useElementSize</span> = (<span class="params">target</span>) =&gt;&#123;</span><br><span class="line">  <span class="keyword">if</span>(!target) <span class="keyword">return</span> &#123;&#125;</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">width</span>:target.<span class="property">offsetWidth</span>,</span><br><span class="line">    <span class="attr">height</span>:target.<span class="property">offsetHeight</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>生成气泡样式，然后绑定使用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 气泡样式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> contentStyle = <span class="title function_">ref</span>(&#123;</span><br><span class="line">  <span class="attr">top</span>:<span class="number">0</span>,</span><br><span class="line">  <span class="attr">left</span>:<span class="number">0</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;div</span><br><span class="line">  ref=&#x27;contentTarget&#x27;</span><br><span class="line">  v-show=&#x27;isVisable&#x27;</span><br><span class="line">  class=&#x27;absolute p-1 z-20 bg-white border rounded-md&#x27;</span><br><span class="line">  :style=&#x27;contentStyle&#x27;</span><br><span class="line">&gt;</span><br><span class="line">  &lt;!--    匿名插槽:弹出层视图中展示的内容--&gt;</span><br><span class="line">  &lt;slot/&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><ol start="5"><li>根据prop，计算样式对象，然后在header-theme中组件使用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//计算：期望气泡展示的时候再进行计算</span></span><br><span class="line"><span class="title function_">watch</span>(isVisable,<span class="function">(<span class="params">val</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!val) <span class="keyword">return</span></span><br><span class="line">  <span class="comment">//等待元素渲染</span></span><br><span class="line">  <span class="comment">//vue在数据改变之后，需要等待一段时间Dom才会变化，所以我们可以通过nextTick函数的参数，来监听DOM变化之后的回调</span></span><br><span class="line">  <span class="title function_">nextTick</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (props.<span class="property">placement</span>)&#123;</span><br><span class="line">      <span class="comment">//左上</span></span><br><span class="line">        <span class="keyword">case</span> <span class="attr">PROP_TOP_LEFT</span>:</span><br><span class="line">          contentStyle.<span class="property">value</span>.<span class="property">top</span> = <span class="number">0</span></span><br><span class="line">          contentStyle.<span class="property">value</span>.<span class="property">left</span> = -<span class="title function_">useElementSize</span>(contentTarget).<span class="property">width</span>+<span class="string">&#x27;px&#x27;</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="comment">//右上</span></span><br><span class="line">      <span class="keyword">case</span> <span class="attr">PROP_TOP_RIGHT</span>:</span><br><span class="line">        contentStyle.<span class="property">value</span>.<span class="property">top</span> = <span class="number">0</span></span><br><span class="line">        contentStyle.<span class="property">value</span>.<span class="property">left</span> = <span class="title function_">useElementSize</span>(referenceTarget).<span class="property">width</span>+<span class="string">&#x27;px&#x27;</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="comment">//左下</span></span><br><span class="line">      <span class="keyword">case</span> <span class="attr">PROP_BOTTOM_LEFT</span>:</span><br><span class="line">        contentStyle.<span class="property">value</span>.<span class="property">top</span> = <span class="title function_">useElementSize</span>(referenceTarget).<span class="property">height</span>+<span class="string">&#x27;px&#x27;</span></span><br><span class="line">        contentStyle.<span class="property">value</span>.<span class="property">left</span> = <span class="title function_">useElementSize</span>(contentTarget).<span class="property">width</span>+<span class="string">&#x27;px&#x27;</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">      <span class="comment">//右下</span></span><br><span class="line">      <span class="keyword">case</span> <span class="attr">PROP_BOTTOM_RIGHT</span>:</span><br><span class="line">        contentStyle.<span class="property">value</span>.<span class="property">top</span> = <span class="title function_">useElementSize</span>(referenceTarget).<span class="property">height</span>+<span class="string">&#x27;px&#x27;</span></span><br><span class="line">        contentStyle.<span class="property">value</span>.<span class="property">left</span> = <span class="title function_">useElementSize</span>(referenceTarget).<span class="property">width</span>+<span class="string">&#x27;px&#x27;</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;m-popover placement=&#x27;bottom-left&#x27;&gt;&lt;/m-popover&gt;</span><br></pre></td></tr></table></figure><h2 id="6-11-通用组件：处理慢速移动时，气泡消失问题"><a href="#6-11-通用组件：处理慢速移动时，气泡消失问题" class="headerlink" title="6-11 通用组件：处理慢速移动时，气泡消失问题"></a>6-11 通用组件：处理慢速移动时，气泡消失问题</h2><p>想要处理这个问题，那么我们首先需要明白，为什么气泡会消失。</p><p>其实这个问题非常简单，因为在reference与气泡之间存在间隙，当鼠标移动到这个间隙处时，就会触发mouseleave 鼠标移出事件，那么此时 isVisable 就会变为false。</p><p>那么这样的原因分析出来之后，我们又应该如何解决这个问题呢？</p><p>想要解决这个问题，我们可以利用类似于防抖（debounce）的概念。</p><p>也就是：<strong>鼠标刚离开时，不去立刻修改 isVisable，而是延迟一段时间，如果在这段时间之内，再次触发了鼠标移入时间，则不再修改isViable</strong>以此来解决慢速移动的问题。</p><p>那么明确好了处理方案，接下来我们就实现这个功能：修改lib&#x2F;popover&#x2F;index.vue</p><ol><li>定义延迟关闭时长</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//延迟关闭时间</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">DELAY_TIME</span> = <span class="number">100</span></span><br></pre></td></tr></table></figure><ol start="2"><li>修改鼠标移入和移出的方法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> timeout</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 鼠标移入触发</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onMouseenter</span> = (<span class="params"></span>) =&gt;&#123;</span><br><span class="line">  isVisable.<span class="property">value</span>=<span class="literal">true</span></span><br><span class="line">  <span class="keyword">if</span> (timeout)&#123;</span><br><span class="line">    <span class="built_in">clearTimeout</span>(timeout)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 鼠标移出触发</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onMouseleave</span> = (<span class="params"></span>) =&gt;&#123;</span><br><span class="line">timeout = <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  isVisable.<span class="property">value</span>=<span class="literal">false</span></span><br><span class="line">  timeout = <span class="literal">null</span></span><br><span class="line">&#125;,<span class="variable constant_">DELAY_TIME</span>)</span><br></pre></td></tr></table></figure><h2 id="6-12-基于popover处理用户模块"><a href="#6-12-基于popover处理用户模块" class="headerlink" title="6-12 基于popover处理用户模块"></a>6-12 基于popover处理用户模块</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;m-popover class=&#x27;flex items-center&#x27; placement=&#x27;bottom-left&#x27;&gt;</span><br><span class="line">    &lt;template #reference&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class=&#x27;relative flex items-center p-0.5 rounded-sm</span><br><span class="line">        cursor-pointer duration-200 outline-none</span><br><span class="line">        hover:bg-zinc-100&#x27;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;!--头像--&gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          class=&#x27;w-3 h-3 rounded-sm&#x27;</span><br><span class="line">          src=&#x27;  https://w.wallhaven.cc/full/rd/wallhaven-rdwjj7.jpg&#x27;</span><br><span class="line">        /&gt;</span><br><span class="line">&lt;!--        下箭头--&gt;</span><br><span class="line">        &lt;m-svg-icon</span><br><span class="line">          class=&#x27;h-1.5 w-1.5 ml-0.5&#x27;</span><br><span class="line">          name=&#x27;down-arrow&#x27;</span><br><span class="line">          fillClass=&#x27;fill-zinc-900&#x27;</span><br><span class="line">        &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">&lt;!--        VIP--&gt;</span><br><span class="line">        &lt;m-svg-icon</span><br><span class="line">          class=&#x27;h-1.5 w-1.5 absolute right-[16px] bottom-0&#x27;</span><br><span class="line">          name = &#x27;vip&#x27;</span><br><span class="line">        &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">&lt;!--气泡--&gt;</span><br><span class="line">    &lt;div class=&#x27;w-[140px] overflow-hidden&#x27;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class=&#x27;flex items-center p-1 cursor-pointer rounded hover:bg-zinc-100/60&#x27;</span><br><span class="line">        v-for=&#x27;item in menuArr&#x27;</span><br><span class="line">        :key=&#x27;item.id&#x27;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;m-svg-icon</span><br><span class="line">          :name=&#x27;item.icon&#x27;</span><br><span class="line">          class=&#x27;w-1.5 h-1.5 mr-1&#x27;</span><br><span class="line">          fillClass=&#x27;fill-zinc-900&#x27;</span><br><span class="line">        &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">        &lt;span class=&#x27;text-zinc-800 text-sm&#x27; &gt;&#123;&#123;item.title&#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/m-popover&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">//构建数据源</span><br><span class="line">const menuArr =[</span><br><span class="line">  &#123;</span><br><span class="line">    id:0,</span><br><span class="line">    title:&#x27;个人资料&#x27;,</span><br><span class="line">    icon:&#x27;profile&#x27;,</span><br><span class="line">    path:&#x27;/profile&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    id:1,</span><br><span class="line">    title:&#x27;升级VIP&#x27;,</span><br><span class="line">    icon:&#x27;vip-profile&#x27;,</span><br><span class="line">    path:&#x27;/memeber&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    id:2,</span><br><span class="line">    title:&#x27;退出登陆&#x27;,</span><br><span class="line">    icon:&#x27;logout&#x27;,</span><br><span class="line">    path:&#x27;&#x27;</span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h1 id="7、企业级复杂前中台项目响应式处理方案-——-一套代码多端共用"><a href="#7、企业级复杂前中台项目响应式处理方案-——-一套代码多端共用" class="headerlink" title="7、企业级复杂前中台项目响应式处理方案 —— 一套代码多端共用"></a>7、企业级复杂前中台项目响应式处理方案 —— 一套代码多端共用</h1><p>一种样式可以同时适配移动端和PC端，这样的功能我们通常称之为响应式。但是咱们的项目是一个复杂的前中台系统，在这样的系统中，我们又应该如何应对这种响应式的问题处理呢？在 《样式复用、逻辑复用、可维护性》之间，我们又应该如何进行权衡呢？…</p><hr><h2 id="7-1-前言"><a href="#7-1-前言" class="headerlink" title="7-1 前言"></a>7-1 前言</h2><p>我们已经完成了<strong>PC端</strong>的Header的处理，那么接下来要处理的就是navigationBar。</p><p>但是我们知道，目前我们已经完成过一个移动端的navigationBar 了。</p><p>那么对于navigationBar 这个功能，我们还需要在PC端同样进行实现。通常我们把这样的一套功能称之为响应式（<strong>多指响应式布局：一套样式在多端展示</strong>）</p><p>但是咱们当前的项目不光是一个简单的响应式布局，而是一个复杂的前中台系统。那么在这样的前中台系统之中，我们又应该如何应对这种响应式的问题处理呢？</p><p>在<strong>样式复用、逻辑复用、代码可维护性</strong>之间，我们又应该如何去进行权衡呢？</p><h2 id="7-2-响应式下navigationBar实现方案分析"><a href="#7-2-响应式下navigationBar实现方案分析" class="headerlink" title="7-2 响应式下navigationBar实现方案分析"></a>7-2 响应式下navigationBar实现方案分析</h2><p>通常情况下<strong>复杂功能的响应式处理</strong>，一般我们有三种处理方案：</p><ol><li><p>一套代码处理多端：</p><ol><li>优势：代码量相对比较少</li><li>劣势：耦合性强，不利于后期维护</li></ol></li><li><p>多套代码分别处理各端：</p><ol><li>优势：逻辑清晰</li><li>劣势：可能会产生很多重复的逻辑</li></ol></li><li><p>结合以上两种方案，抽离公用逻辑，封装私有逻辑</p><ol><li>优势：结合以上两点优势</li><li>劣势：需要对业务和逻辑足够清楚</li></ol></li></ol><p>那么综合来看，肯定是第三种方式更好，所以咱们的navigationBar就通过第三种方式来去进行实现。</p><p>那么具体我们应该怎么去做呢？哪些是公用逻辑？哪些是私有逻辑？</p><p>我们知道一个功能由两部分组成：</p><ol><li>数据</li><li>视图</li></ol><p><strong>数据</strong></p><p>那么首先我们先来分析数据，双方（移动端和PC端）的数据是一样的。所以说这一块是完全可以复用的。</p><p>那么目前咱们的数据是通过 src&#x2F;views&#x2F;main&#x2F;compones&#x2F;navigation&#x2F;index.vue 进行获取，然后进行传递的。那么我们期望进行数据的复用，如果一直进行数据传递的话，未免有些过于复杂了。</p><p>所以说对于数据，我们可以直接通过vuex 来封装这一列的获取、切换行为。</p><p><strong>视图</strong><br>双方的视图在展示中的逻辑具备较大差异，所以为了综合可维护性，视图逻辑部分我们期望单独封装到各自的组件来来进行处理。</p><p><strong>总结</strong></p><p>那么这样我们就分析好了 navigationBar 的公有和私有部分：</p><ol><li>数据为公有数据，可以在vuex 中进行抽离处理。</li><li>视图为私有部分，需要在各自的组件l来进行单独处理。</li></ol><h2 id="7-3-抽离公用逻辑，封装系列动作"><a href="#7-3-抽离公用逻辑，封装系列动作" class="headerlink" title="7-3 抽离公用逻辑，封装系列动作"></a>7-3 抽离公用逻辑，封装系列动作</h2><ol><li>我们现在store&#x2F;index.js中定义createStore方法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>  &#123;createStore&#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="keyword">import</span> getters <span class="keyword">from</span> <span class="string">&#x27;./getters&#x27;</span></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  getters</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure><ol start="2"><li>然后再store&#x2F;getter.js中导出一个空数组</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>然后在main.js中进行注册</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;./store&#x27;</span></span><br><span class="line">app.<span class="title function_">use</span>(store)</span><br></pre></td></tr></table></figure><ol start="4"><li>我们创建store&#x2F;modules&#x2F;category.js模块，使用store方法进行数据的封装</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;<span class="variable constant_">ALL_CATEGORY_ITEM</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;@/constants&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;getCategory&#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/category&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理navigationBar中的数据categorys</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">//独立作用域</span></span><br><span class="line">  <span class="attr">namespaced</span>:<span class="literal">true</span>,</span><br><span class="line">  <span class="attr">state</span>:<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      <span class="attr">categorys</span>:[<span class="variable constant_">ALL_CATEGORY_ITEM</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>:&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 为categorys赋值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">setCategorys</span>(<span class="params">state,newCategorys</span>)&#123;</span><br><span class="line">      state.<span class="property">categorys</span> =[<span class="variable constant_">ALL_CATEGORY_ITEM</span>,...newCategorys]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">actions</span>:&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取category数据，并自动保存到vuex中</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">useCategoryData</span>(<span class="params">context</span>)&#123;</span><br><span class="line">      <span class="keyword">const</span> &#123;categorys&#125; = getCategory</span><br><span class="line">      context.<span class="title function_">commit</span>(<span class="string">&#x27;setCategorys&#x27;</span>,categorys)</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>最后在store&#x2F;index.js中注册数据模块</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>  &#123;createStore&#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="keyword">import</span> getters <span class="keyword">from</span> <span class="string">&#x27;./getters&#x27;</span></span><br><span class="line"><span class="keyword">import</span> category <span class="keyword">from</span> <span class="string">&#x27;./modules/category&#x27;</span></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  getters,</span><br><span class="line">  <span class="attr">modules</span>:&#123;</span><br><span class="line">    category</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure><ol start="6"><li>接下来我们就可以去触发categorys了，为了使访问变得简单，我们修改store&#x2F;getters.js</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">//简单访问</span></span><br><span class="line">  <span class="attr">categorys</span>:<span class="function">(<span class="params">state</span>)=&gt;</span>state.<span class="property">category</span>.<span class="property">categorys</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>我们对原有的src&#x2F;views&#x2F;main&#x2F;components&#x2F;navigation&#x2F;index. vue进行修改，使用store</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;mobile-navigation-vue v-if=&quot;isMobileTerminal&quot;  /&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; isMobileTerminal &#125; from &#x27;@/utils/flexible&#x27;</span><br><span class="line">import mobileNavigationVue from &#x27;./mobile/index.vue&#x27;</span><br><span class="line">import &#123;useStore&#125; from &#x27;vuex&#x27;</span><br><span class="line">const store = useStore()</span><br><span class="line">//触发category获取数据</span><br><span class="line">store.dispatch(&#x27;category/useCategoryData&#x27;)</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="8"><li>修改src&#x2F;views&#x2F;main&#x2F;components&#x2F;navigation&#x2F;mobile&#x2F;index.vue，这时候defineProps就可以不需要了；data需要换成store方法，直接获取数据；我们观察看出menu-vue的数据绑定也就不需要了，然后menu-vue组件中重复8.中前两个步骤</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="attr">data</span>:&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Array</span>,</span><br><span class="line">    <span class="attr">required</span>:<span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;li</span><br><span class="line">  v-for=&quot;(item,index) in $store.getters.categorys&quot;</span><br><span class="line">  :key=&quot;item.id&quot;</span><br><span class="line">  class=&quot;shrink-0 px-1.5 py-0.5 z-10 duration-200 last:mr-4&quot;</span><br><span class="line">  :class=&quot;&#123;</span><br><span class="line">    &#x27;text-zinc-100&#x27;: currentCategoryIndex === index</span><br><span class="line">  &#125;&quot;</span><br><span class="line">  :ref=&quot;setItemRef&quot;</span><br><span class="line">  @click=&quot;onItemClick(index)&quot;</span><br><span class="line">&gt;</span><br><span class="line">  &#123;&#123;item.name&#125;&#125;</span><br><span class="line">&lt;/li&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;m-popup v-model=&#x27;isVisable&#x27;&gt;</span><br><span class="line">  &lt;menu-vue  @onItemClick=&quot;onItemClick&quot;&gt;&lt;/menu-vue&gt;</span><br><span class="line">&lt;/m-popup&gt;</span><br></pre></td></tr></table></figure><h2 id="7-4-PC端navigationBar私有视图处理"><a href="#7-4-PC端navigationBar私有视图处理" class="headerlink" title="7-4 PC端navigationBar私有视图处理"></a>7-4 PC端navigationBar私有视图处理</h2><ol><li>我们首先创建navigation&#x2F;pc&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&#x27;bg-white sticky top-0 left-0 w-full z-10&#x27;&gt;</span><br><span class="line">    &lt;ul</span><br><span class="line">      class=&#x27;w-[800px] relative flex flex-wrap justify-center</span><br><span class="line">      overflow-x-auto px-[10px] py-1 text-xs text-zinc-600 duration-300</span><br><span class="line">      overflow-hidden max-auto&#x27;</span><br><span class="line">    &gt;</span><br><span class="line">&lt;!--      展示箭头--&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class=&#x27;absolute right-1 bottom-1 z-20 p-1 rounded cursor-pointer</span><br><span class="line">        duration-200 hover:bg-zinc-200&#x27;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;m-svg-icon</span><br><span class="line">          name=&#x27;unfold&#x27;</span><br><span class="line">          class=&#x27;w-1 h-1&#x27;</span><br><span class="line">          fillClass=&#x27;fill-zinc-900&#x27;</span><br><span class="line">        &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">&lt;!--      item--&gt;</span><br><span class="line">      &lt;li</span><br><span class="line">        v-for=&#x27;item in $store.getters.categorys&#x27;</span><br><span class="line">        :key=&#x27;item.id&#x27;</span><br><span class="line">        class=&#x27;shrink-0 px-1.5 py-0 z-10 duration-200 text-zinc-900</span><br><span class="line">        text-base font-bold h-4 leading-4 cursor-pointer hover:bg-zinc-200</span><br><span class="line">        rounded mr-1 mb-1&#x27;</span><br><span class="line">      &gt;</span><br><span class="line">        &#123;&#123;item.name&#125;&#125;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>在navigation&#x2F;index.vue中进行使用</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;pc-navigation-vue v-else&gt;&lt;/pc-navigation-vue&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">import pcNavigationVue from &#x27;./pc/index.vue&#x27;</span><br></pre></td></tr></table></figure><ol start="3"><li>发现还不能使，因为我们没有设置二级路由，我们在views&#x2F;layout&#x2F;components&#x2F;main.vue中使用二级路由</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;router-view&gt;&lt;/router-view&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>我们在router&#x2F;modules&#x2F;pc-router.js中设置，里面的children</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> [&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>: <span class="string">&#x27;main&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>: <span class="function">()=&gt;</span> <span class="title function_">import</span>(<span class="string">&#x27;@/views/layout/index.vue&#x27;</span>),</span><br><span class="line">  <span class="attr">children</span>:[</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">path</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="attr">name</span>:<span class="string">&#x27;home&#x27;</span>,</span><br><span class="line">      <span class="attr">component</span>:<span class="function">()=&gt;</span><span class="title function_">import</span>(<span class="string">&#x27;@/views/main/index.vue&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure><h2 id="7-5-PC端navigationBar私有逻辑处理"><a href="#7-5-PC端navigationBar私有逻辑处理" class="headerlink" title="7-5 PC端navigationBar私有逻辑处理"></a>7-5 PC端navigationBar私有逻辑处理</h2><ol><li>首先在navigation&#x2F;pc&#x2F;index.vue创建数据源</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;<span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 状态切换处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> isOpenCategory = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">triggerState</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  isOpenCategory.<span class="property">value</span> = !isOpenCategory.<span class="property">value</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>实现pc端展开和收起导航栏，在ul处以数据源为根据进行处理导航栏的高度；然后设置点击箭头时，数据源进行变化，同时icon也发生相应变化</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul</span><br><span class="line">      class=&#x27;w-[800px] relative flex flex-wrap justify-center</span><br><span class="line">      overflow-x-auto px-[10px] py-1 text-xs text-zinc-600 duration-300</span><br><span class="line">      overflow-hidden max-auto&#x27;</span><br><span class="line">      :class=&quot;[isOpenCategory ? &#x27;h-[206px]&#x27; : &#x27;h-[56px]&#x27;]&quot;</span><br><span class="line">    &gt;</span><br><span class="line">&lt;!--      展示箭头--&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class=&#x27;absolute right-1 bottom-1 z-20 p-1 rounded cursor-pointer</span><br><span class="line">        duration-200 hover:bg-zinc-200&#x27;</span><br><span class="line">        @click=&#x27;triggerState&#x27;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;m-svg-icon</span><br><span class="line">          :name=&quot;isOpenCategory ? &#x27;fold&#x27;:&#x27;unfold&#x27; &quot;</span><br><span class="line">          class=&#x27;w-1 h-1&#x27;</span><br><span class="line">          fillClass=&#x27;fill-zinc-900&#x27;</span><br><span class="line">        &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">      &lt;/div&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>我们给导航栏里的小模块设置高亮，增加选中方法，然后在li标签获取index，并且设置点击方法，根据值再来设置样式</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 选中状态处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> currentCategoryIndex = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onItemClick</span> = (<span class="params">index</span>) =&gt;&#123;</span><br><span class="line">  currentCategoryIndex.<span class="property">value</span> = index</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--      item--&gt;</span><br><span class="line">      &lt;li</span><br><span class="line">        v-for=&#x27;(item,index) in $store.getters.categorys&#x27;</span><br><span class="line">        :key=&#x27;item.id&#x27;</span><br><span class="line">        class=&#x27;shrink-0 px-1.5 py-0 z-10 duration-200 text-zinc-900</span><br><span class="line">        text-base font-bold h-4 leading-4 cursor-pointer hover:bg-zinc-200</span><br><span class="line">        rounded mr-1 mb-1&#x27;</span><br><span class="line">        :class=&quot;&#123;</span><br><span class="line">          &#x27;text-zinc-900 bg-zinc-200&#x27; :currentCategoryIndex === index</span><br><span class="line">        &#125;&quot;</span><br><span class="line">        @click=&quot;onItemClick(index)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &#123;&#123;item.name&#125;&#125;</span><br><span class="line">      &lt;/li&gt;</span><br></pre></td></tr></table></figure><h2 id="7-6-分析navigationBar闪烁问题"><a href="#7-6-分析navigationBar闪烁问题" class="headerlink" title="7-6 分析navigationBar闪烁问题"></a>7-6 分析navigationBar闪烁问题</h2><p>分析：</p><ul><li>出现闪烁的问题是因为网页先加载初始数据，后续的从后端调用的数据没有瞬间传过来</li></ul><p>解决方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">//1.让categorys 具备一个初始化数据</span><br><span class="line">//2.从服务端获取数据，替换初始化数据（之前就已经完成了）</span><br><span class="line">//3.为了防止初始化数据太老，我们把每次获取到的新数据，都作为下一次的初始化数据</span><br></pre></td></tr></table></figure><h2 id="7-7-处理navigationBar闪烁问题"><a href="#7-7-处理navigationBar闪烁问题" class="headerlink" title="7-7 处理navigationBar闪烁问题"></a>7-7 处理navigationBar闪烁问题</h2><ol><li>让categorys 具备一个初始化数据,对constants&#x2F;index.vue进行新增</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//category的初始化数据</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="variable constant_">CATEGORY_NOMAR_DATA</span> = [</span><br><span class="line">  <span class="variable constant_">ALL_CATEGORY_ITEM</span>,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;web_app_icon&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;UI/UX&#x27;</span>, <span class="attr">col</span>: <span class="number">1</span>, <span class="attr">urlname</span>: <span class="string">&#x27;web_app_icon&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;design&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;平面&#x27;</span>, <span class="attr">col</span>: <span class="number">1</span>, <span class="attr">urlname</span>: <span class="string">&#x27;design&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;illustration&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;插画/漫画&#x27;</span>, <span class="attr">col</span>: <span class="number">1</span>, <span class="attr">urlname</span>: <span class="string">&#x27;illustration&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;photography&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;摄影&#x27;</span>, <span class="attr">col</span>: <span class="number">2</span>, <span class="attr">urlname</span>: <span class="string">&#x27;photography&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;games&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;游戏&#x27;</span>, <span class="attr">urlname</span>: <span class="string">&#x27;games&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;anime&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;动漫&#x27;</span>, <span class="attr">urlname</span>: <span class="string">&#x27;anime&#x27;</span> &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="string">&#x27;industrial_design&#x27;</span>,</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&#x27;工业设计&#x27;</span>,</span><br><span class="line">    <span class="attr">col</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">urlname</span>: <span class="string">&#x27;industrial_design&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;architecture&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;建筑设计&#x27;</span>, <span class="attr">urlname</span>: <span class="string">&#x27;architecture&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;art&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;人文艺术&#x27;</span>, <span class="attr">urlname</span>: <span class="string">&#x27;art&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;home&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;家居/家装&#x27;</span>, <span class="attr">col</span>: <span class="number">1</span>, <span class="attr">urlname</span>: <span class="string">&#x27;home&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;apparel&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;女装/搭配&#x27;</span>, <span class="attr">col</span>: <span class="number">1</span>, <span class="attr">urlname</span>: <span class="string">&#x27;apparel&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;men&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;男士/风尚&#x27;</span>, <span class="attr">col</span>: <span class="number">2</span>, <span class="attr">urlname</span>: <span class="string">&#x27;men&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;modeling_hair&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;造型/美妆&#x27;</span>, <span class="attr">urlname</span>: <span class="string">&#x27;modeling_hair&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;diy_crafts&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;手工/布艺&#x27;</span>, <span class="attr">urlname</span>: <span class="string">&#x27;diy_crafts&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;food_drink&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;美食&#x27;</span>, <span class="attr">urlname</span>: <span class="string">&#x27;food_drink&#x27;</span> &#125;,</span><br><span class="line">  &#123; <span class="attr">id</span>: <span class="string">&#x27;travel_places&#x27;</span>, <span class="attr">name</span>: <span class="string">&#x27;旅行&#x27;</span>, <span class="attr">urlname</span>: <span class="string">&#x27;travel_places&#x27;</span> &#125;</span><br><span class="line">  <span class="comment">// &#123; id: &#x27;wedding_events&#x27;, name: &#x27;婚礼&#x27;, col: 2, urlname: &#x27;wedding_events&#x27; &#125;,</span></span><br><span class="line">  <span class="comment">// &#123; id: &#x27;kids&#x27;, name: &#x27;儿童&#x27;, urlname: &#x27;kids&#x27; &#125;,</span></span><br><span class="line">  <span class="comment">// &#123; id: &#x27;pets&#x27;, name: &#x27;宠物&#x27;, urlname: &#x27;pets&#x27; &#125;,</span></span><br><span class="line">  <span class="comment">// &#123; id: &#x27;quotes&#x27;, name: &#x27;美图&#x27;, urlname: &#x27;quotes&#x27; &#125;,</span></span><br><span class="line">  <span class="comment">// &#123; id: &#x27;people&#x27;, name: &#x27;明星&#x27;, urlname: &#x27;people&#x27; &#125;,</span></span><br><span class="line">  <span class="comment">// &#123; id: &#x27;beauty&#x27;, name: &#x27;美女&#x27;, urlname: &#x27;beauty&#x27; &#125;,</span></span><br><span class="line">  <span class="comment">// &#123; id: &#x27;desire&#x27;, name: &#x27;礼物&#x27;, urlname: &#x27;desire&#x27; &#125;,</span></span><br><span class="line">  <span class="comment">// &#123; id: &#x27;geek&#x27;, name: &#x27;极客&#x27;, urlname: &#x27;geek&#x27; &#125;,</span></span><br><span class="line">  <span class="comment">// &#123; id: &#x27;data_presentation&#x27;, name: &#x27;数据图&#x27;, urlname: &#x27;data_presentation&#x27; &#125;,</span></span><br><span class="line">  <span class="comment">// &#123; id: &#x27;cars_motorcycles&#x27;, name: &#x27;汽车/摩托&#x27;, urlname: &#x27;cars_motorcycles&#x27; &#125;,</span></span><br><span class="line">  <span class="comment">// &#123; id: &#x27;film_music_books&#x27;, name: &#x27;电影/图书&#x27;, urlname: &#x27;film_music_books&#x27; &#125;,</span></span><br><span class="line">  <span class="comment">// &#123; id: &#x27;tips&#x27;, name: &#x27;生活百科&#x27;, urlname: &#x27;tips&#x27; &#125;,</span></span><br><span class="line">  <span class="comment">// &#123; id: &#x27;education&#x27;, name: &#x27;教育&#x27;, urlname: &#x27;education&#x27; &#125;,</span></span><br><span class="line">  <span class="comment">// &#123; id: &#x27;sports&#x27;, name: &#x27;运动&#x27;, urlname: &#x27;sports&#x27; &#125;,</span></span><br><span class="line">  <span class="comment">// &#123; id: &#x27;funny&#x27;, name: &#x27;搞笑&#x27;, urlname: &#x27;funny&#x27; &#125;</span></span><br><span class="line">]</span><br></pre></td></tr></table></figure><ol start="2"><li>在store&#x2F;modules&#x2F;category.js进行数据导入</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;<span class="variable constant_">ALL_CATEGORY_ITEM</span>,<span class="variable constant_">CATEGORY_NOMAR_DATA</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;@/constants&#x27;</span></span><br><span class="line"><span class="attr">state</span>:<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      <span class="comment">//1.让categorys 具备一个初始化数据</span></span><br><span class="line">      <span class="comment">//2.从服务端获取数据，替换初始化数据</span></span><br><span class="line">      <span class="comment">//3.为了防止初始化数据太老，我们把每次获取到的新数据，都作为下一次的初始化数据</span></span><br><span class="line">      <span class="attr">categorys</span>:<span class="variable constant_">CATEGORY_NOMAR_DATA</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure><h2 id="7-8-category数据缓存，覆盖初始数据"><a href="#7-8-category数据缓存，覆盖初始数据" class="headerlink" title="7-8 category数据缓存，覆盖初始数据"></a>7-8 category数据缓存，覆盖初始数据</h2><p>那么在处理好了闪烁的问题之后，接下来我们要完成之前明确的第三步，也就是<strong>缓存请求得来的vuex 中的数据</strong>，<strong>并且在下次运行时把缓存的数据作为初始值。</strong></p><p>那么想要实现这一步的功能，我们可以利用<strong>vuex-persistedstate</strong></p><p>vuex-persistedstate：可以自动保存 vuex 中的数据到 localStorage，并且在下次开始的时候自动读取这个数据到对应的state中</p><p>那么，接下来就利用这个库来实现我们的功能：</p><ol><li>安装vuex-persistedstate</li></ol><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save vuex-persistedstate@<span class="number">4</span>.<span class="number">1</span>.<span class="number">0</span></span><br></pre></td></tr></table></figure><ol start="2"><li>我们在store&#x2F;index.js中使用这个库</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> createPersistedState <span class="keyword">from</span> <span class="string">&#x27;vuex-persistedstate&#x27;</span></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  getters,</span><br><span class="line">  <span class="attr">modules</span>:&#123;</span><br><span class="line">    category</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>:[</span><br><span class="line">   <span class="title function_">createPersistedState</span>(&#123;</span><br><span class="line">     <span class="comment">//指定保存到localStorage中的key</span></span><br><span class="line">     <span class="attr">key</span>:<span class="string">&#x27;imooc-front&#x27;</span>,</span><br><span class="line">     <span class="comment">//需要保存的模块</span></span><br><span class="line">     <span class="attr">paths</span>:[<span class="string">&#x27;category&#x27;</span>]</span><br><span class="line">   &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure><h1 id="8、-主题替换解决方案-——-打造完善多主题系统"><a href="#8、-主题替换解决方案-——-打造完善多主题系统" class="headerlink" title="8、 主题替换解决方案 —— 打造完善多主题系统"></a>8、 主题替换解决方案 —— 打造完善多主题系统</h1><p>市面上很多的组件库都存在主题替换的功能，但是如果脱离了组件库你还知道如何实现主题替换吗？整个主题替换方案背后的原理是什么？如果我们想要跟随系统主题发生变化，那么又应该怎么做呢？</p><hr><h2 id="8-1-主题替换原理分析"><a href="#8-1-主题替换原理分析" class="headerlink" title="8-1 主题替换原理分析"></a>8-1 主题替换原理分析</h2><p>就是一句话：</p><ul><li>通过类名的控制对应的样式（主题），当类名发生变化时，即完成了主题替换</li></ul><h2 id="8-2-ailwindDarkMode原理"><a href="#8-2-ailwindDarkMode原理" class="headerlink" title="8-2 ailwindDarkMode原理"></a>8-2 ailwindDarkMode原理</h2><ol><li>首先在tailwind.config.js下设置手动切换暗黑模式</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//手动切换暗黑模式</span></span><br><span class="line"><span class="attr">darkMode</span>:<span class="string">&#x27;class&#x27;</span>,</span><br></pre></td></tr></table></figure><ol start="2"><li>然后我们在header&#x2F;index.vue中的div标签加上dark样式</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&#x27;w-full bg-white dark:bg-zinc-800 border-b border-b-zinc-200</span><br><span class="line">px-2 py-1&#x27;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>去浏览器按住F12，然后修改元素的html标签增加class&#x3D;’dark’就可以看到效果</li></ol><h2 id="8-3-为组件增加dark适配"><a href="#8-3-为组件增加dark适配" class="headerlink" title="8-3 为组件增加dark适配"></a>8-3 为组件增加dark适配</h2><p>下面就是修改各个页面的样式：</p><ol><li>首先修改header&#x2F;header-my.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;m-popover class=&#x27;flex items-center&#x27; placement=&#x27;bottom-left&#x27;&gt;</span><br><span class="line">    &lt;template #reference&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class=&#x27;relative flex items-center p-0.5 rounded-sm</span><br><span class="line">        cursor-pointer duration-200 outline-none</span><br><span class="line">        hover:bg-zinc-100 dark:hover:bg-zinc-900&#x27;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;!--头像--&gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          class=&#x27;w-3 h-3 rounded-sm&#x27;</span><br><span class="line">          src=&#x27;  https://w.wallhaven.cc/full/rd/wallhaven-rdwjj7.jpg&#x27;</span><br><span class="line">        /&gt;</span><br><span class="line">&lt;!--        下箭头--&gt;</span><br><span class="line">        &lt;m-svg-icon</span><br><span class="line">          class=&#x27;h-1.5 w-1.5 ml-0.5&#x27;</span><br><span class="line">          name=&#x27;down-arrow&#x27;</span><br><span class="line">          fillClass=&#x27;fill-zinc-900 dark:fill-zinc-300&#x27;</span><br><span class="line">        &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">&lt;!--        VIP--&gt;</span><br><span class="line">        &lt;m-svg-icon</span><br><span class="line">          class=&#x27;h-1.5 w-1.5 absolute right-[16px] bottom-0&#x27;</span><br><span class="line">          name = &#x27;vip&#x27;</span><br><span class="line">        &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">&lt;!--气泡--&gt;</span><br><span class="line">    &lt;div class=&#x27;w-[140px] overflow-hidden&#x27;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class=&#x27;flex items-center p-1 cursor-pointer rounded</span><br><span class="line">        hover:bg-zinc-100/60 dark:hover:bg-zinc-800&#x27;</span><br><span class="line">        v-for=&#x27;item in menuArr&#x27;</span><br><span class="line">        :key=&#x27;item.id&#x27;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;m-svg-icon</span><br><span class="line">          :name=&#x27;item.icon&#x27;</span><br><span class="line">          class=&#x27;w-1.5 h-1.5 mr-1&#x27;</span><br><span class="line">          fillClass=&#x27;fill-zinc-900 dark:fill-zinc-300&#x27;</span><br><span class="line">        &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">        &lt;span class=&#x27;text-zinc-800 text-sm dark:text-zinc-300&#x27; &gt;&#123;&#123;item.title&#125;&#125;&lt;/span&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/m-popover&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>修改header&#x2F;header-theme.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;m-popover placement=&#x27;bottom-left&#x27;&gt;</span><br><span class="line">    &lt;!--具名插槽：触发弹层的视图--&gt;</span><br><span class="line">    &lt;template #reference&gt;</span><br><span class="line">      &lt;m-svg-icon</span><br><span class="line">        name=&#x27;theme-light&#x27;</span><br><span class="line">        class=&#x27;w-4 h-4 p-1 cursor-pointer rounded-sm duration-200</span><br><span class="line">        outline-none hover:bg-zinc-100/60 dark:hover:bg-zinc-900&#x27;</span><br><span class="line">        fillClass=&#x27;fill-zinc-900 dark:fill-zinc-300&#x27;</span><br><span class="line">      &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">      &lt;!--    匿名插槽:弹出层视图中展示的内容--&gt;</span><br><span class="line">      &lt;div class=&#x27;w-[140px] overflow-hidden&#x27;&gt;</span><br><span class="line">        &lt;div</span><br><span class="line">          class=&#x27;flex item-center p-1 cursor-pointer rounded</span><br><span class="line">          hover:bg-zinc-100/60 dark:hover:bg-zinc-800&#x27;</span><br><span class="line">          v-for=&#x27;item in themeArr&#x27;</span><br><span class="line">          :key=&#x27;item.id&#x27;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;m-svg-icon</span><br><span class="line">            :name=&#x27;item.icon&#x27;</span><br><span class="line">            class=&#x27;w-1.5 h-1.5 mr-1&#x27;</span><br><span class="line">            fillClass=&#x27;fill-zinc-900 dark:fill-zinc-300&#x27;</span><br><span class="line">          &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">          &lt;span class=&#x27;text-zinc-900 text-sm dark:text-zinc-300&#x27;&gt;&#123;&#123; item.name &#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/m-popover&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>修改view&#x2F;main&#x2F;components&#x2F;menu&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;div class=&#x27;py-2 h-[80vh] flex flex-col&#x27;&gt;</span><br><span class="line">  &lt;h2 class=&#x27;text-xl text-zinc-900 dark:text-zinc-200 font-bold mb-2 px-1&#x27;&gt;</span><br><span class="line">    所有分类</span><br><span class="line">  &lt;/h2&gt;</span><br><span class="line">  &lt;ul class=&#x27;overflow-y-scroll&#x27;&gt;</span><br><span class="line">    &lt;li</span><br><span class="line">      v-for=&quot;(item,index)in $store.getters.categorys&quot;</span><br><span class="line">      :key=&quot;item.id&quot;</span><br><span class="line">      class=&quot;text-lg text-zinc-900 dark:text-zinc-300 px-1 py-1.5</span><br><span class="line">      duration-100 active:bg-zinc-100 dark:active:bg-zinc-900&quot;</span><br><span class="line">      @click=&quot;$emit(&#x27;onItemClick&#x27;,index)&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &#123;&#123;item.name&#125;&#125;</span><br><span class="line">    &lt;/li&gt;</span><br><span class="line">  &lt;/ul&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>修改view&#x2F;main&#x2F;components&#x2F;navigation&#x2F;mobile&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&quot;bg-white dark :bg-zinc-900 sticky top-0 left-0 z-10&quot;&gt;</span><br><span class="line">    &lt;ul</span><br><span class="line">      ref=&quot;ulTarget&quot;</span><br><span class="line">      class=&quot; relative flex overflow-x-auto p-1 text-xs text-zinc-600</span><br><span class="line">      overflow-hidden&quot;&gt;</span><br><span class="line">      &lt;!--滑块--&gt;</span><br><span class="line">      &lt;li</span><br><span class="line">        ref=&quot;sliderTarget&quot;</span><br><span class="line">        :style=&quot;sliderStyle&quot;</span><br><span class="line">        class=&quot;absolute h-[22px] bg-zinc-900 dark:bg-zinc-800 rounded-lg duration-200&quot;</span><br><span class="line">      &gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">      &lt;!--汉堡按钮--&gt;</span><br><span class="line">      &lt;li</span><br><span class="line">        class=&quot;fixed top-0 right-[-1px] h-4 px-1 flex items-center bg-white</span><br><span class="line">        dark:bg-zinc-900 z-20 shadow-l-white dark:shadow-l-zinc&quot;</span><br><span class="line">        @click=&#x27;onShowPopup&#x27;&gt;</span><br><span class="line">        &lt;m-svg-icon class=&quot;w-1.5 h-1.5&quot; name=&quot;hamburger&quot;&gt;&lt;/m-svg-icon&gt;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">      &lt;li</span><br><span class="line">        v-for=&quot;(item,index) in $store.getters.categorys&quot;</span><br><span class="line">        :key=&quot;item.id&quot;</span><br><span class="line">        class=&quot;shrink-0 px-1.5 py-0.5 z-10 duration-200 last:mr-4&quot;</span><br><span class="line">        :class=&quot;&#123;</span><br><span class="line">          &#x27;text-zinc-100&#x27;: currentCategoryIndex === index</span><br><span class="line">        &#125;&quot;</span><br><span class="line">        :ref=&quot;setItemRef&quot;</span><br><span class="line">        @click=&quot;onItemClick(index)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &#123;&#123;item.name&#125;&#125;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">    &lt;m-popup v-model=&#x27;isVisable&#x27;&gt;</span><br><span class="line">      &lt;menu-vue  @onItemClick=&quot;onItemClick&quot;&gt;&lt;/menu-vue&gt;</span><br><span class="line">    &lt;/m-popup&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="5"><li>修改view&#x2F;main&#x2F;components&#x2F;navigation&#x2F;pc&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&#x27;bg-white dark:bg-zinc-800 sticky top-0 left-0 w-full z-10&#x27;&gt;</span><br><span class="line">    &lt;ul</span><br><span class="line">      class=&#x27;w-[800px] relative flex flex-wrap justify-center</span><br><span class="line">      overflow-x-auto px-[10px] py-1 text-xs text-zinc-600 duration-300</span><br><span class="line">      overflow-hidden max-auto&#x27;</span><br><span class="line">      :class=&quot;[isOpenCategory ? &#x27;h-[206px]&#x27; : &#x27;h-[56px]&#x27;]&quot;</span><br><span class="line">    &gt;</span><br><span class="line">&lt;!--      展示箭头--&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class=&#x27;absolute right-1 bottom-1 z-20 p-1 rounded cursor-pointer</span><br><span class="line">        duration-200 hover:bg-zinc-200 dark:hover:bg-zinc-900&#x27;</span><br><span class="line">        @click=&#x27;triggerState&#x27;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;m-svg-icon</span><br><span class="line">          :name=&quot;isOpenCategory ? &#x27;fold&#x27;:&#x27;unfold&#x27; &quot;</span><br><span class="line">          class=&#x27;w-1 h-1&#x27;</span><br><span class="line">          fillClass=&#x27;fill-zinc-900 dark:fill-zinc-300&#x27;</span><br><span class="line">        &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">&lt;!--      item--&gt;</span><br><span class="line">      &lt;li</span><br><span class="line">        v-for=&#x27;(item,index) in $store.getters.categorys&#x27;</span><br><span class="line">        :key=&#x27;item.id&#x27;</span><br><span class="line">        class=&#x27;shrink-0 px-1.5 py-0 z-10 duration-200 text-zinc-900</span><br><span class="line">        dark:text-zinc-500 dark:hover:text-zinc-300 text-base font-bold</span><br><span class="line">        h-4 leading-4 cursor-pointer hover:bg-zinc-200 dark:hover:bg-zinc-900</span><br><span class="line">        rounded mr-1 mb-1&#x27;</span><br><span class="line">        :class=&quot;&#123;</span><br><span class="line">          &#x27;text-zinc-900 dark:text-zinc-300 bg-zinc-200 dark:bg-zinc-900&#x27; :currentCategoryIndex === index</span><br><span class="line">        &#125;&quot;</span><br><span class="line">        @click=&quot;onItemClick(index)&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &#123;&#123;item.name&#125;&#125;</span><br><span class="line">      &lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="6"><li>修改lib&#x2F;button&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;button</span><br><span class="line">    class=&#x27;text-xs text-center rounded duration-150 flex justify-center items-center&#x27;</span><br><span class="line">    :class=&quot;[</span><br><span class="line">      typeEnum[type],</span><br><span class="line">      sizeEnum[sizeKey].button,</span><br><span class="line">      &#123;</span><br><span class="line">        &#x27;active:scale-105&#x27;:isActiveAnim</span><br><span class="line">      &#125;</span><br><span class="line">    ]&quot;</span><br><span class="line">    @click.stop=&#x27;onBtnClick&#x27;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;!-- loading--&gt;</span><br><span class="line">    &lt;m-svg-icon</span><br><span class="line">      v-if=&#x27;loading&#x27;</span><br><span class="line">      name=&#x27;loading&#x27;</span><br><span class="line">      class=&#x27;w-2 h-2 animate-spin mr-1&#x27;</span><br><span class="line">    &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">    &lt;!-- icon按钮--&gt;</span><br><span class="line">    &lt;m-svg-icon</span><br><span class="line">      v-if=&#x27;icon&#x27;</span><br><span class="line">      :name=&#x27;icon&#x27;</span><br><span class="line">      class=&#x27;m-auto&#x27;</span><br><span class="line">      :class=&#x27;sizeEnum[sizeKey].icon&#x27;</span><br><span class="line">      :color=&#x27;iconColor&#x27;</span><br><span class="line">      :fillClass=&#x27;iconClass&#x27;</span><br><span class="line">    &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">    &lt;!-- icon按钮--&gt;</span><br><span class="line">    &lt;slot v-else/&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/button&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="7"><li>修改lib&#x2F;popover&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&#x27;relative&#x27; @mouseenter=&#x27;onMouseenter&#x27;</span><br><span class="line">@mouseleave=&#x27;onMouseleave&#x27;&gt;</span><br><span class="line">  &lt;div ref=&#x27;referenceTarget&#x27;&gt;</span><br><span class="line">&lt;!--    具名插槽：触发弹层的视图--&gt;</span><br><span class="line">    &lt;slot name=&#x27;reference&#x27;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">  &lt;!--  气泡展示--&gt;</span><br><span class="line">  &lt;transition name=&#x27;slide&#x27;&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      ref=&#x27;contentTarget&#x27;</span><br><span class="line">      v-show=&#x27;isVisable&#x27;</span><br><span class="line">      class=&#x27;absolute p-1 z-20 bg-white dark:bg-zinc-900 border</span><br><span class="line">      dark:border-zinc-700 rounded-md&#x27;</span><br><span class="line">      :style=&#x27;contentStyle&#x27;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;!--    匿名插槽:弹出层视图中展示的内容--&gt;</span><br><span class="line">      &lt;slot/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/transition&gt;</span><br><span class="line"></span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="8"><li>修改lib&#x2F;popup&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;teleport to=&quot;body&quot;&gt;</span><br><span class="line">    &lt;!-- 蒙版--&gt;</span><br><span class="line">    &lt;transition name=&quot;fade&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        v-if=&#x27;isVisable&#x27;</span><br><span class="line">        class=&#x27;w-screen h-screen bg-zinc-900/80 z-40 fixed top-0 left-0&#x27;</span><br><span class="line">        @click=&quot;isVisable = false&quot;</span><br><span class="line">      &gt;&lt;/div&gt;</span><br><span class="line">    &lt;/transition&gt;</span><br><span class="line">    &lt;!-- 内容--&gt;</span><br><span class="line">    &lt;transition name=&quot;popup-down-up&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        v-if=&#x27;isVisable&#x27;</span><br><span class="line">        v-bind=&quot;$attrs&quot;</span><br><span class="line">        class=&#x27;w-screen bg-white dark:bg-zinc-800 z-50 fixed bottom-0 &#x27;&gt;</span><br><span class="line">        &lt;slot/&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/transition&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/teleport&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="9"><li>修改lib&#x2F;search&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div</span><br><span class="line">    class=&#x27;group relative p-0.5 rounded-xl border-white dark:border-zinc-200</span><br><span class="line">    duration-500 hover:bg-red-100/40&#x27;</span><br><span class="line">    ref=&#x27;containerTarge&#x27;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;div&gt;</span><br><span class="line">      &lt;!--搜索图标--&gt;</span><br><span class="line">      &lt;m-svg-icon</span><br><span class="line">        class=&#x27;w-1.5 h-1.5 absolute translate-y-[-50%] top-[50%] left-2&#x27;</span><br><span class="line">        name=&quot;search&quot;</span><br><span class="line">        color=&quot;#70707&quot;</span><br><span class="line">      &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">      &lt;!--输入框--&gt;</span><br><span class="line">      &lt;input</span><br><span class="line">        class=&#x27;block w-full h-[44px] pl-4 outline-0 bg-zinc-100</span><br><span class="line">        dark:bg-zinc-800  caret-zinc-400 rounded-xl text-zinc-900</span><br><span class="line">        dark:text-zinc-200 tracking-wide text-sm font-semibold border</span><br><span class="line">        border-zinc-100 dark:border-zinc-700 duration-500</span><br><span class="line">        focus:border-red-300 group-hover:bg-white</span><br><span class="line">        dark:group-hover:bg-zinc-900 group-hover:border-zinc-200</span><br><span class="line">        dark:group-hover:bg-zinc-700&#x27;</span><br><span class="line">        type=&quot;text&quot;</span><br><span class="line">        placeholder=&quot;搜索&quot;</span><br><span class="line">        v-model=&#x27;intputValue&#x27;</span><br><span class="line">        @keyup.enter=&#x27;onSearchHandler&#x27;</span><br><span class="line">        @focus=&#x27;onFocusHandler&#x27;</span><br><span class="line">        @blur=&#x27;onBlurHandler&#x27;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;!--删除按钮--&gt;</span><br><span class="line">      &lt;m-svg-icon</span><br><span class="line">        v-show=&#x27;intputValue&#x27;</span><br><span class="line">        name = &quot;input-delete&quot;</span><br><span class="line">        class=&#x27;w-1.5 h-1.5 absolute translate-y-[-50%] top-[50%] right-9</span><br><span class="line">        cursor-pointer duration-500&#x27;</span><br><span class="line">        @click=&#x27;onClearClick&#x27;</span><br><span class="line">      &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">      &lt;!--分割线--&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class=&#x27;opacity-0 h-1.5 w-[1px] absolute translate-y-[-50%] top-[50%]</span><br><span class="line">        right-[62px] duration-500 bg-zinc-200 group-hover:opacity-100&#x27;</span><br><span class="line">      &gt;&lt;/div&gt;</span><br><span class="line">      &lt;!--TODO:搜索按钮（通用组件）--&gt;</span><br><span class="line">      &lt;m-button</span><br><span class="line">        class=&#x27;opacity-0 absolute translate-y-[-50%] top-[50%] right-1 rounded-full duration-500 group-hover:opacity-100&#x27;</span><br><span class="line">        icon=&#x27;search&#x27;</span><br><span class="line">        iconColor=&#x27;#ffffff&#x27;</span><br><span class="line">        @click=&#x27;onSearchHandler&#x27;</span><br><span class="line">      &gt;&lt;/m-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--下拉区--&gt;</span><br><span class="line">    &lt;transition name=&#x27;slide&#x27;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        v-if=&#x27;$slots.dropdown&#x27;</span><br><span class="line">        v-show=&#x27;isFocus&#x27;</span><br><span class="line">        class=&#x27;max-h-[368px] w-full text-base overflow-auto bg-white</span><br><span class="line">        dark:bg-zinc-800 absolute z-20 left-0 top-[56px] p-2 rounded border</span><br><span class="line">        border-zinc-200 dark:border-zinc-600 duration-200 hover:shadow-2xl&#x27;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;slot name=&#x27;dropdown&#x27;/&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/transition&gt;</span><br><span class="line"></span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="10"><li>最后就是个tailwind.config.js增加一个新的阴影特效</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">boxShadow</span>:&#123;</span><br><span class="line">  <span class="string">&#x27;l-white&#x27;</span>: <span class="string">&#x27;-10px 0 10px white&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;l-zinc&#x27;</span>: <span class="string">&#x27;-10px 0 10px #18181b&#x27;</span></span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><h2 id="8-4-DarkMode在复杂应用中的实现逻辑分析"><a href="#8-4-DarkMode在复杂应用中的实现逻辑分析" class="headerlink" title="8-4 DarkMode在复杂应用中的实现逻辑分析"></a>8-4 DarkMode在复杂应用中的实现逻辑分析</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">//1.监听主题的切换行为</span><br><span class="line">//2.根据行为保存当前需要展示的主题到vuex中</span><br><span class="line">//3.根据vuex中保存的当前主题，展示header-theme下的显示图标</span><br><span class="line">//4.根据vuex中保存的当前主题，修改html的class</span><br></pre></td></tr></table></figure><h2 id="8-5-DarkMode在复杂应用中的实现"><a href="#8-5-DarkMode在复杂应用中的实现" class="headerlink" title="8-5 DarkMode在复杂应用中的实现"></a>8-5 DarkMode在复杂应用中的实现</h2><ol><li>首先创建store&#x2F;modules&#x2F;theme.js</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span>&#123;<span class="variable constant_">THEME_LIGHT</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;@/constants&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="attr">namespaced</span>:<span class="literal">true</span>,</span><br><span class="line">  <span class="attr">state</span>:<span class="function">()=&gt;</span>(&#123;</span><br><span class="line">    <span class="comment">//当前主题模式</span></span><br><span class="line">    <span class="attr">themeType</span>:<span class="variable constant_">THEME_LIGHT</span></span><br><span class="line">  &#125;),</span><br><span class="line">  <span class="attr">mutations</span>:&#123;</span><br><span class="line">    <span class="title function_">changeThemeType</span>(<span class="params">state,newTheme</span>)&#123;</span><br><span class="line">      state.<span class="property">themeType</span> = newTheme</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>将该模块进行注册在store&#x2F;index.js</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> theme <span class="keyword">from</span> <span class="string">&#x27;./modules/theme&#x27;</span></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  getters,</span><br><span class="line">  <span class="attr">modules</span>:&#123;</span><br><span class="line">    category,</span><br><span class="line">    theme</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>:[</span><br><span class="line">   <span class="title function_">createPersistedState</span>(&#123;</span><br><span class="line">     <span class="comment">//指定保存到localStorage中的key</span></span><br><span class="line">     <span class="attr">key</span>:<span class="string">&#x27;imooc-front&#x27;</span>,</span><br><span class="line">     <span class="comment">//需要保存的模块</span></span><br><span class="line">     <span class="attr">paths</span>:[<span class="string">&#x27;category&#x27;</span>,<span class="string">&#x27;theme&#x27;</span>]</span><br><span class="line">   &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure><ol start="3"><li>在store&#x2F;getter.js中创建新的访问</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">//当前主题</span></span><br><span class="line">  <span class="attr">themeType</span>:<span class="function">(<span class="params">state</span>)=&gt;</span> state.<span class="property">theme</span>.<span class="property">themeType</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面这些步骤是创建vuex</p><hr><p>以下内容全是基于header&#x2F;header-theme.vue</p><ol start="4"><li>监听主题的切换行为并根据行为保存当前需要展示的主题到vuex中，首先在匿名插槽设置点击事件，然后使用store进行传输</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--    匿名插槽:弹出层视图中展示的内容--&gt;</span><br><span class="line">&lt;div class=&#x27;w-[140px] overflow-hidden&#x27;&gt;</span><br><span class="line">  &lt;div</span><br><span class="line">    class=&#x27;flex item-center p-1 cursor-pointer rounded</span><br><span class="line">    hover:bg-zinc-100/60 dark:hover:bg-zinc-800&#x27;</span><br><span class="line">    v-for=&#x27;item in themeArr&#x27;</span><br><span class="line">    :key=&#x27;item.id&#x27;</span><br><span class="line">    @click=&#x27;onItemClick(item)&#x27;</span><br><span class="line">  &gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useStore &#125; <span class="keyword">from</span> <span class="string">&#x27;vuex&#x27;</span></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">useStore</span>()</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * menu切换事件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onItemClick</span> =(<span class="params">themeItem</span>) =&gt;&#123;</span><br><span class="line">  store.<span class="title function_">commit</span>(<span class="string">&#x27;theme/changeThemeType&#x27;</span>,themeItem.<span class="property">type</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>根据vuex中保存的当前主题，展示header-theme下的显示图标，在具名插槽中设置name</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 展示图标</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> svgIconName =<span class="title function_">computed</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">const</span> findTheme =themeArr.<span class="title function_">find</span>(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item.<span class="property">type</span>===store.<span class="property">getters</span>.<span class="property">themeType</span></span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> findTheme?.<span class="property">icon</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;m-svg-icon</span><br><span class="line">  :name=&#x27;svgIconName&#x27;</span><br><span class="line">  class=&#x27;w-4 h-4 p-1 cursor-pointer rounded-sm duration-200</span><br><span class="line">  outline-none hover:bg-zinc-100/60 dark:hover:bg-zinc-900&#x27;</span><br><span class="line">  fillClass=&#x27;fill-zinc-900 dark:fill-zinc-300&#x27;</span><br><span class="line">&gt;&lt;/m-svg-icon&gt;</span><br></pre></td></tr></table></figure><ol start="6"><li>根据vuex中保存的当前主题，修改html的class，我们先创建工具类utils&#x2F;theme.js，这样的方法我们在main.js中触发一次就可以了，如果觉得切换过于生硬那么就添加过度动画</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;<span class="variable constant_">THEME_LIGHT</span>,<span class="variable constant_">THEME_DARK</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;@/constants&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;watch&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;../store&#x27;</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化主题</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> ()=&gt;&#123;</span><br><span class="line">  <span class="comment">//1.当主题发生改变时，或者当进入系统时，可以进行html class的配置</span></span><br><span class="line">  <span class="title function_">watch</span>(</span><br><span class="line">    <span class="function">()=&gt;</span>store.<span class="property">getters</span>.<span class="property">themeType</span>,</span><br><span class="line">    <span class="function">(<span class="params">val</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="comment">//html的class</span></span><br><span class="line">      <span class="keyword">let</span> themeClassName = <span class="string">&#x27;&#x27;</span></span><br><span class="line">      <span class="keyword">switch</span> (val)&#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="attr">THEME_LIGHT</span>:</span><br><span class="line">          themeClassName=<span class="string">&#x27;light&#x27;</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">case</span> <span class="attr">THEME_DARK</span>:</span><br><span class="line">          themeClassName=<span class="string">&#x27;dark&#x27;</span></span><br><span class="line">          <span class="keyword">break</span></span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//修改html的class</span></span><br><span class="line">      <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;html&#x27;</span>).<span class="property">className</span> = themeClassName</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="comment">//初始执行一次</span></span><br><span class="line">      <span class="attr">immediate</span>:<span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> useTheme <span class="keyword">from</span> <span class="string">&#x27;./utils/theme&#x27;</span></span><br><span class="line"><span class="title function_">useREM</span>()</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">duration-<span class="number">500</span></span><br></pre></td></tr></table></figure><h2 id="8-6-跟随系统的主题变更"><a href="#8-6-跟随系统的主题变更" class="headerlink" title="8-6 跟随系统的主题变更"></a>8-6 跟随系统的主题变更</h2><p>想要生成跟随系统的主题变更，那么我们就需要<strong>监听系统的主题变化</strong></p><p>想要做到这一点，可以利用<strong>Window.matchMedia（）</strong>方法，该方法接收一个 mediaQueryString（媒体查询解析的字符串）<br>该字符串我们可以传递 <strong>prefers-color-scheme</strong>，即window.matchMedia（’（prefers-color-scheme：dark）’）方法</p><p>该方法可以返回一个<strong>MediaQueryList</strong>对象：</p><p>1.该对象存在一个<strong>change</strong>事件，可以监听<strong>主题发生变更</strong>的行为。<br>2.同时存在一个<strong>matches</strong>属性，该属性为boolean性的值：</p><ol><li>true：深色主题</li><li>false：浅色主题</li></ol><p>那么据此，可生成以下代码。在src&#x2F;utils&#x2F;theme.js中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;<span class="variable constant_">THEME_LIGHT</span>,<span class="variable constant_">THEME_DARK</span>,<span class="variable constant_">THEME_SYSTEM</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;@/constants&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;watch&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> store <span class="keyword">from</span> <span class="string">&#x27;../store&#x27;</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听系统主题变更</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">let</span> matchMedia</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">watchSystemThemeChange</span> =(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="comment">//仅需一次初始化</span></span><br><span class="line">  <span class="keyword">if</span> (matchMedia) <span class="keyword">return</span></span><br><span class="line">  matchMedia =<span class="variable language_">window</span>.<span class="title function_">matchMedia</span>(<span class="string">&#x27;(prefers-color-scheme:dark)&#x27;</span>)</span><br><span class="line">  <span class="comment">//监听主题变化</span></span><br><span class="line">  matchMedia.<span class="property">onchange</span>=<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="title function_">changeTheme</span>(<span class="variable constant_">THEME_SYSTEM</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 变更主题</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> theme主题的标记</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">changeTheme</span>=(<span class="params">theme</span>)=&gt;&#123;</span><br><span class="line">  <span class="comment">//html的class</span></span><br><span class="line">  <span class="keyword">let</span> themeClassName = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">switch</span> (theme)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="attr">THEME_LIGHT</span>:</span><br><span class="line">      themeClassName=<span class="string">&#x27;light&#x27;</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="attr">THEME_DARK</span>:</span><br><span class="line">      themeClassName=<span class="string">&#x27;dark&#x27;</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">case</span> <span class="attr">THEME_SYSTEM</span>:</span><br><span class="line">      <span class="comment">//调用方法，监听系统主题变化</span></span><br><span class="line">      <span class="title function_">watchSystemThemeChange</span>()</span><br><span class="line">      themeClassName=matchMedia.<span class="property">matches</span>?<span class="string">&#x27;dark&#x27;</span>:<span class="string">&#x27;light&#x27;</span></span><br><span class="line">      <span class="keyword">break</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//修改html的class</span></span><br><span class="line">  <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;html&#x27;</span>).<span class="property">className</span> = themeClassName</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化主题</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> ()=&gt;&#123;</span><br><span class="line">  <span class="comment">//1.当主题发生改变时，或者当进入系统时，可以进行html class的配置</span></span><br><span class="line">  <span class="title function_">watch</span>(<span class="function">() =&gt;</span>store.<span class="property">getters</span>.<span class="property">themeType</span>,changeTheme, &#123;</span><br><span class="line">      <span class="comment">//初始执行一次</span></span><br><span class="line">      <span class="attr">immediate</span>:<span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">  )</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="9、瀑布流-长列表-懒加载处理方案-——-打造企业级高性能通用模块"><a href="#9、瀑布流-长列表-懒加载处理方案-——-打造企业级高性能通用模块" class="headerlink" title="9、瀑布流+长列表+懒加载处理方案 —— 打造企业级高性能通用模块"></a>9、瀑布流+长列表+懒加载处理方案 —— 打造企业级高性能通用模块</h1><p>为什么大厂的应用使用起来总是那么的丝滑？他们到底给应用施加了什么样的“魔法”？我能开发出媲美大厂团队的精美前台应用吗？应该怎么做？本章把这些“咒语”统统告诉你！</p><hr><h2 id="9-1-业务组件：构建基础列表展示"><a href="#9-1-业务组件：构建基础列表展示" class="headerlink" title="9-1 业务组件：构建基础列表展示"></a>9-1 业务组件：构建基础列表展示</h2><ol><li>首先创建api&#x2F;pexeis.js来获取图片数据</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> request <span class="keyword">from</span> <span class="string">&#x27;@/utils/request&#x27;</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取图片数据列表</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getPexlesList</span> = (<span class="params">data</span>) =&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;/pexels/list&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>:data</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>其次在main&#x2F;components&#x2F;下创建list目录，list目录包括index.vue（本身）及item.vue（每个小图片），并在main&#x2F;components&#x2F;index.vue导入组件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&#x27;h-full overflow-auto bg-white dark:bg-zinc-800 duration-500&#x27;&gt;</span><br><span class="line">  &lt;navigation-vue/&gt;</span><br><span class="line">  &lt;div class=&#x27;max-w-screen-xl mx-auto relative m-1 xl:mt-4&#x27;&gt;</span><br><span class="line">    &lt;list-vue&gt;&lt;/list-vue&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import navigationVue from &#x27;./components/navigation/index.vue&#x27;</span><br><span class="line">import listVue from &#x27;./components/list/index.vue&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>在main&#x2F;components&#x2F;list&#x2F;index.vue中获取图片那些数据</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line"></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">import</span> &#123;getPexlesList&#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/pexeis&#x27;</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="comment">/**</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml"> * 构建数据请求</span></span></span></span><br><span class="line"><span class="comment"><span class="language-javascript"><span class="language-xml"> */</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">let</span> query=&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">page</span>:<span class="number">1</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">size</span>:<span class="number">20</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="keyword">const</span> <span class="title function_">getPexlesData</span> = <span class="keyword">async</span>(<span class="params"></span>)=&gt;&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="keyword">const</span> res = <span class="keyword">await</span> <span class="title function_">getPexlesList</span>(query)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="title function_">getPexlesData</span>()</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">lang</span>=<span class="string">&#x27;scss&#x27;</span> <span class="attr">scoped</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="4"><li>在main&#x2F;components&#x2F;list&#x2F;index.vue中加载数据源</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;item-vue v-for=&#x27;item in pexelsList&#x27; :key=&#x27;item.id&#x27; :data=&#x27;item&#x27;&gt;&lt;/item-vue&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123;getPexlesList&#125; from &#x27;@/api/pexeis&#x27;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">import itemVue from &#x27;./item.vue&#x27;</span><br><span class="line">/**</span><br><span class="line"> * 构建数据请求</span><br><span class="line"> */</span><br><span class="line">let query=&#123;</span><br><span class="line">  page:1,</span><br><span class="line">  size:20</span><br><span class="line">&#125;</span><br><span class="line">const pexelsList = ref([])</span><br><span class="line">const getPexlesData = async()=&gt;&#123;</span><br><span class="line">  const res = await getPexlesList(query)</span><br><span class="line">  pexelsList.value=res.list</span><br><span class="line">&#125;</span><br><span class="line">getPexlesData()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="5"><li>设置main&#x2F;components&#x2F;list&#x2F;item.vue的内容</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div class=&#x27;bg-white dark:bg-zinc-900 xl:dark:bg-zinc-800 rounded pb-1 h-[280px] w-[230px]&#x27;&gt;</span><br><span class="line">  &lt;div class=&#x27;relative w-full rounded cursor-zoom-in group&#x27;&gt;</span><br><span class="line">&lt;!--    图片--&gt;</span><br><span class="line">    &lt;img class=&#x27;w-full rounded bg-transparent&#x27; :src=&#x27;data.photo&#x27;/&gt;</span><br><span class="line">&lt;!--    遮罩层--&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      class=&#x27;hidden opacity-0 w-full h-full bg-zinc-900/50 absolute top-0</span><br><span class="line">      left-0 rounded duration-300 group-hover:opacity-100 xl:block&#x27;&gt;</span><br><span class="line">&lt;!--      分享--&gt;</span><br><span class="line">      &lt;m-button class=&#x27;absolute top-1.5 left-1.5&#x27;&gt;分享&lt;/m-button&gt;</span><br><span class="line">&lt;!--      点赞--&gt;</span><br><span class="line">      &lt;m-button</span><br><span class="line">        class=&#x27;absolute top-1.5 right-1.5&#x27;</span><br><span class="line">        type=&#x27;info&#x27;</span><br><span class="line">        icon=&#x27;heart&#x27;</span><br><span class="line">        iconClass=&#x27;fill-zinc-900 dark:fill-zinc-200&#x27;</span><br><span class="line">      &gt;&lt;/m-button&gt;</span><br><span class="line">&lt;!--      下载--&gt;</span><br><span class="line">      &lt;m-button</span><br><span class="line">        class=&#x27;absolute bottom-1.5 left-1.5 bg-zinc-100/70&#x27;</span><br><span class="line">        type=&#x27;info&#x27;</span><br><span class="line">        size=&#x27;small&#x27;</span><br><span class="line">        icon=&#x27;download&#x27;</span><br><span class="line">        iconClass=&#x27;fill-zinc-900 dark:fill-zinc-200&#x27;</span><br><span class="line">      &gt;&lt;/m-button&gt;</span><br><span class="line">&lt;!--      全屏--&gt;</span><br><span class="line">      &lt;m-button</span><br><span class="line">        class=&#x27;absolute bottom-1.5 right-1.5 bg-zinc-100/70&#x27;</span><br><span class="line">        type=&#x27;info&#x27;</span><br><span class="line">        size=&#x27;small&#x27;</span><br><span class="line">        icon=&#x27;full&#x27;</span><br><span class="line">        iconClass=&#x27;fill-zinc-900 dark:fill-zinc-200&#x27;</span><br><span class="line">      &gt;&lt;/m-button&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;!--  标题--&gt;</span><br><span class="line">  &lt;p class=&#x27;text-sm mt-1 font-bold text-zinc-900 dark:text-zinc-300 px-1&#x27;&gt;</span><br><span class="line">    &#123;&#123;data.title&#125;&#125;</span><br><span class="line">  &lt;/p&gt;</span><br><span class="line">&lt;!--  作者--&gt;</span><br><span class="line">  &lt;div class=&#x27;flex items-center mt-1 px-1&#x27;&gt;</span><br><span class="line">    &lt;img class=&quot;h-2 w-2 rounded-full&quot; :src=&quot;data.avatar&quot; alt=&#x27;&#x27;/&gt;</span><br><span class="line">    &lt;span class=&#x27;text-sm text-zinc-500 ml-1&#x27;&gt;&#123;&#123;data.author&#125;&#125;&lt;/span&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="9-2-通用组件：瀑布流组件构建分析"><a href="#9-2-通用组件：瀑布流组件构建分析" class="headerlink" title="9-2 通用组件：瀑布流组件构建分析"></a>9-2 通用组件：瀑布流组件构建分析</h2><p>目前咱们的列表组件已经可以展示了，只不过是展示的样式还存在一些问题。</p><p>那么这样的一个样式处理的过程就是<strong>瀑布流组件的构建过程</strong></p><p>所以说我们想要搞清楚，这个瀑布流如何构建，那么就需要搞明白，现在的样式中，还存在的问题是什么？</p><p>存在的问题就是<strong>：每个item应该横向排列，第二行的item顺序连接到当前最短的列中</strong>，而这个也就是构建瀑布流的核心逻辑。</p><p>那么想要实现这个核心逻辑，我们的每个item肯定就不可以使用正常的布局方式，而必须使用 absolute 绝对布局，通过top 和left 来手动控制位置。</p><p>那么明确好了这个核心逻辑之后，接下来如何进行构建呢？</p><p>想要搞明白一个复杂组件的构建机制，那么最好的方式是想象一下：<strong>当你去使用这个组件时，你希望如何进行使用。</strong></p><p>按照你期望的使用方式来反向思考构建过程，这样在主要的思路上就不会出现大的偏差。<br>那么我们期望，将来这个通用组件可以这样使用：在main&#x2F;components&#x2F;list&#x2F;index.vue</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;m-waterfall :data=&quot;&quot; :nodeKey=&quot;&quot; :column=&quot;&quot; :picturePreReading=&quot;&quot;&gt;</span><br><span class="line">    &lt;template v-slot=&#x27;&#123;item,width&#125;&#x27;&gt;</span><br><span class="line">      &lt;item-vue :data=&#x27;item&#x27;&gt;&lt;/item-vue&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/m-waterfall&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><p>那么综合起来来看，整个的一个瀑布流组件的构建我们需要分成几分：</p><ol><li><p>通过props传递关键数据（部分）:</p><ol><li>data：数据源</li><li>nodeKey：唯一标识</li><li>column：宣染的列数</li><li>picturePreReading：是否需要图片预宣染</li></ol></li><li><p>瀑布流宣染机制：通过absolute 配合 relative完成布局，布局逻辑为：<strong>每个item应该横向排列，第二行的item顺序连接到当前最短的列中</strong></p></li><li><p>通过<strong>作用域插槽</strong>将每个item中涉及到的关键数据，传递到item视图中</p></li></ol><h2 id="9-3-通用组件-瀑布流：构建瀑布流布局，获取容器宽度与列宽"><a href="#9-3-通用组件-瀑布流：构建瀑布流布局，获取容器宽度与列宽" class="headerlink" title="9-3 通用组件-瀑布流：构建瀑布流布局，获取容器宽度与列宽"></a>9-3 通用组件-瀑布流：构建瀑布流布局，获取容器宽度与列宽</h2><ol><li>创建 src&#x2F;libs&#x2F;waterfall&#x2F;index.vue组件，并创建如下 props：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="comment">//数据源</span></span><br><span class="line">  <span class="attr">data</span>:&#123;</span><br><span class="line">    <span class="attr">type</span>:<span class="title class_">Array</span>,</span><br><span class="line">    <span class="attr">require</span>:<span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//唯一标识</span></span><br><span class="line">  <span class="attr">nodeKey</span>:&#123;</span><br><span class="line">    <span class="attr">type</span>:<span class="title class_">String</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//列数</span></span><br><span class="line">  <span class="attr">colunm</span>:&#123;</span><br><span class="line">    <span class="attr">default</span>:<span class="number">2</span>,</span><br><span class="line">    <span class="attr">type</span>:<span class="title class_">Number</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//列间距</span></span><br><span class="line">  <span class="attr">colunmSpacing</span>:&#123;</span><br><span class="line">    <span class="attr">default</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">type</span>:<span class="title class_">Number</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//行间距</span></span><br><span class="line">  <span class="attr">rowSpacing</span>:&#123;</span><br><span class="line">    <span class="attr">default</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="attr">type</span>:<span class="title class_">Number</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//是否需要进行图片预读取</span></span><br><span class="line">  <span class="attr">picturePreReading</span>:&#123;</span><br><span class="line">    <span class="attr">type</span>:<span class="title class_">Boolean</span>,</span><br><span class="line">    <span class="attr">default</span>:<span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li>构建对应的基础视图</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div</span><br><span class="line">    class=&#x27;relative&#x27;</span><br><span class="line">    ref=&#x27;containerTarget&#x27;</span><br><span class="line">    :style=&quot;&#123;</span><br><span class="line">      height:containerHeight+&#x27;px&#x27; //因为当前为relative布局，所以需要主动指定高度</span><br><span class="line">    &#125;&quot;</span><br><span class="line">  &gt;</span><br><span class="line">&lt;!--因为列数不确定，所以需要根据列数计算每列的宽度，所以等待列宽计算完成，并且有了数据源后进行渲染--&gt;</span><br><span class="line">    &lt;template v-if=&#x27;columnWidth &amp;&amp; data.length&#x27;&gt;</span><br><span class="line">&lt;!--      通过动态的style来计算对应的列宽、left、top--&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        v-for=&quot;&#123;item,index&#125; in data&quot;</span><br><span class="line">        :key=&quot;nodeKey ?item[nodeKey] :index&quot;</span><br><span class="line">        class=&#x27;m-waterfall-item absolute duration-300&#x27;</span><br><span class="line">        :style=&quot;&#123;</span><br><span class="line">          width:columnWidth+&#x27;px&#x27;,</span><br><span class="line">          left:item._style?.left+&#x27;px&#x27;,</span><br><span class="line">          top:item._style?.top+&#x27;px&#x27;</span><br><span class="line">        &#125;&quot;</span><br><span class="line">&gt;</span><br><span class="line">        &lt;slot :item=&#x27;item&#x27; :width=&#x27;columnWidth&#x27; :index=&#x27;index&#x27;/&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">&lt;!--    加载中--&gt;</span><br><span class="line">    &lt;div v-else&gt;加载中...&lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>根据以上基础视图，我们需要生成对应的：</p><ol><li>containerHeight：总高度</li><li>columnWidth：列宽</li><li>item.<em>style.left：每个item对应的left</em></li><li>_item._style.right：每个item对应的right</li></ol></li><li><p>想要计算<strong>总高度</strong>，那么需要计算出<strong>每一列的高度</strong>，最高的一列为<strong>总高度</strong></p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//容器的总高度 = 最高的这一列的高度</span></span><br><span class="line"><span class="keyword">const</span> containerHeight = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"><span class="comment">//记录每列高度的容器key:所在列 val：列高</span></span><br><span class="line"><span class="keyword">const</span> columnHeightObj = <span class="title function_">ref</span>(&#123;&#125;)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 构建记录每列高度的对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">useColumnHeightObj</span> =(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  columnHeightObj.<span class="property">value</span>=&#123;&#125;</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; props.<span class="property">colunm</span>; i++) &#123;</span><br><span class="line">    columnHeightObj.<span class="property">value</span>[i]= <span class="number">0</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>想要计算列宽，那么首先需要有容器的总宽度：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//容器实例</span></span><br><span class="line"><span class="keyword">const</span> containerTarget = <span class="title function_">ref</span>(<span class="literal">null</span>)</span><br><span class="line"><span class="comment">//容器总宽度（不包括padding、margin、border）</span></span><br><span class="line"><span class="keyword">const</span> containerWidth = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"><span class="comment">//容器左边距、计算item left 时，需要定位</span></span><br><span class="line"><span class="keyword">const</span> containerLeft = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 计算容器宽度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">useContainerWidth</span> = (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="keyword">const</span> &#123;paddingLeft,paddingRight&#125;=<span class="title function_">getComputedStyle</span>(</span><br><span class="line">    containerTarget.<span class="property">value</span>,</span><br><span class="line">    <span class="literal">null</span></span><br><span class="line">  )</span><br><span class="line">  <span class="comment">//容器左边距</span></span><br><span class="line">  containerLeft.<span class="property">value</span>=<span class="built_in">parseFloat</span>(paddingLeft)</span><br><span class="line">  <span class="comment">//容器宽度</span></span><br><span class="line">  containerWidth.<span class="property">value</span> =</span><br><span class="line">    containerTarget.<span class="property">value</span>.<span class="property">offsetWidth</span>-</span><br><span class="line">    <span class="built_in">parseFloat</span>(paddingLeft)-</span><br><span class="line">    <span class="built_in">parseFloat</span>(paddingRight)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>计算列宽</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//列宽</span></span><br><span class="line"><span class="keyword">const</span> columnWidth = <span class="title function_">ref</span>(<span class="number">0</span>)</span><br><span class="line"><span class="comment">//列间距合计</span></span><br><span class="line"><span class="keyword">const</span> columnSpacingTotal = <span class="title function_">computed</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//如果是五列，则存在4个列间距</span></span><br><span class="line">  <span class="keyword">return</span>(props.<span class="property">colunm</span>-<span class="number">1</span>)*props.<span class="property">colunmSpacing</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 开始计算</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">useColumnWidth</span> =(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="comment">//获取容器宽度</span></span><br><span class="line">  <span class="title function_">useContainerWidth</span>()</span><br><span class="line">  <span class="comment">//计算列宽</span></span><br><span class="line">  columnWidth.<span class="property">value</span> = (containerWidth.<span class="property">value</span>-columnSpacingTotal)/props.<span class="property">colunm</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//计算列宽</span></span><br><span class="line">  <span class="title function_">useColumnWidth</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="7"><li>此时，在src&#x2F;views&#x2F;main&#x2F;components&#x2F;list&#x2F;index，vue 中使用该组件，可以打印出计算的值</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">  &lt;m-waterfall :data=&quot;pexelsList&quot; :nodeKey=&quot;id&quot; :column=&quot;5&quot; :picturePreReading=&quot;true&quot;&gt;</span><br><span class="line">    &lt;template v-slot=&#x27;&#123;item,width&#125;&#x27;&gt;</span><br><span class="line">      &lt;item-vue :data=&#x27;item&#x27;&gt;&lt;/item-vue&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">  &lt;/m-waterfall&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h2 id="9-4-布流：区分图片预加载，获取元素关键属性"><a href="#9-4-布流：区分图片预加载，获取元素关键属性" class="headerlink" title="9-4 布流：区分图片预加载，获取元素关键属性"></a>9-4 布流：区分图片预加载，获取元素关键属性</h2><p>想要计算每列的left，right，那么需要拿到每个 item的高度，因为只有有了每个item高，才可以判断下一列的第一个item的位置。</p><p>同时我们根据<strong>picturePreReading</strong>又可以分为两种情况：</p><ol><li>需要图片预加载时：图片高度未知</li><li>不需要图片预加载时：图片高度已知</li></ol><p>根据以上分析可得出以下代码:</p><ol><li>根据两种不同的情况，我们需要有两个不同的方法来进行计算：</li></ol><p><strong>需要图片预加载时</strong></p><ol><li>图片高度未知</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//item高度集合</span></span><br><span class="line"><span class="keyword">let</span> itemHeights=[]</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听图片加载完成(需要图片加载)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">waitImgComplate</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  itemHeights = []</span><br><span class="line">  <span class="comment">//拿到所有的元素</span></span><br><span class="line">  <span class="keyword">let</span> itemElements = [...<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;m-waterfall-item&#x27;</span>)]</span><br><span class="line">  <span class="comment">//获取到元素的img标签</span></span><br><span class="line">  <span class="keyword">const</span> imgElements = <span class="title function_">getImgElements</span>(itemElements)</span><br><span class="line">  <span class="comment">//获取所有img标签的图片</span></span><br><span class="line">  <span class="keyword">const</span> allImgs = <span class="title function_">getAllImg</span>(imgElements)</span><br><span class="line">  <span class="comment">//等待图片加载完成</span></span><br><span class="line">  <span class="title function_">onComplateImgs</span>(allImgs).<span class="title function_">then</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//图片加载完成</span></span><br><span class="line">    imgElements.<span class="title function_">forEach</span>(<span class="function">(<span class="params">el</span>)=&gt;</span>&#123;</span><br><span class="line">      itemHeights.<span class="title function_">push</span>(el.<span class="property">offsetHeight</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">//渲染位置</span></span><br><span class="line">    <span class="title function_">useItemLocation</span>()</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>以上使用到了多个工具方法，可以创建src&#x2F;libs&#x2F;waterfall&#x2F;utils.js 模块进行处理：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 从itemElement中抽离出所有的imgElements</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getImgElements</span> = (<span class="params">itemElements</span>)=&gt;&#123;</span><br><span class="line">  <span class="keyword">const</span> imgElements = []</span><br><span class="line">  itemElements.<span class="title function_">forEach</span>(<span class="function">(<span class="params">el</span>)=&gt;</span>&#123;</span><br><span class="line">    imgElements.<span class="title function_">push</span>(...el.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;img&#x27;</span>))</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> imgElements</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成所有的图片连接数组</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getAllImg</span> = (<span class="params">imgElements</span>)=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> imgElements.<span class="title function_">map</span>(<span class="function">(<span class="params">imgElements</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> imgElements.<span class="property">src</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听图片数组加载完成（promise）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">onComplateImgs</span> = (<span class="params">imgs</span>) =&gt;&#123;</span><br><span class="line">  <span class="comment">//promise集合</span></span><br><span class="line">  <span class="keyword">const</span> promiseAll = []</span><br><span class="line">  <span class="comment">//循环imgs,构建promiseAll</span></span><br><span class="line">  imgs.<span class="title function_">forEach</span>(<span class="function">(<span class="params">img,index</span>)=&gt;</span>&#123;</span><br><span class="line">    promiseAll[index] = <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resole,reject</span>)=&gt;</span>&#123;</span><br><span class="line">      <span class="comment">//处理img的加载情况</span></span><br><span class="line">      <span class="keyword">const</span> imageObj = <span class="keyword">new</span> <span class="title class_">Image</span>()</span><br><span class="line">      imageObj.<span class="property">src</span> = img</span><br><span class="line">      imageObj.<span class="property">onload</span> = <span class="function">()=&gt;</span>&#123;</span><br><span class="line">        <span class="title function_">resolve</span>(&#123;</span><br><span class="line">          img,</span><br><span class="line">          index</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Promise</span>.<span class="title function_">all</span>(promiseAll)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>不需要图片预加载时</strong></p><ol><li>图片高度已知</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 不需要图片预加载</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">useItemHeight</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  itemHeights = []</span><br><span class="line">  <span class="comment">//拿到所有的元素</span></span><br><span class="line">  <span class="keyword">let</span> itemElements = [...<span class="variable language_">document</span>.<span class="title function_">getElementsByClassName</span>(<span class="string">&#x27;m-waterfall-item&#x27;</span>)]</span><br><span class="line">  <span class="comment">//计算item高度</span></span><br><span class="line">  itemElements.<span class="title function_">forEach</span>(<span class="function">(<span class="params">el</span>)=&gt;</span>&#123;</span><br><span class="line">    itemHeights.<span class="title function_">push</span>(el.<span class="property">offsetHeight</span>)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">//渲染位置</span></span><br><span class="line">  <span class="title function_">useItemLocation</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>渲染位置</strong></p><p>在useItemLocation方法中，打印所有的图片高度：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 渲染位置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">useItemLocation</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(itemHeights)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>监听数据获取时，触发对应的计算：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 触发计算</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_">watch</span>(</span><br><span class="line">  <span class="function">()=&gt;</span>props.<span class="property">data</span>,</span><br><span class="line">  <span class="function">(<span class="params">newVal</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="title function_">nextTick</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (props.<span class="property">picturePreReading</span>)&#123;</span><br><span class="line">        <span class="title function_">waitImgComplate</span>()</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_">useItemHeight</span>()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">deep</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">immediate</span>:<span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="9-5-通用组件-瀑布流：触发计算，定位item位置"><a href="#9-5-通用组件-瀑布流：触发计算，定位item位置" class="headerlink" title="9-5 通用组件-瀑布流：触发计算，定位item位置"></a>9-5 通用组件-瀑布流：触发计算，定位item位置</h2><ol><li>在useItemLocation方法中为每个item定位位置：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 为每个item生成位置属性</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">useItemLocation</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="comment">//遍历数据源</span></span><br><span class="line">  props.<span class="property">data</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item,index</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//避免重复计算</span></span><br><span class="line">    <span class="keyword">if</span> (item.<span class="property">_style</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//生成style属性</span></span><br><span class="line">    item.<span class="property">_style</span>=&#123;&#125;</span><br><span class="line">    <span class="comment">//left</span></span><br><span class="line">    item.<span class="property">_style</span>.<span class="property">left</span> = <span class="title function_">getItemLeft</span>()</span><br><span class="line">    <span class="comment">//top</span></span><br><span class="line">    item.<span class="property">_style</span>.<span class="property">top</span> = <span class="title function_">getItemTop</span>()</span><br><span class="line">    <span class="comment">//指定的列高度的自增</span></span><br><span class="line">    <span class="title function_">increasingHeight</span>(index)</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">//指定容器高度</span></span><br><span class="line">  containerHeight.<span class="property">value</span>=<span class="title function_">getMaxHeight</span>(columnHeightObj.<span class="property">value</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>创建getItemLeft 方法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回下一个item的left</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getItemLeft</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="comment">//拿到最小宽度的列</span></span><br><span class="line">  <span class="keyword">const</span> column = <span class="title function_">getMinHeightColumn</span>(columnHeightObj.<span class="property">value</span>)</span><br><span class="line">  <span class="keyword">return</span> column*(columnWidth.<span class="property">value</span>+props.<span class="property">colunmSpacing</span>)+containerLeft.<span class="property">value</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>在utils中创建getMinHeightColumn方法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回列高对象中最小高度所在的列</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getMinHeightColumn</span> = (<span class="params">columnHeightObj</span>)=&gt;&#123;</span><br><span class="line">  <span class="comment">//拿到最小高度</span></span><br><span class="line">  <span class="keyword">const</span> minHeight = <span class="title function_">getMinHeight</span>(columnHeightObj)</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Object</span>.<span class="title function_">keys</span>(columnHeightObj).<span class="title function_">find</span>(<span class="function">(<span class="params">key</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> columnHeightObj[key] === minHeight</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>创建 getItemTop方法：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回下一个item的Top</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getItemTop</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line"> <span class="keyword">return</span> <span class="title function_">getMinHeight</span>(columnHeightObj.<span class="property">value</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>在utils中创建 getMinHeight方法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回列高对象中最小的高度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getMinHeight</span>=(<span class="params">columnHeightObj</span>)=&gt;&#123;</span><br><span class="line">  <span class="keyword">const</span> columnHeightArr = <span class="title class_">Object</span>.<span class="title function_">values</span>(columnHeightObj)</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">min</span>(...columnHeightArr)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>创建 increasingHeight 方法：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 指定列高度自增</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">increasingHeight</span> =(<span class="params">index</span>)=&gt;&#123;</span><br><span class="line">  <span class="comment">//最小高度所在列</span></span><br><span class="line">  <span class="keyword">const</span> minHeightColumn=<span class="title function_">getMinHeightColumn</span>(columnHeightObj.<span class="property">value</span>)</span><br><span class="line">  <span class="comment">//使该列自增</span></span><br><span class="line">  columnHeightObj.<span class="property">value</span>[minHeightColumn] += itemHeights[index]+props.<span class="property">rowSpacing</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="7"><li>在utils中创建getMaxHeight方法作为容器高度</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 返回列高对象中最大的高度</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getMaxHeight</span>=(<span class="params">columnHeightObj</span>)=&gt;&#123;</span><br><span class="line">  <span class="keyword">const</span> columnHeightArr = <span class="title class_">Object</span>.<span class="title function_">values</span>(columnHeightObj)</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">max</span>(...columnHeightArr)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="8"><li>在组件销毁时，清除所有的_style</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 在组件销毁的时候，清除所有的_style</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_">onUnmounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  props.<span class="property">data</span>.<span class="title function_">forEach</span>(<span class="function"><span class="params">item</span> =&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">delete</span> item.<span class="property">_style</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="9"><li>最后我们修改触发计算，构建高度记录容器</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 触发计算</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_">watch</span>(</span><br><span class="line">  <span class="function">()=&gt;</span>props.<span class="property">data</span>,</span><br><span class="line">  <span class="function">(<span class="params">newVal</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="title function_">nextTick</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">      <span class="comment">//第一次获取数据时，构建高度记录容器</span></span><br><span class="line">      <span class="keyword">const</span> resetColumnHeight = newVal.<span class="title function_">every</span>(<span class="function">(<span class="params">item</span>)=&gt;</span>!item.<span class="property">_style</span>)</span><br><span class="line">      <span class="keyword">if</span> (resetColumnHeight)&#123;</span><br><span class="line">        <span class="comment">//构建高度记录容器</span></span><br><span class="line">        <span class="title function_">useColumnHeightObj</span>()</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (props.<span class="property">picturePreReading</span>)&#123;</span><br><span class="line">        <span class="title function_">waitImgComplate</span>()</span><br><span class="line">      &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_">useItemHeight</span>()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">deep</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="attr">immediate</span>:<span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="9-6-通用组件-瀑布流：解决瀑布流展示不全的问题"><a href="#9-6-通用组件-瀑布流：解决瀑布流展示不全的问题" class="headerlink" title="9-6 通用组件-瀑布流：解决瀑布流展示不全的问题"></a>9-6 通用组件-瀑布流：解决瀑布流展示不全的问题</h2><p>现在我们运行项目可以发现最底部的瀑布流元素无法展示完全。</p><p>出现这个问题的原因是因为在src&#x2F;views&#x2F;layout&#x2F;index.vue中的h-main的高度，被子组件内部的h-full的class给冲掉了。</p><p>为了防止以后还出现这样的情况，所以我们只要在src&#x2F;views&#x2F;layout&#x2F;index.vue 中为main-vue 外层包一个 div即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&#x27;h-main&#x27;&gt;</span><br><span class="line">  &lt;main-vue&gt;&lt;/main-vue&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="9-7-通用组件-瀑布流：适配移动端，动态列"><a href="#9-7-通用组件-瀑布流：适配移动端，动态列" class="headerlink" title="9-7 通用组件-瀑布流：适配移动端，动态列"></a>9-7 通用组件-瀑布流：适配移动端，动态列</h2><p>目前，我们的瀑布流组件可以适配PC端，但是移动端，还存在一些问题，所以说，我们需要让我们的<strong>瀑布流</strong>组件可以适配移动端场景。</p><p>那么想要适配移动端，关键在于三点：</p><p><strong>列数变化</strong></p><p>列数的变化想要处理比较简单，我们只需要利用isMobileTerminal方法来去判断即可。</p><p>在 src&#x2F;views&#x2F;main&#x2F;components&#x2F;list&#x2F;index.vue中</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:column=<span class="string">&quot;isMobileTerminal?2:5&quot;</span></span><br></pre></td></tr></table></figure><p><strong>列宽和定位</strong></p><p>比较麻烦的地方在于<strong>列宽和定位</strong>如何进行重新计算，即：重新计算的时机是什么？</p><p>我们期望当<strong>列数发生变化时</strong>，重新执行计算：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听列数变化，重新构建瀑布流</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">reset</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="comment">//延迟100毫秒，否则会导致宽度计算不正确</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//重新计算列宽</span></span><br><span class="line">    <span class="title function_">useColumnWidth</span>()</span><br><span class="line">    <span class="comment">//重置所有的定位数据，因为data中进行了深度监听，所以该操作会触发data的watch</span></span><br><span class="line">    props.<span class="property">data</span>.<span class="title function_">forEach</span>(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</span><br><span class="line">      item.<span class="property">_style</span> = <span class="literal">null</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,<span class="number">100</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听列数变化</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_">watch</span>(</span><br><span class="line">  <span class="function">()=&gt;</span>props.<span class="property">colunm</span>,</span><br><span class="line">  <span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//在picturePreReading为true的前提下，需要首先为列宽滞空，列宽滞空之后，会取消瀑布流渲染</span></span><br><span class="line">    columnWidth.<span class="property">value</span>=<span class="number">0</span></span><br><span class="line">    <span class="title function_">reset</span>()</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>此时，在 src&#x2F;views&#x2F;main&#x2F;components&#x2F;list&#x2F;index.vue 中修改 picturePreReading 为true，表示等待图片预加载。</p><p>则双端切换可以正常实现。</p><p>处理两个小的样式问题：</p><ol><li>移动端下navigationBar 定位，在src&#x2F;App.vue中：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--  一级路由出口--&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;h-screen w-screen fixed top-0 left-0&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;<span class="name">router-view</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="2"><li>移动端下列表的横向 padding，在 src&#x2F;views&#x2F;main&#x2F;components&#x2F;list&#x2F;index.vue：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;m-waterfall</span><br><span class="line">  class=&quot;px-1 w-full&quot;&gt;</span><br><span class="line">&lt;/m-waterfall&gt;</span><br></pre></td></tr></table></figure><h2 id="9-8-通用组件-瀑布流：无需图片预加载时，优化功能处理"><a href="#9-8-通用组件-瀑布流：无需图片预加载时，优化功能处理" class="headerlink" title="9-8 通用组件-瀑布流：无需图片预加载时，优化功能处理"></a>9-8 通用组件-瀑布流：无需图片预加载时，优化功能处理</h2><ol><li>我们修改src&#x2F;views&#x2F;main&#x2F;components&#x2F;list&#x2F;index.vue的picturePreReading为false，会出现的是切换pc和手机端时刷新后页面图片显示不全</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;m-waterfall</span><br><span class="line">  :picturePreReading=&quot;false&quot;&gt;</span><br><span class="line">&lt;/m-waterfall&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>此时我们需要利用服务器所返回的宽高主动为item指定一个高度，我们将插槽中的width传到item组件中</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;m-waterfall&gt;</span><br><span class="line">  &lt;template v-slot=&#x27;&#123;item,width&#125;&#x27;&gt;</span><br><span class="line">    &lt;item-vue :data=&#x27;item&#x27; :width=&#x27;width&#x27;&gt;&lt;/item-vue&gt;</span><br><span class="line">  &lt;/template&gt;</span><br><span class="line">&lt;/m-waterfall&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>然后我们在main&#x2F;componnets&#x2F;list&#x2F;item.vue中引入width，并在图片中样式进行显示</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="attr">width</span>:&#123;</span><br><span class="line">    <span class="attr">type</span>:<span class="title class_">Number</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">&lt;!--    图片--&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&#x27;w-full rounded bg-transparent&#x27;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">         <span class="attr">:src</span>=<span class="string">&#x27;data.photo&#x27;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">         <span class="attr">:style</span>=<span class="string">&quot;&#123;</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="language-xml">           height:(width/data.photoWidth)*data.photoWidth+&#x27;px&#x27;</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="language-xml">         &#125;&quot;</span></span></span></span><br><span class="line"><span class="tag"><span class="language-xml">    /&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="4"><li>我们修改libs&#x2F;waterfall&#x2F;index.vue</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听列数变化</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_">watch</span>(</span><br><span class="line">  <span class="function">()=&gt;</span>props.<span class="property">colunm</span>,</span><br><span class="line">  <span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (props.<span class="property">picturePreReading</span>)&#123;</span><br><span class="line">      columnWidth.<span class="property">value</span>=<span class="number">0</span></span><br><span class="line">      <span class="comment">//数据改变之后，视图改变之后的回调</span></span><br><span class="line">      <span class="title function_">reset</span>()</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="title function_">reset</span>()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="9-9-通用组件-瀑布流：总结"><a href="#9-9-通用组件-瀑布流：总结" class="headerlink" title="9-9 通用组件-瀑布流：总结"></a>9-9 通用组件-瀑布流：总结</h2><p>瀑布流是一个比较复杂的通用组件，因为我们要尽量做到<strong>普适</strong>，所以就需要考虑到各种场景下的处理方案，尽量可以满足日常开发的场景。所以这就在原本就复杂的前提下，让这个功能变得更加复杂了。</p><p>下面我们就再来梳理一下整个瀑布流的构建过程：</p><ol><li><p>瀑布流的核心就是：<strong>通过relative和absolute定位的方式，来控制每个item的位置</strong></p></li><li><p>影响瀑布流高度的主要元素，通常都是<strong>img</strong>标签</p></li><li><p>有些服务端会返回<strong>关键img的高度</strong>，有些不会，所以我们需要分别处理：</p><ol><li>当服务端<strong>不返回</strong>高度时：我们需要等待img加载完成之后，再来计算高度，然后通过得到的高度计算定位。否则则会出现高度计算不准确导致定位计算不准确的问题。</li><li>当服务端<strong>返回</strong>高度时：开发者则必须利用此高度为item进行高度设定。一旦item具备指定高度，那么我们就不需要等待img加载的过程，这样效率更高，并且可以业务的逻辑会变得更加简单。</li></ol></li><li><p>当进行响应式切换时，同样需要区分对应场景：</p><ol><li>当服务端<strong>不返回</strong>高度时：我们需要重<strong>新执行整个宣染流程</strong>，虽然会耗费一些性能，但是这样可以最大可能的避免出现逻辑错误。让组件拥有更强的普适性。</li><li>当服务端<strong>返回</strong>高度时：我们同样需要重新计算<strong>列宽和定位</strong>，但是因为item具备明确的高度，所以我们可以直接拿到具体的高度，而无需重复整个渲染流程，从而可以实现更多的交互逻辑。比如：位移动画、将来的图片懒加载占位.</li></ol></li></ol><h2 id="9-10-通用组件：长列表infinite构建分析"><a href="#9-10-通用组件：长列表infinite构建分析" class="headerlink" title="9-10 通用组件：长列表infinite构建分析"></a>9-10 通用组件：长列表infinite构建分析</h2><p>处理好瀑布流之后，接下来我们就需要来处理对应的长列表功能。</p><p>我们知道对于对于首页中的瀑布流而言，是需要进行长列表展示的，也就说它是一个分页的数据。</p><p>那么对于这种分页功能而言，我们又应该如何进行实现呢？</p><p>想要搞明白这个问题，那么同样我们需要分成两个方面来去看：</p><ol><li>长列表的实现原理是什么？</li><li>我们使用长列表时，希望如何进行使用？</li></ol><p><strong>长列表的实现原理</strong></p><p>所谓长列表分页加载，其实指的就是：<strong>当滚动到列表底部时，加载数据</strong></p><p>那么我们想要实现咱们的长列表组件，围绕着的依然是这句话。</p><p>那么想要实现这个功能，我们需要做的核心的一点就是能够<strong>监听到列表滚动到底部</strong></p><p>那么想要监听到列表滚动到底部的话，可以利用<strong>IntersectionObserver</strong>，该接口可以判断：<strong>目标元素与其祖先元素或顶级文档视窗（viewport）的交叉状态（是否可见）</strong></p><p>那么我们就可以利用这个特性，把一个元素<strong>置于列表底部</strong>，当这个元素可见时则表示<strong>列表滚动到了底部</strong>。</p><p>那么原生的IntersectionObserver 使用起来比较复杂，所以<strong>vueuse提供了uselntersectionObserver方法。</strong></p><p><strong>我们使用长列表时，希望如何进行使用</strong></p><p>这个的判断和瀑布流时的判断逻辑一样，通过这样的逻辑，可以让我们知道这个组件的prop应该如何构建。</p><p>那么我们期望使用它时是这样的：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;m-infinite-list</span><br><span class="line">    v-model=&quot;&quot;//当前是否处于加载状态</span><br><span class="line">    :isFinished=&quot;&quot;//数据是否全部加载完成</span><br><span class="line">    @onLoad=&quot;&quot;//加载下一页数据的触发事件</span><br><span class="line">&gt;</span><br><span class="line">    列表</span><br><span class="line">&lt;/m-infinite-list&gt;</span><br></pre></td></tr></table></figure><h2 id="9-11-通用组件：构建长列表infinite组件"><a href="#9-11-通用组件：构建长列表infinite组件" class="headerlink" title="9-11 通用组件：构建长列表infinite组件"></a>9-11 通用组件：构建长列表infinite组件</h2><ol><li>创建 src&#x2F;libs&#x2F;infinite-list&#x2F;index.vue 组件</li><li>构建props与emits，并处理双向数据绑定逻辑</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useVModel &#125; <span class="keyword">from</span> <span class="string">&#x27;@vueuse/core&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="comment">//是否处于加载状态</span></span><br><span class="line">  <span class="attr">modelValue</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//数据是否全部加载完成</span></span><br><span class="line">  <span class="attr">isFinished</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Boolean</span>,</span><br><span class="line">    <span class="attr">default</span>: <span class="literal">false</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">const</span> emits = <span class="title function_">defineEmits</span>([<span class="string">&#x27;onLoad&#x27;</span>, <span class="string">&#x27;update:modelValue&#x27;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment">//处理loading状态</span></span><br><span class="line"><span class="keyword">const</span> loading = <span class="title function_">useVModel</span>(props)</span><br></pre></td></tr></table></figure><ol start="3"><li>构建对应视图与插槽逻辑</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!--内容--&gt;</span><br><span class="line">    &lt;slot /&gt;</span><br><span class="line">    &lt;div ref=&quot;loadingTarget&quot; class=&quot;h-6 py-4&quot;&gt;</span><br><span class="line">      &lt;!--加载更多--&gt;</span><br><span class="line">      &lt;m-svg-icon</span><br><span class="line">        v-show=&#x27;loading&#x27;</span><br><span class="line">        class=&#x27;w-4 h-4 mx-auto animate-spin&#x27;</span><br><span class="line">        name=&#x27;infinite-load&#x27;</span><br><span class="line">      &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">      &lt;!--没有更多数据--&gt;</span><br><span class="line">      &lt;p v-if=&#x27;isFinished&#x27; class=&#x27;text-center text-base text-zinc-400&#x27;&gt;</span><br><span class="line">        已经没有更多数据了</span><br><span class="line">      &lt;/p&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>利用 uselntersectionObserver方法，监听元素可见行为，用于判断列表滚动到底部：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//滚动的元素</span></span><br><span class="line"><span class="keyword">const</span> loadingTarget= <span class="title function_">ref</span>(<span class="literal">null</span>)</span><br><span class="line"><span class="title function_">useIntersectionObserver</span>(loadingTarget,<span class="function">(<span class="params">[&#123;isIntersecting&#125;]</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="comment">//当加载更多的视图可见时，同时loading为false，同时数据尚未全部加载完</span></span><br><span class="line">  <span class="comment">//处理加载更多逻辑</span></span><br><span class="line">  <span class="keyword">if</span>(isIntersecting &amp;&amp; !loading.<span class="property">value</span> &amp;&amp; !props.<span class="property">isFinished</span>)&#123;</span><br><span class="line">    <span class="comment">//修改加载数据标记</span></span><br><span class="line">    loading.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">    <span class="comment">//触发加载更多的行为</span></span><br><span class="line">    <span class="title function_">emits</span>(<span class="string">&#x27;onLoad&#x27;</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="9-12-通用组件：应用-infinite-结合-waterfall-实现长列表瀑布流效果"><a href="#9-12-通用组件：应用-infinite-结合-waterfall-实现长列表瀑布流效果" class="headerlink" title="9-12 通用组件：应用 infinite 结合 waterfall 实现长列表瀑布流效果"></a>9-12 通用组件：应用 infinite 结合 waterfall 实现长列表瀑布流效果</h2><p>那么现在我们已经有了长列表组件 infinite 也有了瀑布流组件 waterfall，接下来就可以结合这两个通用组件，构建咱们的长列表瀑布流效果了</p><ol><li>src&#x2F;views&#x2F;main&#x2F;components&#x2F;list&#x2F;index.vue：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;m-infinite</span><br><span class="line">      v-model=&quot;loading&quot;</span><br><span class="line">      :isFinished=&quot;isFinished&quot;</span><br><span class="line">      @onLoad=&quot;getPexlesData&quot;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;m-waterfall&gt;</span><br><span class="line">      .......</span><br><span class="line">      &lt;/m-waterfall&gt;</span><br><span class="line">    &lt;/m-infinite&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; getPexlesList &#125; from &#x27;@/api/pexeis&#x27;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">import itemVue from &#x27;./item.vue&#x27;</span><br><span class="line">import &#123; isMobileTerminal &#125; from &#x27;@/utils/flexible&#x27;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 构建数据请求</span><br><span class="line"> */</span><br><span class="line">let query = &#123;</span><br><span class="line">  page: 1,</span><br><span class="line">  size: 20</span><br><span class="line">&#125;</span><br><span class="line">//数据是否在加载中</span><br><span class="line">const loading = ref(false)</span><br><span class="line">//数据是否全部加载完成</span><br><span class="line">const isFinished = ref(false)</span><br><span class="line">//数据源</span><br><span class="line">const pexelsList = ref([])</span><br><span class="line">/**</span><br><span class="line"> * 加载数据的方法</span><br><span class="line"> * @returns &#123;Promise&lt;void&gt;&#125;</span><br><span class="line"> */</span><br><span class="line">const getPexlesData = async () =&gt; &#123;</span><br><span class="line">  //数据全部加载完成return</span><br><span class="line">  if (isFinished.value)&#123;</span><br><span class="line">    return</span><br><span class="line">  &#125;</span><br><span class="line">  //完成了第一次请求之后，后续的请求让page自增</span><br><span class="line">  if (pexelsList.value.length)&#123;</span><br><span class="line">    query.page+=1</span><br><span class="line">  &#125;</span><br><span class="line">  //触发接口</span><br><span class="line">  const res = await getPexlesList(query)</span><br><span class="line">  if (query.page === 1)&#123;</span><br><span class="line">    pexelsList.value = res.list</span><br><span class="line">  &#125;else&#123;</span><br><span class="line">    pexelsList.value.push(...res.list)</span><br><span class="line">  &#125;</span><br><span class="line">  //判断数据是否全部加载完成</span><br><span class="line">  if (pexelsList.value.length === res.total)&#123;</span><br><span class="line">    isFinished.value = true</span><br><span class="line">  &#125;</span><br><span class="line">  //修改loading标记</span><br><span class="line">  loading.value = false</span><br><span class="line">&#125;</span><br><span class="line">getPexlesData()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="9-13-通用组件：解决首次数据无法铺满全屏时，数据无法继续加载"><a href="#9-13-通用组件：解决首次数据无法铺满全屏时，数据无法继续加载" class="headerlink" title="9-13 通用组件：解决首次数据无法铺满全屏时，数据无法继续加载"></a>9-13 通用组件：解决首次数据无法铺满全屏时，数据无法继续加载</h2><p>现在对于咱们当前的功能而言，还存在一个小的bug，那就是<strong>假如：首次加载的数据无法铺满全屏时，数据无法继续加载</strong></p><hr><p>其实出现这个问题的原因非常简单，我们在infinite 组件中，监听 laodingTarget元素是否可见，依次来判断是否需要进行下次的load，但是当首次加载数据无法铺满全屏时，isIntersecting虽然为true，但是它只会被触发一次，并不会再次触发，所以，我们就不再次触发oad。从而出现此bug。</p><p>那么明确好了原因只会，接下来想要解决这个问题就非常简单了，我们只需要：让load 可以在loading状态发生变化后，重新判断是否需要再次触发即可。</p><ol><li>我们修改lib&#x2F;infinite&#x2F;index.vue</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//滚动的元素</span></span><br><span class="line"><span class="keyword">const</span> loadingTarget= <span class="title function_">ref</span>(<span class="literal">null</span>)</span><br><span class="line"><span class="comment">//记录当前是否在底部</span></span><br><span class="line"><span class="keyword">const</span> targetIsIntersecting = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="title function_">useIntersectionObserver</span>(loadingTarget,<span class="function">(<span class="params">[&#123;isIntersecting&#125;]</span>)=&gt;</span>&#123;</span><br><span class="line">  targetIsIntersecting.<span class="property">value</span> = isIntersecting</span><br><span class="line">  <span class="title function_">emitLoad</span>()</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *触发load事件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">emitLoad</span> =(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">//当加载更多的视图可见时，同时loading为false，同时数据尚未全部加载完</span></span><br><span class="line">    <span class="comment">//处理加载更多逻辑</span></span><br><span class="line">    <span class="keyword">if</span>(targetIsIntersecting &amp;&amp; !loading.<span class="property">value</span> &amp;&amp; !props.<span class="property">isFinished</span>)&#123;</span><br><span class="line">      <span class="comment">//修改加载数据标记</span></span><br><span class="line">      loading.<span class="property">value</span> = <span class="literal">true</span></span><br><span class="line">      <span class="comment">//触发加载更多的行为</span></span><br><span class="line">      <span class="title function_">emits</span>(<span class="string">&#x27;onLoad&#x27;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听loading的变化，解决数据加载完成之后，首屏未铺满的问题</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_">watch</span>(loading,emitLoad)</span><br></pre></td></tr></table></figure><h2 id="9-14-图片懒加载构建原因-实现原理"><a href="#9-14-图片懒加载构建原因-实现原理" class="headerlink" title="9-14 图片懒加载构建原因+实现原理"></a>9-14 图片懒加载构建原因+实现原理</h2><p><strong>为什么需要图片懒加载</strong></p><p>此时如果我们把src&#x2F;views&#x2F;main&#x2F;components&#x2F;list&#x2F;index.vue的query.size 修改为 100，然后切换到浏览器的network-&gt; img 可以发现此时的图片请求高达575次</p><p>但是我们现在显示的图片，明显是远远少于575这个数字的。</p><p>那么多余的这些请求是不是就会很“浪费”啊。</p><p>所以我们不想有这种浪费，就可以利用图片懒加载功能进行实现。</p><p><strong>图片懒加载实现原理</strong></p><p>那么图片懒加载如何进行实现呢？想要搞明日这个，我们就需要先明白图片懒加载的原理是什么。</p><p>所谓图片懒加载指的是：<strong>当图片不可见时，不加载图片。当图片可见时，才去加载图片。</strong></p><p>大家看见这个“不可见&amp;&amp;可见”是不是觉得很眼熟。是啊，这不就是实现长列表时用过的套路吗？</p><p>所以据此，咱们的实现方案是不是就呼之欲出了。</p><p>我们可以<strong>监听所有图片是否被可见，如果图片处于不可见状态，那么就不加载图片，如果图片处于可见状态，那么开始加载图片。</strong><br>而这个功能的实现关键就是<strong>IntersectionObserver。</strong></p><h2 id="9-15-通用指令：实现图片懒加载"><a href="#9-15-通用指令：实现图片懒加载" class="headerlink" title="9-15 通用指令：实现图片懒加载"></a>9-15 通用指令：实现图片懒加载</h2><p>我们知道了图片懒加载的实现原理。</p><p>但是到这里，那么多的img标签咱们怎么一个个监听到呢？</p><p>那么想要监听到所有img标签，我们可以利用指令来进行实现。</p><p>比如我们可以给所有的img增加一个v-lazy指令，在这个指令中可以拿到el也就是img标签本身，这样我们就可以监听到所有的img标签状态了。</p><p>所以据上所述，我们可以直接创建出对应的指</p><ol><li>我们首先创建文件src&#x2F;directives&#x2F;modules&#x2F;lazy.js</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; useIntersectionObserver &#125; <span class="keyword">from</span> <span class="string">&#x27;@vueuse/core&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">//图片懒加载：在用户无法看到图片时，不加载图片，在用户可以看到图片后加载图片</span></span><br><span class="line">  <span class="comment">//如何判断用户是否看到了图片：useIntersectionObserver</span></span><br><span class="line">  <span class="comment">//如何做到不加载图片（网络）：img标签宣染图片，指的是img的src属性，src 属性是网络地址时，则会从网络中获取该图片资源。那么如果img标签不是网络地址呢？把该网络地址默认替换为非网络地址，然后当用户可见时，在替换成网络地址。</span></span><br><span class="line">  <span class="title function_">mounted</span>(<span class="params">el</span>) &#123;</span><br><span class="line">    <span class="comment">//1.拿到当前的src</span></span><br><span class="line">    <span class="keyword">const</span> imgSrc = el.<span class="property">src</span></span><br><span class="line">    <span class="comment">//2. 把src变为空</span></span><br><span class="line">    el.<span class="property">src</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">const</span> &#123; stop &#125; = <span class="title function_">useIntersectionObserver</span>(el, <span class="function">(<span class="params">[&#123; isIntersecting &#125;]</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (isIntersecting) &#123;</span><br><span class="line">        <span class="comment">//3.当图片可见时，加载图片</span></span><br><span class="line">        el.<span class="property">src</span> = imgSrc</span><br><span class="line">        <span class="comment">//4.停止监听</span></span><br><span class="line">        <span class="title function_">stop</span>()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="2"><li>然后我们在src&#x2F;directives&#x2F;index.js完成基本注册</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> lazy <span class="keyword">from</span> <span class="string">&#x27;./modules/lazy&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 全局注册指令</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">install</span>(<span class="params">app</span>)&#123;</span><br><span class="line">    app.<span class="title function_">directive</span>(<span class="string">&#x27;lazy&#x27;</span>,lazy)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>紧接着在main.js中完成注册</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mDirectives <span class="keyword">from</span> <span class="string">&#x27;./directives&#x27;</span></span><br><span class="line">app.<span class="title function_">use</span>(mDirectives)</span><br></pre></td></tr></table></figure><ol start="4"><li>在item.vue和header-my.vue和header&#x2F;index.vue中在img标签添加v-lazy</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img v-lazy/&gt;</span><br></pre></td></tr></table></figure><h2 id="9-16-深入vite：指令的自动注册"><a href="#9-16-深入vite：指令的自动注册" class="headerlink" title="9-16 深入vite：指令的自动注册"></a>9-16 深入vite：指令的自动注册</h2><p>此时在src&#x2F;directives&#x2F;index.js 中，我们面临了一个和注册组件时的同样问题，那就是：<strong>如果指令过多，那么一个一个注册未免过于麻烦了</strong>。所以我们最好有一种方式完成指令的自动注册</p><p>那么想要完成这个功能我们依然要利用 Glob导入（import.meta.globEager）_和Object.entries功能：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> lazy <span class="keyword">from</span> <span class="string">&#x27;./modules/lazy&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 全局注册指令</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="title function_">install</span>(<span class="params">app</span>)&#123;</span><br><span class="line">    <span class="keyword">const</span> directives = <span class="keyword">import</span>.<span class="property">meta</span>.<span class="title function_">globEager</span>(<span class="string">&#x27;./modules/*.js&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> [key , value] <span class="keyword">of</span> <span class="title class_">Object</span>.<span class="title function_">entries</span>(directives))&#123;</span><br><span class="line">      <span class="keyword">const</span> arr = key.<span class="title function_">split</span>(<span class="string">&#x27;./&#x27;</span>)</span><br><span class="line">      <span class="keyword">const</span> name = arr[arr.<span class="property">length</span>-<span class="number">1</span>].<span class="title function_">replace</span>(<span class="string">&#x27;.js&#x27;</span>,<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">      app.<span class="title function_">directive</span>(name,value.<span class="property">default</span>)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-17-指定彩色占位图"><a href="#9-17-指定彩色占位图" class="headerlink" title="9-17 指定彩色占位图"></a>9-17 指定彩色占位图</h2><ol><li>我们现在utils&#x2F;color.js中写导出随机rgb方法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成随机色值</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span>  <span class="keyword">const</span> <span class="title function_">randomRGB</span> =(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="keyword">const</span> r = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">255</span>)</span><br><span class="line">  <span class="keyword">const</span> g = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">255</span>)</span><br><span class="line">  <span class="keyword">const</span> b = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">255</span>)</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`rgb(<span class="subst">$&#123;r&#125;</span>,<span class="subst">$&#123;g&#125;</span>,<span class="subst">$&#123;b&#125;</span>)`</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>我们在item.vue中使用该方法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; randomRGB &#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/color&#x27;</span></span><br><span class="line"></span><br><span class="line">  &lt;div <span class="keyword">class</span>=<span class="string">&quot;relative w-full rounded cursor-zoom-in group&quot;</span></span><br><span class="line">         :style=<span class="string">&quot;&#123;</span></span><br><span class="line"><span class="string">            backgroundColor:randomRGB()</span></span><br><span class="line"><span class="string">         &#125;&quot;</span>&gt;</span><br></pre></td></tr></table></figure><h2 id="9-18-总结"><a href="#9-18-总结" class="headerlink" title="9-18 总结"></a>9-18 总结</h2><p>我们借用首页list模块业务，实现了：</p><ol><li>瀑布流</li><li>长列表</li><li>懒加载</li><li>指令自动注册</li><li>….</li></ol><p>等通用组件或指令。</p><p>这些内容都是咱们日常开发中非常常见的功能，那么在我们把他们抽离了之后，日后的开发中就可以直接拿过来使用了。</p><p>但是现在对于首页而言，我们所欠缺的内容还是比较多的，比如：</p><ol><li>search 模块到首页的联动</li><li>item 上的点击处理</li></ol><h1 id="10、多组件联动与高阶组件方案——list联动search和navigationBar"><a href="#10、多组件联动与高阶组件方案——list联动search和navigationBar" class="headerlink" title="10、多组件联动与高阶组件方案——list联动search和navigationBar"></a>10、多组件联动与高阶组件方案——list联动search和navigationBar</h1><p>多组件联动是日常工作中的常见业务。高阶通用组件是构建中台组件库的难点。</p><h2 id="10-1-前言"><a href="#10-1-前言" class="headerlink" title="10-1 前言"></a>10-1 前言</h2><p>到目前为止我们已经实现了首页的search、navigationBar、list 模块。只不过目前三个模块完全是独立的，没有任何的关联性。</p><p>所以我们接下来要处理的就是让它们三个可以联动起来。也就是我们标题所说的：list联动search和navigationBar</p><p>那么在这样的联动之中，我们应该注意哪些事情，联动的数据又应该如何进行处理？如果可以让我们的逻辑更加清晰？</p><h2 id="10-2-多组件联动注意事项与整体逻辑分析"><a href="#10-2-多组件联动注意事项与整体逻辑分析" class="headerlink" title="10-2 多组件联动注意事项与整体逻辑分析"></a>10-2 多组件联动注意事项与整体逻辑分析</h2><p>在我们的实际开发中，我们经常会遇到多个组件之间互相进行联动的场景。那么这样的场景我们通常应该怎么去进行处理呢？下面让我们来说一下：</p><p>所谓的多组件联动，其实更准确一点来说，通常指的是：多个组件之间，存在一个或多个共享的数据。当数据发生改变时，执行对应的逻辑。</p><p>那么把这一句话拆分开来看，就是两部分：</p><ol><li>多组件之间需要共享数据</li><li>监听数据变化，并执行对应逻辑</li></ol><p><strong>多组件之间需要共享数据</strong></p><p>多组件之间共享数据，通常有三种方式：</p><ol><li><p>组件之间的数据传递–常见于层级关系比较清晰的多组件之中</p><ol><li>父传子</li><li>子传父</li><li>….</li></ol></li><li><p>依赖注入：<strong>Provide&#x2F;Inject</strong>–嵌套层级比较深，并且子组件只需要父组件的部分内容</p></li><li><p>全局状态管理工具：<strong>vuex</strong>-以上两种情况都不适用的情况下</p></li></ol><p>那么针对于我们这里的场景，层级关系比较复杂，并且需要进行复杂的逻辑操作，那么此时，我们此时多组件之间共享数据的策略就需要通过vuex 来实现。</p><p><strong>监听数据变化的方式</strong></p><p>当组件之间共享的数据发生变化时，我们需要执行对应的逻辑操作。所以首当其冲我们就需要监听到数据的变化。</p><p>那么在vue中监听数据变化的方式，首推就是watch。</p><p>并且在刚才我们已经确定了共享的数据需要被保存到vuex 中，所以我们就需要通过watch监听到vuex 中共享数据的变化，然后在监听到变化时，执行对应的业务逻辑。</p><p><strong>整体逻辑分析</strong></p><p>那么依据我们以上所说的内容，我们的整体实现逻辑应该为：</p><ol><li>创建共享数据对应的vuex模块</li><li>在getters中建立对应的快捷访问计算属性</li><li>在对应的业务组件中，监听getters，并执行对应逻辑</li></ol><h2 id="10-3-简单联动处理：navigationBar对应list"><a href="#10-3-简单联动处理：navigationBar对应list" class="headerlink" title="10-3 简单联动处理：navigationBar对应list"></a>10-3 简单联动处理：navigationBar对应list</h2><p>我们期望当 navigationBar 中的 item发生切换时，切换对应的list中的展示数据，那么根据我们刚才的分析，切换的关键就在于：<strong>共享数据的变化，引起的逻辑变化</strong></p><p>那么在这样的场景中，共享数据指的就是<strong>被选中项</strong>。</p><p>目前无论是PC端 下还是移动端下，被选中项都是在组件内部进行处理的，这肯定不符合我们的最初逻辑。我们期望共享的数据可以在vuex 中被维护。</p><p>所以我们将产生如下代码：</p><p>1.创建 src&#x2F;store&#x2F;modules&#x2F;app.js，该模块下的数据不会被缓存：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;<span class="variable constant_">ALL_CATEGORY_ITEM</span>&#125; <span class="keyword">from</span> <span class="string">&#x27;@/constants&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * app模块中的数据不会被缓存</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">//独立作用域</span></span><br><span class="line">  <span class="attr">namespaced</span>:<span class="literal">true</span>,</span><br><span class="line">  <span class="attr">state</span>:<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      <span class="comment">//当前选中的分类</span></span><br><span class="line">      <span class="attr">currentCategory</span>:<span class="variable constant_">ALL_CATEGORY_ITEM</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>:&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 切换选中分类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">changeCurrentCategory</span>(<span class="params">state,newCategory</span>)&#123;</span><br><span class="line">      state.<span class="property">currentCategory</span>=newCategory</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">actions</span>:&#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在 src&#x2F;store&#x2F;index.js中对app进行注册，因为我们不希望app缓存，所以只在modules中注册，不在paths中写入</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> app <span class="keyword">from</span> <span class="string">&#x27;./modules/app&#x27;</span></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  getters,</span><br><span class="line">  <span class="attr">modules</span>:&#123;</span><br><span class="line">    category,</span><br><span class="line">    theme,</span><br><span class="line">    app</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>:[</span><br><span class="line">   <span class="title function_">createPersistedState</span>(&#123;</span><br><span class="line">     <span class="comment">//指定保存到localStorage中的key</span></span><br><span class="line">     <span class="attr">key</span>:<span class="string">&#x27;imooc-front&#x27;</span>,</span><br><span class="line">     <span class="comment">//需要保存的模块</span></span><br><span class="line">     <span class="attr">paths</span>:[<span class="string">&#x27;category&#x27;</span>,<span class="string">&#x27;theme&#x27;</span>]</span><br><span class="line">   &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="3"><li>完成注册后就要处理对应的getters，在 src&#x2F;store&#x2F;getter.js中增加</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * category选中项</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="attr">currentCategory</span>:<span class="function">(<span class="params">state</span>)=&gt;</span>state.<span class="property">app</span>.<span class="property">currentCategory</span>,</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * category选中项下标</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="attr">currentCategoryIndex</span>:<span class="function">(<span class="params">state,getter</span>)=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span> getter.<span class="property">categorys</span>.<span class="title function_">findIndex</span>(<span class="function">(<span class="params">item</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> item.<span class="property">id</span> === getter.<span class="property">currentCategory</span>.<span class="property">id</span></span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><ol start="4"><li>修改pc端的代码，src&#x2F;views&#x2F;main&#x2F;components&#x2F;navigation &#x2F;pc&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--      item--&gt;</span><br><span class="line">   &lt;li</span><br><span class="line">     v-for=&quot;(item, index) in $store.getters.categorys&quot;</span><br><span class="line">     :key=&quot;item.id&quot;</span><br><span class="line">     class=&quot;shrink-0 px-1.5 py-0 z-10 duration-200 text-zinc-900 dark:text-zinc-500 dark:hover:text-zinc-300 text-base font-bold h-4 leading-4 cursor-pointer hover:bg-zinc-200 dark:hover:bg-zinc-900 rounded mr-1 mb-1&quot;</span><br><span class="line">     :class=&quot;&#123;</span><br><span class="line">       &#x27;text-zinc-900 dark:text-zinc-300 bg-zinc-200 dark:bg-zinc-900&#x27;:</span><br><span class="line">         $store.getters.currentCategoryIndex === index</span><br><span class="line">     &#125;&quot;</span><br><span class="line">     @click=&quot;onItemClick(item)&quot;</span><br><span class="line">   &gt;</span><br><span class="line">     &#123;&#123; item.name &#125;&#125;</span><br><span class="line">   &lt;/li&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> store = <span class="title function_">useStore</span>()</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 选中状态处理</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onItemClick</span> = (<span class="params">item</span>) =&gt; &#123;</span><br><span class="line">  store.<span class="title function_">commit</span>(<span class="string">&#x27;app/changeCurrentCategory&#x27;</span>,item)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>修改pc端的代码，src&#x2F;views&#x2F;main&#x2F;components&#x2F;navigation &#x2F;mobile&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--      items--&gt;</span><br><span class="line">&lt;li</span><br><span class="line">  v-for=&quot;(item, index) in $store.getters.categorys&quot;</span><br><span class="line">  :key=&quot;item.id&quot;</span><br><span class="line">  class=&quot;shrink-0 px-1.5 py-0.5 z-10 duration-200 last:mr-4&quot;</span><br><span class="line">  :class=&quot;&#123;</span><br><span class="line">    &#x27;text-zinc-100&#x27;: $store.getters.currentCategoryIndex === index</span><br><span class="line">  &#125;&quot;</span><br><span class="line">  :ref=&quot;setItemRef&quot;</span><br><span class="line">  @click=&quot;onItemClick(item)&quot;</span><br><span class="line">&gt;</span><br><span class="line">  &#123;&#123; item.name &#125;&#125;</span><br><span class="line">&lt;/li&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> store = <span class="title function_">useStore</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">//watch监听getters 的时候，我们需要传递一个函数</span></span><br><span class="line"><span class="title function_">watch</span>(</span><br><span class="line">  <span class="function">() =&gt;</span> store.<span class="property">getters</span>.<span class="property">currentCategoryIndex</span>,</span><br><span class="line">  <span class="function">(<span class="params">val</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> &#123; left, width &#125; = itemRefs[val].<span class="title function_">getBoundingClientRect</span>()</span><br><span class="line">    sliderStyle.<span class="property">value</span> = &#123;</span><br><span class="line">      <span class="comment">//滑块的位置= ul横向滚动的位置+当前元素的left-ul的padding</span></span><br><span class="line">      <span class="attr">transform</span>: <span class="string">`translateX(<span class="subst">$&#123;ulScrollLeft.value + left - <span class="number">10</span>&#125;</span>px)`</span>,</span><br><span class="line">      <span class="attr">width</span>: width + <span class="string">&#x27;px&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//item点击事件</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onItemClick</span> = (<span class="params">item</span>) =&gt; &#123;</span><br><span class="line">  store.<span class="title function_">commit</span>(<span class="string">&#x27;app/changeCurrentCategory&#x27;</span>, item)</span><br><span class="line">  isVisable.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>增加views&#x2F;main&#x2F;components&#x2F;list&#x2F;index.vue代码</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 通过此方法修改query，重新发起请求</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">resetQuery</span> = (<span class="params">newQuery</span>)=&gt;&#123;</span><br><span class="line">  query=&#123;...query,...newQuery&#125;</span><br><span class="line">  <span class="comment">//重置状态</span></span><br><span class="line">  isFinished.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">  pexelsList.<span class="property">value</span> = []</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听currentCategory的变化</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_">watch</span>(</span><br><span class="line">  <span class="function">()=&gt;</span>store.<span class="property">getters</span>.<span class="property">currentCategory</span>,</span><br><span class="line">  <span class="function">(<span class="params">currentCategory</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="title function_">resetQuery</span>(&#123;</span><br><span class="line">      <span class="attr">page</span>:<span class="number">1</span>,</span><br><span class="line">      <span class="attr">categoryId</span>:currentCategory.<span class="property">id</span></span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="10-4-明确searchBar对应list处理流程"><a href="#10-4-明确searchBar对应list处理流程" class="headerlink" title="10-4 明确searchBar对应list处理流程"></a>10-4 明确searchBar对应list处理流程</h2><p>接下来我们需要处理 searchBar 区域对应list区域的联动效果。</p><p>但是对于 searchBar 区域而言，目前我们还没有处理完成，所以我们需要先把 searchBar 区域的处理流程将清楚，然后再处理对应的联动。</p><p>那么对于searchBar 区域我们目前还缺少三部分的内容处理：</p><ol><li>搜索提示</li><li>搜索历史</li><li>推荐主题</li></ol><p>所以我们接下来的处理顺序为</p><ol><li>搜索提示</li><li>搜索历史</li><li>推荐主题</li><li>search触发时的list 联动</li></ol><h2 id="10-5-searchBar：搜索提示初步实现"><a href="#10-5-searchBar：搜索提示初步实现" class="headerlink" title="10-5 searchBar：搜索提示初步实现"></a>10-5 searchBar：搜索提示初步实现</h2><ol><li>我们在src&#x2F;api&#x2F;pexeis.js中注册获取搜索提示接口</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取搜索提示</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getHint</span> = (<span class="params">q</span>) =&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;/pexels/hint&#x27;</span>,</span><br><span class="line">    <span class="attr">params</span>: &#123; </span><br><span class="line">      q</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>创建组件src&#x2F;views&#x2F;layout&#x2F;components&#x2F;header&#x2F;header-search&#x2F;hint.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      v-for=&#x27;(item,index) in hintData&#x27;</span><br><span class="line">      :key=&#x27;index&#x27;</span><br><span class="line">      class=&#x27;py-1 pl-1 text-base font-bold text-zinc-500 rounded</span><br><span class="line">      cursor-pointer duration-300 hover:bg-zinc-200 dark:hover:bg-zinc-900&#x27;</span><br><span class="line">      @click=&#x27;onItemClick(item)&#x27;</span><br><span class="line">    &gt;</span><br><span class="line">      &#123;&#123;item&#125;&#125;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">const EMINTS_ITEM_CLICK=&#x27;itemClick&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">import &#123; getHint &#125; from &#x27;@/api/pexeis&#x27;</span><br><span class="line">import &#123;watch&#125; from &#x27;vue&#x27;</span><br><span class="line"></span><br><span class="line">const props = defineProps(&#123;</span><br><span class="line">  /**</span><br><span class="line">   * 搜索文本</span><br><span class="line">   */</span><br><span class="line">  searchText:&#123;</span><br><span class="line">    type:String,</span><br><span class="line">    required:true</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line">const emits=defineEmits(EMINTS_ITEM_CLICK)</span><br><span class="line">/**</span><br><span class="line"> * 处理搜索提示数据获取</span><br><span class="line"> */</span><br><span class="line">const hintData = ref([])</span><br><span class="line">const getHintData = async()=&gt;&#123;</span><br><span class="line">  if (!props.searchText) return</span><br><span class="line">  const &#123;result&#125; = await getHint(props.searchText)</span><br><span class="line">  hintData.value = result</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * watch可以监听一个ref响应式数据，或者一个包含getter的函数</span><br><span class="line"> */</span><br><span class="line">watch(()=&gt;props.searchText,getHintData,&#123;</span><br><span class="line">  immediate:true</span><br><span class="line">&#125;)</span><br><span class="line">/**</span><br><span class="line"> * item点击事件处理</span><br><span class="line"> */</span><br><span class="line">const onItemClick=(item)=&gt;&#123;</span><br><span class="line">  emits((EMINTS_ITEM_CLICK,item))</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>我们在父组件src&#x2F;views&#x2F;layout&#x2F;components&#x2F;header&#x2F;header-search&#x2F;index.vue中使用子组件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;m-search v-model=&quot;inputValue&quot;&gt;</span><br><span class="line">      &lt;template #dropdown&gt;</span><br><span class="line">        &lt;!--        搜索提示--&gt;</span><br><span class="line">        &lt;hint-vue</span><br><span class="line">          :searchText=&quot;inputValue&quot;</span><br><span class="line">          v-show=&quot;inputValue&quot;</span><br><span class="line">          @itemClick=&#x27;onSearchHandler&#x27;</span><br><span class="line">        &gt;&lt;/hint-vue&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/m-search&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">import hintVue from &#x27;./hint.vue&#x27;</span><br><span class="line"></span><br><span class="line">const inputValue = ref(&#x27;&#x27;)</span><br><span class="line">/**</span><br><span class="line"> * 搜索回调</span><br><span class="line"> */</span><br><span class="line">const onSearchHandler =(val)=&gt;&#123;</span><br><span class="line">  inputValue.value=val</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="10-6-searchBar：处理防抖功能"><a href="#10-6-searchBar：处理防抖功能" class="headerlink" title="10-6 searchBar：处理防抖功能"></a>10-6 searchBar：处理防抖功能</h2><p>目前的searchBar 中，当我输入内容时，会触发搜索提示功能。但是我们发现，加入我们想要搜索一个单词，比如：mac，却进行了三次的搜索。这明显是不合理的。</p><p>所以如果想要让这个搜索变得更加合理，那么我们就需要使用到防抖这样的功能。</p><p>所谓防抖指的就是：<strong>当触发一个事件时，不去立刻执行，而是延迟一段时间，该事件变为等待执行事件。如果在这段时间之内，该事件被再次触发，则上次等待执行的事件取消，本次触发的事件变为等待执行事件。循环往复，直到某一个等待事件被执行为止</strong></p><p>那么这样的防抖，通常我们称为：debounce</p><p>那么目前在 src&#x2F;views&#x2F;layout&#x2F;components&#x2F;header&#x2F;header-search&#x2F;hint.vue 中，我们通过watch 监听输入内容的变化，所以当输入内容发生过一次变化时，则会立刻触发 getHintData事件。</p><p>那么我们所需要做的防抖处理，就需要在watch中进行。</p><p>不过这样的防抖watch 我们不需要自己进行实现，vueuse中提供了对应的<strong>watchDebounced</strong>，我们可以直接利用这个API直接实现防抖的watch</p><p>修改src&#x2F;views&#x2F;layout&#x2F;components&#x2F;header&#x2F;header-search&#x2F;hint.vue的watch</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * watch可以监听一个ref响应式数据，或者一个包含getter的函数</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_">watchDebounced</span>(<span class="function">()=&gt;</span>props.<span class="property">searchText</span>,getHintData,&#123;</span><br><span class="line">  <span class="attr">immediate</span>:<span class="literal">true</span>,</span><br><span class="line">  <span class="comment">//每次事件触发时，延迟的事件</span></span><br><span class="line">  <span class="attr">debounce</span>:<span class="number">500</span></span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">/**</span></span><br></pre></td></tr></table></figure><h2 id="10-7-searchBar：提示关键字高亮处理"><a href="#10-7-searchBar：提示关键字高亮处理" class="headerlink" title="10-7 searchBar：提示关键字高亮处理"></a>10-7 searchBar：提示关键字高亮处理</h2><ol><li>在src&#x2F;views&#x2F;layout&#x2F;components&#x2F;header&#x2F;header-search&#x2F;hint.vue添加方法，增加一个正则替换，最后进行一个富文本替换</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理关键字高亮</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">highlightText</span> = (<span class="params">text</span>)=&gt;&#123;</span><br><span class="line">  <span class="comment">//生成高亮标签</span></span><br><span class="line">  <span class="keyword">const</span> highlightSte = <span class="string">`&lt;span class=&quot;text-zinc-900 dark:text-zinc-200&quot;&gt;</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;props.searchText&#125;</span>&lt;/span&gt;`</span></span><br><span class="line">  <span class="comment">//正则表达式：从《显示文本中》找出与《用户输入文本相同的内容》，使用《高亮标签》进行替换</span></span><br><span class="line">  <span class="keyword">const</span> reg = <span class="keyword">new</span> <span class="title class_">RegExp</span>(props.<span class="property">searchText</span>,<span class="string">&#x27;gi&#x27;</span>)</span><br><span class="line">  <span class="comment">//替换</span></span><br><span class="line">  <span class="keyword">return</span> text.<span class="title function_">replace</span>(reg,highlightSte)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div</span><br><span class="line">  v-for=&#x27;(item,index) in hintData&#x27;</span><br><span class="line">  :key=&#x27;index&#x27;</span><br><span class="line">  class=&#x27;py-1 pl-1 text-base font-bold text-zinc-500 rounded</span><br><span class="line">  cursor-pointer duration-300 hover:bg-zinc-200 dark:hover:bg-zinc-900&#x27;</span><br><span class="line">  v-html=&#x27;highlightText(item)&#x27;</span><br><span class="line">  @click=&#x27;onItemClick(item)&#x27;</span><br><span class="line">&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="10-8-searchBar：搜索历史处理"><a href="#10-8-searchBar：搜索历史处理" class="headerlink" title="10-8 searchBar：搜索历史处理"></a>10-8 searchBar：搜索历史处理</h2><ol><li>创建模块store&#x2F;modules&#x2F;search.js</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 搜索</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">//独立作用域</span></span><br><span class="line">  <span class="attr">namespaced</span>:<span class="literal">true</span>,</span><br><span class="line">  <span class="attr">state</span>:<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      <span class="attr">historys</span>:[]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>:&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新增</span></span><br><span class="line"><span class="comment">     * 1.新增的历史记录位于头部</span></span><br><span class="line"><span class="comment">     * 2.不可出现重复的记录</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">addHistory</span>(<span class="params">state,newHistory</span>)&#123;</span><br><span class="line">      <span class="keyword">const</span> isFindIndex = state.<span class="property">historys</span>.<span class="title function_">findIndex</span>(</span><br><span class="line">        <span class="function">(<span class="params">item</span>)=&gt;</span>item === newHistory</span><br><span class="line">      )</span><br><span class="line">      <span class="comment">//提出旧数据</span></span><br><span class="line">      <span class="keyword">if</span> (isFindIndex !==-<span class="number">1</span>)&#123;</span><br><span class="line">        state.<span class="property">historys</span>.<span class="title function_">splice</span>(isFindIndex,<span class="number">1</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">//新增记录</span></span><br><span class="line">      state.<span class="property">historys</span>.<span class="title function_">unshift</span>(newHistory)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 单个删除</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">deleteHistory</span>(<span class="params">state,index</span>)&#123;</span><br><span class="line">      state.<span class="property">historys</span>.<span class="title function_">splice</span>(index,<span class="number">1</span>)</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 全部删除</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">deleteAllHistory</span>(<span class="params">state</span>)&#123;</span><br><span class="line">      state.<span class="property">historys</span>=[]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">actions</span>:&#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在store&#x2F;index.js中注册</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> search <span class="keyword">from</span> <span class="string">&#x27;./modules/search&#x27;</span></span><br><span class="line"><span class="keyword">const</span> store = <span class="title function_">createStore</span>(&#123;</span><br><span class="line">  getters,</span><br><span class="line">  <span class="attr">modules</span>:&#123;</span><br><span class="line">    category,</span><br><span class="line">    theme,</span><br><span class="line">    app,</span><br><span class="line">    search</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">plugins</span>:[</span><br><span class="line">   <span class="title function_">createPersistedState</span>(&#123;</span><br><span class="line">     <span class="comment">//指定保存到localStorage中的key</span></span><br><span class="line">     <span class="attr">key</span>:<span class="string">&#x27;imooc-front&#x27;</span>,</span><br><span class="line">     <span class="comment">//需要保存的模块</span></span><br><span class="line">     <span class="attr">paths</span>:[<span class="string">&#x27;category&#x27;</span>,<span class="string">&#x27;theme&#x27;</span>,<span class="string">&#x27;search&#x27;</span>]</span><br><span class="line">   &#125;)</span><br><span class="line">  ]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> store</span><br></pre></td></tr></table></figure><ol start="3"><li>所有的store的访问都应该有一个getters</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 搜索历史</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="attr">historys</span>:<span class="function">(<span class="params">state</span>)=&gt;</span>state.<span class="property">search</span>.<span class="property">historys</span></span><br></pre></td></tr></table></figure><ol start="4"><li>至此vuex的所有操作都完成了</li></ol><hr><ol start="5"><li>我们创建组件views&#x2F;layout&#x2F;components&#x2F;header&#x2F;header-search&#x2F;history.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&#x27;flex items-center text-xs mb-1 text-zinc-400&#x27;&gt;</span><br><span class="line">      &lt;span&gt;最新搜索&lt;/span&gt;</span><br><span class="line">      &lt;m-svg-icon</span><br><span class="line">        name=&#x27;delete&#x27;</span><br><span class="line">        class=&#x27;w-2.5 h-2.5 ml-1 p-0.5 cursor-pointer duration-300 rounded-sm hover:bg-zinc-100&#x27;</span><br><span class="line">        fillClass=&#x27;fill-zinc-400&#x27;</span><br><span class="line">        @click=&#x27;onDeleteAllClick&#x27;</span><br><span class="line">      &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;div class=&#x27;flex flex-wrap&#x27;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        v-for=&#x27;(item,index) in $store.getter.historys()&#x27;</span><br><span class="line">        :key=&#x27;index&#x27;</span><br><span class="line">        class=&#x27;mr-2 mb-1.5 flex items-center cursor-pointer bg-zinc-100 px-1.5</span><br><span class="line">        py-0.5 text-zinc-900 text-sm font-bold rounded-sm dutation-300</span><br><span class="line">        hover:bg-zinc-200&#x27;</span><br><span class="line">        @click=&#x27;onItemClick(item)&#x27;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;span&gt;&#123;&#123;item&#125;&#125;&lt;/span&gt;</span><br><span class="line">        &lt;m-svg-icon</span><br><span class="line">          name=&#x27;input-deldete&#x27;</span><br><span class="line">          class=&#x27;w-2.5 h-2.5 p-0.5 ml-1 duration-300 rounded-sm</span><br><span class="line">          hover:bg-zinc-100&#x27;</span><br><span class="line">          @click.stop=&#x27;onDeleteClick(index)&#x27;</span><br><span class="line">        &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">const EMITS_ITEM_CLICK=&#x27;itemClick&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useStore &#125; from &#x27;vuex&#x27;</span><br><span class="line">const emits = defineEmits([EMITS_ITEM_CLICK])</span><br><span class="line">const store = useStore()</span><br><span class="line">/**</span><br><span class="line"> * 删除全部</span><br><span class="line"> */</span><br><span class="line">const onDeleteAllClick =()=&gt;&#123;</span><br><span class="line">  store.commit(&#x27;search/deleteAllHistory&#x27;)</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * 单个删除</span><br><span class="line"> */</span><br><span class="line">const onDeleteClick=(index)=&gt;&#123;</span><br><span class="line">  store.commit(&#x27;search/deleteHistory&#x27;,index)</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * 触发搜索</span><br><span class="line"> */</span><br><span class="line">const onItemClick=(item)=&gt;&#123;</span><br><span class="line">  emits(EMITS_ITEM_CLICK,item)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="6"><li>我们在views&#x2F;layout&#x2F;components&#x2F;header&#x2F;header-search&#x2F;index.vue中使用history组件；另外当我们回车的时候也调用搜索回调方法</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--最近搜索--&gt;</span><br><span class="line">&lt;history-vue</span><br><span class="line">  v-show=&quot;!inputValue&quot;</span><br><span class="line">  @itemClick=&quot;onSearchHandler&quot;</span><br><span class="line">&gt;&lt;/history-vue&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> historyVue <span class="keyword">from</span> <span class="string">&#x27;./history.vue&#x27;</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 搜索回调</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSearchHandler</span> = (<span class="params">val</span>) =&gt; &#123;</span><br><span class="line">  inputValue.<span class="property">value</span> = val</span><br><span class="line">  <span class="keyword">if</span> (val) &#123;</span><br><span class="line">    store.<span class="title function_">commit</span>(<span class="string">&#x27;search/addHistory&#x27;</span>, val)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;m-search v-model=&quot;inputValue&quot; @search=&quot;onSearchHandler&quot;&gt;</span><br><span class="line">&lt;/m-search&gt;</span><br></pre></td></tr></table></figure><h2 id="10-9-通用组件：confirm应用场景"><a href="#10-9-通用组件：confirm应用场景" class="headerlink" title="10-9 通用组件：confirm应用场景"></a>10-9 通用组件：confirm应用场景</h2><p>目前当我们点击<strong>删除全部</strong>历史记录时，会直接删除，这样体验并不好，我们期望的是能够给用户一个提示，也就是confirm</p><p>所以我们就期望能够构建出一个对应的confirm组件。</p><p>但是对于confirm这种组件而言，我们不希望它通过标签的形式进行使用，而是期望可以像element-plus中的<strong>confirm</strong>-样，可以直接通过方法的形式进行调用，这样就太爽了</p><p>那么如果我们想要通过一个方法来进行一个组件的展示，并与其进行交互的话，那么应该怎么做呢？</p><h2 id="10-10-通用组件：vnode-h函数-render函数-明确-confirm-构建思路"><a href="#10-10-通用组件：vnode-h函数-render函数-明确-confirm-构建思路" class="headerlink" title="10-10 通用组件：vnode + h函数 + render函数 明确 confirm 构建思路"></a>10-10 通用组件：vnode + h函数 + render函数 明确 confirm 构建思路</h2><p>那么想要搞明白这一点，我们就需要了解一些比较冷僻的知识点，那就是<strong>渲染函数</strong>，在渲染函数中，我们需要了解如下概念：</p><ol><li>虚拟dom：通过js来描述dom</li><li>vnode 虚拟节点：告诉vue 页面上需要渲染什么样子的节点</li><li>h函数：用来创建vnode 的函数，接受三个参数（要渲染的dom，attrs 对象，子元素）</li><li>render 函数：可以根据vnode 来染dom</li></ol><p>根据以上所说我们知道：<strong>通过h函数可以生成一个vnode，vnode 可以通过render 函数被宣染</strong></p><p>所以据此我们就可以得出confirm组件的实现思路：</p><ol><li>创建一个confirm组件</li><li>创建一个confir.js模块，在该模块中返回一个promise</li><li>同时利用h函数生成confirm.vue的vnode</li><li>最后利用 render函数，宣染vnode到body中</li></ol><h2 id="10-11-通用组件：构建confirm组件"><a href="#10-11-通用组件：构建confirm组件" class="headerlink" title="10-11 通用组件：构建confirm组件"></a>10-11 通用组件：构建confirm组件</h2><p>根据以上分析:</p><ol><li>创建 src&#x2F;libs&#x2F;confirm&#x2F;index.vue组件，并创建对应的props：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="comment">//标题</span></span><br><span class="line">  <span class="attr">title</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//描述</span></span><br><span class="line">  <span class="attr">content</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">required</span>: <span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//取消按钮文本</span></span><br><span class="line">  <span class="attr">cancelText</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">default</span>: <span class="string">&#x27;取消&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//确定按钮文本</span></span><br><span class="line">  <span class="attr">confirmText</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">default</span>: <span class="string">&#x27;确定&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//取消按钮事件</span></span><br><span class="line">  <span class="attr">cancelHandler</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Function</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//确定按钮事件</span></span><br><span class="line">  <span class="attr">confirmHandler</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Function</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//关闭confirm的回调</span></span><br><span class="line">  <span class="attr">close</span>: &#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="title class_">Function</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li>因为我们最终期望通过方法进行调用，这会导致<strong>自动导入的组件无法使用</strong>，所以我们需要手动导入需要使用到的通用组件：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//因为将来 confirm组件会以方法调用的形式展示，需要主动导入组件</span></span><br><span class="line"><span class="keyword">import</span> mButton <span class="keyword">from</span> <span class="string">&#x27;../button/index.vue&#x27;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>创建对应样式</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;!--  蒙版--&gt;</span><br><span class="line">    &lt;transition name=&quot;fade&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        v-else-if=&quot;isVisable&quot;</span><br><span class="line">        class=&quot;w-screen h-screen bg-zinc-900/80 z-40 fixed top-0 left-0&quot;</span><br><span class="line">        @click=&quot;close&quot;</span><br><span class="line">      &gt;&lt;/div&gt;</span><br><span class="line">    &lt;/transition&gt;</span><br><span class="line">    &lt;!--  内容--&gt;</span><br><span class="line">    &lt;transition name=&quot;up&quot;&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        v-if=&quot;isVisable&quot;</span><br><span class="line">        class=&quot;w-[80%] fixed top-1/3 left-[50%] translate-x-[-50%] z-50 px-2 py-1.5 rounded-sm border dark:border-zinc-600 cursor-pointer bg-white dark:bg-zinc-800 xl:w-[35%]&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;!--      标题--&gt;</span><br><span class="line">        &lt;div class=&quot;text-lg font-bold text-zinc-900 dark:text-zinc-200 mb-2&quot;&gt;</span><br><span class="line">          &#123;&#123; title &#125;&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">&lt;!--        文本--&gt;</span><br><span class="line">        &lt;div class=&#x27;text-base text-zinc-900 dark:text-zinc-200 mb-2&#x27;&gt;</span><br><span class="line">          &#123;&#123;content&#125;&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">&lt;!--        按钮--&gt;</span><br><span class="line">        &lt;div class=&#x27;flex justify-end&#x27;&gt;</span><br><span class="line">          &lt;m-button type=&#x27;info&#x27; class=&#x27;mr-2&#x27; @click=&#x27;onCancelClick&#x27;&gt;</span><br><span class="line">            &#123;&#123;cancelText&#125;&#125;</span><br><span class="line">          &lt;/m-button&gt;</span><br><span class="line">          &lt;m-button type=&#x27;primary&#x27; @click=&#x27;onConfirmClick&#x27;&gt;</span><br><span class="line">            &#123;&#123;confirmText&#125;&#125;</span><br><span class="line">          &lt;/m-button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/transition&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">//fade动画</span><br><span class="line">.fade-enter-active,</span><br><span class="line">.fade-leave-active &#123;</span><br><span class="line">  transition: all 0.5s;</span><br><span class="line">&#125;</span><br><span class="line">//准备进入，离开完成</span><br><span class="line">.fade-enter-from,</span><br><span class="line">.fade-enter-to &#123;</span><br><span class="line">  opacity: 0;</span><br><span class="line">&#125;</span><br><span class="line">//up动画</span><br><span class="line">.up-enter-active,</span><br><span class="line">.up-leave-active &#123;</span><br><span class="line">  transition: all 0.5s;</span><br><span class="line">&#125;</span><br><span class="line">//准备进入，离开完成</span><br><span class="line">.up-enter-from,</span><br><span class="line">.up-enter-to &#123;</span><br><span class="line">  opacity: 0;</span><br><span class="line">  transform: translate3d(-50%, 100px, 0);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>创建展示控制方法，因为需要保留执行动画，所以我们在mounted时，让内容展示：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//控制显示处理</span></span><br><span class="line"><span class="keyword">const</span> isVisable = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * confirm展示</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">show</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  isVisable.<span class="property">value</span>=<span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 处理动画（render 函数的宣染，会直接进行）页面构建完成之后，执行。保留动画</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="title function_">show</span>()</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="5"><li>处理关闭控制方法，同样因为动画需要展示，所以我们需要预留动画执行时间：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//关闭动画执行时间</span></span><br><span class="line"><span class="keyword">const</span> duration = <span class="string">&#x27;0.5s&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 关闭事件，保留动画执行时长</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">close</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">  isVisable.<span class="property">value</span>=<span class="literal">false</span></span><br><span class="line">  <span class="comment">//延迟一段时间进行关闭，等待动画完全关闭之后，再去触发props.close()</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (props.<span class="property">close</span>)&#123;</span><br><span class="line">      props.<span class="title function_">close</span>()</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,<span class="built_in">parseInt</span>(duration.<span class="title function_">replace</span>(<span class="string">&#x27;0.&#x27;</span>,<span class="string">&#x27;&#x27;</span>).<span class="title function_">replace</span>(<span class="string">&#x27;s&#x27;</span>,<span class="string">&#x27;&#x27;</span>)*<span class="number">100</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>利用<strong>状态驱动css概念</strong>绑定响应式数据到css中：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=<span class="string">&quot;scss&quot;</span> scoped&gt;</span><br><span class="line"><span class="comment">//fade动画</span></span><br><span class="line">.<span class="property">fade</span>-enter-active,</span><br><span class="line">.<span class="property">fade</span>-leave-active &#123;</span><br><span class="line">  <span class="attr">transition</span>: all v-<span class="title function_">bind</span>(duration);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//准备进入，离开完成</span></span><br><span class="line">.<span class="property">fade</span>-enter-<span class="keyword">from</span>,</span><br><span class="line">.<span class="property">fade</span>-enter-to &#123;</span><br><span class="line">  <span class="attr">opacity</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//up动画</span></span><br><span class="line">.<span class="property">up</span>-enter-active,</span><br><span class="line">.<span class="property">up</span>-leave-active &#123;</span><br><span class="line">  <span class="attr">transition</span>: all v-<span class="title function_">bind</span>(duration);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//准备进入，离开完成</span></span><br><span class="line">.<span class="property">up</span>-enter-<span class="keyword">from</span>,</span><br><span class="line">.<span class="property">up</span>-enter-to &#123;</span><br><span class="line">  <span class="attr">opacity</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attr">transform</span>: <span class="title function_">translate3d</span>(-<span class="number">50</span>%, 100px, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="7"><li>取消和点击事件</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 取消按钮点击事件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onCancelClick</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="keyword">if</span> (props.<span class="property">cancelHandler</span>)&#123;</span><br><span class="line">    props.<span class="title function_">cancelHandler</span>()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">close</span>()</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 确定按钮点击事件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onConfirmClick</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="keyword">if</span> (props.<span class="property">confirmHandler</span>)&#123;</span><br><span class="line">    props.<span class="title function_">confirmHandler</span>()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="title function_">close</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-12-通用组件：函数调用confirm组件"><a href="#10-12-通用组件：函数调用confirm组件" class="headerlink" title="10-12 通用组件：函数调用confirm组件"></a>10-12 通用组件：函数调用confirm组件</h2><ol><li>我们创建一个函数，通过这个函数来调用confirm进行展示，创建lib&#x2F;confirm&#x2F;index.js</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> confirmComponent <span class="keyword">from</span> <span class="string">&#x27;./index.vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; h &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 展示confirm，用户只传递一个参数，那么这个参数为content</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> title 标题（如果用户没有传递内容，那么标题被作为内容）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> content 内容（如果没有 title，那么content会被作为第一个参数传入）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> cancelText 取消按钮文本</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> confirmText 确定按钮的文本</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">confirm</span>=(<span class="params">title,content,cancelText,</span></span><br><span class="line"><span class="params">confirmText</span>)=&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function">(<span class="params">resolve,reject</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (title&amp;&amp;content)&#123;</span><br><span class="line">      content = title</span><br><span class="line">      title = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭回调</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">close</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">      <span class="comment">//3.把渲染的vnode去掉</span></span><br><span class="line">      <span class="title function_">render</span>(<span class="literal">null</span>,<span class="variable language_">document</span>.<span class="property">body</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取消按钮的回调</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">cancelHandler</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">      <span class="title function_">reject</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&#x27;取消按钮点击&#x27;</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 确定按钮的回调</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">const</span> <span class="title function_">confirmHandler</span> =(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">      <span class="title function_">resolve</span>()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.生成vnode</span></span><br><span class="line">    <span class="keyword">const</span> vnode = <span class="title function_">h</span>(confirmComponent,&#123;</span><br><span class="line">      title,</span><br><span class="line">      content,</span><br><span class="line">      cancelText,</span><br><span class="line">      confirmText,</span><br><span class="line">      cancelHandler,</span><br><span class="line">      confirmHandler,</span><br><span class="line">      close</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="comment">//2.render渲染</span></span><br><span class="line">    <span class="title function_">render</span>(vnode,<span class="variable language_">document</span>.<span class="property">body</span>)</span><br><span class="line"></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>我们在lib&#x2F;index.js中导入并导出</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> &#123;confirm&#125; <span class="keyword">from</span> <span class="string">&#x27;./confirm/index&#x27;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>然后我们在header&#x2F;header-search&#x2F;history.vue中触发confirm</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;confirm&#125; <span class="keyword">from</span> <span class="string">&#x27;@/lib&#x27;</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除全部</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onDeleteAllClick</span> =(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="title function_">confirm</span>(<span class="string">&#x27;标题&#x27;</span>,<span class="string">&#x27;你要删除所有记录吗？&#x27;</span>,<span class="string">&#x27;不删了&#x27;</span>,<span class="string">&#x27;删了&#x27;</span>)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">      store.<span class="title function_">commit</span>(<span class="string">&#x27;search/deleteAllHistory&#x27;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;点击了取消&#x27;</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>因为我们是方法导出，所以在lib&#x2F;button&#x2F;index.vue中我们需要引入组件</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> mSvgIcon <span class="keyword">from</span> <span class="string">&#x27;../svg-icon/index.vue&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="10-13-searchBar：热门精选模块构建"><a href="#10-13-searchBar：热门精选模块构建" class="headerlink" title="10-13 searchBar：热门精选模块构建"></a>10-13 searchBar：热门精选模块构建</h2><ol><li>我们先在api&#x2F;pexeis.js中定义获取主题接口</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取推荐主题</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getThemes</span> = (<span class="params"></span>) =&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">&#x27;/pexels/themes&#x27;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>创建对应组件header&#x2F;header-search&#x2F;theme.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div&gt;</span><br><span class="line">    &lt;div class=&quot;text-xs mb-1 text-zinc-400&quot;&gt;热门精选&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;flex h-[140px]&quot; v-if=&quot;themeData.list.length&quot;&gt;</span><br><span class="line">      &lt;!--大图--&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class=&quot;relative rounded w-[260px] cursor-pointer&quot;</span><br><span class="line">        :style=&quot;&#123;</span><br><span class="line">          backgroundColor: randomRGB()</span><br><span class="line">        &#125;&quot;</span><br><span class="line">      &gt;</span><br><span class="line">        &lt;img</span><br><span class="line">          v-lazy</span><br><span class="line">          class=&quot;h-full w-full object-cover rounded&quot;</span><br><span class="line">          src=&quot;themeData.big.photo&quot;</span><br><span class="line">          alt=&quot;&quot;</span><br><span class="line">        /&gt;</span><br><span class="line">        &lt;p</span><br><span class="line">          class=&quot;absolute bottom-0 left-0 w-full h-[45%] flex items-center backdrop-blur rounded px-1 text-white text-xs duration-300 hover:backdrop-blur-none&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          #&#123;&#123; themeData.big.title &#125;&#125;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;!--小图--&gt;</span><br><span class="line">      &lt;div class=&quot;flex flex-wrap flex-1 max-w-[860px]&quot;&gt;</span><br><span class="line">        &lt;div</span><br><span class="line">          v-for=&quot;item in themeData.list&quot;</span><br><span class="line">          :key=&quot;item.id&quot;</span><br><span class="line">          class=&quot;h-[45%] w-[260px] text-white text-xs relative ml-1.5 mb-1.5 rounded&quot;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;img</span><br><span class="line">            v-lazy</span><br><span class="line">            class=&quot;w-full h-full object-cover rounded&quot;</span><br><span class="line">            :src=&quot;item.photo&quot;</span><br><span class="line">            alt=&quot;&quot;</span><br><span class="line">          /&gt;</span><br><span class="line">          &lt;p</span><br><span class="line">            class=&quot;backdrop-blur absolute top-0 left-0 w-full h-full flex items-center px-1 rounded cursor-pointer duration-300 hover:backdrop-blur-none&quot;</span><br><span class="line">          &gt;</span><br><span class="line">            #&#123;&#123; item.title &#125;&#125;</span><br><span class="line">          &lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; getThemes &#125; from &#x27;@/api/pexeis&#x27;</span><br><span class="line">import &#123; randomRGB &#125; from &#x27;@/utils/color&#x27;</span><br><span class="line">import &#123; ref &#125; from &#x27;vue&#x27;</span><br><span class="line">const themeData = ref(&#123;</span><br><span class="line">  big: &#123;&#125;,</span><br><span class="line">  list: []</span><br><span class="line">&#125;)</span><br><span class="line">const getThemeDate = async () =&gt; &#123;</span><br><span class="line">  const &#123; themes &#125; = await getThemes()</span><br><span class="line">  themeData.value = &#123;</span><br><span class="line">    big: themes[0],</span><br><span class="line">    list: themes.splice(1, themes.length)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">getThemeDate()</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;&lt;/style&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ol start="3"><li>将上面的组件渲染到header&#x2F;header-search&#x2F;index.vue里，在最近搜索后使用</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> themeVue <span class="keyword">from</span> <span class="string">&#x27;./theme.vue&#x27;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--最近搜索--&gt;</span><br><span class="line">        &lt;history-vue</span><br><span class="line">          v-show=&quot;!inputValue&quot;</span><br><span class="line">          @itemClick=&quot;onSearchHandler&quot;</span><br><span class="line">        &gt;&lt;/history-vue&gt;</span><br><span class="line">        &lt;!--推荐主题--&gt;</span><br><span class="line">        &lt;theme-vue v-show=&#x27;!inputValue&#x27;&gt;&lt;/theme-vue&gt;</span><br></pre></td></tr></table></figure><h2 id="10-14-searchBar-联动-list"><a href="#10-14-searchBar-联动-list" class="headerlink" title="10-14 searchBar 联动 list-"></a>10-14 searchBar 联动 list-</h2><ol><li>首先在store&#x2F;modules&#x2F;app.js中增加代码</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * app模块中的数据不会被缓存</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="comment">//独立作用域</span></span><br><span class="line">  <span class="attr">namespaced</span>:<span class="literal">true</span>,</span><br><span class="line">  <span class="attr">state</span>:<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">      <span class="comment">//搜索的文本</span></span><br><span class="line">      <span class="attr">searchText</span>:<span class="string">&#x27;&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">mutations</span>:&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 修改searchText</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">changeSearchText</span>(<span class="params">state,newSearchText</span>)&#123;</span><br><span class="line">      state.<span class="property">searchText</span>=newSearchText</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">actions</span>:&#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在store&#x2F;getters.js增加直接访问代码</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 搜索文本</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="attr">searchText</span>:<span class="function">(<span class="params">state</span>)=&gt;</span>state.<span class="property">app</span>.<span class="property">searchText</span></span><br></pre></td></tr></table></figure><ol start="3"><li>在layout&#x2F;components&#x2F;header&#x2F;header-search&#x2F;index.vue中搜索回调时调用changeSearchText</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 搜索回调</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onSearchHandler</span> = (<span class="params">val</span>) =&gt; &#123;</span><br><span class="line">  inputValue.<span class="property">value</span> = val</span><br><span class="line">  <span class="keyword">if</span> (val) &#123;</span><br><span class="line">    store.<span class="title function_">commit</span>(<span class="string">&#x27;search/addHistory&#x27;</span>, val)</span><br><span class="line">      <span class="comment">//以下新增</span></span><br><span class="line">    store.<span class="title function_">commit</span>(<span class="string">&#x27;search/changeSearchText&#x27;</span>, val)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>最后在main&#x2F;components&#x2F;index.vue中监听searchText的变化</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听searchText的变化</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_">watch</span>(</span><br><span class="line">  <span class="function">()=&gt;</span>store.<span class="property">getters</span>.<span class="property">searchText</span>,</span><br><span class="line">  <span class="function">(<span class="params">val</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="title function_">resetQuery</span>(&#123;</span><br><span class="line">      <span class="attr">page</span>:<span class="number">1</span>,</span><br><span class="line">      <span class="attr">searchText</span>:val</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="10-15-总结"><a href="#10-15-总结" class="headerlink" title="10-15 总结"></a>10-15 总结</h2><p>那么本章节我们的核心实际上包含了两部分内容：</p><ol><li>多组件联动逻辑</li><li>confirm通用组件<ol><li>vnode</li><li>h函数</li><li>render 函数</li></ol></li></ol><h1 id="11-、前台常见功能解决方案：下载-全屏-引导"><a href="#11-、前台常见功能解决方案：下载-全屏-引导" class="headerlink" title="11 、前台常见功能解决方案：下载+全屏+引导"></a>11 、前台常见功能解决方案：下载+全屏+引导</h1><p>在前台项目中，我们会存在很多的常见功能，这些功能通常情况下是偏通用的，比如：文件下载、全屏处理、功能引导 等等… 那么这些功能如何进行实现呢？</p><hr><h2 id="11-1-文件下载解决方案"><a href="#11-1-文件下载解决方案" class="headerlink" title="11-1 文件下载解决方案"></a>11-1 文件下载解决方案</h2><p>当我们点击 item中的下载按钮时，我们期望可以下载当前的图片。</p><p>那么想要实现该功能，则需要使用到专门的下载包。</p><p>目前常用的支持下载功能包有两个：</p><ol><li>小文件下载：file-saver</li><li>大文件下载：streamsaver</li></ol><p>咱们的图片下载属于小文件的下载，所以我们可以直接使用file-saver</p><ol><li>安装 file-saver</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save file-saver@2.0.5</span><br></pre></td></tr></table></figure><ol start="2"><li>在src&#x2F;views&#x2F;main&#x2F;components&#x2F;list&#x2F;item.vue中，增加下载功能： 下载处增加一个点击事件，然后使用saveAs</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--      下载--&gt;</span><br><span class="line">&lt;m-button</span><br><span class="line">  @click=&#x27;onDownload&#x27;</span><br><span class="line">&gt;&lt;/m-button&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;saveAs&#125; <span class="keyword">from</span> <span class="string">&#x27;file-saver&#x27;</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 下载按钮点击事件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onDownload</span> =(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 1.下载的图片连接</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="title function_">saveAs</span>(props.<span class="property">data</span>.<span class="property">photoDownLink</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-2-通用组件：方法触发的message构建分析"><a href="#11-2-通用组件：方法触发的message构建分析" class="headerlink" title="11-2 通用组件：方法触发的message构建分析"></a>11-2 通用组件：方法触发的message构建分析</h2><p>在之前的时候，我们构建过一个confirm的通用组件，该组件我们可以直接通过 方法进行调用展示</p><p>那么对于咱们接下来打算构建的 message 组件，同样如此，我们依然希望可以通过方法的调用直接展示对应的组件。</p><p>那么根据我们之前的经验，我们知道：</p><ol><li>首先我们需要先构建出一个对应的 message.vue</li><li>然后构建出对应的message.js模块</li><li>在模块中，通过：<ol><li>‘h函数’构建vnode</li><li>render 函数，进行渲染</li></ol></li></ol><p>进行处理</p><p>那么以上方式，就是是咱们message的构建过程。</p><h2 id="11-3-通用组件：构建message组件基本能力"><a href="#11-3-通用组件：构建message组件基本能力" class="headerlink" title="11-3 通用组件：构建message组件基本能力"></a>11-3 通用组件：构建message组件基本能力</h2><ol><li>创建 src&#x2F;libs&#x2F;message&#x2F;index.vue 组件：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">SUCCESS</span> = <span class="string">&#x27;success&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">WARN</span> = <span class="string">&#x27;warn&#x27;</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">ERROR</span> = <span class="string">&#x27;error&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> typeEnum = [<span class="variable constant_">SUCCESS</span>,<span class="variable constant_">WARN</span>,<span class="variable constant_">ERROR</span>]</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"><span class="keyword">const</span> props =<span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * message的消息类型</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">type</span>:&#123;</span><br><span class="line">    <span class="attr">type</span>:<span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">required</span>:<span class="literal">true</span>,</span><br><span class="line">    <span class="title function_">validator</span>(<span class="params">val</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> result = typeEnum.<span class="title function_">includes</span>(val)</span><br><span class="line">      <span class="keyword">if</span> (!result)&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`你的type必须是<span class="subst">$&#123;typeEnum.join(<span class="string">&#x27;、&#x27;</span>)&#125;</span>中的一个`</span>)</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> result</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 描述文本</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">content</span>:&#123;</span><br><span class="line">    <span class="attr">type</span>:<span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">required</span>:<span class="literal">true</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 展示时长</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">duration</span>:&#123;</span><br><span class="line">    <span class="attr">type</span>:<span class="title class_">Number</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 关闭时的回调</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="attr">destroy</span>:&#123;</span><br><span class="line">    <span class="attr">type</span>:<span class="title class_">Function</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li>构建各种状态下的样式表：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//样式表数据</span></span><br><span class="line"><span class="keyword">const</span> styles=&#123;</span><br><span class="line">  <span class="comment">//警告</span></span><br><span class="line">  <span class="attr">warn</span>:&#123;</span><br><span class="line">    <span class="attr">icon</span>:<span class="string">&#x27;warn&#x27;</span>,</span><br><span class="line">    <span class="attr">fillClass</span>:<span class="string">&#x27;fill-warn-300&#x27;</span>,</span><br><span class="line">    <span class="attr">textClass</span>:<span class="string">&#x27;text-warn-300&#x27;</span>,</span><br><span class="line">    <span class="attr">containerClass</span>:</span><br><span class="line">      <span class="string">&#x27;bg-warn-100 border-warn-200 hover:shadow-lg hover:shadow-warn-100&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//错误</span></span><br><span class="line">  <span class="attr">error</span>:&#123;</span><br><span class="line">    <span class="attr">icon</span>:<span class="string">&#x27;error&#x27;</span>,</span><br><span class="line">    <span class="attr">fillClass</span>:<span class="string">&#x27;fill-error-300&#x27;</span>,</span><br><span class="line">    <span class="attr">textClass</span>:<span class="string">&#x27;text-error-300&#x27;</span>,</span><br><span class="line">    <span class="attr">containerClass</span>:</span><br><span class="line">      <span class="string">&#x27;bg-error-100 border-error-200 hover:shadow-lg hover:shadow-error-100&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="comment">//成功</span></span><br><span class="line">  <span class="attr">success</span>:&#123;</span><br><span class="line">    <span class="attr">icon</span>:<span class="string">&#x27;success&#x27;</span>,</span><br><span class="line">    <span class="attr">fillClass</span>:<span class="string">&#x27;fill-success-300&#x27;</span>,</span><br><span class="line">    <span class="attr">textClass</span>:<span class="string">&#x27;text-success-300&#x27;</span>,</span><br><span class="line">    <span class="attr">containerClass</span>:</span><br><span class="line">      <span class="string">&#x27;bg-success-100 border-success-200 hover:shadow-lg hover:shadow-success-100&#x27;</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>配合样式表，构建template</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;transition name=&#x27;down&#x27; @after-leave=&#x27;destroy&#x27;&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      v-show=&#x27;isVisable&#x27;</span><br><span class="line">      class=&#x27;min-w-[420px] fixed top-[20px] left-[50%] translate-x-[-50%] z-50</span><br><span class="line">      flex items-center px-3 py-1.5 rounded-sm border cursor-pointer&#x27;</span><br><span class="line">      :class=&#x27;styles[type].containerClass&#x27;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;m-svg-icon</span><br><span class="line">        :name=&#x27;styles[type].icon&#x27;</span><br><span class="line">        :fillClass=&#x27;styles[type].fillClass&#x27;</span><br><span class="line">        class=&#x27;h-1.5 w-1.5 mr-1.5&#x27;</span><br><span class="line">      &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">      &lt;span class=&#x27;text-sm&#x27; :class=&#x27;styles[type].textClass&#x27;&gt;</span><br><span class="line">        &#123;&#123;content&#125;&#125;</span><br><span class="line">      &lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/transition&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import mSvgIcon from &#x27;../svg-icon/index.vue&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line">.down-enter-active,</span><br><span class="line">.down-leave-active&#123;</span><br><span class="line">  transition: all 0.5s;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.down-enter-from,</span><br><span class="line">.down-leave-to&#123;</span><br><span class="line">  opacity: 0;</span><br><span class="line">  transform: translate3d(-50%,-100px,0);</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li>处理展示逻辑</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> isVisable = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="keyword">const</span> animDuration = <span class="string">&#x27;0.5s&#x27;</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 保证动画展示，需要在mounted 之后进行展示</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  isVisable.<span class="property">value</span>=<span class="literal">true</span></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 延迟时间关闭</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    isVisable.<span class="property">value</span>=<span class="literal">false</span></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">      <span class="keyword">if</span> (props.<span class="property">destroy</span>)&#123;</span><br><span class="line">        props.<span class="title function_">destroy</span>()</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,<span class="built_in">parseInt</span>(animDuration.<span class="title function_">replace</span>(<span class="string">&#x27;0.&#x27;</span>,<span class="string">&#x27;&#x27;</span>).<span class="title function_">replace</span>(<span class="string">&#x27;s&#x27;</span>,<span class="string">&#x27;&#x27;</span>)*<span class="number">100</span>))</span><br><span class="line">  &#125;,props.<span class="property">duration</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="5"><li>新增tailwind的自定义样式</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">colors</span>:&#123;</span><br><span class="line">  <span class="string">&#x27;success-100&#x27;</span>:<span class="string">&#x27;#F2F9EC&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;success-200&#x27;</span>:<span class="string">&#x27;#E4F2DB&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;success-300&#x27;</span>:<span class="string">&#x27;#7EC050&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;warn-100&#x27;</span>:<span class="string">&#x27;#FCF6ED&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;warn-200&#x27;</span>:<span class="string">&#x27;#F8ECDA&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;warn-300&#x27;</span>:<span class="string">&#x27;#DCA550&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;error-100&#x27;</span>:<span class="string">&#x27;#ED7456&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;error-200&#x27;</span>:<span class="string">&#x27;#f3471c&#x27;</span>,</span><br><span class="line">  <span class="string">&#x27;error-300&#x27;</span>:<span class="string">&#x27;#ffffff&#x27;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-4-通用组件：方法触发-message-展示"><a href="#11-4-通用组件：方法触发-message-展示" class="headerlink" title="11-4 通用组件：方法触发 message 展示"></a>11-4 通用组件：方法触发 message 展示</h2><ol><li>创建 src&#x2F;libs&#x2F;message&#x2F;index.js方法：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;h , render&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> messageComponent <span class="keyword">from</span> <span class="string">&#x27;./index.vue&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> type 类型:success、warn、error</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> content 描述文本</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> duration 展示时间（毫秒），默认3000</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">message</span> = (<span class="params">type,content,duration = <span class="number">3000</span></span>)=&gt;&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 动画结束时的回调</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">onDestory</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">    <span class="comment">//3.删除render</span></span><br><span class="line">    <span class="title function_">render</span>(<span class="literal">null</span>,<span class="variable language_">document</span>.<span class="property">body</span>)</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//1.拿到vnode</span></span><br><span class="line">  <span class="keyword">const</span> vnode = <span class="title function_">h</span>(messageComponent,&#123;</span><br><span class="line">    type,</span><br><span class="line">    content,</span><br><span class="line">    duration,</span><br><span class="line">    <span class="attr">destory</span>:<span class="title function_">onDestory</span>()</span><br><span class="line">  &#125;)</span><br><span class="line">  <span class="comment">//2.render vonde</span></span><br><span class="line">  <span class="title function_">render</span>(vnode,<span class="variable language_">document</span>.<span class="property">body</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>紧接着我们再lib&#x2F;index.js中将message方法导出</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> &#123;message&#125; <span class="keyword">from</span> <span class="string">&#x27;./message/index&#x27;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>我们再main&#x2F;components&#x2F;list&#x2F;item.vue中使用该方法</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123;message&#125; <span class="keyword">from</span> <span class="string">&#x27;@/lib&#x27;</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 下载按钮点击事件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onDownload</span> =(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="title function_">message</span>(<span class="string">&#x27;success&#x27;</span>,<span class="string">&#x27;图片开始下载&#x27;</span>)</span><br><span class="line">  <span class="comment">//延迟一段时间执行，可以得到更好的体验</span></span><br><span class="line">  <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 1.下载的图片连接</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="title function_">saveAs</span>(props.<span class="property">data</span>.<span class="property">photoDownLink</span>)</span><br><span class="line">  &#125;)</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-5-模块全屏解决方案"><a href="#11-5-模块全屏解决方案" class="headerlink" title="11-5 模块全屏解决方案"></a>11-5 模块全屏解决方案</h2><p>让页面中的指定区域进行全屏展示也是非常常见的一个功能。</p><p>想要让页面的指定区域进行全屏展示，我们通常可以使用全屏API，该API中提供了两个方法：</p><p>1.<strong>Element，requestFullscreen（）</strong>：让指定元素进行全屏</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;app&#x27;</span>).<span class="title function_">requestFullscreen</span>()</span><br></pre></td></tr></table></figure><p>2.<strong>Document.exitFullscreen（）</strong>：退出全屏</p><p>但是这个API 比较原始，使用起来没有那么方便，所以我们可以使用一个vueuse 中的更加简便的API：<strong>useFullScreen</strong></p><ol><li>利用useFullScreen生成img图片的全屏方法：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 生成全屏的方法</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> imgTarget = <span class="title function_">ref</span>(<span class="literal">null</span>)</span><br><span class="line"><span class="keyword">const</span> &#123;<span class="attr">enter</span>:onImgFullScreen&#125; = <span class="title function_">useFullscreen</span>(imgTarget)</span><br></pre></td></tr></table></figure><ol start="2"><li>将图片绑上标签，并onImgFullScreen绑定至全屏按钮点击事件：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> &lt;!--    图片--&gt;</span><br><span class="line">      &lt;img</span><br><span class="line">        ref=&#x27;imgTarget&#x27;</span><br><span class="line">      /&gt;</span><br><span class="line">&lt;!--      全屏--&gt;</span><br><span class="line">&lt;m-button</span><br><span class="line">  @click=&#x27;onImgFullScreen&#x27;</span><br><span class="line">&gt;&lt;/m-button&gt;</span><br></pre></td></tr></table></figure><h2 id="11-6-构建floating基础布局"><a href="#11-6-构建floating基础布局" class="headerlink" title="11-6 构建floating基础布局"></a>11-6 构建floating基础布局</h2><ol><li>增加floating，修改layout&#x2F;components&#x2F;floating.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&#x27;fixed bottom-10 right-2&#x27;&gt;</span><br><span class="line">&lt;!--    引导页--&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      class=&#x27;w-4 h-4 mb-1 bg-white dark:bg-zinc-900 border dark:border-0</span><br><span class="line">      border-zinc-200 rounded-full flex justify-center items-center</span><br><span class="line">      cursor-pointer duration-200 group hover:shadow-lg&#x27;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;m-svg-icon</span><br><span class="line">        name=&#x27;guide&#x27;</span><br><span class="line">        class=&#x27;w-2 h-2&#x27;</span><br><span class="line">        fillClass=&#x27;fill-zinc-900 dark:fill-zinc-200 group-hover:fill-main&#x27;</span><br><span class="line">      &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;!--    反馈--&gt;</span><br><span class="line">    &lt;m-popover class=&#x27;flex items-center&#x27; placement=&#x27;top-left&#x27;&gt;</span><br><span class="line">      &lt;template #reference&gt;</span><br><span class="line">        &lt;div</span><br><span class="line">          class=&#x27;w-4 h-4 mb-1 bg-white dark:bg-zinc-900 border dark:border-0</span><br><span class="line">      border-zinc-200 rounded-full flex justify-center items-center</span><br><span class="line">      cursor-pointer duration-200 group hover:shadow-lg&#x27;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;m-svg-icon</span><br><span class="line">            name=&#x27;feedback&#x27;</span><br><span class="line">            class=&#x27;w-2 h-2&#x27;</span><br><span class="line">            fillClass=&#x27;fill-zinc-900 dark:fill-zinc-200 group-hover:fill-main&#x27;</span><br><span class="line">          &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line"></span><br><span class="line">      &lt;div class=&#x27;w-[140px] overflow-hidden&#x27;&gt;</span><br><span class="line">        &lt;div</span><br><span class="line">          class=&#x27;flex items-center p-1 cursor-pointer rounded</span><br><span class="line">          hover:bg-zinc-100/60 dark:hover:bg-zinc-800&#x27;</span><br><span class="line">        &gt;</span><br><span class="line">          &lt;m-svg-icon</span><br><span class="line">            name=&#x27;feedback&#x27;</span><br><span class="line">            class=&#x27;w-1.5 h-1.5 mr-1&#x27;</span><br><span class="line">            fillClass=&#x27;fill-zinc-900 dark:fill-zinc-300&#x27;</span><br><span class="line">          &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">          &lt;span class=&#x27;text-zinc-800 dark:text-zinc-300 text-sm&#x27;&gt;立即吐槽&lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &lt;/m-popover&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style lang=&#x27;scss&#x27; scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="11-7-样式修正：处理难看的scrollBar"><a href="#11-7-样式修正：处理难看的scrollBar" class="headerlink" title="11-7 样式修正：处理难看的scrollBar"></a>11-7 样式修正：处理难看的scrollBar</h2><p>目前咱们的floating的样式已经构建完成了。只不过旁边的scrollBar 看着是在是有点难看。</p><p>所以咱们接下来就需要修正下这个scrollBar的样式。</p><p>对于tailwind而言，默认并没有提供scrollBar的样式类名，想要处理scrollBar的样式，那么需要安装单独的插件：tailwind-scrollbar</p><ol><li>安装插件</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save-dev tailwind-scrollbar</span><br></pre></td></tr></table></figure><ol start="2"><li>在tailwind.config.js中注册该插件：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">plugins</span>: [<span class="built_in">require</span>(<span class="string">&#x27;tailwind-scrollbar&#x27;</span>)],</span><br></pre></td></tr></table></figure><ol start="3"><li>在tailwind.config.js 中，让 scrollBar 支持 dark 模式：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme</span>: &#123;</span><br><span class="line">  <span class="attr">extend</span>: &#123;</span><br><span class="line">   ........</span><br><span class="line">    <span class="attr">variants</span>:&#123;</span><br><span class="line">      <span class="attr">scrollbars</span>:[<span class="string">&#x27;dark&#x27;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><ol start="4"><li>我们再main&#x2F;index.vue中进行使用</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div </span><br><span class="line">    class=&#x27;h-full overflow-auto bg-white dark:bg-zinc-800 duration-500</span><br><span class="line">    scrollbar-thin scrollbar-thumb-transparent xl:scrollbar-thumb-zinc-200</span><br><span class="line">    xl:dark:scrollbar-thumb-zinc-900 scrollbar-track-transparent&#x27;&gt;</span><br><span class="line">  &lt;navigation-vue/&gt;</span><br><span class="line">  &lt;div class=&#x27;max-w-screen-xl mx-auto relative m-1 xl:mt-4&#x27;&gt;</span><br><span class="line">    &lt;list-vue&gt;&lt;/list-vue&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><ol start="5"><li>如果我们想让右边的scrollBar有圆弧，那么我们再styles&#x2F;index.scss中新增</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">::-webkit-scrollbar-thumb&#123;</span><br><span class="line">  border-<span class="attr">radius</span>: 10px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="6"><li>同样的搜索记录那里也要处理，修改lib&#x2F;search&#x2F;index.vue里面的下拉区部分</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--下拉区--&gt;</span><br><span class="line">&lt;transition name=&#x27;slide&#x27;&gt;</span><br><span class="line">  &lt;div</span><br><span class="line">    class=&#x27;max-h-[368px] w-full text-base overflow-auto bg-white</span><br><span class="line">    dark:bg-zinc-800 absolute z-20 left-0 top-[56px] p-2 rounded border</span><br><span class="line">    border-zinc-200 dark:border-zinc-600 duration-200 hover:shadow-2xl</span><br><span class="line">    scrollbar-thin scrollbar-thumb-transparent xl:scrollbar-thumb-zinc-200</span><br><span class="line">    xl:dark:scrollbar-thumb-zinc-900 scrollbar-track-transparent&#x27;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;slot name=&#x27;dropdown&#x27;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/transition&gt;</span><br></pre></td></tr></table></figure><h2 id="11-8-功能引导解决方案"><a href="#11-8-功能引导解决方案" class="headerlink" title="11-8 功能引导解决方案"></a>11-8 功能引导解决方案</h2><ol><li>在这里我们使用driver.js</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install driver. js</span><br></pre></td></tr></table></figure><ol start="2"><li>在floating.vue中初始化Driver</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="comment">//1.导入</span></span><br><span class="line"><span class="keyword">import</span> <span class="title class_">Driver</span> <span class="keyword">from</span> <span class="string">&#x27;driver.js&#x27;</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&#x27;driver.js/dist/driver.min.css&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;onMounted&#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="comment">//2.初始化</span></span><br><span class="line"><span class="keyword">let</span> driver =<span class="literal">null</span></span><br><span class="line"><span class="title function_">onMounted</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  driver = <span class="keyword">new</span> <span class="title class_">Driver</span>(&#123;</span><br><span class="line">    <span class="attr">allowClose</span>:<span class="literal">false</span>,</span><br><span class="line">    <span class="attr">closeBtnText</span>:<span class="string">&#x27;关闭&#x27;</span>,</span><br><span class="line">    <span class="attr">nextBtnText</span>:<span class="string">&#x27;下一步&#x27;</span>,</span><br><span class="line">    <span class="attr">prevBtnText</span>:<span class="string">&#x27;上一步&#x27;</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol start="3"><li>我们在layout&#x2F;components&#x2F;steps.js中创建自己的步骤</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//在哪个元素中高亮</span></span><br><span class="line">    <span class="attr">element</span>: <span class="string">&#x27;.guide-home&#x27;</span>,</span><br><span class="line">    <span class="comment">//配置对象</span></span><br><span class="line">    <span class="attr">popover</span>: &#123;</span><br><span class="line">      <span class="attr">title</span>: <span class="string">&#x27;logo&#x27;</span>,</span><br><span class="line">      <span class="attr">description</span>: <span class="string">&#x27;点击可以返回首页&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//在哪个元素中高亮</span></span><br><span class="line">    <span class="attr">element</span>:<span class="string">&#x27;.guide-search&#x27;</span>,</span><br><span class="line">    <span class="comment">//配置对象</span></span><br><span class="line">    <span class="attr">popover</span>:&#123;</span><br><span class="line">      <span class="attr">title</span>:<span class="string">&#x27;搜索&#x27;</span>,</span><br><span class="line">      <span class="attr">description</span>:<span class="string">&#x27;搜索你期望的图片&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//在哪个元素中高亮</span></span><br><span class="line">    <span class="attr">element</span>:<span class="string">&#x27;.guide-theme&#x27;</span>,</span><br><span class="line">    <span class="comment">//配置对象</span></span><br><span class="line">    <span class="attr">popover</span>:&#123;</span><br><span class="line">      <span class="attr">title</span>:<span class="string">&#x27;风格&#x27;</span>,</span><br><span class="line">      <span class="attr">description</span>:<span class="string">&#x27;选择一个您喜欢的风格&#x27;</span>,</span><br><span class="line">      <span class="attr">position</span>:<span class="string">&#x27;left&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//在哪个元素中高亮</span></span><br><span class="line">    <span class="attr">element</span>:<span class="string">&#x27;.guide-my&#x27;</span>,</span><br><span class="line">    <span class="comment">//配置对象</span></span><br><span class="line">    <span class="attr">popover</span>:&#123;</span><br><span class="line">      <span class="attr">title</span>:<span class="string">&#x27;账户&#x27;</span>,</span><br><span class="line">      <span class="attr">description</span>:<span class="string">&#x27;这里标记了您的账户信息&#x27;</span>,</span><br><span class="line">      <span class="attr">position</span>:<span class="string">&#x27;left&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//在哪个元素中高亮</span></span><br><span class="line">    <span class="attr">element</span>:<span class="string">&#x27;.guide-start&#x27;</span>,</span><br><span class="line">    <span class="comment">//配置对象</span></span><br><span class="line">    <span class="attr">popover</span>:&#123;</span><br><span class="line">      <span class="attr">title</span>:<span class="string">&#x27;引导&#x27;</span>,</span><br><span class="line">      <span class="attr">description</span>:<span class="string">&#x27;这里可以再次查看引导信息&#x27;</span>,</span><br><span class="line">      <span class="attr">position</span>:<span class="string">&#x27;left&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="comment">//在哪个元素中高亮</span></span><br><span class="line">    <span class="attr">element</span>:<span class="string">&#x27;.guide-feedback&#x27;</span>,</span><br><span class="line">    <span class="comment">//配置对象</span></span><br><span class="line">    <span class="attr">popover</span>:&#123;</span><br><span class="line">      <span class="attr">title</span>:<span class="string">&#x27;反馈&#x27;</span>,</span><br><span class="line">      <span class="attr">description</span>:<span class="string">&#x27;您的任何不满都可以在这里告诉我们&#x27;</span>,</span><br><span class="line">      <span class="attr">position</span>:<span class="string">&#x27;left&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><ol start="4"><li>我们在floating.vue中导入该步骤，并在引导页增加点击事件</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> steps <span class="keyword">from</span> <span class="string">&#x27;./steps.js&#x27;</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 开始引导</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onGuideClick</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="comment">//指定引导步骤</span></span><br><span class="line">  driver.<span class="title function_">defineSteps</span>(steps)</span><br><span class="line">  <span class="comment">//开始</span></span><br><span class="line">  driver.<span class="title function_">start</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--    引导页--&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      @click=&#x27;onGuideClick&#x27;</span><br><span class="line">    &gt;</span><br><span class="line">    &lt;/div&gt;</span><br></pre></td></tr></table></figure><ol start="5"><li>我们需要给需要引导的元素添加标签，就是步骤里面的element，layout&#x2F;components&#x2F;header&#x2F;index.vue、layout&#x2F;components&#x2F;header&#x2F;header-search&#x2F;index.vue等等</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;img</span><br><span class="line">  v-lazy</span><br><span class="line">  class=&#x27;guide-home h-4 cusor-pointer mr-2&#x27;</span><br><span class="line">  src=&quot;https://m.imooc.com/static/wap/static/common/img/logo-small@2x.png&quot;</span><br><span class="line">  @click=&#x27;onToHome&#x27;</span><br><span class="line">/&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&#x27;w-full guide-search&#x27;&gt;</span><br><span class="line">  &lt;m-search v-model=&quot;inputValue&quot; &gt;</span><br><span class="line">  &lt;/m-search&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="11-9-解决功能引导图标不显示的问题"><a href="#11-9-解决功能引导图标不显示的问题" class="headerlink" title="11-9 解决功能引导图标不显示的问题"></a>11-9 解决功能引导图标不显示的问题</h2><ol><li>首先解决图标被挡住的问题，在styles&#x2F;index.scss中新增样式</li></ol><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.driver-fix-stacking</span>&#123;</span><br><span class="line">  <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>其次解决关闭、下一步、上一步对不齐问题，同样在styles&#x2F;index.scss中新增样式</li></ol><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.driver-navigation-btns</span>&#123;</span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>最后解决一个floating两个图标跑偏问题，在floating.vue中增加样式</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;style lang=<span class="string">&#x27;scss&#x27;</span> scoped&gt;</span><br><span class="line">.<span class="property">driver</span>-fix-stacking&#123;</span><br><span class="line">  <span class="attr">position</span>: fixed;</span><br><span class="line">  z-<span class="attr">index</span>:<span class="number">100004</span>!important;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h2 id="11-10-总结"><a href="#11-10-总结" class="headerlink" title="11-10 总结"></a>11-10 总结</h2><p>我们处理了4个核心功能：</p><ol><li>文件下载</li><li>通用组件：message构建</li><li>全屏处理</li><li>引导处理</li></ol><p>那么到目前为止，咱们的首页功能就已经处理的差不多了。</p><p>那么接下来我们就需要处理，item点击的详情页面展示。</p><h1 id="12、高阶路由过渡处理方案-——-浏览器堆栈主动介入"><a href="#12、高阶路由过渡处理方案-——-浏览器堆栈主动介入" class="headerlink" title="12、高阶路由过渡处理方案 —— 浏览器堆栈主动介入"></a>12、高阶路由过渡处理方案 —— 浏览器堆栈主动介入</h1><p>路由过渡动效并没有什么稀奇的，但是如果想要构建一个高交互性的前台系统，仅依靠路由过渡动效就可以实现吗？</p><hr><h2 id="12-1-前言"><a href="#12-1-前言" class="headerlink" title="12-1 前言"></a>12-1 前言</h2><p>在vue中，两个路由进行跳转的时候，我们有时候会为其增加一些跳转的过渡动画，这是一个非常常见的需求。</p><p>通常情况下，这种过渡动画，我们可以直接使vue-router的过渡动效来进行实现。</p><p>那么对于目前咱们的项目而言，当我们item中击进入详情页的时候，我们也希望可以有一个对应的过渡动效，从而提升用户体验。</p><p>我们期望这个过渡动效可以：</p><ol><li>同时在PC端和移动端生效</li><li>进入新页面时：在点击的具体item中呈现由小到大的缩放动画</li><li>退出新页面时：呈现由大到小的缩放动画缩回至点击的具体item中</li></ol><p>那么这样的一个过渡动效我们应该如何进行实现呢？</p><p>直接通过vue-router的过渡动效可以实现吗？如果不行的话，那么我们又应该如何去做呢？</p><h2 id="12-2-VueRouter过渡动效可行性分析"><a href="#12-2-VueRouter过渡动效可行性分析" class="headerlink" title="12-2 VueRouter过渡动效可行性分析"></a>12-2 VueRouter过渡动效可行性分析</h2><p>我们知道接下来我们要实现的是：<strong>item到详情页的路由过渡动效</strong></p><p>那么这样的一个过渡动效，我们如何去做呢？</p><p>通常针对这种功能，我们首先都会想到vue-router 提供的过渡动效。那么我们本小节就要来看一下，这个过渡动效功能能不能满足咱们的业务需求呢？</p><p>想要判断这个问题，我们首先就需要搞明白vue-router 的过渡动效的过渡机制是什么？然后再根据这个机制来分析可行性。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;router-view v-slot=&quot;&#123; Component &#125;&quot;&gt;</span><br><span class="line">  &lt;transition name=&quot;fade&quot;&gt;</span><br><span class="line">    &lt;component :is=&quot;Component&quot; /&gt;</span><br><span class="line">  &lt;/transition&gt;</span><br><span class="line">&lt;/router-view&gt;</span><br></pre></td></tr></table></figure><p>以上这段代码是实现过渡动效的关键代码。</p><p>其中涉及到了三个组件：</p><ol><li>router-view：路由出口</li><li>transition：动画组件</li><li>component：动态组件</li></ol><p>那么据此可以得知，vue-router过渡动效产生的关键就是transition动画组件。</p><p>那么同时我们知道对于<strong>transition</strong>而言，它能够产生动画的关键，其实是其内部元素component的动态组件切换。</p><p>但是这样的切换他一定是基于整个页面组件的。也就是说如果我们利用这种过渡动效，那么一定是：<strong>从home页面到detail 页面的整体页面组件的切换。</strong></p><p>所以是<strong>无法</strong>实现咱们期望的这种路由过渡效果的。</p><h2 id="12-3-主动介入浏览器堆栈管理，分析可行性方案"><a href="#12-3-主动介入浏览器堆栈管理，分析可行性方案" class="headerlink" title="12-3 主动介入浏览器堆栈管理，分析可行性方案"></a>12-3 主动介入浏览器堆栈管理，分析可行性方案</h2><p><strong>什么是路由的跳转？</strong></p><p>所谓路由的跳转无非指的是两个部分：</p><ol><li>浏览器的url发生了变化</li><li>浏览器中展示的页面组件发生了变化</li></ol><p>那么只要满足这两点，我们就认为<strong>路径进行了跳转</strong></p><p>所以说，我们是不是可以换个思路，我们<strong>不去进行真实的路由跳转，而是先修改浏览器的URL，再切换展示的页面</strong><br><strong>（以组件的形式覆盖整个浏览器可视区域）</strong>。这样对于用户而言，是不是就完成了整个的路由跳转工作。</p><p>所以说我们的具体问题就变成了：</p><ol><li>如何让浏览器的url发生变化，但是不跳转页面</li><li>如何让一个新的组件以包含动画的形式进行展示</li></ol><p>那么想要完成第一个功能我们可以使用：<strong>History.pushState（）</strong>方法。</p><p>而第二个功能我们可以使用<strong>GSAP</strong>这个动画库来进行实现。</p><h2 id="12-4-主动介入浏览器堆栈管理"><a href="#12-4-主动介入浏览器堆栈管理" class="headerlink" title="12-4 主动介入浏览器堆栈管理"></a>12-4 主动介入浏览器堆栈管理</h2><ol><li>我们先给item.vue增加一个点击事件,下面增加一个点击事件，点击方法后将数据传递到同级的index.vue中</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;div</span><br><span class="line">  class=&quot;relative w-full rounded cursor-zoom-in group&quot;</span><br><span class="line">  :style=&quot;&#123;</span><br><span class="line">    backgroundColor:randomRGB()</span><br><span class="line">  &#125;&quot;</span><br><span class="line">  @click=&#x27;onToPinsClick&#x27;</span><br><span class="line">&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> emits = <span class="title function_">defineEmits</span>([<span class="string">&#x27;click&#x27;</span>])</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 进入详情点击事件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onToPinsClick</span> = (<span class="params"></span>) =&gt;&#123;</span><br><span class="line">  <span class="title function_">emits</span>(<span class="string">&#x27;click&#x27;</span>,&#123;</span><br><span class="line">    <span class="attr">id</span>:props.<span class="property">data</span>.<span class="property">id</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>我们在list&#x2F;index.vue中监听点击事件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;item-vue :data=&quot;item&quot; :width=&quot;width&quot; @click=&#x27;onToPins&#x27;&gt;&lt;/item-vue&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 进入pins</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onToPins</span> = (<span class="params">item</span>) =&gt;&#123;</span><br><span class="line">  <span class="comment">//修改浏览器的url</span></span><br><span class="line">  history.<span class="title function_">pushState</span>(<span class="literal">null</span>,<span class="literal">null</span>,<span class="string">`/pins/<span class="subst">$&#123;item.id&#125;</span>`</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="12-5-基于GSAP实现高阶路由过渡动画分析"><a href="#12-5-基于GSAP实现高阶路由过渡动画分析" class="headerlink" title="12-5 基于GSAP实现高阶路由过渡动画分析"></a>12-5 基于GSAP实现高阶路由过渡动画分析</h2><p>当url发生变化之后，我们接下来就只需要处理对应的动画就可以了。</p><p>动画的处理我们依赖于GSAP进行实现。对于GSAP而言，主要依赖两个方法：</p><ol><li>gsap.set（）：这个方法通常使用在动画开始之前，表示设置动画开始前的元素属性</li><li>gsap.to（）：这个方法表示<strong>最终元素展示的状态</strong></li></ol><p>GSAP 会基于set 和to的状态，来自动执行中间的补间动画。</p><p>所以我们只需要：</p><ol><li>创建一个对应的组件，使用 transition进行包裹</li><li>计算出set时，组件元素对应的样式属性</li><li>计算出to时，组件元素对应的样式属性</li></ol><p>然后就可以由GSAP自动实现对应的补间动画了。</p><h2 id="12-6-基于GSAP实现高阶路由过渡动画处理"><a href="#12-6-基于GSAP实现高阶路由过渡动画处理" class="headerlink" title="12-6 基于GSAP实现高阶路由过渡动画处理"></a>12-6 基于GSAP实现高阶路由过渡动画处理</h2><ol><li>创建 src&#x2F;views&#x2F;pins&#x2F;index.vue 组件，该组件的作用之后再说</li><li>src&#x2F;views&#x2F;pins&#x2F;components&#x2F;pins.vue 组件，该组件即为详情组件，在该组件中写入一些初始内容</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  <span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;fixed top-0 left-0 w-screen h-screen text-xl</span></span></span></span><br><span class="line"><span class="string"><span class="tag"><span class="language-xml">  bg-slate-200 z-20&#x27;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    &#123;&#123;id&#125;&#125;</span></span><br><span class="line"><span class="language-xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">setup</span>&gt;</span><span class="language-javascript"></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"><span class="title function_">defineProps</span>(&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  <span class="attr">id</span>:&#123;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">type</span>:<span class="title class_">String</span>,</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">    <span class="attr">required</span>:<span class="literal">true</span></span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">  &#125;</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml">&#125;)</span></span></span><br><span class="line"><span class="language-javascript"><span class="language-xml"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br></pre></td></tr></table></figure><ol start="3"><li>在 src&#x2F;views&#x2F;main&#x2F;components&#x2F;list&#x2F;index.vue中使用 pins 组件，并使用 transition 进行包裹，并利用JavaScript钩子绑定对应的三个状态，并添加 css&#x3D;false</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--    响应内容展示--&gt;</span><br><span class="line">    &lt;transition</span><br><span class="line">      :css=&#x27;false&#x27;</span><br><span class="line">      @before-enter=&#x27;beforeEnter&#x27;</span><br><span class="line">      @enter=&#x27;enter&#x27;</span><br><span class="line">      @leaver=&#x27;leave&#x27;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;pins-vue v-if=&#x27;isVisablePins&#x27; :id=&#x27;currentPins.id&#x27;&gt;&lt;/pins-vue&gt;</span><br><span class="line">    &lt;/transition&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//控制pins展示</span></span><br><span class="line"><span class="keyword">const</span> isVisiblePins = <span class="title function_">ref</span>(<span class="literal">false</span>)</span><br><span class="line"><span class="comment">//当前选中的pins属性</span></span><br><span class="line"><span class="keyword">const</span> currentPins = <span class="title function_">ref</span>(&#123;&#125;)</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 进入pins</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onToPins</span> = (<span class="params">item</span>) =&gt;&#123;</span><br><span class="line">  <span class="comment">//修改浏览器的url</span></span><br><span class="line">  history.<span class="title function_">pushState</span>(<span class="literal">null</span>,<span class="literal">null</span>,<span class="string">`/pins/<span class="subst">$&#123;item.id&#125;</span>`</span>)</span><br><span class="line">  isVisiblePins.<span class="property">value</span> =<span class="literal">true</span></span><br><span class="line">  currentPins.<span class="property">value</span>=item</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>那么此时点击即可展示出对应的pins组件</li></ol><p>接下来我们缺少的就是对应的动画内容了。</p><ol><li>在 src&#x2F;views&#x2F;main&#x2F;components&#x2F;list&#x2F;item.vue中，记录点击时当前 item图片的中心位置，该位置即为动画的起点，此处将使用到useElementBounding方法：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * pins跳转记录,记录图片的中心点(X或Y的位置 + 宽或高一半)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> &#123;</span><br><span class="line">  <span class="attr">x</span>: imgContainerX,</span><br><span class="line">  <span class="attr">y</span>: imgContainerY,</span><br><span class="line">  <span class="attr">width</span>: imgContainerWidth,</span><br><span class="line">  <span class="attr">height</span>: imgContainerHeight,</span><br><span class="line">&#125; = <span class="title function_">useElementBounding</span>(imgTarget)</span><br><span class="line"><span class="keyword">const</span> imgContainerCenter = <span class="title function_">computed</span>(<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  <span class="keyword">return</span>&#123;</span><br><span class="line">    <span class="attr">translateX</span>:<span class="built_in">parseInt</span>(imgContainerX.<span class="property">value</span>+imgContainerWidth.<span class="property">value</span>/<span class="number">2</span>),</span><br><span class="line">    <span class="attr">translateY</span>:<span class="built_in">parseInt</span>(imgContainerY.<span class="property">value</span>+imgContainerHeight.<span class="property">value</span>/<span class="number">2</span>),</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li>在onToPinsClick 中，传递计算出的值：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">onToPinsClick</span> = (<span class="params"></span>) =&gt;&#123;</span><br><span class="line">  <span class="title function_">emits</span>(<span class="string">&#x27;click&#x27;</span>,&#123;</span><br><span class="line">    <span class="attr">id</span>:props.<span class="property">data</span>.<span class="property">id</span>,</span><br><span class="line">    <span class="attr">location</span>:imgContainerCenter.<span class="property">value</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li>安装GSAP</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save gsap@3.9.1</span><br></pre></td></tr></table></figure><ol start="4"><li>在 src&#x2F;views&#x2F;main&#x2F;components&#x2F;list&#x2F;index.vue 中，填充三 transition 子：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="title function_">beforeEnter</span> = (<span class="params">el</span>) =&gt;&#123;</span><br><span class="line">  gsap.<span class="title function_">set</span>(el,&#123;</span><br><span class="line">    <span class="attr">scaleX</span>:<span class="number">0</span>,</span><br><span class="line">    <span class="attr">scaleY</span>:<span class="number">0</span>,</span><br><span class="line">    <span class="attr">transformOrigin</span>:<span class="string">&#x27;0 0&#x27;</span>,</span><br><span class="line">    <span class="attr">translateX</span>:currentPins.<span class="property">value</span>.<span class="property">location</span>?.<span class="property">translateX</span>,</span><br><span class="line">    <span class="attr">translateY</span>:currentPins.<span class="property">value</span>.<span class="property">location</span>?.<span class="property">translateY</span>,</span><br><span class="line">    <span class="attr">opacity</span>:<span class="number">0</span></span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">enter</span> =(<span class="params">el,done</span>)=&gt;&#123;</span><br><span class="line">  gsap.<span class="title function_">to</span>(el,&#123;</span><br><span class="line">    <span class="attr">duration</span>:<span class="number">0.3</span>,</span><br><span class="line">    <span class="attr">scaleX</span>:<span class="number">1</span>,</span><br><span class="line">    <span class="attr">scaleY</span>:<span class="number">1</span>,</span><br><span class="line">    <span class="attr">transformOrigin</span>:<span class="string">&#x27;0 0&#x27;</span>,</span><br><span class="line">    <span class="attr">translateX</span>:currentPins.<span class="property">value</span>.<span class="property">location</span>?.<span class="property">translateX</span>,</span><br><span class="line">    <span class="attr">translateY</span>:currentPins.<span class="property">value</span>.<span class="property">location</span>?.<span class="property">translateY</span>,</span><br><span class="line">    <span class="attr">opacity</span>:<span class="number">1</span>,</span><br><span class="line">    <span class="attr">onComplete</span>:done</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">leave</span> =(<span class="params">el,done</span>)=&gt;&#123;</span><br><span class="line">  gsap.<span class="title function_">to</span>(el,&#123;</span><br><span class="line">    <span class="attr">duration</span>:<span class="number">0.3</span>,</span><br><span class="line">    <span class="attr">scaleX</span>:<span class="number">0</span>,</span><br><span class="line">    <span class="attr">scaleY</span>:<span class="number">0</span>,</span><br><span class="line">    <span class="attr">transformOrigin</span>:<span class="string">&#x27;0 0&#x27;</span>,</span><br><span class="line">    <span class="attr">translateX</span>:<span class="number">0</span>,</span><br><span class="line">    <span class="attr">translateY</span>:<span class="number">0</span>,</span><br><span class="line">    <span class="attr">opacity</span>:<span class="number">0</span>,</span><br><span class="line">    <span class="attr">onComplete</span>:done</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="5"><li>这个时候leave的状态还看不了，我们再从这里添加一个监听浏览器后退的事件，就可以了</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 监听浏览器后退按钮事件</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="title function_">useEventListener</span>(<span class="variable language_">window</span>,<span class="string">&#x27;popstate&#x27;</span>,<span class="function">()=&gt;</span>&#123;</span><br><span class="line">  isVisiblePins.<span class="property">value</span> = <span class="literal">false</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="12-7-通用组件：navbar构建方案分析"><a href="#12-7-通用组件：navbar构建方案分析" class="headerlink" title="12-7 通用组件：navbar构建方案分析"></a>12-7 通用组件：navbar构建方案分析</h2><p>那么接下来我们就需要处理pins中对应的页面样式了。</p><p>pins的页面样式同时可以应用到PC端 和移动端。而在移动端中，则会展示对应的navbar 的内容，所以我们首先先构建出 navbar 通用组件，然后在基于navbar 构建对应的pins样式。</p><p>那么对于navbar而言：</p><ol><li>它分为左、中、右三个大的部分，三个部分都可以通过插槽进行指定</li><li>左、右两边的插槽可以自定义点击事件</li><li>同时navbar 有时候会存在吸顶的效果，所以我们最好还可以通过一个prop指定对应的吸顶展示</li></ol><h2 id="12-8-通用组件：构建navbar"><a href="#12-8-通用组件：构建navbar" class="headerlink" title="12-8 通用组件：构建navbar"></a>12-8 通用组件：构建navbar</h2><ol><li>创建组件lib&#x2F;navbar&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div</span><br><span class="line">    class=&#x27;w-full h-5 border-b flex items-center z-10 bg-white</span><br><span class="line">    dark:bg-zinc-800 border-b-zinc-200 dark:border-b-zinc-700&#x27;</span><br><span class="line">    :class=&quot;[sticky?&#x27;sticky top-0 left-0&#x27;:&#x27;relative&#x27;]&quot;</span><br><span class="line">  &gt;</span><br><span class="line">    &lt;!--左--&gt;</span><br><span class="line">    &lt;div class=&#x27;h-full w-5 absolute left-0 flex items-center justify-center&#x27;</span><br><span class="line">    @click=&#x27;onClickLeft&#x27;&gt;</span><br><span class="line">      &lt;slot name=&#x27;left&#x27;&gt;</span><br><span class="line">        &lt;m-svg-icon</span><br><span class="line">          name=&#x27;back&#x27;</span><br><span class="line">          class=&#x27;w-2 h-2&#x27;</span><br><span class="line">          fillClass=&#x27;fill-zinc-900 dark:fill-zinc-200&#x27;</span><br><span class="line">        &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">      &lt;/slot&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--中--&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      class=&#x27;h-full flex items-center justify-center m-auto font-bold</span><br><span class="line">      text-base text-zinc-900 dark:text-zinc-200&#x27;</span><br><span class="line">    &gt;</span><br><span class="line">      &lt;slot/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">    &lt;!--右--&gt;</span><br><span class="line">    &lt;div</span><br><span class="line">      class=&#x27;h-full w-5 absolute right-0 flex items-center justify-center&#x27;</span><br><span class="line">      @click=&#x27;onClickRight&#x27;&gt;</span><br><span class="line">      &lt;slot name=&#x27;right&#x27;/&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRouter &#125; from &#x27;vue-router&#x27;</span><br><span class="line"></span><br><span class="line">const props = defineProps(&#123;</span><br><span class="line">  //左边按钮的点击</span><br><span class="line">  clickLeft:Function,</span><br><span class="line">  //右边按钮的点击</span><br><span class="line">  clickRight:Function,</span><br><span class="line">  //是否吸顶</span><br><span class="line">  sticky:Boolean</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">const router = useRouter()</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 左侧按钮点击时间</span><br><span class="line"> */</span><br><span class="line">const onClickLeft = ()=&gt;&#123;</span><br><span class="line">  if (props.clickLeft)&#123;</span><br><span class="line">    props.clickLeft()</span><br><span class="line">    return</span><br><span class="line">  &#125;</span><br><span class="line">  router.back()</span><br><span class="line">&#125;</span><br><span class="line">/**</span><br><span class="line"> * 右侧按钮点击时间</span><br><span class="line"> */</span><br><span class="line">const onClickRight = ()=&gt;&#123;</span><br><span class="line">  if (props.clickRight)&#123;</span><br><span class="line">    props.clickRight()</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>在views&#x2F;pins&#x2F;components&#x2F;pins.vue中使用</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&#x27;fixed top-0 left-0 w-screen h-screen text-xl</span><br><span class="line">  bg-slate-200 z-20&#x27;&gt;</span><br><span class="line">    &#123;&#123;id&#125;&#125;</span><br><span class="line">    &lt;m-navbar&gt;测试&lt;/m-navbar&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><h2 id="12-9-基于navbar处理响应式的pins页面"><a href="#12-9-基于navbar处理响应式的pins页面" class="headerlink" title="12-9 基于navbar处理响应式的pins页面"></a>12-9 基于navbar处理响应式的pins页面</h2><ol><li>我们创建接口方法api&#x2F;pexels.js</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取指定图片数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">const</span> <span class="title function_">getPexelsFromId</span> = (<span class="params">id</span>) =&gt;&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title function_">request</span>(&#123;</span><br><span class="line">    <span class="attr">url</span>:<span class="string">`/pexels/<span class="subst">$&#123;id&#125;</span>`</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>其次在views&#x2F;pins&#x2F;components&#x2F;pins.vue中获取数据</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> pexelData = <span class="title function_">ref</span>(&#123;&#125;)</span><br><span class="line"><span class="keyword">const</span> <span class="title function_">getPexlesData</span> = <span class="keyword">async</span> (<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  <span class="keyword">const</span> data = <span class="keyword">await</span> <span class="title function_">getPexelsFromId</span>(props.<span class="property">id</span>)</span><br><span class="line">  pexelData.<span class="property">value</span>=data</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getPexlesData</span>()</span><br></pre></td></tr></table></figure><ol start="3"><li>在tailwind.config.js中添加阴影样式</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">backdropBlur</span>:&#123;</span><br><span class="line">  <span class="string">&#x27;4xl&#x27;</span>:<span class="string">&#x27;240px&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>在views&#x2F;pins&#x2F;components&#x2F;pins.vue中写</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&#x27;fixed top-0 left-0 w-screen h-screen text-xl z-20</span><br><span class="line">  backdrop-blur-4xl bg-transparent pb-2 overflow-y-auto xl:p-2&#x27;&gt;</span><br><span class="line">    &lt;!--移动端下的navbar--&gt;</span><br><span class="line">    &lt;m-navbar v-if=&#x27;isMobileTerminal&#x27; sticky&gt;</span><br><span class="line">      &#123;&#123;pexelData.title&#125;&#125;</span><br><span class="line">      &lt;template #right&gt;</span><br><span class="line">        &lt;m-svg-icon</span><br><span class="line">          name=&#x27;share&#x27;</span><br><span class="line">          class=&#x27;w-3 h-3&#x27;</span><br><span class="line">          fillClass=&#x27;fill-zinc-900 dark:fill-zinc-200 rounded-sm&#x27;</span><br><span class="line">        &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">      &lt;/template&gt;</span><br><span class="line">    &lt;/m-navbar&gt;</span><br><span class="line">    &lt;!--PC端--&gt;</span><br><span class="line">    &lt;m-svg-icon</span><br><span class="line">      v-else</span><br><span class="line">      name=&#x27;close&#x27;</span><br><span class="line">      class=&#x27;w-3 h-3 ml-1 p-0.5 cursor-pointer duration-200 rounded-sm</span><br><span class="line">      hover:bg-zinc-100 absolute right-2 top-2&#x27;</span><br><span class="line">      fillClass=&#x27;fill-zinc-400&#x27;</span><br><span class="line">      @click=&#x27;onPop&#x27;</span><br><span class="line">    &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">    &lt;!--内容区--&gt;</span><br><span class="line">    &lt;div </span><br><span class="line">         v-if=&#x27;pexelData.title&#x27;</span><br><span class="line">         class=&#x27;xl:w-[80%] xl:h-full xl:mx-auto xl:rounded-lg xl:flex&#x27;&gt;</span><br><span class="line">      &lt;img</span><br><span class="line">        class=&#x27;w-screen mb-2 xl:w-3/5 xl:h-full xl:rounded-tl-lg</span><br><span class="line">        xl:rounded-bl-lg&#x27;</span><br><span class="line">        :src=&#x27;pexelData.photo&#x27;</span><br><span class="line">        alt=&#x27;&#x27;</span><br><span class="line">      /&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        class=&#x27;xl:w-2/5 xl:h-full xl:bg-whiter xl:dark:bg-zinc-900</span><br><span class="line">        xl:rounded-tr-lg xl:rounded-tb-lg xl:p-3&#x27;</span><br><span class="line">      &gt;</span><br><span class="line">&lt;!--        PC下：收藏、分享--&gt;</span><br><span class="line">        &lt;div v-if=&#x27;!isMobileTerminal&#x27; class=&#x27;flex justify-between mb-2&#x27;&gt;</span><br><span class="line">&lt;!--          分享--&gt;</span><br><span class="line">          &lt;m-svg-icon</span><br><span class="line">            name=&#x27;share&#x27;</span><br><span class="line">            class=&#x27;w-4 h-4 p-1 cursor-pointer hover:bg-zinc-200</span><br><span class="line">            dark:hover-zinc-800 duration-300 rounded&#x27;</span><br><span class="line">          &gt;&lt;/m-svg-icon&gt;</span><br><span class="line">&lt;!--          收藏--&gt;</span><br><span class="line">          &lt;m-button</span><br><span class="line">            type=&#x27;info&#x27;</span><br><span class="line">            icon=&#x27;heart&#x27;</span><br><span class="line">            iconClass=&#x27;fill-zinc-900 dark:fill-zinc-200&#x27;</span><br><span class="line">          &gt;&lt;/m-button&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">&lt;!--        标题--&gt;</span><br><span class="line">        &lt;p</span><br><span class="line">          class=&#x27;text-base text-zinc-900 dark:text-zinc-200 ml-1 font-bold</span><br><span class="line">          xl:text-xl xl:mb-5&#x27;</span><br><span class="line">        &gt;</span><br><span class="line">          &#123;&#123;pexelData.title&#125;&#125;</span><br><span class="line">        &lt;/p&gt;</span><br><span class="line">&lt;!--        作者--&gt;</span><br><span class="line">        &lt;div class=&#x27;flex items-center mt-1 px-1&#x27;&gt;</span><br><span class="line">          &lt;img</span><br><span class="line">            v-lazy</span><br><span class="line">            class=&#x27;h-3 w-3 rounded-full&#x27;</span><br><span class="line">            :src=&#x27;pexelData.avatar&#x27;</span><br><span class="line">            alt=&#x27;&#x27;</span><br><span class="line">          /&gt;</span><br><span class="line">          &lt;span class=&#x27;text-base text-zinc-900 dark:text-zinc-200 ml-1&#x27;&gt;</span><br><span class="line">            &#123;&#123;pexelData.author&#125;&#125;</span><br><span class="line">          &lt;/span&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;script setup&gt;</span><br><span class="line"><span class="keyword">import</span> &#123; ref &#125; <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; getPexelsFromId &#125; <span class="keyword">from</span> <span class="string">&#x27;@/api/pexeis&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123;isMobileTerminal&#125; <span class="keyword">from</span> <span class="string">&#x27;@/utils/flexible&#x27;</span></span><br><span class="line"><span class="keyword">import</span> &#123; useRouter &#125; <span class="keyword">from</span> <span class="string">&#x27;vue-router&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> props = <span class="title function_">defineProps</span>(&#123;</span><br><span class="line">  <span class="attr">id</span>:&#123;</span><br><span class="line">    <span class="attr">type</span>:<span class="title class_">String</span>,</span><br><span class="line">    <span class="attr">required</span>:<span class="literal">true</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> router = <span class="title function_">useRouter</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 关闭</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">const</span> <span class="title function_">onPop</span>=(<span class="params"></span>)=&gt;&#123;</span><br><span class="line">  router.<span class="title function_">back</span>()</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="12-10-处理刷新空白问题"><a href="#12-10-处理刷新空白问题" class="headerlink" title="12-10 处理刷新空白问题"></a>12-10 处理刷新空白问题</h2><ol><li>我们需要解决的就是一刷新上面的url就发生了变化，接下来进行处理，首先新增view&#x2F;pins&#x2F;index.vue</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div class=&#x27;w-full h-full bg-zinc-200 dark:bg-zinc-800&#x27;&gt;</span><br><span class="line">    &lt;pins-vue :id=&#x27;$router.params.id&#x27;/&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import pinsVue from &#x27;./components/pins.vue&#x27;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;style scoped&gt;</span><br><span class="line"></span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>其次在router&#x2F;modules&#x2F;pc-router.js和mobile-router.js增加同级路由</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/pins/:id&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>:<span class="string">&#x27;pins&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>:<span class="function">()=&gt;</span><span class="title function_">import</span>(<span class="string">&#x27;@/view/pins/index.vue&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="13、人类行为验证处理方案-——-脱离UI组件库实现登录、注册-表单校验"><a href="#13、人类行为验证处理方案-——-脱离UI组件库实现登录、注册-表单校验" class="headerlink" title="13、人类行为验证处理方案 —— 脱离UI组件库实现登录、注册+表单校验"></a>13、人类行为验证处理方案 —— 脱离UI组件库实现登录、注册+表单校验</h1><p>难道你的登录注册只能依靠 UI 组件库实现吗？你的登录安全吗？如果有机器进行登录验证怎么办？进入本章带你脱离组件库，实现包含人类行为认证的登录、注册、表单校验功能。</p><hr><h2 id="13-1-前言"><a href="#13-1-前言" class="headerlink" title="13-1 前言"></a>13-1 前言</h2><p>说起登录、注册 模块，相信对于大家而言，肯定都是不阳生的。看定有很多同学一看这标题就说，这个有啥可讲的，不就是一个：</p><ol><li>调接口</li><li>拿token</li><li>存 token的过程吗？</li></ol><p>是的！</p><h2 id="13-2-构建登录模块基础UI结构"><a href="#13-2-构建登录模块基础UI结构" class="headerlink" title="13-2 构建登录模块基础UI结构"></a>13-2 构建登录模块基础UI结构</h2><p>本小节我们先去构建login登录业务的基础UI结构</p><ol><li>在src&#x2F;views&#x2F;layout&#x2F;components&#x2F;header&#x2F;header-my，vue 中新增-个 登录按钮</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">  &lt;template #reference&gt;</span><br><span class="line">      &lt;div</span><br><span class="line">        v-if=&#x27;false&#x27;</span><br><span class="line">     ...</span><br><span class="line">      &gt;</span><br><span class="line">    ...</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">      &lt;div v-else&gt;</span><br><span class="line">        &lt;m-button</span><br><span class="line">          class=&#x27;guide-my&#x27;</span><br><span class="line">          icon=&#x27;profile&#x27;</span><br><span class="line">          iconColor=&#x27;#fff&#x27;</span><br><span class="line">          @click=&#x27;onToLogin&#x27;</span><br><span class="line">        &gt;&lt;/m-button&gt;</span><br><span class="line">      &lt;/div&gt;</span><br><span class="line">    &lt;/template&gt;</span><br><span class="line">&lt;!--气泡--&gt;</span><br><span class="line">    &lt;div v-if=&#x27;false&#x27; &gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;script setup&gt;</span><br><span class="line">import &#123; useRouter &#125; from &#x27;vue-router&#x27;</span><br><span class="line"></span><br><span class="line">const router = useRouter()</span><br><span class="line">/**</span><br><span class="line"> * 登陆按钮点击事件</span><br><span class="line"> */</span><br><span class="line">const onToLogin = ()=&gt;&#123;</span><br><span class="line">  router.push(&#x27;/login&#x27;)</span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><ol start="2"><li>分别构建PC端下和移动端下对应的路由：</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">path</span>: <span class="string">&#x27;/login&#x27;</span>,</span><br><span class="line">  <span class="attr">name</span>:<span class="string">&#x27;login&#x27;</span>,</span><br><span class="line">  <span class="attr">component</span>:<span class="function">()=&gt;</span><span class="title function_">import</span>(<span class="string">&#x27;@/view/login-register/login/index.vue&#x27;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><p>创建 src&#x2F;views&#x2F;login-register&#x2F;login&#x2F;index.vue组件为登录组件</p></li><li><p>构建对应基础样式</p></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1、全新的项目构建方案-——-vite&quot;&gt;&lt;a href=&quot;#1、全新的项目构建方案-——-vite&quot; class=&quot;headerlink&quot; title=&quot;1、全新的项目构建方案 —— vite&quot;&gt;&lt;/a&gt;1、全新的项目构建方案 —— vite&lt;/h1&gt;&lt;p&gt;vi</summary>
      
    
    
    
    
    <category term="Vue3" scheme="http://example.com/tags/Vue3/"/>
    
  </entry>
  
</feed>
